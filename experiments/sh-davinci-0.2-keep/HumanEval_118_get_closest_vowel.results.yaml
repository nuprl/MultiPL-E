language: sh
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local j=0\n  local vowel=''\n  local consonant=''\n  local result=''\n\
    \  local vowels='aeiouAEIOU'\n  local consonants='bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\n\
    \  local is_vowel=0\n  local is_consonant=0\n  local is_first_consonant=0\n  local\
    \ is_second_consonant=0\n  local is_first_vowel=0\n  local is_second_vowel=0\n\
    \  local is_first_letter=0\n  local is_second_letter=0\n  local is_third_letter=0\n\
    \  local is_fourth_letter=0\n  local is_fifth_letter=0\n  local is_sixth_letter=0\n\
    \  local is_seventh_letter=0\n  local is_eighth_letter=0\n  local is_ninth_letter=0\n\
    \  local is_tenth_letter=0\n  local is_eleventh_letter=0\n  local is_twelfth_letter=0\n\
    \  local is_thirteenth_letter=0\n  local is_fourteenth_letter=0\n  local is_fifteenth_letter=0\n\
    \  local is_sixteenth_letter=0\n  local is_seventeenth_letter=0\n  local is_eighteenth_letter=0\n\
    \  local is_nineteenth_letter=0\n  local is_twentieth_letter=0\n  local is_twenty_first_letter=0\n\
    \  local is_twenty_second_letter=0\n  local is_twenty_third_letter=0\n  local\
    \ is_twenty_fourth_letter=0\n  local is_twenty_fifth_letter=0\n  local is_twenty_sixth_letter=0\n\
    \  local is_twenty_seventh_letter=0\n  local is_twenty_eighth_letter=0\n  local\
    \ is_twenty_ninth_letter=0\n  local is_thirtieth_letter=0\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local result=\"\"\n    local vowels=\"aeiouAEIOU\"\n   \
    \ local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local found=0\n\
    \    local found_vowel=\"\"\n    local found_consonant=\"\"\n    local found_vowel_index=0\n\
    \    local found_consonant_index=0\n    local found_vowel_len=0\n    local found_consonant_len=0\n\
    \    local found_vowel_pos=0\n    local found_consonant_pos=0\n    local found_vowel_pos_len=0\n\
    \    local found_consonant_pos_len=0\n    local found_vowel_pos_index=0\n    local\
    \ found_consonant_pos_index=0\n    local found_vowel_pos_index_len=0\n    local\
    \ found_consonant_pos_index_len=0\n    local found_vowel_pos_index_len_pos=0\n\
    \    local found_consonant_pos_index_len_pos=0\n    local found_vowel_pos_index_len_pos_len=0\n\
    \    local found_consonant_pos_index_len_pos_len=0\n    local found_vowel_pos_index_len_pos_len_index=0\n\
    \    local found_consonant_pos_index_len_pos_len_index=0\n    local found_vowel_pos_index_len_pos_len_index_len=0\n\
    \    local found_consonant_pos_index_len_pos_len_index_len=0\n    local found_vowel_pos_index_len_pos_len_index_len_pos=0\n\
    \    local found_consonant_pos_index_len_pos_len_index_len_pos=0\n    local found_vowel_pos_index_len_pos_len\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_index=0\n    local vowel_distance=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local vowel_pos=0\n    local vowel_pos_len=0\n\
    \    local vowel_pos_len_min=0\n    local vowel_pos_len_min_prev=0\n    local\
    \ vowel_pos_len_min_prev_prev=0\n    local vowel_pos_len_min_prev_prev_prev=0\n\
    \    local vowel_pos_len_min_prev_prev_prev_prev=0\n    local vowel_pos_len_min_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_len_min_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_len_min_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_len_min_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_pos_len_min_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_pos_len_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_pos_len_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_len_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_len_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_len_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_len_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_len_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local j=0\n  local vowel=''\n  local consonant=''\n  local closest_vowel=''\n\
    \  local closest_vowel_index=0\n  local closest_vowel_distance=0\n  local vowel_index=0\n\
    \  local vowel_distance=0\n  local vowels=('a' 'e' 'i' 'o' 'u' 'A' 'E' 'I' 'O'\
    \ 'U')\n  local consonants=('b' 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q'\
    \ 'r' 's' 't' 'v' 'w' 'x' 'y' 'z' 'B' 'C' 'D' 'F' 'G' 'H' 'J' 'K' 'L' 'M' 'N'\
    \ 'P' 'Q' 'R' 'S' 'T' 'V' 'W' 'X' 'Y' 'Z')\n  for ((i=0; i<len; i++)); do\n  \
    \  vowel=${word:$i:1}\n    for ((j=0; j<${#vowels[@]}; j++)); do\n      if [[\
    \ $vowel == ${vowels[$j]} ]]; then\n        vowel_index=$i\n        break\n  \
    \    fi\n    done\n    if [[ $vowel_index -gt 0 ]]; then\n      for ((j=0; j<${#consonants[@]};\
    \ j++)); do\n        consonant=${word:$((i-1)):1}\n        if [[ $consonant ==\
    \ ${consonants[$j]} ]]; then\n          vowel_distance=$((vowel_index-i))\n  \
    \        if [[ $vowel_distance -gt 0 ]]; then\n            if [[ $closest_vowel_distance\
    \ -eq 0 ]]; then\n              closest_vowel_distance=$vowel_distance\n     \
    \         closest_vowel=$vowel\n              closest_vowel_index=$vowel_\n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_w163mip.sh: line 46: syntax error near unexpected token `}''

    /tmp/tmp_w163mip.sh: line 46: `}''

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local vowel_index=0\n \
    \   local vowel_char=''\n    local vowel_char_index=0\n    local vowel_char_index_prev=0\n\
    \    local vowel_char_index_next=0\n    local vowel_char_index_prev_prev=0\n \
    \   local vowel_char_index_next_next=0\n    local vowel_char_index_prev_prev_prev=0\n\
    \    local vowel_char_index_next_next_next=0\n    local vowel_char_index_prev_prev_prev_prev=0\n\
    \    local vowel_char_index_next_next_next_next=0\n    local vowel_char_index_prev_prev_prev_prev_prev=0\n\
    \    local vowel_char_index_next_next_next_next_next=0\n    local vowel_char_index_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_char_index_next_next_next_next_next_next=0\n    local vowel_char_index_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_char_index_next_next_next_next_next_next_next=0\n    local vowel_char_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_char_index_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_char_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_char_index_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_char_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_char_index_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_char_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local vowel_pos=0\n  local vowel_pos_arr=()\n  local\
    \ vowel_pos_arr_len=0\n  local consonant_pos=0\n  local consonant_pos_arr=()\n\
    \  local consonant_pos_arr_len=0\n  local closest_vowel=''\n  local closest_vowel_pos=0\n\
    \  local closest_vowel_pos_arr=()\n  local closest_vowel_pos_arr_len=0\n  local\
    \ closest_vowel_index=0\n  local closest_vowel_index_arr=()\n  local closest_vowel_index_arr_len=0\n\
    \  local closest_vowel_index_arr_len_half=0\n  local closest_vowel_index_arr_len_half_index=0\n\
    \  local closest_vowel_index_arr_len_half_index_arr=()\n  local closest_vowel_index_arr_len_half_index_arr_len=0\n\
    \  local closest_vowel_index_arr_len_half_index_arr_len_half=0\n  local closest_vowel_index_arr_len_half_index_arr_len_half_index=0\n\
    \  local closest_vowel_index_arr_len_half_index_arr_len_half_index_arr=()\n  local\
    \ closest_vowel_index_arr_len_half_index_arr_len_half_index_arr_len=0\n  local\
    \ closest_vowel_index_arr_len_half_index_arr_len_half_index_arr_len_half=0\n \
    \ local closest_vowel_index_arr_len_half_index_arr_len_half_index_arr_len_half_index=0\n\
    \  local closest_vowel_index_arr_len_half_index_arr_len_half_index_arr_len_half_index_arr=()\n\
    \  local closest_vowel_index_arr_len_half_index\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local vowel=\"\"\n    local prev_char=\"\"\n\
    \    local next_char=\"\"\n    local vowels=\"aeiouAEIOU\"\n    local consonants=\"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local found=0\n    local found_vowel=\"\
    \"\n    local found_vowel_index=0\n    local found_vowel_distance=0\n    local\
    \ found_vowel_distance_prev=0\n    local found_vowel_distance_next=0\n    local\
    \ found_vowel_distance_prev_index=0\n    local found_vowel_distance_next_index=0\n\
    \    local found_vowel_distance_prev_char=\"\"\n    local found_vowel_distance_next_char=\"\
    \"\n    local found_vowel_distance_prev_char_index=0\n    local found_vowel_distance_next_char_index=0\n\
    \    local found_vowel_distance_prev_char_distance=0\n    local found_vowel_distance_next_char_distance=0\n\
    \    local found_vowel_distance_prev_char_distance_index=0\n    local found_vowel_distance_next_char_distance_index=0\n\
    \    local found_vowel_distance_prev_char_distance_char=\"\"\n    local found_vowel_distance_next_char_distance_char=\"\
    \"\n    local found_vowel_distance_prev_char_distance_char_index=0\n    local\
    \ found_vowel_distance_next_char_distance_char_index=0\n    local found_vowel_distance_prev_char_distance_char_distance=0\n\
    \    local found_vowel_distance_next_char_distance_char_distance=0\n    local\
    \ found_vowel_distance_prev_char_distance_char_distance_index=0\n    local found_vowel_distance_next_char_distance_char_distance_index=0\n\
    \    local found_vowel_distance\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local vowel=\"\"\n    local vowel_index=0\n\
    \    local consonant_index=0\n    local consonant_index_prev=0\n    local vowel_index_prev=0\n\
    \    local consonant_index_next=0\n    local vowel_index_next=0\n    local vowel_index_prev_prev=0\n\
    \    local vowel_index_next_next=0\n    local vowel_index_prev_prev_prev=0\n \
    \   local vowel_index_next_next_next=0\n    local vowel_index_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next=0\n    local vowel_index_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next=0\n    local vowel_index_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next_next=0\n    local vowel_index_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next_next_next=0\n    local vowel_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next_next_next_next=0\n    local vowel_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_index_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_index_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i\n    local j\n    local k\n    local c\n    local\
    \ v\n    local v_pos\n    local v_pos_min\n    local v_min\n    local v_min_pos\n\
    \    local v_min_pos_min\n    local v_min_min\n    local v_min_min_pos\n    local\
    \ v_min_min_pos_min\n    local v_min_min_min\n    local v_min_min_min_pos\n  \
    \  local v_min_min_min_pos_min\n    local v_min_min_min_min\n    local v_min_min_min_min_pos\n\
    \    local v_min_min_min_min_pos_min\n    local v_min_min_min_min_min\n    local\
    \ v_min_min_min_min_min_pos\n    local v_min_min_min_min_min_pos_min\n    local\
    \ v_min_min_min_min_min_min\n    local v_min_min_min_min_min_min_pos\n    local\
    \ v_min_min_min_min_min_min_pos_min\n    local v_min_min_min_min_min_min_min\n\
    \    local v_min_min_min_min_min_min_min_pos\n    local v_min_min_min_min_min_min_min_pos_min\n\
    \    local v_min_min_min_min_min_min_min_min\n    local v_min_min_min_min_min_min_min_min_pos\n\
    \    local v_min_min_min_min_min_min_min_min_pos_min\n    local v_min_min_min_min_min_min_min_min_min\n\
    \    local v_min_min_min_min_min_min_min_min_min_pos\n    local v_min_min_min_min_min_min_min_min_min_pos_min\n\
    \    local v_min_min_min_min_min_min_min_min_min_min\n    local v_min_\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local last_consonant=\"\"\n    local first_vowel=\"\
    \"\n    local closest_vowel=\"\"\n    local closest_distance=0\n    local distance=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n   \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local c1=\"\"\
    \n    local c2=\"\"\n    local v=\"\"\n    local result=\"\"\n    local min=0\n\
    \    local min_index=0\n    local min_vowel=\"\"\n    local min_consonant=\"\"\
    \n    local min_distance=0\n    for (( i=0; i<len; i++ )); do\n        c1=${word:$i:1}\n\
    \        if [[ $consonants =~ $c1 ]]; then\n            for (( j=i+1; j<len; j++\
    \ )); do\n                c2=${word:$j:1}\n                if [[ $consonants =~\
    \ $c2 ]]; then\n                    for (( k=i+1; k<j; k++ )); do\n          \
    \              v=${word:$k:1}\n                        if [[ $vowels =~ $v ]];\
    \ then\n                            result=\"$result$v\"\n                   \
    \     fi\n                    done\n                    if [[ -z $result ]]; then\n\
    \                        echo \"\"\n                        return\n         \
    \           fi\n                    min=${#result}\n                    for ((\
    \ k=0; k<${#result}; k++ )); do\n                        if [[ $min -gt $((j-i))\
    \ ]]; then\n                            min=$((j-i))\n                       \
    \     min_index=$k\n                        fi\n                    done\n   \
    \                 min_vowel=${result:$min_index:1}\n                    min_consonant=$c1\n\
    \                    min_distance=$min\n                    result=\"\"\n    \
    \            fi\n            done\n        fi\n    done\n    if [[ -z $min_vowel\
    \ ]]; then\n        echo \"\"\n    else\n        echo \"$min_vowel\"\n    fi\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n  \
    \  local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local word_length=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local vowel_pos=0\n   \
    \ local vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_last_index=0\n\
    \    local vowel_pos_arr_last_index_minus_one=0\n    local vowel_pos_arr_last_index_minus_two=0\n\
    \    local vowel_pos_arr_last_index_minus_three=0\n    local vowel_pos_arr_last_index_minus_four=0\n\
    \    local vowel_pos_arr_last_index_minus_five=0\n    local vowel_pos_arr_last_index_minus_six=0\n\
    \    local vowel_pos_arr_last_index_minus_seven=0\n    local vowel_pos_arr_last_index_minus_eight=0\n\
    \    local vowel_pos_arr_last_index_minus_nine=0\n    local vowel_pos_arr_last_index_minus_ten=0\n\
    \    local vowel_pos_arr_last_index_minus_eleven=0\n    local vowel_pos_arr_last_index_minus_twelve=0\n\
    \    local vowel_pos_arr_last_index_minus_thirteen=0\n    local vowel_pos_arr_last_index_minus_fourteen=0\n\
    \    local vowel_pos_arr_last_index_minus_fifteen=0\n    local vowel_pos_arr_last_index_minus_sixteen=0\n\
    \    local vowel_pos_arr_last_index_minus_seventeen=0\n    local vowel_pos_arr_last_index_minus_eighteen=0\n\
    \    local vowel_pos_arr_last_index_minus_nineteen=0\n    local vowel_pos_arr_last_index_minus_twenty=0\n\
    \    local vowel_pos_arr_last_index_minus_twenty_one=0\n    local vowel_pos_arr_last_index_minus_twenty_two=0\n\
    \    local vowel_pos_arr_last_index_minus_twenty_three=0\n    local vowel_\n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local j=0\n  local vowel=''\n  local consonant=''\n  local result=''\n\
    \  local vowels='aeiouAEIOU'\n  local consonants='bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\n\
    \  local vowel_index=0\n  local consonant_index=0\n  local min_distance=0\n  local\
    \ distance=0\n  local min_vowel=''\n  local min_consonant=''\n  local min_vowel_index=0\n\
    \  local min_consonant_index=0\n  local min_vowel_distance=0\n  local min_consonant_distance=0\n\
    \  local min_vowel_distance_index=0\n  local min_consonant_distance_index=0\n\
    \  local min_distance_index=0\n  local min_distance_vowel=''\n  local min_distance_consonant=''\n\
    \  local min_distance_vowel_index=0\n  local min_distance_consonant_index=0\n\
    \  local min_distance_vowel_distance=0\n  local min_distance_consonant_distance=0\n\
    \  local min_distance_vowel_distance_index=0\n  local min_distance_consonant_distance_index=0\n\
    \  local min_distance_vowel_index=0\n  local min_distance_consonant_index=0\n\
    \  local min_distance_vowel_distance_index=0\n  local min_distance_consonant_distance_index=0\n\
    \  local min_distance_vowel_distance_index=0\n  local min_distance_consonant_distance_index=0\n\
    \  local min_distance_vowel_distance_index=0\n  local min_distance_consonant_distance_index=0\n\
    \  local min_distance_vowel_distance_index=0\n  local min_distance_consonant_distance_index=0\n\
    \  local min_distance_vowel_distance_index\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=${#word}\n\
    \    local word_length=${#word}\n    local i=0\n    local j=0\n    local is_consonant=0\n\
    \    local is_vowel=0\n    local is_first_letter=0\n    local is_last_letter=0\n\
    \    local is_previous_letter_consonant=0\n    local is_next_letter_consonant=0\n\
    \    local is_previous_letter_vowel=0\n    local is_next_letter_vowel=0\n    local\
    \ is_previous_letter_first=0\n    local is_next_letter_last=0\n    local current_letter=\"\
    \"\n    local previous_letter=\"\"\n    local next_letter=\"\"\n    local previous_letter_index=0\n\
    \    local next_letter_index=0\n    local current_letter_index=0\n    local current_vowel=\"\
    \"\n    local current_vowel_index=0\n    local current_vowel_index_in_word=0\n\
    \    local current_vowel_index_in_word_previous=0\n    local current_vowel_index_in_word_next=0\n\
    \    local current_vowel_index_in_word_previous_previous=0\n    local current_vowel_index_in_word_next_next=0\n\
    \    local current_vowel_index_in_word_previous_previous_previous=0\n    local\
    \ current_vowel_index_in_word_next_next_next=0\n    local current_vowel_index_in_word_previous_previous_previous_previous=0\n\
    \    local current_vowel_index_in_word_next_next_next_next=0\n    local current_vowel_index_in_word_previous_previous_previous_previous_previous=0\n\
    \    local current_vowel_index_in_word_next_next_next_next_next=0\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local result=\"\"\n    local i=0\n    local char=\"\"\n    local prev_char=\"\
    \"\n    local next_char=\"\"\n    local prev_is_consonant=0\n    local next_is_consonant=0\n\
    \    local len=${#word}\n    local min_distance=100\n    local distance=0\n  \
    \  local min_index=0\n    local min_char=\"\"\n    local min_prev_char=\"\"\n\
    \    local min_next_char=\"\"\n    local min_prev_is_consonant=0\n    local min_next_is_consonant=0\n\
    \    local min_len=0\n    local min_i=0\n    local min_j=0\n    local min_k=0\n\
    \    local min_l=0\n    local min_m=0\n    local min_n=0\n    local min_o=0\n\
    \    local min_p=0\n    local min_q=0\n    local min_r=0\n    local min_s=0\n\
    \    local min_t=0\n    local min_u=0\n    local min_v=0\n    local min_w=0\n\
    \    local min_x=0\n    local min_y=0\n    local min_z=0\n    local min_A=0\n\
    \    local min_B=0\n    local min_C=0\n    local min_D=0\n    local min_E=0\n\
    \    local min_F=0\n    local min_G=0\n    local min_H=0\n    local min_I=0\n\
    \    local min_J=0\n    local min_K=0\n    local min_L=0\n    local min_M=0\n\
    \    local min_N=0\n    local min_O=0\n    local min_P=0\n    local min_Q=0\n\
    \    local min_R=0\n    local min_S=0\n    local min_T=0\n    local min_U=0\n\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  # your code here\n  echo\
    \ $1 | rev | grep -o -E '[^aeiou]*[aeiou][^aeiou]*' | head -n 1 | rev | head -c\
    \ 1\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\
    \"\n    local consonant=\"\"\n    local result=\"\"\n    local vowels=\"aeiou\"\
    \n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local is_vowel=0\n    local\
    \ is_consonant=0\n    local is_found=0\n    local is_first_letter=0\n    local\
    \ is_last_letter=0\n    local is_first_vowel=0\n    local is_last_vowel=0\n  \
    \  local is_first_consonant=0\n    local is_last_consonant=0\n    local is_first_vowel_found=0\n\
    \    local is_last_vowel_found=0\n    local is_first_consonant_found=0\n    local\
    \ is_last_consonant_found=0\n    local first_vowel=\"\"\n    local last_vowel=\"\
    \"\n    local first_consonant=\"\"\n    local last_consonant=\"\"\n    local first_vowel_index=0\n\
    \    local last_vowel_index=0\n    local first_consonant_index=0\n    local last_consonant_index=0\n\
    \    local first_vowel_distance=0\n    local last_vowel_distance=0\n    local\
    \ first_consonant_distance=0\n    local last_consonant_distance=0\n    local min_distance=0\n\
    \    local min_index=0\n    local min_letter=\"\"\n    local min_letter_index=0\n\
    \    local min_letter_distance=0\n    local min_letter_type=\"\"\n    local min_letter_type_index=0\n\
    \    local min_letter_type_distance=0\n    local min_letter_type_letter=\"\"\n\
    \    local min_letter_type_letter_index=0\n    local min_letter_type_letter_distance=0\n\
    \    local min_letter_type_letter_type=\"\"\n    local min_letter_type_letter_type_index=0\n\
    \    local min\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiou\"\n  local result=\"\"\n  local i=${#word}\n  local j=0\n  local k=0\n \
    \ local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n\
    \  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n\
    \  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n\
    \  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n\
    \  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n\
    \  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n\
    \  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n\
    \  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n\
    \ \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local vowels=\"aeiou\"\n    local result=\"\
    \"\n    local char=\"\"\n    local prev=\"\"\n    local next=\"\"\n    local min=0\n\
    \    local min_index=0\n    local min_char=\"\"\n    local min_prev=\"\"\n   \
    \ local min_next=\"\"\n    local min_result=\"\"\n    local min_distance=0\n \
    \   local distance=0\n    local is_vowel=0\n    local is_prev_vowel=0\n    local\
    \ is_next_vowel=0\n    local is_min_prev_vowel=0\n    local is_min_next_vowel=0\n\
    \    local is_min_vowel=0\n    local is_min_result=0\n    local is_result=0\n\
    \    local is_min_distance=0\n    local is_distance=0\n    local is_min_char=0\n\
    \    local is_char=0\n    local is_min_prev=0\n    local is_prev=0\n    local\
    \ is_min_next=0\n    local is_next=0\n    local is_min_index=0\n    local is_index=0\n\
    \    local is_min=0\n    local is_min_result=0\n    local is_result=0\n    local\
    \ is_min_distance=0\n    local is_distance=0\n    local is_min_char=0\n    local\
    \ is_char=0\n    local is_min_prev=0\n    local is_prev=0\n    local is_min_next=0\n\
    \    local is_next=0\n    local is_min_index=0\n    local is_index=0\n    local\
    \ is_min=0\n    local is_min_result=0\n    local is_result=0\n    local is_min_distance=0\n\
    \    local is_distance=0\n    local is_min_char=0\n    local is_char=0\n    local\
    \ is_min_prev=0\n    local is_prev=0\n    local is_min_next=0\n    local is_next=0\n\
    \    local is_min_index=\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local len=${#word}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local c1=\"\"\n    local c2=\"\"\n    local c3=\"\"\n    local\
    \ c4=\"\"\n    local c5=\"\"\n    local c6=\"\"\n    local c7=\"\"\n    local\
    \ c8=\"\"\n    local c9=\"\"\n    local c10=\"\"\n    local c11=\"\"\n    local\
    \ c12=\"\"\n    local c13=\"\"\n    local c14=\"\"\n    local c15=\"\"\n    local\
    \ c16=\"\"\n    local c17=\"\"\n    local c18=\"\"\n    local c19=\"\"\n    local\
    \ c20=\"\"\n    local c21=\"\"\n    local c22=\"\"\n    local c23=\"\"\n    local\
    \ c24=\"\"\n    local c25=\"\"\n    local c26=\"\"\n    local c27=\"\"\n    local\
    \ c28=\"\"\n    local c29=\"\"\n    local c30=\"\"\n    local c31=\"\"\n    local\
    \ c32=\"\"\n    local c33=\"\"\n    local c34=\"\"\n    local c35=\"\"\n    local\
    \ c36=\"\"\n    local c37=\"\"\n    local c38=\"\"\n    local c39=\"\"\n    local\
    \ c40=\"\"\n    local c41=\"\"\n    local c42=\"\"\n    local c43=\"\"\n    local\
    \ c44=\"\"\n    local c45=\"\"\n    local c46=\"\"\n    local c47=\"\"\n    local\
    \ c48=\"\"\n    local c49=\"\"\n    local c50=\"\"\n    local c51=\"\"\n    local\
    \ c52=\"\"\n    local c53=\"\"\n    local c54=\"\"\n    local c55=\"\"\n    local\
    \ c56=\"\"\n    local c57=\"\"\n    local c58=\"\"\n    local c59=\"\"\n    local\
    \ c60=\"\"\n    local c61=\"\"\n    local c62=\"\"\n    local c63=\"\"\n    local\
    \ c64=\"\"\n    local c65=\"\"\n    local c66=\"\"\n    local c67=\"\"\n    local\
    \ c68=\"\"\n    local c69=\"\"\n    local c70=\"\"\n    local c71=\"\"\n    local\
    \ c72=\"\"\n    local c73=\"\"\n    local c74=\"\"\n    local c75=\"\"\n    local\
    \ c76=\"\"\n    local c77=\"\"\n    local c\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local result=\"\"\n    local i=${#word}\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local j=0\n  local vowel=\"\"\n  local consonant=\"\"\n  local\
    \ result=\"\"\n  local is_vowel=0\n  local is_consonant=0\n  local is_first_vowel=0\n\
    \  local is_first_consonant=0\n  local is_last_vowel=0\n  local is_last_consonant=0\n\
    \  local is_first_char=0\n  local is_last_char=0\n  local is_first_vowel_found=0\n\
    \  local is_first_consonant_found=0\n  local is_last_vowel_found=0\n  local is_last_consonant_found=0\n\
    \  local is_first_char_found=0\n  local is_last_char_found=0\n  local is_first_vowel_found_first_time=0\n\
    \  local is_first_consonant_found_first_time=0\n  local is_last_vowel_found_first_time=0\n\
    \  local is_last_consonant_found_first_time=0\n  local is_first_char_found_first_time=0\n\
    \  local is_last_char_found_first_time=0\n  local is_first_vowel_found_second_time=0\n\
    \  local is_first_consonant_found_second_time=0\n  local is_last_vowel_found_second_time=0\n\
    \  local is_last_consonant_found_second_time=0\n  local is_first_char_found_second_time=0\n\
    \  local is_last_char_found_second_time=0\n  local is_first_vowel_found_third_time=0\n\
    \  local is_first_consonant_found_third_time=0\n  local is_last_vowel_found_third_time=0\n\
    \  local is_last_consonant_found_third_time=0\n  local is_first_char_found_third_time=0\n\
    \  local is_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local j=0\n  local vowel=\"\"\n  local result=\"\"\n  local vowels=\"\
    aeiouAEIOU\"\n  local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n  local consonant=\"\"\n  local consonant_before=\"\"\n  local consonant_after=\"\
    \"\n  local consonant_before_index=0\n  local consonant_after_index=0\n  local\
    \ vowel_index=0\n  local vowel_before_index=0\n  local vowel_after_index=0\n \
    \ local vowel_before=\"\"\n  local vowel_after=\"\"\n  local vowel_before_index=0\n\
    \  local vowel_after_index=0\n  local vowel_before=\"\"\n  local vowel_after=\"\
    \"\n  local vowel_before_index=0\n  local vowel_after_index=0\n  local vowel_before=\"\
    \"\n  local vowel_after=\"\"\n  local vowel_before_index=0\n  local vowel_after_index=0\n\
    \  local vowel_before=\"\"\n  local vowel_after=\"\"\n  local vowel_before_index=0\n\
    \  local vowel_after_index=0\n  local vowel_before=\"\"\n  local vowel_after=\"\
    \"\n  local vowel_before_index=0\n  local vowel_after_index=0\n  local vowel_before=\"\
    \"\n  local vowel_after=\"\"\n  local vowel_before_index=0\n  local vowel_after_index=0\n\
    \  local vowel_before=\"\"\n  local vowel_after=\"\"\n  local vowel_before_index=0\n\
    \  local vowel_after_index=0\n  local vowel_before=\"\"\n  local vowel_after=\"\
    \"\n  local vowel_before_index=0\n  local vowel_after_index=0\n  local vowel_before=\"\
    \"\n  local vowel_after=\"\"\n  local vowel_before_index=0\n  local vowel_after_index=0\n\
    \  local vowel_before=\"\"\n  local vowel_after=\"\"\n  local vowel_before_index=0\n\
    \  local vowel_after_index=0\n  local vowel_before=\"\"\n  local vowel_after=\"\
    \"\n \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local i\n    local j\n    local k\n    local found=0\n\
    \    local result=\"\"\n    for ((i=${#word}-1; i>=0; i--)); do\n        for ((j=0;\
    \ j<${#vowels}; j++)); do\n            if [[ ${word:$i:1} == ${vowels:$j:1} ]];\
    \ then\n                found=1\n                break\n            fi\n     \
    \   done\n        if [[ $found == 1 ]]; then\n            for ((k=i-1; k>=0; k--));\
    \ do\n                for ((j=0; j<${#vowels}; j++)); do\n                   \
    \ if [[ ${word:$k:1} == ${vowels:$j:1} ]]; then\n                        found=0\n\
    \                        break\n                    fi\n                done\n\
    \                if [[ $found == 0 ]]; then\n                    result=${word:$i:1}\n\
    \                    break\n                fi\n            done\n        fi\n\
    \        if [[ $result != \"\" ]]; then\n            break\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local word_length=${#word}\n    local current_index=0\n    local current_char=\"\
    \"\n    local previous_char=\"\"\n    local next_char=\"\"\n    local current_vowel_index=0\n\
    \    local current_vowel=\"\"\n    local current_vowel_index=0\n    local current_vowel_index_in_word=0\n\
    \    local current_vowel_distance=0\n    local closest_vowel_distance=0\n    local\
    \ is_vowel=0\n    local is_previous_char_consonant=0\n    local is_next_char_consonant=0\n\
    \    local is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n    local\
    \ is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n\
    \    local is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n    local\
    \ is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n\
    \    local is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n    local\
    \ is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n\
    \    local is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n    local\
    \ is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n    local is_closest_vowel_found=0\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local len=${#word}\n    local i=0\n    local vowel=\"\"\n    local prev=\"\"\
    \n    local next=\"\"\n    local result=\"\"\n    local vowels=\"aeiouAEIOU\"\n\
    \    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local\
    \ regex=\"[$vowels]\"\n    local regex2=\"[$consonants]\"\n    local regex3=\"\
    [$vowels$consonants]\"\n    for ((i=0; i<len; i++)); do\n        local char=${word:$i:1}\n\
    \        if [[ $char =~ $regex ]]; then\n            vowel=$char\n           \
    \ prev=${word:$i-1:1}\n            next=${word:$i+1:1}\n            if [[ $prev\
    \ =~ $regex2 && $next =~ $regex2 ]]; then\n                result=$vowel\n   \
    \             break\n            fi\n        fi\n    done\n    echo $result\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")\n    local consonants=(\"\
    b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"\
    r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"z\" \"B\" \"C\" \"D\" \"F\" \"G\" \"\
    H\" \"J\" \"K\" \"L\" \"M\" \"N\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"V\" \"W\" \"\
    X\" \"Y\" \"Z\")\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_index=0\n    local vowel_distance=0\n\
    \    local is_consonant=0\n    local is_vowel=0\n    local is_first_char=0\n \
    \   local is_last_char=0\n    local is_first_vowel=0\n    local is_last_vowel=0\n\
    \    local is_first_consonant=0\n    local is_last_consonant=0\n    local is_first_vowel_index=0\n\
    \    local is_last_vowel_index=0\n    local is_first_consonant_index=0\n    local\
    \ is_last_consonant_index=0\n    local is_first_vowel_distance=0\n    local is_last_vowel_distance=0\n\
    \    local is_first_consonant_distance=0\n    local is_last_consonant_distance=0\n\
    \    local is_first_vowel_found=0\n    local is_last_vowel_found=0\n    local\
    \ is_first_consonant_found=0\n    local is_last_consonant_found=0\n    local is_first\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local index=0\n\
    \    local char=\"\"\n    local prev_char=\"\"\n    local next_char=\"\"\n   \
    \ for (( i=${#word}-1; i>=0; i-- )); do\n        char=${word:$i:1}\n        if\
    \ [[ $vowels =~ $char ]]; then\n            if [[ $consonants =~ $prev_char ]]\
    \ && [[ $consonants =~ $next_char ]]; then\n                if [[ $i -gt $closest_vowel_index\
    \ ]]; then\n                    closest_vowel=$char\n                    closest_vowel_index=$i\n\
    \                fi\n            fi\n        fi\n        prev_char=$char\n   \
    \     next_char=${word:$index:1}\n        ((index++))\n    done\n    echo $closest_vowel\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    echo $1 | sed -E 's/.*([^aeiou])([aeiou])([^aeiou])/\\\
    2/'\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ i=0\n    local j=0\n    local vowel=\"\"\n    local closest_vowel=\"\"\n   \
    \ local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local vowel_index=0\n\
    \    local vowel_distance=0\n    local vowels=\"aeiouAEIOU\"\n    local vowel_count=0\n\
    \    local word_length=${#word}\n    local word_reversed=$(echo $word | rev)\n\
    \    local word_reversed_length=${#word_reversed}\n    local word_reversed_substring=\"\
    \"\n    local word_reversed_substring_length=0\n    local word_reversed_substring_first_char=\"\
    \"\n    local word_reversed_substring_last_char=\"\"\n    local word_reversed_substring_first_char_is_vowel=0\n\
    \    local word_reversed_substring_last_char_is_vowel=0\n    local word_reversed_substring_first_char_is_consonant=0\n\
    \    local word_reversed_substring_last_char_is_consonant=0\n    local word_reversed_substring_first_char_is_vowel_or_consonant=0\n\
    \    local word_reversed_substring_last_char_is_vowel_or_consonant=0\n    local\
    \ word_reversed_substring_first_char_is_vowel_or_consonant_count=0\n    local\
    \ word_reversed_substring_last_char_is_vowel_or_consonant_count=0\n    local word_reversed_substring_first_char_is_vowel_or_consonant_index=0\n\
    \    local word_reversed_substring_last_char_is_vowel_or_consonant_index=0\n \
    \   local word_reversed_substring_first_char_is_vowel_or_consonant_distance=0\n\
    \    local word_reversed_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local i=${#word}\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local i=${#word}\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local A=0\n    local B=0\n    local C=0\n    local D=0\n    local E=0\n    local\
    \ F=0\n    local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n\
    \    local L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n \
    \   local Q=0\n    local R=0\n    local S=0\n    local T=0\n    local U=0\n  \
    \  local V=0\n    local W=0\n    local X=0\n    local Y=0\n    local Z=0\n   \
    \ local vowel=\"\"\n    local consonant=\"\"\n    local consonant_count=0\n  \
    \  local vowel_count=0\n    local vowel_index=0\n    local consonant_index=0\n\
    \    local vowel_found=0\n    local consonant_found=0\n    local closest_vowel=\"\
    \"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ closest_vowel_distance_tmp=0\n    local closest_vowel_distance_tmp_2=0\n   \
    \ local closest_vowel_distance_tmp_3=0\n    local closest_vowel_distance_tmp_4=0\n\
    \    local closest_vowel_distance_tmp_5=0\n    local closest_vowel_distance_tmp_6=0\n\
    \    local closest_vowel_distance_tmp_7=0\n    local closest_vowel_distance_tmp_8=0\n\
    \    local closest_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local last_vowel=\"\"\n    local last_consonant=\"\"\n    local current_char=\"\
    \"\n    local closest_vowel=\"\"\n    local closest_distance=0\n    local distance=0\n\
    \    local i=0\n    local len=${#word}\n    for (( i=0; i<len; i++ )); do\n  \
    \      current_char=${word:$i:1}\n        if [[ $vowels =~ $current_char ]]; then\n\
    \            last_vowel=$current_char\n        elif [[ $consonants =~ $current_char\
    \ ]]; then\n            last_consonant=$current_char\n            if [[ -n $last_vowel\
    \ ]]; then\n                distance=$(( $i - ${#last_vowel} ))\n            \
    \    if [[ $distance -gt $closest_distance ]]; then\n                    closest_vowel=$last_vowel\n\
    \                    closest_distance=$distance\n                fi\n        \
    \    fi\n        fi\n    done\n    echo $closest_vowel\n}\n\ncandidate() {\n \
    \   get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local prev_char=''\n    local curr_char=''\n\
    \    local next_char=''\n    local vowel=''\n    local vowel_pos=0\n    local\
    \ vowel_dist=0\n    local min_dist=0\n    local min_vowel=''\n    local min_vowel_pos=0\n\
    \    local min_vowel_dist=0\n    local vowels='aeiouAEIOU'\n    local consonants='bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_prev_consonant=0\n\
    \    local is_next_consonant=0\n    local is_first_char=1\n    local is_last_char=0\n\
    \    local is_vowel_found=0\n    local is_vowel_between_consonants=0\n    local\
    \ is_vowel_between_consonants_found=0\n    local is_vowel_between_consonants_closest=0\n\
    \    local is_vowel_between_consonants_closest_found=0\n    local is_vowel_between_consonants_closest_found_first=0\n\
    \    local is_vowel_between_consonants_closest_found_last=0\n    local is_vowel_between_consonants_closest_found_first_last=0\n\
    \    local is_vowel_between_consonants_closest_found_first_last_found=0\n    local\
    \ is_vowel_between_consonants_closest_found_first_last_found_first=0\n    local\
    \ is_vowel_between_consonants_closest_found_first_last_found_last=0\n    local\
    \ is_vowel_between_consonants_closest_found_first_last_found_first_last=0\n  \
    \  local is_vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local vowels=\"aeiouAEIOU\"\n    local result=\"\"\n    local i=${#word}\n\
    \    local j=0\n    local c1=\"\"\n    local c2=\"\"\n    local c3=\"\"\n    local\
    \ v=\"\"\n    while [ $i -gt 0 ]; do\n        c1=${word:$i-1:1}\n        c2=${word:$i-2:1}\n\
    \        c3=${word:$i-3:1}\n        if [ \"$c1\" == \"$c2\" ]; then\n        \
    \    i=$((i-1))\n            continue\n        fi\n        for (( j=0; j<${#vowels};\
    \ j++ )); do\n            v=${vowels:$j:1}\n            if [ \"$c1\" == \"$v\"\
    \ ]; then\n                result=\"$c1\"\n                break\n           \
    \ fi\n            if [ \"$c2\" == \"$v\" ]; then\n                result=\"$c2\"\
    \n                break\n            fi\n            if [ \"$c3\" == \"$v\" ];\
    \ then\n                result=\"$c3\"\n                break\n            fi\n\
    \        done\n        if [ \"$result\" != \"\" ]; then\n            break\n \
    \       fi\n        i=$((i-1))\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    echo \"$1\" | rev | sed\
    \ -E 's/([^aeiou]*)([aeiou])([^aeiou]*)/\\2/' | rev\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local vowels=\"aeiouAEIOU\"\n    local i=${#word}\n    local j=0\n    while\
    \ [ $i -gt 0 ]; do\n        local char=${word:$i-1:1}\n        if [[ $vowels =~\
    \ $char ]]; then\n            j=$i\n            break\n        fi\n        i=$((i-1))\n\
    \    done\n    if [ $j -eq 0 ]; then\n        echo \"\"\n    else\n        echo\
    \ \"${word:$j-1:1}\"\n    fi\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local vowel_pos=0\n  local vowel_pos_arr=()\n\
    \  local vowel_pos_arr_len=0\n  local vowel_pos_arr_last_idx=0\n  local vowel_pos_arr_last_idx_minus_one=0\n\
    \  local vowel_pos_arr_last_idx_minus_two=0\n  local vowel_pos_arr_last_idx_minus_three=0\n\
    \  local vowel_pos_arr_last_idx_minus_four=0\n  local vowel_pos_arr_last_idx_minus_five=0\n\
    \  local vowel_pos_arr_last_idx_minus_six=0\n  local vowel_pos_arr_last_idx_minus_seven=0\n\
    \  local vowel_pos_arr_last_idx_minus_eight=0\n  local vowel_pos_arr_last_idx_minus_nine=0\n\
    \  local vowel_pos_arr_last_idx_minus_ten=0\n  local vowel_pos_arr_last_idx_minus_eleven=0\n\
    \  local vowel_pos_arr_last_idx_minus_twelve=0\n  local vowel_pos_arr_last_idx_minus_thirteen=0\n\
    \  local vowel_pos_arr_last_idx_minus_fourteen=0\n  local vowel_pos_arr_last_idx_minus_fifteen=0\n\
    \  local vowel_pos_arr_last_idx_minus_sixteen=0\n  local vowel_pos_arr_last_idx_minus_seventeen=0\n\
    \  local vowel_pos_arr_last_idx_minus_eighteen=0\n  local vowel_pos_arr_last_idx_minus_nineteen=0\n\
    \  local vowel_pos_arr_last_idx_minus_twenty=0\n  local vowel_pos_arr_last_idx_minus_twenty_one=0\n\
    \  local vowel_pos_arr_last_idx_minus_twenty_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local vowel=\"\"\n  local c=\"\"\n  local prev=\"\"\n  local next=\"\
    \"\n  local vowels=\"aeiouAEIOU\"\n  local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n  local found=0\n  local found_vowel=\"\"\n  local found_index=0\n  local found_prev=\"\
    \"\n  local found_next=\"\"\n  local found_i=0\n  local found_c=\"\"\n  local\
    \ found_vowel_index=0\n  local found_vowel_c=\"\"\n  local found_vowel_prev=\"\
    \"\n  local found_vowel_next=\"\"\n  local found_vowel_i=0\n  local found_vowel_len=0\n\
    \  local found_vowel_vowel=\"\"\n  local found_vowel_vowel_index=0\n  local found_vowel_vowel_c=\"\
    \"\n  local found_vowel_vowel_prev=\"\"\n  local found_vowel_vowel_next=\"\"\n\
    \  local found_vowel_vowel_i=0\n  local found_vowel_vowel_len=0\n  local found_vowel_vowel_vowel=\"\
    \"\n  local found_vowel_vowel_vowel_index=0\n  local found_vowel_vowel_vowel_c=\"\
    \"\n  local found_vowel_vowel_vowel_prev=\"\"\n  local found_vowel_vowel_vowel_next=\"\
    \"\n  local found_vowel_vowel_vowel_i=0\n  local found_vowel_vowel_vowel_len=0\n\
    \  local found_vowel_vowel_vowel_vowel=\"\"\n  local found_vowel_vowel_vowel_vowel_index=0\n\
    \  local found_vowel_vowel_vowel_v\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=\"\
    aeiouAEIOU\"\n    local vowel=\"\"\n    local cons=\"\"\n    local cons_count=0\n\
    \    local vowel_count=0\n    local vowel_pos=0\n    local cons_pos=0\n    local\
    \ vowel_pos_arr=()\n    local cons_pos_arr=()\n    local closest_vowel=\"\"\n\
    \    local closest_vowel_pos=0\n    local closest_cons_pos=0\n    local closest_vowel_pos_arr=()\n\
    \    local closest_cons_pos_arr=()\n    local closest_vowel_count=0\n    local\
    \ closest_cons_count=0\n    local closest_vowel_pos_count=0\n    local closest_cons_pos_count=0\n\
    \    local closest_vowel_pos_arr_count=0\n    local closest_cons_pos_arr_count=0\n\
    \    local closest_vowel_pos_arr_len=0\n    local closest_cons_pos_arr_len=0\n\
    \    local closest_vowel_pos_arr_last=0\n    local closest_cons_pos_arr_last=0\n\
    \    local closest_vowel_pos_arr_first=0\n    local closest_cons_pos_arr_first=0\n\
    \    local closest_vowel_pos_arr_first_diff=0\n    local closest_cons_pos_arr_first_diff=0\n\
    \    local closest_vowel_pos_arr_last_diff=0\n    local closest_cons_pos_arr_last_diff=0\n\
    \    local closest_vowel_pos_arr_first_diff_min=0\n    local closest_cons_pos_arr_first_diff_min=0\n\
    \    local closest_vowel_pos_arr_last_diff_min=0\n    local closest_cons_pos_arr_last_diff_min=0\n\
    \    local closest_vowel_pos_arr_first_diff_min_pos=0\n    local closest_cons_pos_arr_first_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiouAEIOU\"\n  local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n  local i=${#word}\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local\
    \ n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local\
    \ t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local\
    \ z=0\n  local A=0\n  local B=0\n  local C=0\n  local D=0\n  local E=0\n  local\
    \ F=0\n  local G=0\n  local H=0\n  local I=0\n  local J=0\n  local K=0\n  local\
    \ L=0\n  local M=0\n  local N=0\n  local O=0\n  local P=0\n  local Q=0\n  local\
    \ R=0\n  local S=0\n  local T=0\n  local U=0\n  local V=0\n  local W=0\n  local\
    \ X=0\n  local Y=0\n  local Z=0\n  local result=\"\"\n  local char=\"\"\n  local\
    \ last_char=\"\"\n  local last_last_char=\"\"\n  local last_last_last_char=\"\"\
    \n  for ((i=${#word}; i>=0; i--)); do\n    char=${word:$i:1}\n    if [[ $char\
    \ == \"a\" ]]; then\n      a=$i\n    elif [[ $char == \"e\" ]]; then\n      e=$i\n\
    \    elif [[ $char == \"i\" ]]; then\n      i=$i\n    elif [[ $char == \"o\" ]];\
    \ then\n      o=$i\n    elif [[ $char == \"u\" ]]; then\n      u=$i\n    elif\
    \ [[ $char == \"A\" ]]; then\n      A=$i\n    elif [[ $char == \"E\"\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2qzab0bk.sh: line 81: syntax error in conditional expression

    /tmp/tmp2qzab0bk.sh: line 82: syntax error near `}''

    /tmp/tmp2qzab0bk.sh: line 82: `}''

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ last_char=${word: -1}\n    local first_char=${word:0:1}\n    local vowels=\"\
    aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n  \
    \  local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n   \
    \ local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n    local\
    \ L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n\
    \    local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n \
    \   local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a_count=\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local is_vowel=0\n  local is_consonant=0\n  local\
    \ is_vowel_found=0\n  local is_consonant_found=0\n  local vowel_index=0\n  local\
    \ consonant_index=0\n  local closest_vowel=\"\"\n  local vowels=\"aeiouAEIOU\"\
    \n  local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  local vowel_len=${#vowels}\n\
    \  local consonant_len=${#consonants}\n  local vowel_index=0\n  local consonant_index=0\n\
    \  local closest_vowel=\"\"\n  local closest_vowel_index=0\n  local closest_consonant_index=0\n\
    \  local closest_vowel_index_diff=0\n  local closest_consonant_index_diff=0\n\
    \  local closest_vowel_index_diff_prev=0\n  local closest_consonant_index_diff_prev=0\n\
    \  local closest_vowel_index_diff_next=0\n  local closest_consonant_index_diff_next=0\n\
    \  local closest_vowel_index_diff_prev_next=0\n  local closest_consonant_index_diff_prev_next=0\n\
    \  local closest_vowel_index_diff_prev_next_prev=0\n  local closest_consonant_index_diff_prev_next_prev=0\n\
    \  local closest_vowel_index_diff_prev_next_next=0\n  local closest_consonant_index_diff_prev_next_next=0\n\
    \  local closest_vowel_index_diff_prev_next_prev_next=0\n  local closest_consonant_index_diff_prev_next_prev_next=0\n\
    \  local closest_vowel_index_diff_prev_next_prev_next_prev=0\n  local closest_consonant_index_diff_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n  \
    \  local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n   \
    \ local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local\
    \ g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n   \
    \ local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local\
    \ g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n   \
    \ local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local\
    \ g=0\n    local h=0\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local len=${#word}\n    local i=0\n    local vowel=\"\"\n    local last_consonant=\"\
    \"\n    local last_vowel=\"\"\n    local result=\"\"\n    local vowels=\"a e i\
    \ o u A E I O U\"\n    local consonants=\"b c d f g h j k l m n p q r s t v w\
    \ x y z B C D F G H J K L M N P Q R S T V W X Y Z\"\n    while [ $i -lt $len ];\
    \ do\n        local char=${word:$i:1}\n        if [[ $vowels =~ $char ]]; then\n\
    \            last_vowel=$char\n        elif [[ $consonants =~ $char ]]; then\n\
    \            last_consonant=$char\n        fi\n        if [[ -n $last_consonant\
    \ && -n $last_vowel ]]; then\n            result=$last_vowel\n            break\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")\n    local vowel_len=${#vowels[@]}\n\
    \    local vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index_prev=0\n\
    \    local vowel_found_index_next=0\n    local vowel_found_index_prev_prev=0\n\
    \    local vowel_found_index_next_next=0\n    local vowel_found_index_prev_prev_prev=0\n\
    \    local vowel_found_index_next_next_next=0\n    local vowel_found_index_prev_prev_prev_prev=0\n\
    \    local vowel_found_index_next_next_next_next=0\n    local vowel_found_index_prev_prev_prev_prev_prev=0\n\
    \    local vowel_found_index_next_next_next_next_next=0\n    local vowel_found_index_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_found_index_next_next_next_next_next_next=0\n    local vowel_found_index_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_found_index_next_next_next_next_next_next_next=0\n    local vowel_found_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_found_index_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_found_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_found_index_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_found_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_found_index_next_next_next_next_next_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local vowel_pos=0\n   \
    \ local vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_last_index=0\n\
    \    local vowel_pos_arr_last_index_minus_one=0\n    local vowel_pos_arr_last_index_minus_two=0\n\
    \    local vowel_pos_arr_last_index_minus_three=0\n    local vowel_pos_arr_last_index_minus_four=0\n\
    \    local vowel_pos_arr_last_index_minus_five=0\n    local vowel_pos_arr_last_index_minus_six=0\n\
    \    local vowel_pos_arr_last_index_minus_seven=0\n    local vowel_pos_arr_last_index_minus_eight=0\n\
    \    local vowel_pos_arr_last_index_minus_nine=0\n    local vowel_pos_arr_last_index_minus_ten=0\n\
    \    local vowel_pos_arr_last_index_minus_eleven=0\n    local vowel_pos_arr_last_index_minus_twelve=0\n\
    \    local vowel_pos_arr_last_index_minus_thirteen=0\n    local vowel_pos_arr_last_index_minus_fourteen=0\n\
    \    local vowel_pos_arr_last_index_minus_fifteen=0\n    local vowel_pos_arr_last_index_minus_sixteen=0\n\
    \    local vowel_pos_arr_last_index_minus_seventeen=0\n    local vowel_pos_arr_last_index_minus_eighteen=0\n\
    \    local vowel_pos_arr_last_index_minus_nineteen=0\n    local vowel_pos_arr_last_index_minus_twenty=0\n\
    \    local vowel_pos_arr_last_index_minus_twenty_one=0\n    local vowel_pos_arr_last_index_minus_twenty_two=0\n\
    \    local vowel_pos_arr_last_index_minus_twenty_three=0\n    local vowel_\n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local index=0\n    local current_char=\"\"\n    local previous_char=\"\"\n\
    \    local next_char=\"\"\n    for (( i=${#word}-1; i>=0; i-- )); do\n       \
    \ current_char=${word:$i:1}\n        if [[ $vowels =~ $current_char ]]; then\n\
    \            if [[ $i -eq 0 ]]; then\n                next_char=${word:$i+1:1}\n\
    \                if [[ ! $vowels =~ $next_char ]]; then\n                    closest_vowel=$current_char\n\
    \                    closest_vowel_index=$i\n                    break\n     \
    \           fi\n            elif [[ $i -eq ${#word}-1 ]]; then\n             \
    \   previous_char=${word:$i-1:1}\n                if [[ ! $vowels =~ $previous_char\
    \ ]]; then\n                    closest_vowel=$current_char\n                \
    \    closest_vowel_index=$i\n                    break\n                fi\n \
    \           else\n                previous_char=${word:$i-1:1}\n             \
    \   next_char=${word:$i+1:1}\n                if [[ ! $vowels =~ $previous_char\
    \ ]] && [[ ! $vowels =~ $next_char ]]; then\n                    closest_vowel=$current_char\n\
    \                    closest_vowel_index=$i\n                    break\n     \
    \           fi\n            fi\n        fi\n    done\n    echo $closest_vowel\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiou\"\n  local len=${#word}\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local\
    \ d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local\
    \ b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local\
    \ h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local\
    \ n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local\
    \ t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local\
    \ z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local\
    \ f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiouAEIOU\"\n  local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local A=0\n  local B=0\n  local C=0\n  local D=0\n  local\
    \ E=0\n  local F=0\n  local G=0\n  local H=0\n  local I=0\n  local J=0\n  local\
    \ K=0\n  local L=0\n  local M=0\n  local N=0\n  local O=0\n  local P=0\n  local\
    \ Q=0\n  local R=0\n  local S=0\n  local T=0\n  local U=0\n  local V=0\n  local\
    \ W=0\n  local X=0\n  local Y=0\n  local Z=0\n  local last_char=\"\"\n  local\
    \ last_char_is_consonant=0\n  local last_char_is_vowel=0\n  local current_char=\"\
    \"\n  local current_char_is_consonant=0\n  local current_char_is_vowel=0\n  local\
    \ next_char=\"\"\n  local next_char_is_consonant=0\n  local next_char_is_vowel=0\n\
    \  local next_next_char=\"\"\n  local next_next_char_is_consonant=0\n  local next_next_char_is_vowel=0\n\
    \  local next_next_next_char=\"\"\n  local next_next_next_char_is_consonant=0\n\
    \  local next_next_next_char_is_vow\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local last_vowel=\"\"\n    local last_consonant=\"\"\n    local closest_vowel=\"\
    \"\n    local closest_distance=${#word}\n    local distance=0\n    local i=0\n\
    \    local c=0\n    local v=0\n    local char=0\n    for (( i=${#word}-1; i>=0;\
    \ i-- )); do\n        char=${word:$i:1}\n        if [[ $vowels =~ $char ]]; then\n\
    \            last_vowel=$char\n            v=$i\n        fi\n        if [[ $consonants\
    \ =~ $char ]]; then\n            last_consonant=$char\n            c=$i\n    \
    \    fi\n        if [[ $last_vowel != \"\" && $last_consonant != \"\" ]]; then\n\
    \            distance=$(( $v - $c ))\n            if [[ $distance -lt $closest_distance\
    \ ]]; then\n                closest_distance=$distance\n                closest_vowel=$last_vowel\n\
    \            fi\n        fi\n    done\n    echo $closest_vowel\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local a=0\n  local e=0\n  local i=0\n  local o=0\n  local u=0\n  local vowel_index=0\n\
    \  local vowel_char=''\n  local vowel_count=0\n  local vowel_array=()\n  local\
    \ consonant_count=0\n  local consonant_array=()\n  local consonant_index=0\n \
    \ local consonant_char=''\n  local closest_vowel=''\n  local closest_vowel_index=0\n\
    \  local closest_vowel_distance=0\n  local closest_vowel_distance_tmp=0\n  local\
    \ closest_consonant_index=0\n  local closest_consonant_distance=0\n  local closest_consonant_distance_tmp=0\n\
    \  local closest_consonant_char=''\n  local closest_consonant_index_tmp=0\n  local\
    \ closest_consonant_char_tmp=''\n  local closest_vowel_index_tmp=0\n  local closest_vowel_char_tmp=''\n\
    \  local vowel_array_len=0\n  local consonant_array_len=0\n  local vowel_array_index=0\n\
    \  local consonant_array_index=0\n  local vowel_array_index_tmp=0\n  local consonant_array_index_tmp=0\n\
    \  local vowel_array_index_tmp2=0\n  local consonant_array_index_tmp2=0\n  local\
    \ vowel_array_index_tmp3=0\n  local consonant_array_index_tmp3=0\n  local vowel_array_index_tmp4=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ closest_distance=0\n    local distance=0\n    local vowels=\"aeiouAEIOU\"\n\
    \    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local\
    \ found_vowel=0\n    local found_consonant=0\n    local found_closest_vowel=0\n\
    \    local found_closest_consonant=0\n    local found_closest_distance=0\n   \
    \ local found_distance=0\n    local found_closest_vowel_index=0\n    local found_closest_consonant_index=0\n\
    \    local found_closest_distance_index=0\n    local found_distance_index=0\n\
    \    local found_closest_vowel_index=0\n    local found_closest_consonant_index=0\n\
    \    local found_closest_distance_index=0\n    local found_distance_index=0\n\
    \    local found_closest_vowel_index=0\n    local found_closest_consonant_index=0\n\
    \    local found_closest_distance_index=0\n    local found_distance_index=0\n\
    \    local found_closest_vowel_index=0\n    local found_closest_consonant_index=0\n\
    \    local found_closest_distance_index=0\n    local found_distance_index=0\n\
    \    local found_closest_vowel_index=0\n    local found_closest_consonant_index=0\n\
    \    local found_closest_distance_index=0\n    local found_distance_index=0\n\
    \    local found_closest_vowel_index=0\n    local found_clos\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local i=${#word}\n    local j\n    local k\n    local found=0\n    local\
    \ vowel\n    local consonant\n    local result=\"\"\n    while [ $i -gt 0 ]; do\n\
    \        j=$i\n        while [ $j -gt 0 ]; do\n            k=$j\n            while\
    \ [ $k -gt 0 ]; do\n                vowel=${word:$k-1:1}\n                if [[\
    \ $vowels =~ $vowel ]]; then\n                    found=1\n                  \
    \  break\n                fi\n                k=$((k-1))\n            done\n \
    \           if [ $found -eq 1 ]; then\n                break\n            fi\n\
    \            consonant=${word:$j-1:1}\n            if [[ $consonants =~ $consonant\
    \ ]]; then\n                break\n            fi\n            j=$((j-1))\n  \
    \      done\n        if [ $found -eq 1 ]; then\n            result=$vowel\n  \
    \          break\n        fi\n        i=$((i-1))\n    done\n    echo $result\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n\
    \    local vowel_pos_next=0\n    local vowel_pos_prev_found=0\n    local vowel_pos_next_found=0\n\
    \    local vowel_pos_found=0\n    local vowel_pos_prev_char=\"\"\n    local vowel_pos_next_char=\"\
    \"\n    local vowel_pos_char=\"\"\n    local vowel_pos_prev_char_found=0\n   \
    \ local vowel_pos_next_char_found=0\n    local vowel_pos_char_found=0\n    local\
    \ vowel_pos_prev_char_is_vowel=0\n    local vowel_pos_next_char_is_vowel=0\n \
    \   local vowel_pos_char_is_vowel=0\n    local vowel_pos_prev_char_is_consonant=0\n\
    \    local vowel_pos_next_char_is_consonant=0\n    local vowel_pos_char_is_consonant=0\n\
    \    local vowel_pos_prev_char_is_vowel_found=0\n    local vowel_pos_next_char_is_vowel_found=0\n\
    \    local vowel_pos_char_is_vowel_found=0\n    local vowel_pos_prev_char_is_consonant_found=0\n\
    \    local vowel_pos_next_char_is_consonant_found=0\n    local vowel_pos_char_is_consonant_found=0\n\
    \    local vowel_pos_prev_char_is_vowel_found_first=0\n    local vowel_pos_next_char_is_vowel_found_first=0\n\
    \    local vowel_pos_char_is_vowel_found_first=0\n    local vowel_pos_prev_char_is_consonant_found_first=0\n\
    \    local vowel_pos_next_char_is_consonant_found_first=0\n    local vowel_pos_char_is_consonant_found_first=0\n\
    \    local vowel_pos_prev\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ length=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ char=\"\"\n    local char_before=\"\"\n    local char_after=\"\"\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local is_vowel=0\n    local is_consonant=0\n    local is_vowel_before=0\n\
    \    local is_vowel_after=0\n    local is_consonant_before=0\n    local is_consonant_after=0\n\
    \    local is_found=0\n    local is_first_char=0\n    local is_last_char=0\n \
    \   local is_first_vowel=0\n    local is_last_vowel=0\n    local is_first_consonant=0\n\
    \    local is_last_consonant=0\n    local is_first_vowel_before=0\n    local is_last_vowel_before=0\n\
    \    local is_first_consonant_before=0\n    local is_last_consonant_before=0\n\
    \    local is_first_vowel_after=0\n    local is_last_vowel_after=0\n    local\
    \ is_first_consonant_after=0\n    local is_last_consonant_after=0\n    local is_first_vowel_before_and_after=0\n\
    \    local is_last_vowel_before_and_after=0\n    local is_first_consonant_before_and_after=0\n\
    \    local is_last_consonant_before_and_after=0\n    local is_first_vowel_before_and_consonant_after=0\n\
    \    local is_last_vowel_before_and_consonant_after=0\n    local is_first_consonant_before_and_vowel_after=0\n\
    \    local is_last_consonant_before_and_vowel_after\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local vowel\n    local consonant\n    local\
    \ closest_vowel\n    local closest_vowel_index\n    local closest_consonant_index\n\
    \    local closest_consonant\n    local closest_consonant_index\n    local closest_consonant\n\
    \    local closest_consonant_index\n    local closest_consonant\n    local closest_consonant_index\n\
    \    local closest_consonant\n    local closest_consonant_index\n    local closest_consonant\n\
    \    local closest_consonant_index\n    local closest_consonant\n    local closest_consonant_index\n\
    \    local closest_consonant\n    local closest_consonant_index\n    local closest_consonant\n\
    \    local closest_consonant_index\n    local closest_consonant\n    local closest_consonant_index\n\
    \    local closest_consonant\n    local closest_consonant_index\n    local closest_consonant\n\
    \    local closest_consonant_index\n    local closest_consonant\n    local closest_consonant_index\n\
    \    local closest_consonant\n    local closest_consonant_index\n    local closest_consonant\n\
    \    local closest_consonant_index\n    local closest_consonant\n    local closest_consonant_index\n\
    \    local closest_consonant\n    local closest_consonant_index\n    local closest_consonant\n\
    \    local closest_consonant_index\n    local closest_consonant\n    local closest_consonant_index\n\
    \    local closest_consonant\n    local closest_consonant_index\n    local closest_consonant\n\
    \    local closest_consonant_index\n    local closest_consonant\n    local closest_consonant_index\n\
    \    local closest_consonant\n    local closest_consonant_index\n    local closest_consonant\n\
    \    local closest_consonant_index\n    local closest_consonant\n    local closest_consonant_index\n\
    \    local closest_consonant\n    local closest_consonant_index\n    local closest\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n    local\
    \ C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n\
    \    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n \
    \   local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n  \
    \  local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n   \
    \ local X=0\n    local Y=0\n    local Z=0\n    local length=${#word}\n    local\
    \ last_index=$((length - 1))\n    local first_index=0\n    local last_char=${word:last_index:1}\n\
    \    local first_char=${word:first_index:1}\n    local char=''\n    local char_index=0\n\
    \    local char_index_plus_one=0\n    local char_index_minus_one=0\n    local\
    \ char_plus_one=''\n    local char_minus_one=''\n    local char_plus_one_is_consonant=0\n\
    \    local char_minus_one_is_consonant=0\n    local char_is_vowel=\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiouAEIOU\"\n  local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n  local len=${#word}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n \
    \ local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local A=0\n  local B=0\n  local C=0\n  local D=0\n\
    \  local E=0\n  local F=0\n  local G=0\n  local H=0\n  local I=0\n  local J=0\n\
    \  local K=0\n  local L=0\n  local M=0\n  local N=0\n  local O=0\n  local P=0\n\
    \  local Q=0\n  local R=0\n  local S=0\n  local T=0\n  local U=0\n  local V=0\n\
    \  local W=0\n  local X=0\n  local Y=0\n  local Z=0\n  local result=\"\"\n  local\
    \ c1=\"\"\n  local c2=\"\"\n  local c3=\"\"\n  local c4=\"\"\n  local c5=\"\"\n\
    \  local c6=\"\"\n  local c7=\"\"\n  local c8=\"\"\n  local c9=\"\"\n  local c10=\"\
    \"\n  local c11=\"\"\n  local c12=\"\"\n  local c13=\"\"\n  local c14=\"\"\n \
    \ local c15=\"\"\n  local c16=\"\"\n  local c17=\"\"\n  local c18=\"\"\n  local\
    \ c19=\"\"\n  local c20=\"\"\n  local c21=\"\"\n  local c22=\"\"\n  local c23=\"\
    \"\n  local c24=\"\"\n  local c25=\"\"\n  local c26=\"\"\n  local c27=\"\"\n \
    \ local c28=\"\"\n  local c29=\"\"\n  local c30=\"\"\n\n}\n\ncandidate() {\n \
    \   get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local vowel_index=0\n \
    \   local vowel_index_arr=()\n    local vowel_arr=()\n    local vowel_arr_len=0\n\
    \    local vowel_index_arr_len=0\n    local consonant_index=0\n    local consonant_index_arr=()\n\
    \    local consonant_index_arr_len=0\n    local consonant_arr=()\n    local consonant_arr_len=0\n\
    \    local vowel_found=0\n    local consonant_found=0\n    local vowel_consonant_found=0\n\
    \    local vowel_consonant_index=0\n    local vowel_consonant_index_arr=()\n \
    \   local vowel_consonant_index_arr_len=0\n    local closest_vowel_index=0\n \
    \   local closest_vowel_index_arr=()\n    local closest_vowel_index_arr_len=0\n\
    \    local closest_vowel=\"\"\n    local closest_vowel_arr=()\n    local closest_vowel_arr_len=0\n\
    \    local closest_vowel_index_arr_len=0\n    local closest_vowel_index=0\n  \
    \  local closest_vowel_index_arr=()\n    local closest_vowel_index_arr_len=0\n\
    \    local closest_vowel=\"\"\n    local closest_vowel_arr=()\n    local closest_vowel_arr_len=0\n\
    \    local closest_vowel_index_arr_len=0\n    local closest_vowel_index=0\n  \
    \  local closest_vowel_index_arr=()\n    local closest_vowel_index_arr_len=0\n\
    \    local closest_vowel=\"\"\n    local closest_vowel_arr=()\n    local closest_vowel_arr_len=0\n\
    \    local closest_vowel_index_arr_len=0\n    local closest_vowel_index=0\n  \
    \  local closest_vowel_index_arr=()\n    local closest_v\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    # your code here\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgl14dgh7.sh: line 16: syntax error near unexpected token `}''

    /tmp/tmpgl14dgh7.sh: line 16: `}''

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiouAEIOU\"\n  local len=${#word}\n  local i=0\n  local j=0\n  local c1=\"\"\n\
    \  local c2=\"\"\n  local c3=\"\"\n  local result=\"\"\n  local found=0\n  local\
    \ found_index=0\n  local found_len=0\n  local found_char=\"\"\n  local found_word=\"\
    \"\n  local found_c1=\"\"\n  local found_c2=\"\"\n  local found_c3=\"\"\n  local\
    \ found_result=\"\"\n  local found_found=0\n  local found_found_index=0\n  local\
    \ found_found_len=0\n  local found_found_char=\"\"\n  local found_found_word=\"\
    \"\n  local found_found_c1=\"\"\n  local found_found_c2=\"\"\n  local found_found_c3=\"\
    \"\n  local found_found_result=\"\"\n  local found_found_found=0\n  local found_found_found_index=0\n\
    \  local found_found_found_len=0\n  local found_found_found_char=\"\"\n  local\
    \ found_found_found_word=\"\"\n  local found_found_found_c1=\"\"\n  local found_found_found_c2=\"\
    \"\n  local found_found_found_c3=\"\"\n  local found_found_found_result=\"\"\n\
    \  local found_found_found_found=0\n  local found_found_found_found_index=0\n\
    \  local found_found_found_found_len=0\n  local found_found_found_found_char=\"\
    \"\n  local found_found_found_found_word=\"\"\n  local found_found_found_found_c1=\"\
    \"\n  local found_found_found_found_c2=\"\"\n  local found_found_found_found_c3=\"\
    \"\n  local found_found_found_found_result=\"\"\n  local found_found_found_found_found=0\n\
    \  local found_found_found_found_found_index=0\n  local found_found_found_found_found_len=0\n\
    \  local found_found_found_found_found_char=\"\"\n  local found_found_found_found_found\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n   \
    \ local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n   \
    \ local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n   \
    \ local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local\
    \ i=0\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=\"\
    aeiouAEIOU\"\n    local vowel\n    local consonant\n    local result=\"\"\n  \
    \  local found=0\n    for ((i=len-1; i>=0; i--)); do\n        vowel=${word:$i:1}\n\
    \        if [[ \"$vowels\" =~ \"$vowel\" ]]; then\n            for ((j=i-1; j>=0;\
    \ j--)); do\n                consonant=${word:$j:1}\n                if [[ ! \"\
    $vowels\" =~ \"$consonant\" ]]; then\n                    for ((k=j-1; k>=0; k--));\
    \ do\n                        consonant=${word:$k:1}\n                       \
    \ if [[ ! \"$vowels\" =~ \"$consonant\" ]]; then\n                           \
    \ result=$vowel\n                            found=1\n                       \
    \     break\n                        fi\n                    done\n          \
    \          if [ $found -eq 1 ]; then\n                        break\n        \
    \            fi\n                fi\n            done\n            if [ $found\
    \ -eq 1 ]; then\n                break\n            fi\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local len=${#word}\n    local i=0\n    local j=0\n    local vowels=\"aeiou\"\
    \n    local cons=\"bcdfghjklmnpqrstvwxyz\"\n    local result=\"\"\n    local is_cons=0\n\
    \    local is_vowel=0\n    local is_first_cons=0\n    local is_last_cons=0\n \
    \   local is_first_vowel=0\n    local is_last_vowel=0\n    local is_first_char=0\n\
    \    local is_last_char=0\n    local char=\"\"\n    local char_before=\"\"\n \
    \   local char_after=\"\"\n    local char_before_index=0\n    local char_after_index=0\n\
    \    local char_before_is_cons=0\n    local char_after_is_cons=0\n    local char_before_is_vowel=0\n\
    \    local char_after_is_vowel=0\n    local char_before_is_first_char=0\n    local\
    \ char_after_is_last_char=0\n    local char_before_is_first_cons=0\n    local\
    \ char_after_is_last_cons=0\n    local char_before_is_first_vowel=0\n    local\
    \ char_after_is_last_vowel=0\n    local char_before_is_last_char=0\n    local\
    \ char_after_is_first_char=0\n    local char_before_is_last_cons=0\n    local\
    \ char_after_is_first_cons=0\n    local char_before_is_last_vowel=0\n    local\
    \ char_after_is_first_vowel=0\n    local char_before_is_cons_and_char_after_is_cons=0\n\
    \    local char_before_is_vowel_and_char_after_is_vowel=0\n    local char_before_is_cons_and_char_after_is_vowel=0\n\
    \    local char_before_is_vowel_and_char_after_is_cons=0\n    local\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")\n    local consonants=(\"\
    b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"\
    r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"z\" \"B\" \"C\" \"D\" \"F\" \"G\" \"\
    H\" \"J\" \"K\" \"L\" \"M\" \"N\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"V\" \"W\" \"\
    X\" \"Y\" \"Z\")\n    local index=0\n    local vowel=\"\"\n    local consonant=\"\
    \"\n    local result=\"\"\n    local found=0\n    local found_vowel=0\n    local\
    \ found_consonant=0\n    local found_vowel_index=0\n    local found_consonant_index=0\n\
    \    local found_vowel_index_prev=0\n    local found_consonant_index_prev=0\n\
    \    local found_vowel_index_next=0\n    local found_consonant_index_next=0\n\
    \    local found_vowel_index_prev_prev=0\n    local found_consonant_index_prev_prev=0\n\
    \    local found_vowel_index_next_next=0\n    local found_consonant_index_next_next=0\n\
    \    local found_vowel_index_prev_prev_prev=0\n    local found_consonant_index_prev_prev_prev=0\n\
    \    local found_vowel_index_next_next_next=0\n    local found_consonant_index_next_next_next=0\n\
    \    local found_vowel_index_prev_prev_prev_prev=0\n    local found_consonant_index_prev_prev_prev_prev=0\n\
    \    local found_vow\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n  \
    \  local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n   \
    \ local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n    local\
    \ L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n\
    \    local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n \
    \   local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local len=${#word}\n\
    \    for (( i=len-1; i>=0; i-- )); do\n        for (( j=\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx2cz4wy6.sh: line 91: unexpected EOF while looking for matching
    `)''

    /tmp/tmpx2cz4wy6.sh: line 116: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local vowels=\"aeiouAEIOU\"\n    local i=${#word}\n    local j\n    local k\n\
    \    local l\n    local found=0\n    local ret=\"\"\n    while [ $i -gt 0 ]; do\n\
    \        j=$((i-1))\n        k=$((i-2))\n        l=$((i-3))\n        if [ $k -lt\
    \ 0 ]; then\n            k=0\n        fi\n        if [ $l -lt 0 ]; then\n    \
    \        l=0\n        fi\n        if [[ ${word:$i-1:1} =~ [^$vowels] ]]; then\n\
    \            if [[ ${word:$j-1:1} =~ [$vowels] ]]; then\n                if [[\
    \ ${word:$k-1:1} =~ [^$vowels] ]]; then\n                    if [[ ${word:$l-1:1}\
    \ =~ [^$vowels] ]]; then\n                        ret=${word:$j-1:1}\n       \
    \                 found=1\n                        break\n                   \
    \ fi\n                fi\n            fi\n        fi\n        i=$((i-1))\n   \
    \ done\n    if [ $found -eq 0 ]; then\n        ret=\"\"\n    fi\n    echo $ret\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n\
    \    local closest_consonant=\"\"\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local A=0\n    local B=0\n    local C=0\n    local D=0\n    local E=0\n    local\
    \ F=0\n    local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n\
    \    local L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n \
    \   local Q=0\n    local R=0\n    local S=0\n    local T=0\n    local U=0\n  \
    \  local V=0\n    local W=0\n    local X=0\n    local Y=0\n    local Z=0\n   \
    \ local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local\
    \ f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local vowel=\"\"\n    local consonant=\"\"\n\
    \    local result=\"\"\n    local min_distance=0\n    local distance=0\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local char=\"\"\n    local char_before=\"\"\n    local char_after=\"\"\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_first_char=1\n \
    \   local is_last_char=0\n    local is_first_vowel=1\n    local is_first_consonant=1\n\
    \    local is_last_vowel=0\n    local is_last_consonant=0\n    local is_first_vowel_found=0\n\
    \    local is_last_vowel_found=0\n    local is_first_consonant_found=0\n    local\
    \ is_last_consonant_found=0\n    local is_first_consonant_found_after_vowel=0\n\
    \    local is_last_consonant_found_before_vowel=0\n    local is_first_consonant_found_after_vowel_and_before_consonant=0\n\
    \    local is_last_consonant_found_before_vowel_and_after_consonant=0\n    local\
    \ is_first_consonant_found_after_vowel_and_before_consonant_and_first_vowel_found=0\n\
    \    local is_last_consonant_found_before_vowel_and_after_consonant_and_last_vowel_found=0\n\
    \    local is_first_consonant_found_after_vowel_and_before_consonant_and_first_vowel_found_and_last_vowel_found=0\n\
    \    local is_last_consonant_found_before_vowel_and_after_consonant_and_last_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local result=\"\"\n    local i=${#word}\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local A=0\n    local B=0\n    local C=0\n    local D=0\n    local E=0\n    local\
    \ F=0\n    local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n\
    \    local L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n \
    \   local Q=0\n    local R=0\n    local S=0\n    local T=0\n    local U=0\n  \
    \  local V=0\n    local W=0\n    local X=0\n    local Y=0\n    local Z=0\n   \
    \ local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local\
    \ f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local last_char=\"\"\n    local last_char_is_consonant=0\n    local last_char_is_v\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local length=${#word}\n\
    \  local vowels=\"aeiou\"\n  local i=0\n  local j=0\n  local k=0\n  local result=\"\
    \"\n  local char=\"\"\n  local char_prev=\"\"\n  local char_next=\"\"\n  local\
    \ is_vowel=0\n  local is_consonant=0\n  local is_consonant_prev=0\n  local is_consonant_next=0\n\
    \  local is_vowel_prev=0\n  local is_vowel_next=0\n  local is_vowel_found=0\n\
    \  local is_consonant_found=0\n  local is_consonant_prev_found=0\n  local is_consonant_next_found=0\n\
    \  local is_vowel_prev_found=0\n  local is_vowel_next_found=0\n  local is_vowel_prev_found=0\n\
    \  local is_vowel_next_found=0\n  local is_vowel_prev_found=0\n  local is_vowel_next_found=0\n\
    \  local is_vowel_prev_found=0\n  local is_vowel_next_found=0\n  local is_vowel_prev_found=0\n\
    \  local is_vowel_next_found=0\n  local is_vowel_prev_found=0\n  local is_vowel_next_found=0\n\
    \  local is_vowel_prev_found=0\n  local is_vowel_next_found=0\n  local is_vowel_prev_found=0\n\
    \  local is_vowel_next_found=0\n  local is_vowel_prev_found=0\n  local is_vowel_next_found=0\n\
    \  local is_vowel_prev_found=0\n  local is_vowel_next_found=0\n  local is_vowel_prev_found=0\n\
    \  local is_vowel_next_found=0\n  local is_vowel_prev_found=0\n  local\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowel=\"\"\n    local cons=\"\"\n    local cons_len=0\n    local vowel_len=0\n\
    \    local min_len=0\n    local min_vowel=\"\"\n    local min_cons=\"\"\n    local\
    \ min_vowel_len=0\n    local min_cons_len=0\n    local min_i=0\n    local min_j=0\n\
    \    local min_index=0\n    local min_index_vowel=0\n    local min_index_cons=0\n\
    \    local min_index_vowel_len=0\n    local min_index_cons_len=0\n    local min_index_i=0\n\
    \    local min_index_j=0\n    local min_index_vowel_index=0\n    local min_index_cons_index=0\n\
    \    local min_index_vowel_index_len=0\n    local min_index_cons_index_len=0\n\
    \    local min_index_vowel_index_i=0\n    local min_index_cons_index_j=0\n   \
    \ local min_index_vowel_index_j=0\n    local min_index_cons_index_i=0\n    local\
    \ min_index_vowel_index_i=0\n    local min_index_cons_index_i=0\n    local min_index_vowel_index_j=0\n\
    \    local min_index_cons_index_j=0\n    local min_index_vowel_index_i=0\n   \
    \ local min_index_cons_index_i=0\n    local min_index_vowel_index_j=0\n    local\
    \ min_index_cons_index_j=0\n    local min_index_vowel_index_i=0\n    local min_index_cons_index_i=0\n\
    \    local min_index_vowel_index_j=0\n    local min_index_cons_index_j=0\n   \
    \ local min_index_vowel_index\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local vowel=\"\"\n    local consonant=\"\"\n\
    \    local result=\"\"\n    local found=0\n    local last_consonant=\"\"\n   \
    \ local last_vowel=\"\"\n    local last_vowel_pos=0\n    local last_consonant_pos=0\n\
    \    local last_vowel_pos_tmp=0\n    local last_consonant_pos_tmp=0\n    local\
    \ last_vowel_pos_tmp2=0\n    local last_consonant_pos_tmp2=0\n    local last_vowel_pos_tmp3=0\n\
    \    local last_consonant_pos_tmp3=0\n    local last_vowel_pos_tmp4=0\n    local\
    \ last_consonant_pos_tmp4=0\n    local last_vowel_pos_tmp5=0\n    local last_consonant_pos_tmp5=0\n\
    \    local last_vowel_pos_tmp6=0\n    local last_consonant_pos_tmp6=0\n    local\
    \ last_vowel_pos_tmp7=0\n    local last_consonant_pos_tmp7=0\n    local last_vowel_pos_tmp8=0\n\
    \    local last_consonant_pos_tmp8=0\n    local last_vowel_pos_tmp9=0\n    local\
    \ last_consonant_pos_tmp9=0\n    local last_vowel_pos_tmp10=0\n    local last_consonant_pos_tmp10=0\n\
    \    local last_vowel_pos_tmp11=0\n    local last_consonant_pos_tmp11=0\n    local\
    \ last_vowel_pos_tmp12=0\n    local last_consonant_pos_tmp12=0\n    local last_vowel_pos_tmp13=0\n\
    \    local last_consonant_pos_tmp13=0\n    local last_vowel_pos_tmp14=0\n    local\
    \ last_consonant_pos_tmp14=0\n    local last_vowel_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local cons=0\n\
    \    local vow=0\n    local vow_pos=0\n    local cons_pos=0\n    local vowels=\"\
    aeiouAEIOU\"\n    local consonents=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local result=\"\"\n    local char=\"\"\n    local char_pos=0\n    local\
    \ char_pos_prev=0\n    local char_pos_next=0\n    local char_prev=\"\"\n    local\
    \ char_next=\"\"\n    local char_prev_pos=0\n    local char_next_pos=0\n    local\
    \ char_prev_pos_prev=0\n    local char_next_pos_next=0\n    local char_prev_prev=\"\
    \"\n    local char_next_next=\"\"\n    local char_prev_prev_pos=0\n    local char_next_next_pos=0\n\
    \    local char_prev_prev_pos_prev=0\n    local char_next_next_pos_next=0\n  \
    \  local char_prev_prev_prev=\"\"\n    local char_next_next_next=\"\"\n    local\
    \ char_prev_prev_prev_pos=0\n    local char_next_next_next_pos=0\n    local char_prev_prev_prev_pos_prev=0\n\
    \    local char_next_next_next_pos_next=0\n    local char_prev_prev_prev_prev=\"\
    \"\n    local char_next_next_next_next=\"\"\n    local char_prev_prev_prev_prev_pos=0\n\
    \    local char_next_next_next_next_pos=0\n    local char_prev_prev_prev_prev_pos_prev=0\n\
    \    local char_next_next_next_next_pos_next=0\n    local char_prev_prev_prev_prev_prev=\"\
    \"\n    local char_next_next_next_next_next=\"\"\n    local char_prev_prev_prev_prev_prev_pos=0\n\
    \    local char_next_next_next_next_next\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local vowel_pos=0\n    local vowel_pos_len=0\n    local\
    \ vowel_pos_len_prev=0\n    local vowel_pos_prev=0\n    local vowel_pos_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev=0\n    local vowel_pos_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n\
    \    local vowel_index=0\n    local consonant_index=0\n    local i=0\n    local\
    \ j=0\n    local word_length=${#word}\n    for (( i=0; i<word_length; i++ ))\n\
    \    do\n        if [[ \"${vowels}\" =~ \"${word:$i:1}\" ]]\n        then\n  \
    \          vowel_index=$i\n            for (( j=i; j>=0; j-- ))\n            do\n\
    \                if [[ \"${consonants}\" =~ \"${word:$j:1}\" ]]\n            \
    \    then\n                    consonant_index=$j\n                    break\n\
    \                fi\n            done\n            if [[ $consonant_index -eq\
    \ 0 ]]\n            then\n                continue\n            fi\n         \
    \   if [[ $closest_vowel_index -eq 0 ]]\n            then\n                closest_vowel_index=$vowel_index\n\
    \                closest_consonant_index=$consonant_index\n                closest_vowel=${word:$vowel_index:1}\n\
    \            elif [[ $vowel_index -gt $closest_consonant_index ]]\n          \
    \  then\n                closest_vowel_index=$vowel_index\n                closest_consonant_index=$consonant_index\n\
    \                closest_vowel=${word:$vowel_index:1}\n            fi\n      \
    \  fi\n    done\n    echo $closest_vowel\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local\
    \ result=\"\"\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n   \n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n  \
    \  local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n   \
    \ local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local\
    \ g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n   \
    \ local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local\
    \ g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n   \
    \ local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local\
    \ g=0\n    local h=0\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local vowel_index=0\n    local vowel_index_prev=0\n\
    \    local vowel_index_next=0\n    local vowel_index_prev_len=0\n    local vowel_index_next_len=0\n\
    \    local vowel_index_prev_len_prev=0\n    local vowel_index_next_len_prev=0\n\
    \    local vowel_index_prev_len_next=0\n    local vowel_index_next_len_next=0\n\
    \    local vowel_index_prev_len_prev_prev=0\n    local vowel_index_next_len_prev_prev=0\n\
    \    local vowel_index_prev_len_next_next=0\n    local vowel_index_next_len_next_next=0\n\
    \    local vowel_index_prev_len_prev_prev_prev=0\n    local vowel_index_next_len_prev_prev_prev=0\n\
    \    local vowel_index_prev_len_next_next_next=0\n    local vowel_index_next_len_next_next_next=0\n\
    \    local vowel_index_prev_len_prev_prev_prev_prev=0\n    local vowel_index_next_len_prev_prev_prev_prev=0\n\
    \    local vowel_index_prev_len_next_next_next_next=0\n    local vowel_index_next_len_next_next_next_next=0\n\
    \    local vowel_index_prev_len_prev_prev_prev_prev_prev=0\n    local vowel_index_next_len_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_prev_len_next_next_next_next_next=0\n    local vowel_index_next_len_next_next_next_next_next=0\n\
    \    local vowel_index_prev_len_prev_prev_prev_prev_prev_prev=0\n    local vowel_index_next_len_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_prev_len_next_next_next_next_next_next=0\n    local vowel_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local result=\"\"\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local result=\"\"\n    local vowels=\"aeiouAEIOU\"\n   \
    \ local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local vowel_pos=0\n\
    \    local consonant_pos=0\n    local min_dist=0\n    local dist=0\n    local\
    \ min_vowel=\"\"\n    local min_consonant=\"\"\n    local min_vowel_pos=0\n  \
    \  local min_consonant_pos=0\n    local min_result=\"\"\n    local min_len=0\n\
    \    local min_i=0\n    local min_j=0\n    local min_vowel_len=0\n    local min_consonant_len=0\n\
    \    local min_vowel_i=0\n    local min_consonant_i=0\n    local min_vowel_j=0\n\
    \    local min_consonant_j=0\n    local min_vowel_pos_i=0\n    local min_consonant_pos_i=0\n\
    \    local min_vowel_pos_j=0\n    local min_consonant_pos_j=0\n    local min_vowel_pos_len=0\n\
    \    local min_consonant_pos_len=0\n    local min_vowel_pos_i_len=0\n    local\
    \ min_consonant_pos_i_len=0\n    local min_vowel_pos_j_len=0\n    local min_consonant_pos_j_len=0\n\
    \    local min_vowel_pos_i_j_len=0\n    local min_consonant_pos_i_j_len=0\n  \
    \  local min_vowel_pos_i_j=0\n    local min_consonant_pos_i_j=0\n    local min_vowel_pos_i_j_len=0\n\
    \    local min_consonant_pos_i\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local i=${#word}\n    local prev_char=\"\"\n    local curr_char=\"\"\n \
    \   local next_char=\"\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=${#word}\n\
    \    local curr_index=${#word}\n    while [ $curr_index -gt 0 ]; do\n        prev_char=${word:$curr_index-1:1}\n\
    \        curr_char=${word:$curr_index:1}\n        next_char=${word:$curr_index+1:1}\n\
    \        if [[ $prev_char =~ [$consonants] ]] && [[ $curr_char =~ [$vowels] ]]\
    \ && [[ $next_char =~ [$consonants] ]]; then\n            if [ $curr_index -lt\
    \ $closest_vowel_index ]; then\n                closest_vowel=$curr_char\n   \
    \             closest_vowel_index=$curr_index\n            fi\n        fi\n  \
    \      curr_index=$((curr_index-1))\n    done\n    echo $closest_vowel\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local len=${#word}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local result=\"\"\n    local vowels=\"aeiouAEIOU\"\n   \
    \ local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local is_vowel=0\n\
    \    local is_consonant=0\n    local is_first_consonant=0\n    local is_second_consonant=0\n\
    \    local is_first_vowel=0\n    local is_second_vowel=0\n    local is_first_char=0\n\
    \    local is_second_char=0\n    local is_third_char=0\n    local is_fourth_char=0\n\
    \    local is_fifth_char=0\n    local is_sixth_char=0\n    local is_seventh_char=0\n\
    \    local is_eighth_char=0\n    local is_ninth_char=0\n    local is_tenth_char=0\n\
    \    local is_eleventh_char=0\n    local is_twelfth_char=0\n    local is_thirteenth_char=0\n\
    \    local is_fourteenth_char=0\n    local is_fifteenth_char=0\n    local is_sixteenth_char=0\n\
    \    local is_seventeenth_char=0\n    local is_eighteenth_char=0\n    local is_nineteenth_char=0\n\
    \    local is_twentieth_char=0\n    local is_twenty_first_char=0\n    local is_twenty_second_char=0\n\
    \    local is_twenty_third_char=0\n    local is_twenty_fourth_char=0\n    local\
    \ is_twenty_fifth_char=0\n    local is_twenty_sixth_char=0\n    local is_twenty_seventh_char=0\n\
    \    local is_twenty_eighth_char=0\n    local is_twenty_ninth_char=0\n    local\
    \ is_thirtieth_char=0\n    local\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local last_char=${word:word_len-1:1}\n    local second_last_char=${word:word_len-2:1}\n\
    \    local vowel_list=\"aeiouAEIOU\"\n    local vowel_list_len=${#vowel_list}\n\
    \    local vowel_index=0\n    local vowel_char=\"\"\n    local result=\"\"\n \
    \   local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n  \
    \  local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n   \
    \ local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local\
    \ x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n\
    \    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n \
    \   local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n  \
    \  local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n   \
    \ local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local\
    \ x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n\
    \    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n \
    \   local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n  \
    \  local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n   \
    \ local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local\
    \ x\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowel_index=0\n\
    \  local vowel_char=''\n  local i=0\n  local len=${#word}\n  local prev_char=''\n\
    \  local curr_char=''\n  local next_char=''\n  local vowel_chars='aeiouAEIOU'\n\
    \  local consonant_chars='bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\n  local\
    \ is_prev_consonant=0\n  local is_next_consonant=0\n  local is_curr_vowel=0\n\
    \  local is_curr_consonant=0\n  local is_prev_vowel=0\n  local is_next_vowel=0\n\
    \  local is_prev_char_found=0\n  local is_next_char_found=0\n  local is_vowel_found=0\n\
    \  local is_consonant_found=0\n  local is_prev_char_found=0\n  local is_next_char_found=0\n\
    \  local is_prev_vowel_found=0\n  local is_next_vowel_found=0\n  local is_prev_consonant_found=0\n\
    \  local is_next_consonant_found=0\n  local is_prev_char_found=0\n  local is_next_char_found=0\n\
    \  local is_prev_vowel_found=0\n  local is_next_vowel_found=0\n  local is_prev_consonant_found=0\n\
    \  local is_next_consonant_found=0\n  local is_prev_char_found=0\n  local is_next_char_found=0\n\
    \  local is_prev_vowel_found=0\n  local is_next_vowel_found=0\n  local is_prev_consonant_found=0\n\
    \  local is_next_consonant_found=0\n  local is_prev_char_found=0\n  local is_next_char_found=0\n\
    \  local is_prev_vowel_found\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local len=${#word}\n    local i=0\n    local j=0\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowel=\"\"\n    local c=\"\"\n    local prev=\"\"\n    local next=\"\
    \"\n    local result=\"\"\n    local found=0\n    local found_i=0\n    local found_j=0\n\
    \    local found_vowel=\"\"\n    local found_prev=\"\"\n    local found_next=\"\
    \"\n    local found_result=\"\"\n    for ((i=0; i<len; i++)); do\n        c=${word:$i:1}\n\
    \        if [[ \"$vowels\" =~ \"$c\" ]]; then\n            vowel=\"$c\"\n    \
    \        prev=${word:$((i-1)):1}\n            next=${word:$((i+1)):1}\n      \
    \      if [[ \"$vowels\" =~ \"$prev\" ]]; then\n                continue\n   \
    \         fi\n            if [[ \"$vowels\" =~ \"$next\" ]]; then\n          \
    \      continue\n            fi\n            if [[ \"$prev\" == \"\" ]]; then\n\
    \                continue\n            fi\n            if [[ \"$next\" == \"\"\
    \ ]]; then\n                continue\n            fi\n            if [[ \"$found\"\
    \ == \"0\" ]]; then\n                found=1\n                found_i=$i\n   \
    \             found_j=$j\n                found_vowel=\"$vowel\"\n           \
    \     found_prev=\"$prev\"\n                found_next=\"$next\"\n           \
    \     found_result=\"$result\"\n            else\n                if [[ \"$i\"\
    \ -lt \"$found_i\" ]]; then\n                    found_i=$i\n                \
    \    found_j=$j\n                    found_vowel=\"$vowel\"\n                \
    \    found_prev=\"$prev\"\n                    found_next=\"$next\"\n        \
    \            found_result=\"$result\"\n                fi\n            fi\n  \
    \      fi\n    done\n    if [[ \"$found\" == \"1\" ]]; then\n        echo \"$found_vowel\"\
    \n    else\n        echo \"\"\n    fi\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local length=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n\
    \    local consonant=\"\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ closest_distance=0\n    local distance=0\n    local vowels=\"aeiouAEIOU\"\n\
    \    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local\
    \ char=\"\"\n    local is_vowel=0\n    local is_consonant=0\n    local is_first_vowel=0\n\
    \    local is_first_consonant=0\n    local is_second_vowel=0\n    local is_second_consonant=0\n\
    \    local is_closest_vowel=0\n    local is_closest_consonant=0\n    local is_closest_distance=0\n\
    \    local is_distance=0\n    local is_closest_vowel_index=0\n    local is_closest_consonant_index=0\n\
    \    local is_closest_vowel_index_greater_than_closest_consonant_index=0\n   \
    \ local is_closest_vowel_index_less_than_closest_consonant_index=0\n    local\
    \ is_closest_vowel_index_equal_to_closest_consonant_index=0\n    local is_closest_vowel_index_greater_than_zero=0\n\
    \    local is_closest_consonant_index_greater_than_zero=0\n    local is_closest_vowel_index_less_than_length=0\n\
    \    local is_closest_consonant_index_less_than_length=0\n    local is_closest_vowel_index_equal_to_zero=0\n\
    \    local is_closest_consonant_\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local result=\"\"\n    local i=${#word}\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local A=0\n    local B=0\n    local C=0\n    local D=0\n    local E=0\n    local\
    \ F=0\n    local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n\
    \    local L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n \
    \   local Q=0\n    local R=0\n    local S=0\n    local T=0\n    local U=0\n  \
    \  local V=0\n    local W=0\n    local X=0\n    local Y=0\n    local Z=0\n   \
    \ while [ $i -gt 0 ]; do\n        if [[ $vowels =~ ${word:$i-1:1} ]]; then\n \
    \           if [ $j -eq 1 ]; then\n                result=${word:$i-1:1}\n   \
    \             break\n            fi\n        elif [[ $consonants =~ ${word:$i-1:1}\
    \ ]]; then\n            if [ $j -eq 0 ]; then\n                j=1\n         \
    \   fi\n        fi\n        i=$((i-1))\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    # your code here\n   \
    \ echo $1 | grep -o '[aeiou]' | tail -1\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local result=\"\"\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n  \
    \  local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n   \
    \ local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n    local\
    \ L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n\
    \    local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n \
    \   local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local result=\"\
    \"\n    local found=0\n    local found_vowel=\"\"\n    local found_consonant=\"\
    \"\n    local found_vowel_index=0\n    local found_consonant_index=0\n    local\
    \ found_vowel_count=0\n    local found_consonant_count=0\n    local found_vowel_index_array=()\n\
    \    local found_consonant_index_array=()\n    local found_vowel_count_array=()\n\
    \    local found_consonant_count_array=()\n    local found_vowel_index_array_len=0\n\
    \    local found_consonant_index_array_len=0\n    local found_vowel_count_array_len=0\n\
    \    local found_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\
    \"\n    local consonant=\"\"\n    local found=0\n    local vowels=\"aeiouAEIOU\"\
    \n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local\
    \ char=\"\"\n    local char2=\"\"\n    local char3=\"\"\n    local char4=\"\"\n\
    \    local char5=\"\"\n    local char6=\"\"\n    local char7=\"\"\n    local char8=\"\
    \"\n    local char9=\"\"\n    local char10=\"\"\n    local char11=\"\"\n    local\
    \ char12=\"\"\n    local char13=\"\"\n    local char14=\"\"\n    local char15=\"\
    \"\n    local char16=\"\"\n    local char17=\"\"\n    local char18=\"\"\n    local\
    \ char19=\"\"\n    local char20=\"\"\n    local char21=\"\"\n    local char22=\"\
    \"\n    local char23=\"\"\n    local char24=\"\"\n    local char25=\"\"\n    local\
    \ char26=\"\"\n    local char27=\"\"\n    local char28=\"\"\n    local char29=\"\
    \"\n    local char30=\"\"\n    local char31=\"\"\n    local char32=\"\"\n    local\
    \ char33=\"\"\n    local char34=\"\"\n    local char35=\"\"\n    local char36=\"\
    \"\n    local char37=\"\"\n    local char38=\"\"\n    local char39=\"\"\n    local\
    \ char40=\"\"\n    local char41=\"\"\n    local char42=\"\"\n    local char43=\"\
    \"\n    local char44=\"\"\n    local char45=\"\"\n    local char46=\"\"\n    local\
    \ char47=\"\"\n    local char48=\"\"\n    local char49=\"\"\n    local char50=\"\
    \"\n    local char51=\"\"\n    local char52=\"\"\n    local char53=\"\"\n    local\
    \ char54=\"\"\n    local char55=\"\"\n    local char56=\"\"\n    local char57=\"\
    \"\n    local char58=\"\"\n    local char59=\"\"\n    local char60=\"\"\n    local\
    \ char61=\"\"\n    local char62=\"\"\n    local char63=\"\"\n    local char64=\"\
    \"\n    local char65=\"\"\n    local char66=\"\"\n    local char67=\"\"\n    local\
    \ char68=\"\"\n    local char69=\"\"\n   \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local last_consonant_index=0\n    local last_vowel_index=0\n\
    \    local closest_vowel_index=0\n    local closest_vowel=\"\"\n    local i=0\n\
    \    local c=\"\"\n    local is_vowel=0\n    local is_consonant=0\n    local is_first_vowel=0\n\
    \    local is_first_consonant=0\n    local is_last_vowel=0\n    local is_last_consonant=0\n\
    \    local is_first_letter=0\n    local is_last_letter=0\n    local is_first_vowel_found=0\n\
    \    local is_first_consonant_found=0\n    local is_last_vowel_found=0\n    local\
    \ is_last_consonant_found=0\n    local is_closest_vowel_found=0\n    local is_closest_vowel_found_from_first_vowel=0\n\
    \    local is_closest_vowel_found_from_last_vowel=0\n    local is_closest_vowel_found_from_first_consonant=0\n\
    \    local is_closest_vowel_found_from_last_consonant=0\n    local is_closest_vowel_found_from_first_letter=0\n\
    \    local is_closest_vowel_found_from_last_letter=0\n    local is_closest_vowel_found_from_first_vowel_or_first_consonant=0\n\
    \    local is_closest_vowel_found_from_last_vowel_or_last_consonant=0\n    local\
    \ is_closest_vowel_found_from_first_vowel_or_last_consonant=0\n    local is_closest_vowel_found_from_last_vowel_or_first_consonant=0\n\
    \    local is_closest_vow\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local length=${#word}\n    local i\n    local c\n    local\
    \ v\n    local closest_vowel=\"\"\n    local closest_vowel_distance=0\n    local\
    \ distance\n    local found_vowel=0\n    local found_consonant=0\n    for ((i=length-1;\
    \ i>=0; i--)); do\n        c=${word:$i:1}\n        if [[ $vowels =~ $c ]]; then\n\
    \            found_vowel=1\n            if [[ $found_consonant -eq 1 ]]; then\n\
    \                distance=$((length-i))\n                if [[ $distance -gt $closest_vowel_distance\
    \ ]]; then\n                    closest_vowel=$c\n                    closest_vowel_distance=$distance\n\
    \                fi\n            fi\n        else\n            found_consonant=1\n\
    \        fi\n    done\n    echo $closest_vowel\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ cons=\"\"\n    local cons_len=0\n    local vowel_len=0\n    local min_len=0\n\
    \    local min_vowel=\"\"\n    local min_cons=\"\"\n    local min_vowel_len=0\n\
    \    local min_cons_len=0\n    local min_i=0\n    local min_j=0\n    local min_vowel_index=0\n\
    \    local min_cons_index=0\n    local min_vowel_index_len=0\n    local min_cons_index_len=0\n\
    \    local min_vowel_index_i=0\n    local min_cons_index_i=0\n    local min_vowel_index_j=0\n\
    \    local min_cons_index_j=0\n    local min_vowel_index_vowel=\"\"\n    local\
    \ min_cons_index_cons=\"\"\n    local min_vowel_index_vowel_len=0\n    local min_cons_index_cons_len=0\n\
    \    local min_vowel_index_vowel_i=0\n    local min_cons_index_cons_i=0\n    local\
    \ min_vowel_index_vowel_j=0\n    local min_cons_index_cons_j=0\n    local min_vowel_index_vowel_index=0\n\
    \    local min_cons_index_cons_index=0\n    local min_vowel_index_vowel_index_len=0\n\
    \    local min_cons_index_cons_index_len=0\n    local min_vowel_index_vowel_index_i=0\n\
    \    local min_cons_index_cons_index_i=0\n    local min_vowel_index_vowel_index_j=0\n\
    \    local min_cons_index_cons_index_j=0\n    local min_vowel_index_vowel_index_vowel=\"\
    \"\n    local min_cons_index_cons_index_cons\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local vowels=\"aeiouAEIOU\"\n    local last_consonant=\"\"\n    local last_vowel=\"\
    \"\n    local closest_vowel=\"\"\n    local closest_distance=0\n    local distance=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local char=\"\
    \"\n    local char_vowel=\"\"\n    local char_consonant=\"\"\n    local char_vowel_distance=0\n\
    \    local char_consonant_distance=0\n    local char_vowel_distance_min=0\n  \
    \  local char_consonant_distance_min=0\n    local char_vowel_distance_min_index=0\n\
    \    local char_consonant_distance_min_index=0\n    local char_vowel_distance_min_index_prev=0\n\
    \    local char_consonant_distance_min_index_prev=0\n    local char_vowel_distance_min_index_next=0\n\
    \    local char_consonant_distance_min_index_next=0\n    local char_vowel_distance_min_index_prev_prev=0\n\
    \    local char_consonant_distance_min_index_prev_prev=0\n    local char_vowel_distance_min_index_next_next=0\n\
    \    local char_consonant_distance_min_index_next_next=0\n    local char_vowel_distance_min_index_prev_prev_prev=0\n\
    \    local char_consonant_distance_min_index_prev_prev_prev=0\n    local char_vowel_distance_min_index_next_next_next=0\n\
    \    local char_consonant_distance_min_index_next_next_next=0\n    local char_vowel_distance_min_index_prev_prev_prev_prev=0\n\
    \    local char_consonant_distance_min_index_prev_prev_prev_prev=0\n    local\
    \ char_vowel_distance_min_index_next_next_next_next=0\n    local char_conson\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n  \
    \  local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n   \
    \ local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n    local\
    \ L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n\
    \    local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n \
    \   local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local result=\"\
    \"\n    local found=0\n    local last_consonant=\"\"\n    local last_vowel=\"\"\
    \n    local last_char=\"\"\n    local next_char=\"\"\n    local next_vowel=\"\"\
    \n    local next_consonant=\"\"\n    local last_consonant_index=0\n    local last_vowel_index=0\n\
    \    local last_char_index=0\n    local next_char_index=0\n    local next_vowel_index=0\n\
    \    local next_consonant_index=0\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local closest_vowel_distance_tmp=0\n\
    \    local closest_vowel_distance\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=('a'\
    \ 'e' 'i' 'o' 'u' 'A' 'E' 'I' 'O' 'U')\n    local consonants=('b' 'c' 'd' 'f'\
    \ 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z' 'B' 'C'\
    \ 'D' 'F' 'G' 'H' 'J' 'K' 'L' 'M' 'N' 'P' 'Q' 'R' 'S' 'T' 'V' 'W' 'X' 'Y' 'Z')\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local vowel=''\n    local\
    \ consonant=''\n    local closest_vowel=''\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_index=0\n    local vowel_distance=0\n\
    \    local consonant_index=0\n    local consonant_distance=0\n    local is_first_consonant=0\n\
    \    local is_first_vowel=0\n    local is_last_consonant=0\n    local is_last_vowel=0\n\
    \    local is_first_consonant_found=0\n    local is_last_consonant_found=0\n \
    \   local is_first_vowel_found=0\n    local is_last_vowel_found=0\n    local is_first_vowel_found_after_first_consonant=0\n\
    \    local is_last_vowel_found_before_last_consonant=0\n    local is_first_consonant_found_before_first_vowel=0\n\
    \    local is_last_consonant_found_after_last_vowel=0\n    local is_first_vowel_found_before_first_cons\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local\
    \ last_consonant=\"\"\n    local last_vowel=\"\"\n    local last_char=\"\"\n \
    \   local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ len=${#word}\n    for ((i=len-1; i>=0; i--)); do\n        last_char=${word:$i:1}\n\
    \        for ((j=0; j<${#consonants}; j++)); do\n            if [[ $last_char\
    \ == ${consonants:$j:1} ]]; then\n                last_consonant=$last_char\n\
    \                break\n            fi\n        done\n        if [[ $last_consonant\
    \ != \"\" ]]; then\n            break\n        fi\n    done\n    if [[ $last_consonant\
    \ == \"\" ]]; then\n        return\n    fi\n    for ((i=i-1; i>=0; i--)); do\n\
    \        last_char=${word:$i:1}\n        for ((j=0; j<${#vowels}; j++)); do\n\
    \            if [[ $last_char == ${vowels:$j:1} ]]; then\n                last_vowel=$last_char\n\
    \                break\n            fi\n        done\n        if [[ $last_vowel\
    \ != \"\" ]]; then\n            break\n        fi\n    done\n    if [[ $last_vowel\
    \ == \"\" ]]; then\n        return\n    fi\n    echo $last_vowel\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local result=\"\"\n    local found=0\n    local vowels=\"\
    aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    for ((i=len-1; i>=0; i--)); do\n        for ((j=0; j<${#consonants}; j++));\
    \ do\n            if [[ ${word:$i:1} == ${consonants:$j:1} ]]; then\n        \
    \        consonant=${word:$i:1}\n                break\n            fi\n     \
    \   done\n        if [[ -n $consonant ]]; then\n            for ((j=0; j<${#vowels};\
    \ j++)); do\n                if [[ ${word:$i-1:1} == ${vowels:$j:1} ]]; then\n\
    \                    vowel=${word:$i-1:1}\n                    break\n       \
    \         fi\n            done\n            if [[ -n $vowel ]]; then\n       \
    \         result=$vowel\n                found=1\n                break\n    \
    \        fi\n        fi\n    done\n    if [[ $found -eq 0 ]]; then\n        result=\"\
    \"\n    fi\n    echo $result\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local vowel=\"\"\n    local consonant=\"\"\n\
    \    local result=\"\"\n    local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowel_index=0\n    local consonant_index=0\n    local vowel_index_prev=0\n\
    \    local consonant_index_prev=0\n    local vowel_index_next=0\n    local consonant_index_next=0\n\
    \    local vowel_index_prev_prev=0\n    local consonant_index_prev_prev=0\n  \
    \  local vowel_index_next_next=0\n    local consonant_index_next_next=0\n    local\
    \ vowel_index_prev_prev_prev=0\n    local consonant_index_prev_prev_prev=0\n \
    \   local vowel_index_next_next_next=0\n    local consonant_index_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev=0\n    local consonant_index_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next=0\n    local consonant_index_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev=0\n    local consonant_index_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next=0\n    local consonant_index_next_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev_prev=0\n    local consonant_index_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next_next=0\n    local consonant_index_next_next_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev_prev_prev=0\n    local consonant_index_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=\"\
    aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local vowel=\"\"\n    local consonant=\"\"\n    local closest_vowel=\"\"\
    \n    local closest_vowel_index=0\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=\"\"\n    local closest_vowel_distance=0\n    local closest_consonant_distance=0\n\
    \    local distance=0\n    local found_vowel=0\n    local found_consonant=0\n\
    \    local found_closest_vowel=0\n    local found_closest_consonant=0\n    local\
    \ found_vowel_distance=0\n    local found_consonant_distance=0\n    local found_closest_vowel_distance=0\n\
    \    local found_closest_consonant_distance=0\n    local found_closest_vowel_index=0\n\
    \    local found_closest_consonant_index=0\n    local found_closest_vowel=\"\"\
    \n    local found_closest_consonant=\"\"\n    local found_vowel_index=0\n    local\
    \ found_consonant_index=0\n    local found_vowel=\"\"\n    local found_consonant=\"\
    \"\n    local found_closest_vowel_distance=0\n    local found_closest_consonant_distance=0\n\
    \    local found_closest_vowel_index=0\n    local found_closest_consonant_index=0\n\
    \    local found_closest_vowel=\"\"\n    local found_closest_consonant=\"\"\n\
    \    local found_vowel_index=0\n    local found_consonant_index=0\n    local found_vowel=\"\
    \"\n    local found_consonant=\"\"\n    local found_closest_vowel_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local vowels=\"aeiou\"\n\
    \    local vowel_len=${#vowels}\n    local vowel_index=0\n    local vowel_distance=0\n\
    \    local closest_vowel=\"\"\n    local closest_vowel_distance=0\n    local closest_vowel_index=0\n\
    \    local found_vowel=0\n    local found_consonant=0\n    local found_consonant_index=0\n\
    \    local found_vowel_index=0\n    local found_vowel_distance=0\n    local found_vowel_distance_index=0\n\
    \    local found_vowel_distance_index_distance=0\n    local found_vowel_distance_index_distance_index=0\n\
    \    local found_vowel_distance_index_distance_index_distance=0\n    local found_vowel_distance_index_distance_index_distance_index=0\n\
    \    local found_vowel_distance_index_distance_index_distance_index_distance=0\n\
    \    local found_vowel_distance_index_distance_index_distance_index_distance_index=0\n\
    \    local found_vowel_distance_index_distance_index_distance_index_distance_index_distance=0\n\
    \    local found_vowel_distance_index_distance_index_distance_index_distance_index_distance_index=0\n\
    \    local found_vowel_distance_index_distance_index_distance_index_distance_index_distance_index_distance=0\n\
    \    local found_vowel_distance_index_distance_index_distance_index_distance_index_distance_index_distance_index=0\n\
    \    local found_vowel_distance_index_distance_index_distance_index_distance_index_distance_index_distance_index_distance=0\n\
    \    local found_vowel_distance_index_distance_index_distance_index_distance_index_distance_index_distance_index_distance_index=0\n\
    \    local found_vowel_distance_index_distance_index_\n}\n\ncandidate() {\n  \
    \  get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiou\"\n  local closest_vowel=\"\"\n  local closest_vowel_index=0\n  local closest_vowel_distance=0\n\
    \  local word_length=${#word}\n  local word_index=0\n  local word_letter=\"\"\n\
    \  local word_letter_is_vowel=0\n  local word_letter_is_consonant=0\n  local word_letter_is_first_letter=0\n\
    \  local word_letter_is_last_letter=0\n  local word_letter_is_first_consonant=0\n\
    \  local word_letter_is_last_consonant=0\n  local word_letter_is_first_vowel=0\n\
    \  local word_letter_is_last_vowel=0\n  local word_letter_is_between_consonants=0\n\
    \  local word_letter_is_between_vowels=0\n  local word_letter_is_between_consonants_and_vowels=0\n\
    \  local word_letter_is_between_vowels_and_consonants=0\n  local word_letter_is_between_consonants_and_consonants=0\n\
    \  local word_letter_is_between_vowels_and_vowels=0\n  local word_letter_is_between_vowels_and_vowels_and_consonants=0\n\
    \  local word_letter_is_between_consonants_and_vowels_and_vowels=0\n  local word_letter_is_between_consonants_and_consonants_and_vowels=0\n\
    \  local word_letter_is_between_vowels_and_consonants_and_consonants=0\n  local\
    \ word_letter_is_between_consonants_and_vowels_and_consonants=0\n  local word_letter_is_between_consonants_and_consonants_and_consonants=0\n\
    \  local word_letter_is_between_vowels_and_vowels_and_vowels=0\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aAeEiIoOuU\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local current_vowel_index=0\n    local\
    \ current_vowel_distance=0\n    local current_vowel=\"\"\n    local word_length=${#word}\n\
    \    local word_index=0\n    local word_char=\"\"\n    local is_previous_char_vowel=0\n\
    \    local is_current_char_vowel=0\n    local is_next_char_vowel=0\n    local\
    \ is_previous_char_consonant=0\n    local is_current_char_consonant=0\n    local\
    \ is_next_char_consonant=0\n    local is_previous_char_vowel_or_consonant=0\n\
    \    local is_current_char_vowel_or_consonant=0\n    local is_next_char_vowel_or_consonant=0\n\
    \    local is_previous_char_vowel_or_consonant_or_empty=0\n    local is_current_char_vowel_or_consonant_or_empty=0\n\
    \    local is_next_char_vowel_or_consonant_or_empty=0\n    local is_previous_char_vowel_or_empty=0\n\
    \    local is_current_char_vowel_or_empty=0\n    local is_next_char_vowel_or_empty=0\n\
    \    local is_previous_char_consonant_or_empty=0\n    local is_current_char_consonant_or_empty=0\n\
    \    local is_next_char_consonant_or_empty=0\n    local is_previous_char_empty=0\n\
    \    local is_current_char_empty=0\n    local is_next_char_empty=0\n    local\
    \ is_previous_char_not_empty=0\n    local is_current_char_not_empty=0\n\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\
    \"\n    local cons=\"\"\n    local cons_count=0\n    local vowel_count=0\n   \
    \ local vowel_pos=0\n    local cons_pos=0\n    local closest_vowel=\"\"\n    local\
    \ closest_vowel_pos=0\n    local closest_cons=\"\"\n    local closest_cons_pos=0\n\
    \    local closest_cons_count=0\n    local closest_vowel_count=0\n    local closest_distance=0\n\
    \    local distance=0\n    local vowel_list=\"aeiouAEIOU\"\n    local cons_list=\"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local char=\"\"\n    local char_pos=0\n\
    \    local char_count=0\n    local char_pos_list=()\n    local char_count_list=()\n\
    \    local char_pos_list_len=0\n    local char_count_list_len=0\n    local char_pos_list_index=0\n\
    \    local char_count_list_index=0\n    local char_pos_list_index_len=0\n    local\
    \ char_count_list_index_len=0\n    local char_pos_list_index_len_index=0\n   \
    \ local char_count_list_index_len_index=0\n    local char_pos_list_index_len_index_len=0\n\
    \    local char_count_list_index_len_index_len=0\n    local char_pos_list_index_len_index_len_index=0\n\
    \    local char_count_list_index_len_index_len_index=0\n    local char_pos_list_index_len_index_len_index_len=0\n\
    \    local char_count_list_index_len_index_len_index_len=0\n    local char_pos_list_index_len_index_len_index_len_index=0\n\
    \    local char_count_list_index_len_index_len_index_len_\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_length=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local vowel_index=0\n  local vowel_index_array=()\n\
    \  local vowel_array=()\n  local consonant_index=0\n  local consonant_index_array=()\n\
    \  local consonant_array=()\n  local vowel_consonant_index_array=()\n  local vowel_consonant_array=()\n\
    \  local vowel_consonant_index=0\n  local vowel_consonant_index_array_length=0\n\
    \  local vowel_consonant_array_length=0\n  local vowel_consonant_index_array_length_minus_one=0\n\
    \  local vowel_consonant_array_length_minus_one=0\n  local vowel_consonant_index_array_length_minus_two=0\n\
    \  local vowel_consonant_array_length_minus_two=0\n  local vowel_consonant_index_array_length_minus_three=0\n\
    \  local vowel_consonant_array_length_minus_three=0\n  local vowel_consonant_index_array_length_minus_four=0\n\
    \  local vowel_consonant_array_length_minus_four=0\n  local vowel_consonant_index_array_length_minus_five=0\n\
    \  local vowel_consonant_array_length_minus_five=0\n  local vowel_consonant_index_array_length_minus_six=0\n\
    \  local vowel_consonant_array_length_minus_six=0\n  local vowel_consonant_index_array_length_minus_seven=0\n\
    \  local vowel_consonant_array_length_minus_seven=0\n  local vowel_consonant_index_array_length_minus_eight=0\n\
    \  local vowel_consonant_array_length_minus_eight=0\n  local vowel_consonant_index_array_length_minus_nine=0\n\
    \  local vowel_consonant_array_length_minus_nine=0\n  local vowel_consonant_index_array\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local len=${#word}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local found=0\n    local result=\"\"\n    local c1=\"\"\n\
    \    local c2=\"\"\n    local c3=\"\"\n    local c4=\"\"\n    local c5=\"\"\n\
    \    local c6=\"\"\n    local c7=\"\"\n    local c8=\"\"\n    local c9=\"\"\n\
    \    local c10=\"\"\n    local c11=\"\"\n    local c12=\"\"\n    local c13=\"\"\
    \n    local c14=\"\"\n    local c15=\"\"\n    local c16=\"\"\n    local c17=\"\
    \"\n    local c18=\"\"\n    local c19=\"\"\n    local c20=\"\"\n    local c21=\"\
    \"\n    local c22=\"\"\n    local c23=\"\"\n    local c24=\"\"\n    local c25=\"\
    \"\n    local c26=\"\"\n    local c27=\"\"\n    local c28=\"\"\n    local c29=\"\
    \"\n    local c30=\"\"\n    local c31=\"\"\n    local c32=\"\"\n    local c33=\"\
    \"\n    local c34=\"\"\n    local c35=\"\"\n    local c36=\"\"\n    local c37=\"\
    \"\n    local c38=\"\"\n    local c39=\"\"\n    local c40=\"\"\n    local c41=\"\
    \"\n    local c42=\"\"\n    local c43=\"\"\n    local c44=\"\"\n    local c45=\"\
    \"\n    local c46=\"\"\n    local c47=\"\"\n    local c48=\"\"\n    local c49=\"\
    \"\n    local c50=\"\"\n    local c51=\"\"\n    local c52=\"\"\n    local c53=\"\
    \"\n    local c54=\"\"\n    local c55=\"\"\n    local c56=\"\"\n    local c57=\"\
    \"\n    local c58=\"\"\n    local c59=\"\"\n    local c60=\"\"\n    local c61=\"\
    \"\n    local c62=\"\"\n    local c63=\"\"\n    local c64=\"\"\n    local c65=\"\
    \"\n    local c66=\"\"\n    local c67=\"\"\n    local c68=\"\"\n    local c69=\"\
    \"\n    local c70=\"\"\n    local c71=\"\"\n    local c72=\"\"\n    local c73=\"\
    \"\n    local c74=\"\"\n    local c75=\"\"\n    local c76\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local result=\"\"\n    local vowels=\"aeiou\"\n    local\
    \ consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local found=0\n    for (( i=$len-1;\
    \ i>=0; i-- ))\n    do\n        vowel=\"\"\n        consonant=\"\"\n        for\
    \ (( j=0; j<${#vowels}; j++ ))\n        do\n            if [[ ${word:$i:1} ==\
    \ ${vowels:$j:1} ]]\n            then\n                vowel=${vowels:$j:1}\n\
    \                break\n            fi\n        done\n        if [[ -z $vowel\
    \ ]]\n        then\n            for (( j=0; j<${#consonants}; j++ ))\n       \
    \     do\n                if [[ ${word:$i:1} == ${consonants:$j:1} ]]\n      \
    \          then\n                    consonant=${consonants:$j:1}\n          \
    \          break\n                fi\n            done\n        fi\n        if\
    \ [[ -n $vowel ]]\n        then\n            if [[ -n $consonant ]]\n        \
    \    then\n                result=$vowel\n                found=1\n          \
    \      break\n            fi\n        else\n            if [[ -n $consonant ]]\n\
    \            then\n                result=\"\"\n            fi\n        fi\n \
    \   done\n    if [[ $found -eq 0 ]]\n    then\n        result=\"\"\n    fi\n \
    \   echo $result\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local current_vowel_index=0\n    local\
    \ current_vowel_distance=0\n    local current_vowel=\"\"\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n   \
    \ local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n   \
    \ local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local a=0\n    local b\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local vowel_index=0\n    local vowel_char=''\n\
    \    local vowel_found=0\n    local vowel_list='aeiouAEIOU'\n    local consonant_list='bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\n\
    \    local current_char=''\n    local prev_char=''\n    local next_char=''\n \
    \   local prev_is_consonant=0\n    local next_is_consonant=0\n    local vowel_distance=0\n\
    \    local min_vowel_distance=$len\n    local min_vowel_index=0\n    local min_vowel_char=''\n\
    \    local min_vowel_found=0\n    local vowel_index_list=''\n    local vowel_char_list=''\n\
    \    local vowel_distance_list=''\n    local vowel_found_list=''\n    local vowel_index_list_len=0\n\
    \    local vowel_char_list_len=0\n    local vowel_distance_list_len=0\n    local\
    \ vowel_found_list_len=0\n    local vowel_index_list_index=0\n    local vowel_char_list_index=0\n\
    \    local vowel_distance_list_index=0\n    local vowel_found_list_index=0\n \
    \   local vowel_index_list_item=0\n    local vowel_char_list_item=''\n    local\
    \ vowel_distance_list_item=0\n    local vowel_found_list_item=0\n    local vowel_index_list_item_index=0\n\
    \    local vowel_char_list_item_index=0\n    local vowel_distance_list_item_index=0\n\
    \    local vowel_found_list_item_index=0\n    local vowel_index_list_item_len=0\n\
    \    local vowel_char_list_item_len=0\n    local vowel_distance_list_item_len=0\n\
    \    local vowel_found_list_item_len=0\n    local vowel_index_list_item_item=0\n\
    \    local\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local str=$1\n    local\
    \ len=${#str}\n    local i=0\n    local vowels=\"aeiouAEIOU\"\n    local vowel=\"\
    \"\n    local found=0\n    local result=\"\"\n    local char=\"\"\n    local char_prev=\"\
    \"\n    local char_next=\"\"\n    local char_prev_is_vowel=0\n    local char_next_is_vowel=0\n\
    \    local char_is_vowel=0\n    local char_is_consonant=0\n    local char_prev_is_consonant=0\n\
    \    local char_next_is_consonant=0\n    local char_prev_is_consonant_and_char_is_vowel=0\n\
    \    local char_is_vowel_and_char_next_is_consonant=0\n    local char_prev_is_consonant_and_char_is_vowel_and_char_next_is_consonant=0\n\
    \    local char_prev_is_consonant_and_char_is_vowel_and_char_next_is_consonant_and_found=0\n\
    \    local char_prev_is_consonant_and_char_is_vowel_and_char_next_is_consonant_and_found_and_char_is_closest=0\n\
    \    local char_prev_is_consonant_and_char_is_vowel_and_char_next_is_consonant_and_found_and_char_is_closest_and_result_is_empty=0\n\
    \    local char_prev_is_consonant_and_char_is_vowel_and_char_next_is_consonant_and_found_and_char_is_closest_and_result_is_empty_and_char_is_closest=0\n\
    \    local char_prev_is_consonant_and_char_is_vowel_and_char_next_is_consonant_and_found_and_char_is_closest_and_result_is_empty_and_char_is_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local len=${#word}\n    local i=0\n    local vowel=''\n    local consonant=''\n\
    \    local curr=''\n    local prev=''\n    local next=''\n    local distance=0\n\
    \    local min_distance=$len\n    local min_vowel=''\n    local vowels='aeiouAEIOU'\n\
    \    local consonants='bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\n    local\
    \ curr_vowel=''\n    local curr_consonant=''\n    local prev_vowel=''\n    local\
    \ prev_consonant=''\n    local next_vowel=''\n    local next_consonant=''\n  \
    \  local curr_distance=0\n    local prev_distance=0\n    local next_distance=0\n\
    \    local min_distance=0\n    local min_vowel=''\n    local min_consonant=''\n\
    \    local min_distance_vowel=0\n    local min_distance_consonant=0\n    local\
    \ min_distance_vowel_consonant=0\n    local min_distance_consonant_vowel=0\n \
    \   local min_distance_vowel_consonant_vowel=0\n    local min_distance_consonant_vowel_consonant=0\n\
    \    local min_distance_vowel_consonant_vowel_consonant=0\n    local min_distance_consonant_vowel_consonant_vowel=0\n\
    \    local min_distance_vowel_consonant_vowel_consonant_vowel=0\n    local min_distance_consonant_vowel_consonant_vowel_consonant=0\n\
    \    local min_distance_vowel_consonant_vowel_consonant_vowel_consonant=0\n  \
    \  local min_distance_consonant_vowel_consonant_vowel_consonant_vowel=0\n    local\
    \ min_distance_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  # write your code here\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_109isfy.sh: line 16: syntax error near unexpected token `}''

    /tmp/tmp_109isfy.sh: line 16: `}''

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local last_char=${word: -1}\n    local second_last_char=${word:\
    \ -2:1}\n    local last_char_is_vowel=false\n    local second_last_char_is_vowel=false\n\
    \    local i=0\n    local vowel_index=0\n    local closest_vowel=\"\"\n    local\
    \ closest_vowel_index=0\n    local closest_vowel_distance=0\n    local vowel_distance=0\n\
    \n    # Check if last char is vowel\n    for (( i=0; i<${#vowels}; i++ )); do\n\
    \        if [[ $last_char == ${vowels:$i:1} ]]; then\n            last_char_is_vowel=true\n\
    \            break\n        fi\n    done\n\n    # Check if second last char is\
    \ vowel\n    for (( i=0; i<${#vowels}; i++ )); do\n        if [[ $second_last_char\
    \ == ${vowels:$i:1} ]]; then\n            second_last_char_is_vowel=true\n   \
    \         break\n        fi\n    done\n\n    # If both last and second last chars\
    \ are vowels, then return empty string\n    if [[ $last_char_is_vowel == true\
    \ && $second_last_char_is_vowel == true ]]; then\n        echo \"\"\n        return\n\
    \    fi\n\n    # If last char is vowel, then return empty string\n    if [[ $last_char_is_vowel\
    \ == true ]]; then\n        echo \"\"\n        return\n    fi\n\n    # If second\
    \ last char is vowel, then return empty string\n    if [[ $second_last_char_is_vowel\
    \ == true ]]; then\n        echo \"\"\n        return\n    fi\n\n    # Find the\
    \ closest vowel from the right side of the word\n    for (( i=${#word}-1; i>=0;\
    \ i-- )); do\n        for (( vowel_index=0; vowel_index<${#vowels}; vowel_index++\
    \ )); do\n            if [[ ${word:$i:1} == ${vow\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgsuj_6v4.sh: line 65: syntax error in conditional expression

    /tmp/tmpgsuj_6v4.sh: line 68: syntax error near `candidate(''

    /tmp/tmpgsuj_6v4.sh: line 68: `candidate() {''

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ closest_distance=0\n    local distance=0\n    local vowels=\"aeiouAEIOU\"\n\
    \    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local\
    \ char=\"\"\n    local is_vowel=0\n    local is_consonant=0\n    local is_first_vowel=0\n\
    \    local is_first_consonant=0\n    local is_last_vowel=0\n    local is_last_consonant=0\n\
    \    local is_first_char=0\n    local is_last_char=0\n    local is_first_vowel_found=0\n\
    \    local is_first_consonant_found=0\n    local is_last_vowel_found=0\n    local\
    \ is_last_consonant_found=0\n    local is_first_char_found=0\n    local is_last_char_found=0\n\
    \    local is_closest_vowel_found=0\n    local is_closest_consonant_found=0\n\
    \    local is_closest_distance_found=0\n    local is_closest_vowel_index_found=0\n\
    \    local is_closest_consonant_index_found=0\n    local is_closest_vowel_found=0\n\
    \    local is_closest_consonant_found=0\n    local is_closest_distance_found=0\n\
    \    local is_closest_vowel_index_found=0\n    local is_closest_consonant_index_found=0\n\
    \    local is_closest_vowel_found=0\n    local is_closest_consonant_found=0\n\
    \   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local word_length=${#word}\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local\
    \ f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local\
    \ f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local\
    \ f=0\n    local g=0\n   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiouAEIOU\"\n  local i=${#word}\n  local c=${word:$i-1:1}\n  local v=''\n  local\
    \ v_i=0\n  local v_c=''\n  local v_d=0\n  local d=0\n  local found=0\n  while\
    \ [ $i -gt 0 ]; do\n    c=${word:$i-1:1}\n    if [[ $vowels =~ $c ]]; then\n \
    \     v=$c\n      v_i=$i\n      v_c=$c\n      v_d=$d\n      found=1\n    fi\n\
    \    if [ $found -eq 1 ] && [[ ! $vowels =~ $c ]]; then\n      echo $v\n     \
    \ return\n    fi\n    let i--\n    let d++\n  done\n  echo \"\"\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowel_index=0\n\
    \    local vowel_index_arr=()\n    local vowel_index_arr_len=0\n    local vowel_index_arr_len_half=0\n\
    \    local vowel_index_arr_len_half_floor=0\n    local vowel_index_arr_len_half_ceil=0\n\
    \    local vowel_index_arr_len_half_floor_diff=0\n    local vowel_index_arr_len_half_ceil_diff=0\n\
    \    local vowel_index_arr_len_half_floor_diff_abs=0\n    local vowel_index_arr_len_half_ceil_diff_abs=0\n\
    \    local vowel_index_arr_len_half_floor_diff_abs_min=0\n    local vowel_index_arr_len_half_ceil_diff_abs_min=0\n\
    \    local vowel_index_arr_len_half_floor_diff_abs_min_index=0\n    local vowel_index_arr_len_half_ceil_diff_abs_min_index=0\n\
    \    local vowel_index_arr_len_half_floor_diff_abs_min_index_final=0\n    local\
    \ vowel_index_arr_len_half_ceil_diff_abs_min_index_final=0\n    local vowel_index_arr_len_half_floor_diff_abs_min_index_final_char=''\n\
    \    local vowel_index_arr_len_half_ceil_diff_abs_min_index_final_char=''\n  \
    \  local vowel_index_arr_len_half_floor_diff_abs_min_index_final_char_final=''\n\
    \    local vowel_index_arr_len_half_ceil_diff_abs_min_index_final_char_final=''\n\
    \    local vowel_index_arr_len_half_floor_diff_abs_min_index_final_char_final_len=0\n\
    \    local vowel_index_arr_len_half_ceil_diff_abs_min_index_final\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n  \
    \  local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n   \
    \ local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n    local\
    \ L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n\
    \    local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n \
    \   local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local flag=0\n\
    \    local flag2=0\n    for (( i=${#word}-1; i>=0; i-- )); do\n        for ((\
    \ j=0; j<${#consonants}; j++ )); do\n            if [[ ${word:$i:1} == ${consonants:$j:1}\
    \ ]]; then\n                flag=1\n                break\n            fi\n  \
    \      done\n        if [[ $flag == 1 ]]; then\n            for (( k=0; k<${#vowels};\
    \ k++ )); do\n                if [[ ${word:$i:1} == ${vowels:$k:1} ]]; then\n\
    \                    flag2=1\n                    break\n                fi\n\
    \            done\n            if [[ $flag2 == 1 ]]; then\n                result=${word:$i:1\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3167ejxh.sh: line 105: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local prev_char=\"\"\n\
    \    local curr_char=\"\"\n    local next_char=\"\"\n    local closest_vowel=\"\
    \"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ vowel_distance=0\n    local vowel_index=0\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_len=${#vowels}\n    local vowel=\"\"\n    local vowel_index=0\n\
    \    local vowel_distance=0\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_distance=0\n    local vowel_index=0\n\
    \    local vowel_distance=0\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_distance=0\n    local vowel_index=0\n\
    \    local vowel_distance=0\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_distance=0\n    local vowel_index=0\n\
    \    local vowel_distance=0\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_distance=0\n    local vowel_index=0\n\
    \    local vowel_distance=0\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_distance=0\n    local vowel_index=0\n\
    \    local vowel_distance=0\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_distance=0\n    local vowel_index=0\n\
    \    local vowel_distance=0\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=\"$1\"\n  local\
    \ vowels=\"aeiou\"\n  local consonants=\"bcdfghjklmnpqrstvwxyz\"\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local result=\"\"\n  local min_distance=${#word}\n\
    \  local distance\n  local current_vowel\n  local current_consonant\n  local current_distance\n\
    \n  for ((i=0; i<${#word}; i++)); do\n    current_vowel=${word:$i:1}\n    if [[\
    \ $vowels =~ $current_vowel ]]; then\n      for ((j=0; j<${#word}; j++)); do\n\
    \        current_consonant=${word:$j:1}\n        if [[ $consonants =~ $current_consonant\
    \ ]]; then\n          if [[ $i -lt $j ]]; then\n            current_distance=$((j-i))\n\
    \            if [[ $current_distance -lt $min_distance ]]; then\n            \
    \  min_distance=$current_distance\n              result=$current_vowel\n     \
    \       fi\n          fi\n        fi\n      done\n    fi\n  done\n\n  echo $result\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local vowel=\"\"\n  local cons=\"\"\n\
    \  local vowels=\"aeiouAEIOU\"\n  local cons=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n  local result=\"\"\n  local found=0\n  local pos=0\n  local min=0\n  local\
    \ min_pos=0\n  local min_vowel=\"\"\n  local min_cons=\"\"\n  local min_result=\"\
    \"\n  local min_found=0\n  local min_pos=0\n  local min_min=0\n  local min_min_pos=0\n\
    \  local min_min_vowel=\"\"\n  local min_min_cons=\"\"\n  local min_min_result=\"\
    \"\n  local min_min_found=0\n  local min_min_pos=0\n  local min_min_min=0\n  local\
    \ min_min_min_pos=0\n  local min_min_min_vowel=\"\"\n  local min_min_min_cons=\"\
    \"\n  local min_min_min_result=\"\"\n  local min_min_min_found=0\n  local min_min_min_pos=0\n\
    \  local min_min_min_min=0\n  local min_min_min_min_pos=0\n  local min_min_min_min_vowel=\"\
    \"\n  local min_min_min_min_cons=\"\"\n  local min_min_min_min_result=\"\"\n \
    \ local min_min_min_min_found=0\n  local min_min_min_min_pos=0\n  local min_min_min_min_min=0\n\
    \  local min_min_min_min_min_pos=0\n  local min_min_min_min_min_vowel=\"\"\n \
    \ local min_min_min_min_min_cons=\"\"\n  local min_min_min_min_min_result=\"\"\
    \n  local min_min_min_min_min_found=0\n  local min_min_min_min_min_pos=0\n\n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ vowel_index=0\n    local consonant_index=0\n    local consonant_index_prev=0\n\
    \    local vowel_index_prev=0\n    local vowel_index_next=0\n    local consonant_index_next=0\n\
    \    local vowel_index_prev_prev=0\n    local consonant_index_prev_prev=0\n  \
    \  local vowel_index_next_next=0\n    local consonant_index_next_next=0\n    local\
    \ vowel_index_prev_prev_prev=0\n    local consonant_index_prev_prev_prev=0\n \
    \   local vowel_index_next_next_next=0\n    local consonant_index_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev=0\n    local consonant_index_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next=0\n    local consonant_index_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev=0\n    local consonant_index_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next=0\n    local consonant_index_next_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev_prev=0\n    local consonant_index_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next_next=0\n    local consonant_index_next_next_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev_prev_prev=0\n    local consonant_index_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next_next_next=0\n    local consonant_index_next_next_next_next_next_next_next=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n\
    \    local vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local consonant_pos=0\n\
    \    local consonant_pos_arr=()\n    local consonant_pos_arr_len=0\n    local\
    \ consonant_pos_arr_len_minus_one=0\n    local consonant_pos_arr_len_minus_two=0\n\
    \    local consonant_pos_arr_len_minus_three=0\n    local consonant_pos_arr_len_minus_four=0\n\
    \    local consonant_pos_arr_len_minus_five=0\n    local consonant_pos_arr_len_minus_six=0\n\
    \    local consonant_pos_arr_len_minus_seven=0\n    local consonant_pos_arr_len_minus_eight=0\n\
    \    local consonant_pos_arr_len_minus_nine=0\n    local consonant_pos_arr_len_minus_ten=0\n\
    \    local consonant_pos_arr_len_minus_eleven=0\n    local consonant_pos_arr_len_minus_twelve=0\n\
    \    local consonant_pos_arr_len_minus_thirteen=0\n    local consonant_pos_arr_len_minus_fourteen=0\n\
    \    local consonant_pos_arr_len_minus_fifteen=0\n    local consonant_pos_arr_len_minus_sixteen=0\n\
    \    local consonant_pos_arr_len_minus_seventeen=0\n    local consonant_pos_arr_len_minus_eighteen=0\n\
    \    local consonant_pos_arr_len_minus_nineteen=0\n    local consonant_pos_arr_len_minus_twenty=0\n\
    \    local consonant_pos_arr_len_minus_twenty_one=0\n    local consonant_pos_arr_len_minus_twenty_two=0\n\
    \    local consonant_pos_arr_len_minus_twenty_three=0\n    local\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  # your code here\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe48qkp8j.sh: line 16: syntax error near unexpected token `}''

    /tmp/tmpe48qkp8j.sh: line 16: `}''

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local current_vowel=\"\"\n    local current_vowel_index=0\n    local current_vowel_distance=0\n\
    \    local current_consonant=\"\"\n    local current_consonant_index=0\n    local\
    \ current_consonant_distance=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local length=${#word}\n    local found_vowel=0\n    local found_consonant=0\n\
    \    local found_closest_vowel=0\n    local found_closest_consonant=0\n    local\
    \ found_current_vowel=0\n    local found_current_consonant=0\n    local found_current_closest_vowel=0\n\
    \    local found_current_closest_consonant=0\n    for ((i=0; i<length; i++));\
    \ do\n        current_vowel=${word:i:1}\n        current_vowel_index=$i\n    \
    \    current_vowel_distance=$((length-i))\n        found_current_vowel=0\n   \
    \     found_current_consonant=0\n        found_current_closest_vowel=0\n     \
    \   found_current_closest_consonant=0\n        for ((j=0; j<${#vowels}; j++));\
    \ do\n            if [[ \"$current_vowel\" == \"${vowels:j:1}\" ]]; then\n   \
    \             found_current_vowel=1\n                break\n            fi\n \
    \       done\n        for ((j=0; j<${#consonants}; j++)); do\n            if [[\
    \ \"$current_vowel\" == \"${consonants:j:1}\" ]]; then\n                found_current_consonant=\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjy2uhhe8.sh: line 56: syntax error near unexpected token `}''

    /tmp/tmpjy2uhhe8.sh: line 56: `}''

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local closest_vowel=\"\"\
    \n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ vowel_distance=0\n    local vowel_index=0\n    local vowel_found=0\n    local\
    \ vowel_list=\"a e i o u A E I O U\"\n    local vowel=\"\"\n    local consonant=\"\
    \"\n    local consonant_found=0\n    local consonant_index=0\n    local consonant_distance=0\n\
    \    local consonant_list=\"b c d f g h j k l m n p q r s t v w x y z B C D F\
    \ G H J K L M N P Q R S T V W X Y Z\"\n    local consonant=\"\"\n    local is_vowel=0\n\
    \    local is_consonant=0\n    local is_vowel_found=0\n    local is_consonant_found=0\n\
    \    local is_vowel_before_consonant=0\n    local is_consonant_before_vowel=0\n\
    \    local is_vowel_after_consonant=0\n    local is_consonant_after_vowel=0\n\
    \    local is_vowel_before_consonant_found=0\n    local is_consonant_before_vowel_found=0\n\
    \    local is_vowel_after_consonant_found=0\n    local is_consonant_after_vowel_found=0\n\
    \    local is_vowel_before_consonant_distance=0\n    local is_consonant_before_vowel_distance=0\n\
    \    local is_vowel_after_consonant_distance=0\n    local is_consonant_after_vowel_distance=0\n\
    \    local is_vowel_before_consonant_index=0\n    local is_consonant_before_vowel_index=0\n\
    \    local is_vowel_after_consonant_index=0\n    local is_conson\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local last_consonant=\"\"\n    local last_vowel=\"\
    \"\n    local last_vowel_index=0\n    local last_consonant_index=0\n    local\
    \ i=0\n    local char=\"\"\n    local result=\"\"\n    for (( i=${#word}-1; i>=0;\
    \ i-- )); do\n        char=${word:$i:1}\n        if [[ $vowels =~ $char ]]; then\n\
    \            last_vowel=$char\n            last_vowel_index=$i\n        elif [[\
    \ -n $last_vowel ]]; then\n            last_consonant=$char\n            last_consonant_index=$i\n\
    \            break\n        fi\n    done\n    if [[ -n $last_vowel ]] && [[ -n\
    \ $last_consonant ]]; then\n        result=$last_vowel\n    fi\n    echo $result\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local c=0\n \
    \   local v=0\n    local vowel=''\n    local consonant=''\n    local result=''\n\
    \    local vowels=('a' 'e' 'i' 'o' 'u' 'A' 'E' 'I' 'O' 'U')\n    local consonants=('b'\
    \ 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y'\
    \ 'z' 'B' 'C' 'D' 'F' 'G' 'H' 'J' 'K' 'L' 'M' 'N' 'P' 'Q' 'R' 'S' 'T' 'V' 'W'\
    \ 'X' 'Y' 'Z')\n    for ((i=0; i<${#vowels[@]}; i++)); do\n        vowel=${vowels[$i]}\n\
    \        for ((j=0; j<${#consonants[@]}; j++)); do\n            consonant=${consonants[$j]}\n\
    \            for ((k=0; k<len; k++)); do\n                if [[ ${word:$k:1} ==\
    \ $vowel ]]; then\n                    v=$k\n                fi\n            \
    \    if [[ ${word:$k:1} == $consonant ]]; then\n                    c=$k\n   \
    \             fi\n            done\n            if [[ $v -gt $c ]]; then\n   \
    \             result=$vowel\n            fi\n        done\n    done\n    echo\
    \ $result\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local c=\"\"\n    local v=\"\"\n    local result=\"\
    \"\n    local min=0\n    local min_i=0\n    local min_v=\"\"\n    local min_c=\"\
    \"\n    local min_result=\"\"\n    local vowels=\"aeiouAEIOU\"\n    local consonants=\"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    for (( i=0; i<len; i++ )); do\n\
    \        c=${word:$i:1}\n        if [[ $vowels =~ $c ]]; then\n            v=$c\n\
    \        fi\n        if [[ $consonants =~ $c ]]; then\n            if [[ -n $v\
    \ ]]; then\n                result=\"$v\"\n                v=\"\"\n          \
    \  fi\n        fi\n        if [[ -n $result ]]; then\n            if [[ $min -eq\
    \ 0 ]]; then\n                min=$i\n                min_i=$i\n             \
    \   min_v=$v\n                min_c=$c\n                min_result=$result\n \
    \           elif [[ $i -lt $min ]]; then\n                min=$i\n           \
    \     min_i=$i\n                min_v=$v\n                min_c=$c\n         \
    \       min_result=$result\n            fi\n            result=\"\"\n        fi\n\
    \    done\n    echo $min_result\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local vowel=''\n    local c=''\n    local prev_c=''\n\
    \    local next_c=''\n    local vowel_index=0\n    local vowel_index_prev=0\n\
    \    local vowel_index_next=0\n    local vowel_index_prev_prev=0\n    local vowel_index_next_next=0\n\
    \    local vowel_index_prev_prev_prev=0\n    local vowel_index_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev=0\n    local vowel_index_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev=0\n    local vowel_index_next_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev_prev=0\n    local vowel_index_next_next_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_index_next_next_next_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_index_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_index_next_next_next_next_next_next_next_next_next=0\n    local vowel_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next_next_next_next_next_next=0\n \
    \   local vowel_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_index_prev_prev_prev_prev_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  # write your code here\n\
    \  echo \"\"\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local vowel_pos=0\n   \
    \ local vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local closest_vowel=\"\
    \"\n    local closest_vowel_pos=0\n    local closest_vowel_pos_len=0\n    local\
    \ closest_vowel_pos_arr=()\n    local closest_vowel_pos_arr_len=0\n    local closest_vowel_pos_arr_last_index=0\n\
    \    local closest_vowel_pos_arr_last_index_value=0\n    local closest_vowel_pos_arr_last_index_value_len=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_minus_one=0\n    local closest_vowel_pos_arr_last_index_value_len_minus_one_minus_one=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_minus_one_minus_one_minus_one=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_minus_one_minus_one_minus_one_minus_one=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_minus_one_minus_one_minus_one_minus_one_minus_one=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n\
    \    local closest_vowel\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local word_length=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n    local\
    \ C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n\
    \    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n \
    \   local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n  \
    \  local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n   \
    \ local X=0\n    local Y=0\n    local Z=0\n    local is_consonant=0\n    local\
    \ is_vowel=0\n    local is_previous_consonant=0\n    local is_previous_vowel=0\n\
    \    local is_next_consonant=0\n    local is_next_vowel=0\n    local is_previous_letter_consonant=0\n\
    \    local is_previous_letter_vowel=0\n    local is_next_letter_consonant=0\n\
    \    local is_next_letter_vowel=0\n    local is_previous_letter_consonant_or_vowel=0\n\
    \    local is_next_letter_consonant_or\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    # TODO: Write your code\
    \ here\n    # Remove pass and write your code\n    pass\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_42x7twe.sh: line 17: pass: command not found

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local\
    \ vowel_pos_next=0\n    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n\
    \    local vowel_pos_prev_prev_prev=0\n    local vowel_pos_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_pos_next_next_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n   \
    \ local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \   local vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local result=\"\"\n    local i=${#word}\n    while\
    \ [ $i -gt 0 ]; do\n        local char=${word:$i-1:1}\n        if [[ $vowels =~\
    \ $char ]]; then\n            result=$char\n            break\n        fi\n  \
    \      i=$((i-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local len=${#word}\n    local i\n    local j\n  \
    \  local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local result=\"\"\n \
    \   for ((i=len-1; i>=0; i--)); do\n        for ((j=0; j<${#vowels}; j++)); do\n\
    \            if [[ ${word:$i:1} == ${vowels:$j:1} ]]; then\n                if\
    \ [[ $i -eq 0 ]]; then\n                    result=\"\"\n                elif\
    \ [[ $i -eq $((len-1)) ]]; then\n                    result=\"\"\n           \
    \     else\n                    for ((k=0; k<${#vowels}; k++)); do\n         \
    \               if [[ ${word:$((i-1)):1} == ${vowels:$k:1} ]]; then\n        \
    \                    result=\"\"\n                        else\n             \
    \               for ((l=0; l<${#vowels}; l++)); do\n                         \
    \       if [[ ${word:$((i+1)):1} == ${vowels:$l:1} ]]; then\n                \
    \                    result=\"\"\n                                else\n     \
    \                               result=${word:$i:1}\n                        \
    \        fi\n                            done\n                        fi\n  \
    \                  done\n                fi\n            fi\n        done\n  \
    \  done\n    echo $result\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")\n    local vowel_len=${#vowels[@]}\n\
    \    local vowel_idx=0\n    local vowel_found=0\n    local vowel_pos=0\n    local\
    \ vowel_char=\"\"\n    local vowel_char_len=0\n    local vowel_char_idx=0\n  \
    \  local vowel_char_found=0\n    local vowel_char_pos=0\n    local vowel_char_char=\"\
    \"\n    local vowel_char_char_len=0\n    local vowel_char_char_idx=0\n    local\
    \ vowel_char_char_found=0\n    local vowel_char_char_pos=0\n    local vowel_char_char_char=\"\
    \"\n    local vowel_char_char_char_len=0\n    local vowel_char_char_char_idx=0\n\
    \    local vowel_char_char_char_found=0\n    local vowel_char_char_char_pos=0\n\
    \    local vowel_char_char_char_char=\"\"\n    local vowel_char_char_char_char_len=0\n\
    \    local vowel_char_char_char_char_idx=0\n    local vowel_char_char_char_char_found=0\n\
    \    local vowel_char_char_char_char_pos=0\n    local vowel_char_char_char_char_char=\"\
    \"\n    local vowel_char_char_char_char_char_len=0\n    local vowel_char_char_char_char_char_idx=0\n\
    \    local vowel_char_char_char_char_char_found=0\n    local vowel_char_char_char_char_char_pos=0\n\
    \    local vowel_char_char_char_char_char_char=\"\"\n    local vowel_char_char_char_char_char_char_len=0\n\
    \    local vowel_char_char_char_char_char_char_idx=0\n    local\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=\"\
    aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local found=0\n \
    \   local vowel=\"\"\n    local consonant=\"\"\n    local result=\"\"\n    local\
    \ c1=\"\"\n    local c2=\"\"\n    local c3=\"\"\n    local c4=\"\"\n    local\
    \ c5=\"\"\n    local c6=\"\"\n    local c7=\"\"\n    local c8=\"\"\n    local\
    \ c9=\"\"\n    local c10=\"\"\n    local c11=\"\"\n    local c12=\"\"\n    local\
    \ c13=\"\"\n    local c14=\"\"\n    local c15=\"\"\n    local c16=\"\"\n    local\
    \ c17=\"\"\n    local c18=\"\"\n    local c19=\"\"\n    local c20=\"\"\n    local\
    \ c21=\"\"\n    local c22=\"\"\n    local c23=\"\"\n    local c24=\"\"\n    local\
    \ c25=\"\"\n    local c26=\"\"\n    local c27=\"\"\n    local c28=\"\"\n    local\
    \ c29=\"\"\n    local c30=\"\"\n    local c31=\"\"\n    local c32=\"\"\n    local\
    \ c33=\"\"\n    local c34=\"\"\n    local c35=\"\"\n    local c36=\"\"\n    local\
    \ c37=\"\"\n    local c38=\"\"\n    local c39=\"\"\n    local c40=\"\"\n    local\
    \ c41=\"\"\n    local c42=\"\"\n    local c43=\"\"\n    local c44=\"\"\n    local\
    \ c45=\"\"\n    local c46=\"\"\n    local c47=\"\"\n    local c48=\"\"\n    local\
    \ c49=\"\"\n    local c50=\"\"\n    local c51=\"\"\n    local c52=\"\"\n    local\
    \ c53=\"\"\n    local c54=\"\"\n    local c55=\"\"\n    local c56=\"\"\n    local\
    \ c57=\"\"\n    local c58=\"\"\n    local c59=\"\"\n    local c60=\"\"\n    local\
    \ c61=\"\"\n    local c62=\"\"\n    local c63=\"\"\n    local c64=\"\"\n    local\
    \ c65=\"\"\n    local c66=\"\"\n    local c67=\"\"\n    local c68=\"\"\n    local\
    \ c69=\"\"\n    local c70=\"\"\n    local c71=\"\"\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local vowels=\"aeiouAEIOU\"\n    local i=${#word}\n    local c\n    local v\n\
    \    while [ $i -gt 0 ]; do\n        c=${word:$i-1:1}\n        if [[ \"$vowels\"\
    \ =~ $c ]]; then\n            v=$c\n        else\n            if [ -n \"$v\" ];\
    \ then\n                echo \"$v\"\n                return\n            fi\n\
    \        fi\n        i=$((i-1))\n    done\n    echo \"\"\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ length=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local vowel_index=0\n    local vowel_distance=0\n    local vowels=\"aeiouAEIOU\"\
    \n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local\
    \ char=\"\"\n    local char_index=0\n    local char_distance=0\n    local char_type=\"\
    \"\n    local char_type_index=0\n    local char_type_distance=0\n    local char_type_index_distance=0\n\
    \    local char_type_index_distance_index=0\n    local char_type_index_distance_index_distance=0\n\
    \    local char_type_index_distance_index_distance_index=0\n    local char_type_index_distance_index_distance_index_distance=0\n\
    \    local char_type_index_distance_index_distance_index_distance_index=0\n  \
    \  local char_type_index_distance_index_distance_index_distance_index_distance=0\n\
    \    local char_type_index_distance_index_distance_index_distance_index_distance_index=0\n\
    \    local char_type_index_distance_index_distance_index_distance_index_distance_index_distance=0\n\
    \    local char_type_index_distance_index_distance_index_distance_index_distance_index_distance_index=0\n\
    \    local char_type_index_distance_index_distance_index_distance_index_distance_index_distance_index_distance=0\n\
    \    local char_type_index_distance_index_distance_index_distance_index_distance_index_distance_index_distance_index=0\n\
    \    local char_type_index_distance_index_distance_index_distance_index_distance_index_distance_index_distance_index_distance=0\n\
    \    local char_type_index_distance_index_distance_index_distance_index_distance_index\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local len=${#word}\n    local i=0\n    local vowel=\"\"\n    local vowel_index=0\n\
    \    local consonant_index=0\n    local consonant_index_prev=0\n    local vowel_index_prev=0\n\
    \    local consonant_index_next=0\n    local vowel_index_next=0\n    local vowel_index_prev_prev=0\n\
    \    local consonant_index_prev_prev=0\n    local vowel_index_next_next=0\n  \
    \  local consonant_index_next_next=0\n    local vowel_index_prev_prev_prev=0\n\
    \    local consonant_index_prev_prev_prev=0\n    local vowel_index_next_next_next=0\n\
    \    local consonant_index_next_next_next=0\n    local vowel_index_prev_prev_prev_prev=0\n\
    \    local consonant_index_prev_prev_prev_prev=0\n    local vowel_index_next_next_next_next=0\n\
    \    local consonant_index_next_next_next_next=0\n    local vowel_index_prev_prev_prev_prev_prev=0\n\
    \    local consonant_index_prev_prev_prev_prev_prev=0\n    local vowel_index_next_next_next_next_next=0\n\
    \    local consonant_index_next_next_next_next_next=0\n    local vowel_index_prev_prev_prev_prev_prev_prev=0\n\
    \    local consonant_index_prev_prev_prev_prev_prev_prev=0\n    local vowel_index_next_next_next_next_next_next=0\n\
    \    local consonant_index_next_next_next_next_next_next=0\n    local vowel_index_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local consonant_index_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_index_next_next_next_next_next_next_next=0\n\
    \    local consonant_index_next_next_next_next_next_next_next=0\n    local vowel_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local\
    \ last_consonant=\"\"\n    local last_vowel=\"\"\n    local last_char=\"\"\n \
    \   local i=${#word}\n    local result=\"\"\n    while [ $i -gt 0 ]; do\n    \
    \    last_char=${word:$i-1:1}\n        if [[ $vowels =~ $last_char ]]; then\n\
    \            last_vowel=$last_char\n        elif [[ $consonants =~ $last_char\
    \ ]]; then\n            last_consonant=$last_char\n            if [ -n \"$last_vowel\"\
    \ ]; then\n                result=$last_vowel\n                break\n       \
    \     fi\n        fi\n        i=$((i-1))\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local vowels=\"aeiouAEIOU\"\n    local last_consonant=\"\"\n    local last_vowel=\"\
    \"\n    local last_vowel_index=0\n    local last_consonant_index=0\n    local\
    \ last_consonant_index_temp=0\n    local last_vowel_index_temp=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local result=\"\"\n    local temp=\"\"\n    local\
    \ temp_index=0\n    local temp_index_temp=0\n    local temp_index_temp_temp=0\n\
    \    local temp_index_temp_temp_temp=0\n    local temp_index_temp_temp_temp_temp=0\n\
    \    local temp_index_temp_temp_temp_temp_temp=0\n    local temp_index_temp_temp_temp_temp_temp_temp=0\n\
    \    local temp_index_temp_temp_temp_temp_temp_temp_temp=0\n    local temp_index_temp_temp_temp_temp_temp_temp_temp_temp=0\n\
    \    local temp_index_temp_temp_temp_temp_temp_temp_temp_temp_temp=0\n    local\
    \ temp_index_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp=0\n    local temp_index_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp=0\n\
    \    local temp_index_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp=0\n\
    \    local temp_index_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp=0\n\
    \    local temp_index_temp_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n\
    \    local current_vowel_index=0\n    local current_consonant_index=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local A=0\n    local B=0\n    local C=0\n   \
    \ local D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n    local\
    \ I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n    local N=0\n\
    \    local O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n \
    \   local T=0\n    local U=0\n    local V=0\n    local W=0\n    local X=0\n  \
    \  local Y=0\n    local Z=0\n    for (( i=0; i<${#word}; i++ )); do\n        for\
    \ (( j=0; j<${#vowels}; j++ )); do\n            if [[ ${word:$i:1} == ${vowels:$j:1}\
    \ ]]; then\n                current_vowel_index=$i\n                break\n  \
    \          fi\n        done\n        if [[ $current_vowel_index -gt 0 ]]; then\n\
    \            for (( k=0; k<${#consonants}; k++ )); do\n                if [[ ${word:$i:1}\
    \ == ${conson\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptwj1pru2.sh: line 76: syntax error in conditional expression

    /tmp/tmptwj1pru2.sh: line 79: syntax error near `candidate(''

    /tmp/tmptwj1pru2.sh: line 79: `candidate() {''

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  # your code here\n  echo\
    \ $1 | grep -o '[^aeiou]\\([aeiou]\\)[^aeiou]' | cut -c 2\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\
    \"\n    local consonant=\"\"\n    local ret=\"\"\n    local flag=0\n    local\
    \ flag2=0\n    local flag3=0\n    local flag4=0\n    local flag5=0\n    local\
    \ flag6=0\n    local flag7=0\n    local flag8=0\n    local flag9=0\n    local\
    \ flag10=0\n    local flag11=0\n    local flag12=0\n    local flag13=0\n    local\
    \ flag14=0\n    local flag15=0\n    local flag16=0\n    local flag17=0\n    local\
    \ flag18=0\n    local flag19=0\n    local flag20=0\n    local flag21=0\n    local\
    \ flag22=0\n    local flag23=0\n    local flag24=0\n    local flag25=0\n    local\
    \ flag26=0\n    local flag27=0\n    local flag28=0\n    local flag29=0\n    local\
    \ flag30=0\n    local flag31=0\n    local flag32=0\n    local flag33=0\n    local\
    \ flag34=0\n    local flag35=0\n    local flag36=0\n    local flag37=0\n    local\
    \ flag38=0\n    local flag39=0\n    local flag40=0\n    local flag41=0\n    local\
    \ flag42=0\n    local flag43=0\n    local flag44=0\n    local flag45=0\n    local\
    \ flag46=0\n    local flag47=0\n    local flag48=0\n    local flag49=0\n    local\
    \ flag50=0\n    local flag51=0\n    local flag52=0\n    local flag53=0\n    local\
    \ flag54=0\n    local flag55=0\n    local flag56=0\n    local flag57=0\n    local\
    \ flag58=0\n    local flag59=0\n    local flag60=0\n    local flag61=0\n    local\
    \ flag62=0\n    local flag63=0\n    local flag64=0\n    local flag65=0\n    local\
    \ flag66=0\n   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local\
    \ result=\"\"\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n   \n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local vowels=\"aeiouAEIOU\"\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=''\n    local consonant=''\n\
    \    local closest_vowel=''\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest_consonant_index\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local len=${#word}\n    local i\n    local j\n  \
    \  local c\n    local v\n    local found=0\n    local result=\"\"\n    for ((i=$len-1;\
    \ i>=0; i--)); do\n        c=${word:$i:1}\n        if [[ $vowels =~ $c ]]; then\n\
    \            for ((j=$i-1; j>=0; j--)); do\n                v=${word:$j:1}\n \
    \               if [[ $vowels =~ $v ]]; then\n                    break\n    \
    \            fi\n                if [[ $j -eq 0 ]]; then\n                   \
    \ result=$c\n                    found=1\n                    break\n        \
    \        fi\n            done\n        fi\n        if [[ $found -eq 1 ]]; then\n\
    \            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local vowels=\"aeiou\"\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local vowel\n    local vowel_index\n\
    \    local vowel_index_prev\n    local vowel_index_next\n    local vowel_index_prev_prev\n\
    \    local vowel_index_next_next\n    local vowel_index_prev_prev_prev\n    local\
    \ vowel_index_next_next_next\n    local vowel_index_prev_prev_prev_prev\n    local\
    \ vowel_index_next_next_next_next\n    local vowel_index_prev_prev_prev_prev_prev\n\
    \    local vowel_index_next_next_next_next_next\n    local vowel_index_prev_prev_prev_prev_prev_prev\n\
    \    local vowel_index_next_next_next_next_next_next\n    local vowel_index_prev_prev_prev_prev_prev_prev_prev\n\
    \    local vowel_index_next_next_next_next_next_next_next\n    local vowel_index_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local vowel_index_next_next_next_next_next_next_next_next\n    local vowel_index_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local vowel_index_next_next_next_next_next_next_next_next_next\n    local\
    \ vowel_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local vowel_index_next_next_next_next_next_next_next_next_next_next\n\
    \    local vowel_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local vowel_index_next_next_next_next_next_next_next_next_next_next_next\n\
    \    local vowel_index_prev_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local result=\"\"\n    local i=${#word}\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n   \
    \ local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n   \
    \ local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n   \
    \ local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local\
    \ j=0\n    local k=\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local result=\"\"\n    local vowels=\"aeiouAEIOU\"\n   \
    \ local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    local vowel_index=0\n\
    \    local consonant_index=0\n    local vowel_distance=0\n    local consonant_distance=0\n\
    \    local distance=0\n    local min_distance=0\n    local min_vowel_index=0\n\
    \    local min_consonant_index=0\n    local min_vowel=\"\"\n    local min_consonant=\"\
    \"\n    local min_vowel_distance=0\n    local min_consonant_distance=0\n    local\
    \ min_distance=0\n    local min_vowel_index=0\n    local min_consonant_index=0\n\
    \    local min_vowel=\"\"\n    local min_consonant=\"\"\n    local min_vowel_distance=0\n\
    \    local min_consonant_distance=0\n    local min_distance=0\n    local min_vowel_index=0\n\
    \    local min_consonant_index=0\n    local min_vowel=\"\"\n    local min_consonant=\"\
    \"\n    local min_vowel_distance=0\n    local min_consonant_distance=0\n    local\
    \ min_distance=0\n    local min_vowel_index=0\n    local min_consonant_index=0\n\
    \    local min_vowel=\"\"\n    local min_consonant=\"\"\n    local min_vowel_distance=0\n\
    \    local min_consonant_distance=0\n    local min_distance=0\n    local min_vowel_index=0\n\
    \    local min_consonant_index=0\n    local min_vowel=\"\"\n    local min_consonant=\"\
    \"\n    local min_vowel_distance=0\n    local min_consonant_distance=0\n    local\
    \ min_distance=0\n    local min\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowel=''\n\
    \    local consonant=''\n    local is_vowel=0\n    local is_consonant=0\n    local\
    \ is_first_consonant=0\n    local is_second_consonant=0\n    local is_first_vowel=0\n\
    \    local is_second_vowel=0\n    local first_vowel=''\n    local second_vowel=''\n\
    \    local first_consonant=''\n    local second_consonant=''\n    local first_vowel_index=0\n\
    \    local second_vowel_index=0\n    local first_consonant_index=0\n    local\
    \ second_consonant_index=0\n    local vowel_index=0\n    local consonant_index=0\n\
    \    local vowel_distance=0\n    local consonant_distance=0\n    local distance=0\n\
    \    local result=''\n    local vowels=('a' 'e' 'i' 'o' 'u' 'A' 'E' 'I' 'O' 'U')\n\
    \    local consonants=('b' 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r'\
    \ 's' 't' 'v' 'w' 'x' 'y' 'z' 'B' 'C' 'D' 'F' 'G' 'H' 'J' 'K' 'L' 'M' 'N' 'P'\
    \ 'Q' 'R' 'S' 'T' 'V' 'W' 'X' 'Y' 'Z')\n    for ((i=0; i<len; i++)); do\n    \
    \    vowel=${word:$i:1}\n        for ((j=0; j<${#vowels[@]}; j++)); do\n     \
    \       if [[ $vowel == ${vowels[$j]} ]]; then\n                is_vowel=1\n \
    \               break\n            fi\n        done\n        if [[ $is_\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv032spq.sh: line 52: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpkv032spq.sh: line 52: syntax error near `$is_''

    /tmp/tmpkv032spq.sh: line 52: `        if [[ $is_''

    '
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local found=0\n    local vowel=\"\"\n    local\
    \ c1=\"\"\n    local c2=\"\"\n    local c3=\"\"\n    local c4=\"\"\n    local\
    \ c5=\"\"\n    local c6=\"\"\n    local c7=\"\"\n    local c8=\"\"\n    local\
    \ c9=\"\"\n    local c10=\"\"\n    local c11=\"\"\n    local c12=\"\"\n    local\
    \ c13=\"\"\n    local c14=\"\"\n    local c15=\"\"\n    local c16=\"\"\n    local\
    \ c17=\"\"\n    local c18=\"\"\n    local c19=\"\"\n    local c20=\"\"\n    local\
    \ c21=\"\"\n    local c22=\"\"\n    local c23=\"\"\n    local c24=\"\"\n    local\
    \ c25=\"\"\n    local c26=\"\"\n    local c27=\"\"\n    local c28=\"\"\n    local\
    \ c29=\"\"\n    local c30=\"\"\n    local c31=\"\"\n    local c32=\"\"\n    local\
    \ c33=\"\"\n    local c34=\"\"\n    local c35=\"\"\n    local c36=\"\"\n    local\
    \ c37=\"\"\n    local c38=\"\"\n    local c39=\"\"\n    local c40=\"\"\n    local\
    \ c41=\"\"\n    local c42=\"\"\n    local c43=\"\"\n    local c44=\"\"\n    local\
    \ c45=\"\"\n    local c46=\"\"\n    local c47=\"\"\n    local c48=\"\"\n    local\
    \ c49=\"\"\n    local c50=\"\"\n    local c51=\"\"\n    local c52=\"\"\n    local\
    \ c53=\"\"\n    local c54=\"\"\n    local c55=\"\"\n    local c56=\"\"\n    local\
    \ c57=\"\"\n    local c58=\"\"\n    local c59=\"\"\n    local c60=\"\"\n    local\
    \ c61=\"\"\n    local c62=\"\"\n    local c63=\"\"\n    local c64=\"\"\n    local\
    \ c65=\"\"\n    local c66=\"\"\n    local c67=\"\"\n    local c68=\"\"\n    local\
    \ c69=\"\"\n    local c70=\"\"\n    local c71=\"\"\n    local c72=\"\"\n    local\
    \ c73=\"\"\n    local c74=\"\"\n    local c75=\"\"\n    local c76=\"\"\n    local\
    \ c77=\"\"\n    local c78=\"\"\n    local c79=\"\"\n    local c80=\"\"\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ length=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")\n    local consonants=(\"\
    b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"\
    r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"z\" \"B\" \"C\" \"D\" \"F\" \"G\" \"\
    H\" \"J\" \"K\" \"L\" \"M\" \"N\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"V\" \"W\" \"\
    X\" \"Y\" \"Z\")\n    local vowel_index=0\n    local consonant_index=0\n    local\
    \ vowel_count=0\n    local consonant_count=0\n    local vowel_index_array=()\n\
    \    local consonant_index_array=()\n    local vowel_count_array=()\n    local\
    \ consonant_count_array=()\n    local vowel_index_array_length=0\n    local consonant_index_array_length=0\n\
    \    local vowel_count_array_length=0\n    local consonant_count_array_length=0\n\
    \    local vowel_index_array_length_max=0\n    local consonant_index_array_length_max=0\n\
    \    local vowel_count_array_length_max=0\n    local consonant_count_array_length_max=0\n\
    \    local vowel_index_array_length_max_index=0\n    local consonant_index_array_length_max_index=0\n\
    \    local vowel_count_array_length_max_index=0\n    local consonant_count_array_length_max_index=0\n\
    \    local vowel_index_array_length_max_index_value=0\n    local consonant_index_array_length_max_index_value=0\n\
    \    local vowel_count_array_length_max_index_value=0\n    local consonant_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowels=\"aeiouAEIOU\"\n\
    \    local found=0\n    local result=\"\"\n    for ((i=len-1; i>=0; i--)); do\n\
    \        for ((j=0; j<${#vowels}; j++)); do\n            if [[ ${word:$i:1} ==\
    \ ${vowels:$j:1} ]]; then\n                found=1\n                break\n  \
    \          fi\n        done\n        if [[ $found == 1 ]]; then\n            result=${word:$i:1}\n\
    \            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local c=0\n    local v=0\n \
    \   local result=\"\"\n    local vowels=\"aeiou\"\n    for (( i=len-1; i>=0; i--\
    \ )); do\n        c=${word:$i:1}\n        for (( j=0; j<${#vowels}; j++ )); do\n\
    \            v=${vowels:$j:1}\n            if [[ $c == $v ]]; then\n         \
    \       result=$c\n                break\n            fi\n        done\n     \
    \   if [[ $result != \"\" ]]; then\n            break\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local result=\"\"\n    local last_consonant=\"\"\n    local first_consonant=\"\
    \"\n    local vowel=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n  \
    \  local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n   \
    \ local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n    local\
    \ L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n\
    \    local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n \
    \   local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local length=${#word}\n\
    \   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local vowel_pos=0\n  local vowel_pos_arr=()\n  local\
    \ vowel_pos_arr_len=0\n  local closest_vowel_pos=0\n  local closest_vowel_pos_arr=()\n\
    \  local closest_vowel_pos_arr_len=0\n  local closest_vowel_pos_arr_len_half=0\n\
    \  local closest_vowel_pos_arr_len_half_floor=0\n  local closest_vowel_pos_arr_len_half_ceil=0\n\
    \  local closest_vowel_pos_arr_len_half_floor_diff=0\n  local closest_vowel_pos_arr_len_half_ceil_diff=0\n\
    \  local closest_vowel_pos_arr_len_half_floor_diff_abs=0\n  local closest_vowel_pos_arr_len_half_ceil_diff_abs=0\n\
    \  local closest_vowel_pos_arr_len_half_floor_diff_abs_min=0\n  local closest_vowel_pos_arr_len_half_ceil_diff_abs_min=0\n\
    \  local closest_vowel_pos_arr_len_half_floor_diff_abs_min_pos=0\n  local closest_vowel_pos_arr_len_half_ceil_diff_abs_min_pos=0\n\
    \  local closest_vowel_pos_arr_len_half_floor_diff_abs_min_pos_arr=()\n  local\
    \ closest_vowel_pos_arr_len_half_ceil_diff_abs_min_pos_arr=()\n  local closest_vowel_pos_arr_len_half_floor_diff_abs_min_pos_arr_len=0\n\
    \  local closest_vowel_pos_arr_len_half_ceil_diff_abs_min_pos_arr_len=0\n  local\
    \ closest_vowel_pos_arr_len_half_floor_diff_abs\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiou\"\n    local len=${#word}\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local c=0\n    local v=0\n    local closest_vowel=\"\"\n    local\
    \ closest_vowel_index=0\n    local closest_vowel_distance=0\n    local current_vowel_index=0\n\
    \    local current_vowel_distance=0\n    local current_vowel=\"\"\n    local current_char=\"\
    \"\n    local current_char_is_vowel=0\n    local current_char_is_consonant=0\n\
    \    local previous_char=\"\"\n    local previous_char_is_vowel=0\n    local previous_char_is_consonant=0\n\
    \    local next_char=\"\"\n    local next_char_is_vowel=0\n    local next_char_is_consonant=0\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_first_char=0\n \
    \   local is_last_char=0\n    local is_first_char_vowel=0\n    local is_last_char_vowel=0\n\
    \    local is_first_char_consonant=0\n    local is_last_char_consonant=0\n   \
    \ local is_first_char_vowel_or_consonant=0\n    local is_last_char_vowel_or_consonant=0\n\
    \    local is_first_char_vowel_and_consonant=0\n    local is_last_char_vowel_and_consonant=0\n\
    \    local is_first_char_vowel_or_consonant_and_last_char_vowel_or_consonant=0\n\
    \    local is_first_char_vowel_or_consonant_and_last_char_vowel_or_consonant_and_first_char_vowel_and_consonant=0\n\
    \    local is_first_char_vowel_or_consonant_and_last\n}\n\ncandidate() {\n   \
    \ get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\"\
    ) = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\"\
    ) = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\"\
    ) = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\"\
    ) = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\"\
    ) = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local vowel_idx=0\n   \
    \ local vowel_idx_prev=0\n    local vowel_idx_next=0\n    local vowel_idx_prev_len=0\n\
    \    local vowel_idx_next_len=0\n    local vowel_idx_prev_len_prev=0\n    local\
    \ vowel_idx_next_len_next=0\n    local vowel_idx_prev_len_prev_prev=0\n    local\
    \ vowel_idx_next_len_next_next=0\n    local vowel_idx_prev_len_prev_prev_prev=0\n\
    \    local vowel_idx_next_len_next_next_next=0\n    local vowel_idx_prev_len_prev_prev_prev_prev=0\n\
    \    local vowel_idx_next_len_next_next_next_next=0\n    local vowel_idx_prev_len_prev_prev_prev_prev_prev=0\n\
    \    local vowel_idx_next_len_next_next_next_next_next=0\n    local vowel_idx_prev_len_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_idx_next_len_next_next_next_next_next_next=0\n    local vowel_idx_prev_len_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_idx_next_len_next_next_next_next_next_next_next=0\n    local\
    \ vowel_idx_prev_len_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_idx_next_len_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_idx_prev_len_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_idx_next_len_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_idx_prev_len_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local str=$1\n    local\
    \ len=${#str}\n    local i=0\n    local j=0\n    local vowels=\"aeiou\"\n    local\
    \ vowel=\"\"\n    local found=0\n    local found_vowel=\"\"\n    local found_vowel_index=0\n\
    \    local found_vowel_distance=0\n    local distance=0\n    local min_distance=0\n\
    \    local min_vowel=\"\"\n    local min_vowel_index=0\n    local min_vowel_distance=0\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_first_vowel=0\n\
    \    local is_first_consonant=0\n    local is_second_vowel=0\n    local is_second_consonant=0\n\
    \    local is_third_vowel=0\n    local is_third_consonant=0\n    local is_fourth_vowel=0\n\
    \    local is_fourth_consonant=0\n    local is_fifth_vowel=0\n    local is_fifth_consonant=0\n\
    \    local is_sixth_vowel=0\n    local is_sixth_consonant=0\n    local is_seventh_vowel=0\n\
    \    local is_seventh_consonant=0\n    local is_eighth_vowel=0\n    local is_eighth_consonant=0\n\
    \    local is_ninth_vowel=0\n    local is_ninth_consonant=0\n    local is_tenth_vowel=0\n\
    \    local is_tenth_consonant=0\n    local is_eleventh_vowel=0\n    local is_eleventh_consonant=0\n\
    \    local is_twelfth_vowel=0\n    local is_twelfth_consonant=0\n    local is_thirteenth_vowel=0\n\
    \    local is_thirteenth_consonant=0\n    local is_fourteenth_vowel=0\n    local\
    \ is_fourteenth_consonant=0\n    local is_fifteenth_\n}\n\ncandidate() {\n   \
    \ get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\"\
    ) = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\"\
    ) = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\"\
    ) = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\"\
    ) = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\"\
    ) = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowels=\"aeiou\"\n   \
    \ local vowel_index=0\n    local consonant_index=0\n    local vowel_count=0\n\
    \    local consonant_count=0\n    local vowel_pos=0\n    local consonant_pos=0\n\
    \    local vowel_char=\"\"\n    local consonant_char=\"\"\n    local result=\"\
    \"\n    local vowel_found=0\n    local consonant_found=0\n    local vowel_pos_found=0\n\
    \    local consonant_pos_found=0\n    local vowel_char_found=\"\"\n    local consonant_char_found=\"\
    \"\n    local result_found=\"\"\n    local vowel_pos_found_prev=0\n    local consonant_pos_found_prev=0\n\
    \    local vowel_char_found_prev=\"\"\n    local consonant_char_found_prev=\"\"\
    \n    local result_found_prev=\"\"\n    local vowel_pos_found_prev_prev=0\n  \
    \  local consonant_pos_found_prev_prev=0\n    local vowel_char_found_prev_prev=\"\
    \"\n    local consonant_char_found_prev_prev=\"\"\n    local result_found_prev_prev=\"\
    \"\n    local vowel_pos_found_prev_prev_prev=0\n    local consonant_pos_found_prev_prev_prev=0\n\
    \    local vowel_char_found_prev_prev_prev=\"\"\n    local consonant_char_found_prev_prev_prev=\"\
    \"\n    local result_found_prev_prev_prev=\"\"\n    local vowel_pos_found_prev_prev_prev_prev=0\n\
    \    local consonant_pos_found_prev_prev_prev_prev=0\n    local vowel_char_found_prev_prev_prev_prev=\"\
    \"\n    local consonant_char_found_prev_prev_prev_prev=\"\"\n    local result_found_prev_prev_prev_prev=\"\
    \"\n    local vowel_pos_found_prev_prev_prev_prev_prev=0\n    local consonant_pos_found_prev_prev_prev_prev_prev=0\n\
    \    local vowel_char_found_prev_\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n\
    \    local vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_len_half=0\n\
    \    local vowel_pos_arr_len_half_floor=0\n    local vowel_pos_arr_len_half_ceil=0\n\
    \    local vowel_pos_arr_len_half_floor_value=0\n    local vowel_pos_arr_len_half_ceil_value=0\n\
    \    local vowel_pos_arr_len_half_floor_diff=0\n    local vowel_pos_arr_len_half_ceil_diff=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs=0\n    local vowel_pos_arr_len_half_ceil_diff_abs=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min=0\n    local vowel_pos_arr_len_half_ceil_diff_abs_min=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_index=0\n    local vowel_pos_arr_len_half_ceil_diff_abs_min_index=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_value=0\n    local vowel_pos_arr_len_half_ceil_diff_abs_min_value=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_value_index=0\n    local\
    \ vowel_pos_arr_len_half_ceil_diff_abs_min_value_index=0\n    local vowel_pos_arr_len_half_floor_diff_abs_min_value_index_value=0\n\
    \    local vowel_pos_arr_len_half_ceil_diff_abs_min_value_index_value=0\n    local\
    \ vowel_pos_arr_len_half_floor_diff_abs_min_value_index_value_len=0\n   \n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local vowel_pos=0\n   \
    \ local vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_idx=0\n\
    \    local vowel_pos_arr_idx_prev=0\n    local vowel_pos_arr_idx_next=0\n    local\
    \ vowel_pos_arr_idx_prev_diff=0\n    local vowel_pos_arr_idx_next_diff=0\n   \
    \ local vowel_pos_arr_idx_prev_diff_min=0\n    local vowel_pos_arr_idx_next_diff_min=0\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx=0\n    local vowel_pos_arr_idx_next_diff_min_idx=0\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx_arr=()\n    local vowel_pos_arr_idx_next_diff_min_idx_arr=()\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx_arr_len=0\n    local vowel_pos_arr_idx_next_diff_min_idx_arr_len=0\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx_arr_idx=0\n    local vowel_pos_arr_idx_next_diff_min_idx_arr_idx=0\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx_arr_idx_prev=0\n    local vowel_pos_arr_idx_next_diff_min_idx_arr_idx_prev=0\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx_arr_idx_next=0\n    local vowel_pos_arr_idx_next_diff_min_idx_arr_idx_next=0\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx_arr_id\n}\n\ncandidate() {\n  \
    \  get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n\
    \    local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=\"\"\n    local closest_consonant_index=0\n\
    \    local closest_consonant_index=0\n    local closest_consonant=\"\"\n    local\
    \ closest_consonant_index=0\n    local closest_consonant_index=0\n    local closest_consonant=\"\
    \"\n    local closest_consonant_index=0\n    local closest_consonant_index=0\n\
    \    local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=\"\"\n    local closest_consonant_index=0\n\
    \    local closest_consonant_index=0\n    local closest_consonant=\"\"\n    local\
    \ closest_consonant_index=0\n    local closest_consonant_index=0\n    local closest_consonant=\"\
    \"\n    local closest_consonant_index=0\n    local closest_consonant_index=0\n\
    \    local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=\"\"\n    local closest_consonant_index=0\n\
    \    local closest_consonant_index=0\n    local closest_consonant=\"\"\n    local\
    \ closest_consonant_index=0\n    local closest_consonant_index=0\n    local closest_consonant=\"\
    \"\n    local closest_consonant_index=0\n    local closest_consonant_index=0\n\
    \    local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ closest_consonant_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local last_char=${word: -1}\n    local first_char=${word:0:1}\n    local\
    \ result=\"\"\n    if [[ $vowels =~ $last_char ]]; then\n        result=$last_char\n\
    \    elif [[ $vowels =~ $first_char ]]; then\n        result=$first_char\n   \
    \ else\n        for (( i=${#word}-1; i>0; i-- )); do\n            local char=${word:$i:1}\n\
    \            if [[ $vowels =~ $char ]]; then\n                local prev_char=${word:$i-1:1}\n\
    \                local next_char=${word:$i+1:1}\n                if [[ $consonants\
    \ =~ $prev_char && $consonants =~ $next_char ]]; then\n                    result=$char\n\
    \                    break\n                fi\n            fi\n        done\n\
    \    fi\n    echo $result\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local result=\"\"\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")\n    local consonants=(\"\
    b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"\
    r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"z\" \"B\" \"C\" \"D\" \"F\" \"G\" \"\
    H\" \"J\" \"K\" \"L\" \"M\" \"N\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"V\" \"W\" \"\
    X\" \"Y\" \"Z\")\n    local vowel_index=0\n    local consonant_index=0\n    local\
    \ vowel_index_array=()\n    local consonant_index_array=()\n    local vowel_index_array_len=0\n\
    \    local consonant_index_array_len=0\n    local vowel_index_array_last_index=0\n\
    \    local consonant_index_array_last_index=0\n    local vowel_index_array_last_value=0\n\
    \    local consonant_index_array_last_value=0\n    local vowel_index_array_first_value=0\n\
    \    local consonant_index_array_first_value=0\n    local vowel_index_array_first_index=0\n\
    \    local consonant_index_array_first_index=0\n    local vowel_index_array_first_value_plus_one=0\n\
    \    local consonant_index_array_first_value_plus_one=0\n    local vowel_index_array_last_value_minus_one=0\n\
    \    local consonant_index_array_last_value_minus_one=0\n    local vowel_index_array_first_value_plus_one_minus_one=0\n\
    \    local consonant_index_array_first_value_plus_one_minus_one=0\n    local vowel_index_array_last_value_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local i=${#word}\n    local j\n    local k\n    local l\n    local m\n \
    \   local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local j=0\n  local vowel=\"\"\n  local consonant=\"\"\n  local\
    \ result=\"\"\n  local vowels=\"aeiouAEIOU\"\n  local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n  local vowel_pos=0\n  local consonant_pos=0\n  local min_distance=0\n  local\
    \ distance=0\n  local min_vowel=\"\"\n  local min_consonant=\"\"\n  local min_vowel_pos=0\n\
    \  local min_consonant_pos=0\n  local min_distance=0\n  local distance=0\n  local\
    \ min_vowel=\"\"\n  local min_consonant=\"\"\n  local min_vowel_pos=0\n  local\
    \ min_consonant_pos=0\n  for ((i=0; i<len; i++)); do\n    vowel=${word:$i:1}\n\
    \    if [[ $vowels =~ $vowel ]]; then\n      vowel_pos=$i\n      for ((j=i+1;\
    \ j<len; j++)); do\n        consonant=${word:$j:1}\n        if [[ $consonants\
    \ =~ $consonant ]]; then\n          consonant_pos=$j\n          distance=$((consonant_pos-vowel_pos))\n\
    \          if [[ $min_distance -eq 0 ]]; then\n            min_distance=$distance\n\
    \            min_vowel=$vowel\n            min_consonant=$consonant\n        \
    \    min_vowel_pos=$vowel_pos\n            min_consonant_pos=$consonant_pos\n\
    \          else\n            if [[ $distance -lt $min_distance ]]; then\n    \
    \          min_distance=$distance\n              min_vowel=$vowel\n          \
    \    min_consonant=$consonant\n              min_vowel_pos=$vowel_pos\n      \
    \        min_consonant_pos=$consonant_pos\n            fi\n          fi\n    \
    \    fi\n      done\n    fi\n  done\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_length=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ vowel_index=0\n    local vowel_found=0\n    local vowel_char=\"\"\n    local\
    \ char=\"\"\n    local char_next=\"\"\n    local char_prev=\"\"\n    local vowels=\"\
    aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local vowel_indexes=()\n    local consonant_indexes=()\n    local vowel_index_length=0\n\
    \    local consonant_index_length=0\n    local closest_vowel_index=0\n    local\
    \ closest_vowel_char=\"\"\n    local closest_vowel_distance=0\n    local distance=0\n\
    \    local distance_prev=0\n    local distance_next=0\n    local distance_prev_prev=0\n\
    \    local distance_next_next=0\n    local distance_prev_prev_prev=0\n    local\
    \ distance_next_next_next=0\n    local distance_prev_prev_prev_prev=0\n    local\
    \ distance_next_next_next_next=0\n    local distance_prev_prev_prev_prev_prev=0\n\
    \    local distance_next_next_next_next_next=0\n    local distance_prev_prev_prev_prev_prev_prev=0\n\
    \    local distance_next_next_next_next_next_next=0\n    local distance_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local distance_next_next_next_next_next_next_next=0\n    local distance_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local distance_next_next_next_next_next_next_next_next=0\n    local distance_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local distance_next_next_next_next_next_next_next_next_next=0\n    local\
    \ distance_prev_prev_prev_prev_prev_prev_prev_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiou\"\n  local consonants=\"bcdfghjklmnpqrstvwxyz\"\n  local i=${#word}\n  local\
    \ last_char=${word:$i-1:1}\n  local second_last_char=${word:$i-2:1}\n  local vowel=\"\
    \"\n  local closest_vowel=\"\"\n  local closest_vowel_index=0\n  local closest_vowel_distance=0\n\
    \  local vowel_index=0\n  local vowel_distance=0\n  local vowel_found=0\n  local\
    \ consonant_found=0\n  local vowel_found_first=0\n  local consonant_found_first=0\n\
    \  local vowel_found_last=0\n  local consonant_found_last=0\n  local vowel_found_second_last=0\n\
    \  local consonant_found_second_last=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n\
    \  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n\
    \  local c=0\n  local d=0\n  local e=0\n  local f\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local vowels=\"aeiouAEIOU\"\n    local last_vowel=\"\"\n    local last_consonant=\"\
    \"\n    local i=${#word}\n    while [ $i -gt 0 ]; do\n        local char=${word:$i-1:1}\n\
    \        if [[ $vowels =~ $char ]]; then\n            last_vowel=$char\n     \
    \   else\n            last_consonant=$char\n        fi\n        if [ \"$last_vowel\"\
    \ != \"\" ] && [ \"$last_consonant\" != \"\" ]; then\n            echo $last_vowel\n\
    \            return\n        fi\n        i=$((i-1))\n    done\n    echo \"\"\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local result=\"\"\n    local vowels=\"aeiou\"\n    local\
    \ consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local found=0\n    for ((i=len-1;\
    \ i>=0; i--)); do\n        for ((j=0; j<${#consonants}; j++)); do\n          \
    \  if [[ ${word:$i:1} == ${consonants:$j:1} ]]; then\n                consonant=${word:$i:1}\n\
    \                break\n            fi\n        done\n        if [[ -n $consonant\
    \ ]]; then\n            for ((j=0; j<${#vowels}; j++)); do\n                if\
    \ [[ ${word:$i-1:1} == ${vowels:$j:1} ]]; then\n                    vowel=${word:$i-1:1}\n\
    \                    break\n                fi\n            done\n           \
    \ if [[ -n $vowel ]]; then\n                result=$vowel\n                found=1\n\
    \                break\n            fi\n        fi\n    done\n    if [[ $found\
    \ -eq 0 ]]; then\n        result=\"\"\n    fi\n    echo $result\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local vowel_pos=0\n   \
    \ local vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_last_index=0\n\
    \    local vowel_pos_arr_last_index_value=0\n    local vowel_pos_arr_last_index_value_prev=0\n\
    \    local vowel_pos_arr_last_index_value_next=0\n    local vowel_pos_arr_last_index_value_prev_diff=0\n\
    \    local vowel_pos_arr_last_index_value_next_diff=0\n    local vowel_pos_arr_last_index_value_prev_diff_abs=0\n\
    \    local vowel_pos_arr_last_index_value_next_diff_abs=0\n    local vowel_pos_arr_last_index_value_prev_diff_abs_min=0\n\
    \    local vowel_pos_arr_last_index_value_next_diff_abs_min=0\n    local vowel_pos_arr_last_index_value_prev_diff_abs_min_index=0\n\
    \    local vowel_pos_arr_last_index_value_next_diff_abs_min_index=0\n    local\
    \ vowel_pos_arr_last_index_value_prev_diff_abs_min_index_value=0\n    local vowel_pos_arr_last_index_value_next_diff_abs_min_index_value=0\n\
    \    local vowel_pos_arr_last_index_value_prev_diff_abs_min_index_value_prev=0\n\
    \    local vowel_pos_arr_last_index_value_next_diff_abs_min_index_value_next=0\n\
    \    local vowel_pos_arr_last_index_value_prev_diff_abs_min_index_value_prev_diff=0\n\
    \    local vowel_pos_arr_last_index_value_next_diff_abs_min_index_value_next_diff=0\n\
    \    local vowel_pos_arr_last_index_value_prev_diff_abs_min_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\
    \"\n    local consonant=\"\"\n    local result=\"\"\n    local vowels=\"aeiouAEIOU\"\
    \n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    for\
    \ (( i=0; i<len; i++ )); do\n        for (( j=0; j<${#vowels}; j++ )); do\n  \
    \          vowel=${vowels:$j:1}\n            if [[ ${word:$i:1} == $vowel ]];\
    \ then\n                for (( k=0; k<${#consonants}; k++ )); do\n           \
    \         consonant=${consonants:$k:1}\n                    if [[ ${word:$((i-1)):1}\
    \ == $consonant ]]; then\n                        result=$vowel\n            \
    \            break\n                    fi\n                done\n           \
    \ fi\n        done\n    done\n    echo $result\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"AEIOUaeiou\"\n    local consonants=\"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n    local len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n  \
    \  local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n   \
    \ local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n    local\
    \ L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n\
    \    local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n \
    \   local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local vowel_index=0\n\
    \    local consonant_index=0\n    local vowel_found=0\n    local consonant_found=0\n\
    \    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local closest_consonant_index=0\n    local closest_consonant_distance=0\n\
    \    local distance=0\n    local distance_to_vowel=0\n    local distance_to_consonant=0\n\
    \    local distance_to_closest_vowel=0\n    local distance_to_closest_consonant=0\n\
    \    local closest_vowel_found=0\n    local closest_consonant_found=0\n    local\
    \ closest_vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992015
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local i=${#word}\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")\n    local consonants=(\"\
    b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"\
    r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"z\" \"B\" \"C\" \"D\" \"F\" \"G\" \"\
    H\" \"J\" \"K\" \"L\" \"M\" \"N\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"V\" \"W\" \"\
    X\" \"Y\" \"Z\")\n    local is_consonant=0\n    local is_vowel=0\n    local is_first_consonant=0\n\
    \    local is_second_consonant=0\n    local is_first_vowel=0\n    local is_second_vowel=0\n\
    \    local first_consonant_index=0\n    local second_consonant_index=0\n    local\
    \ first_vowel_index=0\n    local second_vowel_index=0\n    local closest_vowel=\"\
    \"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ vowel_distance=0\n    local vowel_index=0\n    local vowel=\"\"\n    local consonant=\"\
    \"\n    local is_first_char=0\n    local is_last_char=0\n    local is_first_char_vowel=0\n\
    \    local is_last_char_vowel=0\n    local is_first_char_consonant=0\n    local\
    \ is_last_char_consonant=0\n    local first_char=${word:0:1}\n    local last_char=${word:len-1:1}\n\
    \    local first_char_index=0\n    local last_char_index=0\n    local first_char_vow\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local last_char=${word: -1}\n    local first_char=${word:0:1}\n    local\
    \ result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n  \
    \  local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n   \
    \ local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local\
    \ w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n\
    \    local C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n \
    \   local H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n  \
    \  local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n   \
    \ local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n    local\
    \ W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local last_char_is_vowel=0\n\
    \    local first_char_is_vowel=0\n    local last_char_is_consonant=0\n    local\
    \ first_char_is_consonant=0\n    local last_char_is_vowel_or_consonant=0\n   \
    \ local first_char_is_vowel_or_consonant=0\n    local last_char_is_vowel_and_consonant=0\n\
    \    local first_char_is_vowel_and_consonant=0\n    local last_char_is_vowel_or_consonant_and_vowel=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")\n    local result=\"\
    \"\n    local is_vowel=0\n    local is_consonant=0\n    local is_first_consonant=0\n\
    \    local is_second_consonant=0\n    local is_first_vowel=0\n    local is_second_vowel=0\n\
    \    local is_first_char=0\n    local is_last_char=0\n    local is_first_consonant_found=0\n\
    \    local is_second_consonant_found=0\n    local is_first_vowel_found=0\n   \
    \ local is_second_vowel_found=0\n    local is_first_char_found=0\n    local is_last_char_found=0\n\
    \    local is_first_consonant_found_again=0\n    local is_second_consonant_found_again=0\n\
    \    local is_first_vowel_found_again=0\n    local is_second_vowel_found_again=0\n\
    \    local is_first_char_found_again=0\n    local is_last_char_found_again=0\n\
    \    local is_first_consonant_found_again_again=0\n    local is_second_consonant_found_again_again=0\n\
    \    local is_first_vowel_found_again_again=0\n    local is_second_vowel_found_again_again=0\n\
    \    local is_first_char_found_again_again=0\n    local is_last_char_found_again_again=0\n\
    \    local is_first_consonant_found_again_again_again=0\n    local is_second_consonant_found_again_again_again=0\n\
    \    local is_first_vowel_found_again_again_again=0\n    local is_second_vowel_found_again\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local len=${#word}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n    local\
    \ E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n    local J=0\n\
    \    local K=0\n    local L=0\n    local M=0\n    local N=0\n    local O=0\n \
    \   local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n  \
    \  local U=0\n    local V=0\n    local W=0\n    local X=0\n    local Y=0\n   \
    \ local Z=0\n    local vowel=\"\"\n    local consonant=\"\"\n    local closest_vowel=\"\
    \"\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n   \
    \ local closest_vowel_distance=0\n    local vowel_distance=0\n    local consonant_distance=0\n\
    \    local vowel_index=0\n    local consonant_index=0\n    local vowel_found=0\n\
    \    local consonant_found=0\n    local vowel_found_first=0\n    local consonant_found_first=0\n\
    \    local vowel_found_last=0\n    local consonant_found_last=0\n    local vowel_found_first_index=0\n\
    \    local consonant_found_first_index=0\n    local vowel_found_last_index=0\n\
    \    local consonant_found_last_index=0\n    local vowel_found_first_distance=0\n\
    \    local consonant_found_first\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n  # Your code here\n  # echo\
    \ \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\
    \n  # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code\
    \ here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"\
    Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n \
    \ # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code\
    \ here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"\
    Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n \
    \ # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code\
    \ here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"\
    Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n \
    \ # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code\
    \ here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"\
    Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n \
    \ # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code\
    \ here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"\
    Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n \
    \ # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code\
    \ here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"\
    Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n \
    \ # echo \"Your code here\"\n  # echo \"Your code here\"\n  # echo \"Your code\
    \ here\"\n  # echo \"Your code here\"\n  # echo \"Your code here\"\n \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkbxjtu2z.sh: line 73: syntax error near unexpected token `}''

    /tmp/tmpkbxjtu2z.sh: line 73: `}''

    '
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local consonants=\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n  \
    \  local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n   \
    \ local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n    local\
    \ L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n\
    \    local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n \
    \   local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local last_consonant=\"\
    \"\n    local last_vowel=\"\"\n    local last_letter=\"\"\n    local next_letter=\"\
    \"\n   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local vowel_pos=-1\n    local vowel_pos_len=0\n\
    \    local vowel_pos_len_tmp=0\n    local vowel_pos_len_min=0\n    local vowel_pos_len_min_tmp=0\n\
    \    local vowel_pos_len_min_tmp_pos=0\n    local vowel_pos_len_min_tmp_pos_tmp=0\n\
    \    local vowel_pos_len_min_tmp_pos_tmp_len=0\n    local vowel_pos_len_min_tmp_pos_tmp_len_tmp=0\n\
    \    local vowel_pos_len_min_tmp_pos_tmp_len_tmp_pos=0\n    local vowel_pos_len_min_tmp_pos_tmp_len_tmp_pos_tmp=0\n\
    \    local vowel_pos_len_min_tmp_pos_tmp_len_tmp_pos_tmp_len=0\n    local vowel_pos_len_min_tmp_pos_tmp_len_tmp_pos_tmp_len_tmp=0\n\
    \    local vowel_pos_len_min_tmp_pos_tmp_len_tmp_pos_tmp_len_tmp_pos=0\n    local\
    \ vowel_pos_len_min_tmp_pos_tmp_len_tmp_pos_tmp_len_tmp_pos_tmp=0\n    local vowel_pos_len_min_tmp_pos_tmp_len_tmp_pos_tmp_len_tmp_pos_tmp_len=0\n\
    \    local vowel_pos_len_min_tmp_pos_tmp_len_tmp_pos_tmp_len_tmp_pos_tmp_len_tmp=0\n\
    \    local vowel_pos_len_min_tmp_pos_tmp_len_tmp_pos_tmp_len_tmp_pos_tmp_len_tmp_pos=0\n\
    \    local vowel_pos_len_min_tmp_pos_tmp_len_tmp_pos_tmp_len_tmp_pos_tmp_len_tmp_pos_tmp=0\n\
    \    local vowel_pos_len_min_tmp_pos_tmp_len_tmp_pos_tmp_len_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\")\n    local vowels_len=${#vowels[@]}\n\
    \    local consonants=(\"b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"k\" \"l\" \"\
    m\" \"n\" \"p\" \"q\" \"r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"z\" \"B\" \"\
    C\" \"D\" \"F\" \"G\" \"H\" \"J\" \"K\" \"L\" \"M\" \"N\" \"P\" \"Q\" \"R\" \"\
    S\" \"T\" \"V\" \"W\" \"X\" \"Y\" \"Z\")\n    local consonants_len=${#consonants[@]}\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local result=\"\"\n    local min_distance=0\n    local distance=0\n\
    \    local min_vowel=\"\"\n    local min_consonant=\"\"\n    local min_vowel_index=0\n\
    \    local min_consonant_index=0\n    local vowel_index=0\n    local consonant_index=0\n\
    \    local min_distance_index=0\n    local min_distance_index_vowel=0\n    local\
    \ min_distance_index_consonant=0\n    local min_distance_index_vowel_index=0\n\
    \    local min_distance_index_consonant_index=0\n    local min_distance_index_vowel_index_vowel=0\n\
    \    local min_distance_index_consonant_index_consonant=0\n    local min_distance_index_vowel_index_consonant=0\n\
    \    local min_distance_index_consonant_index_vowel=0\n    local min_distance_index_vowel_index_vowel_index\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n\
    \    local vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_len_half=0\n\
    \    local vowel_pos_arr_len_half_floor=0\n    local vowel_pos_arr_len_half_ceil=0\n\
    \    local vowel_pos_arr_len_half_floor_diff=0\n    local vowel_pos_arr_len_half_ceil_diff=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs=0\n    local vowel_pos_arr_len_half_ceil_diff_abs=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min=0\n    local vowel_pos_arr_len_half_ceil_diff_abs_min=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_pos=0\n    local vowel_pos_arr_len_half_ceil_diff_abs_min_pos=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_pos_char=0\n    local vowel_pos_arr_len_half_ceil_diff_abs_min_pos_char=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_pos_char_upper=0\n    local\
    \ vowel_pos_arr_len_half_ceil_diff_abs_min_pos_char_upper=0\n    local vowel_pos_arr_len_half_floor_diff_abs_min_pos_char_upper_lower=0\n\
    \    local vowel_pos_arr_len_half_ceil_diff_abs_min_pos_char_upper_lower=0\n \
    \   local vowel_pos_arr_len_half_floor_diff_abs_min_pos_char_upper_lower_lower=0\n\
    \    local vowel_pos_arr_len_half_ceil_diff_abs_min_pos_char\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n  \
    \  local len=${#word}\n    local i=0\n    local vowel=\"\"\n    local char=\"\"\
    \n    local prev_char=\"\"\n    local next_char=\"\"\n    local found=0\n    local\
    \ found_index=0\n    local found_index_prev=0\n    local found_index_next=0\n\
    \    local found_index_prev_prev=0\n    local found_index_next_next=0\n    local\
    \ found_index_prev_prev_prev=0\n    local found_index_next_next_next=0\n    local\
    \ found_index_prev_prev_prev_prev=0\n    local found_index_next_next_next_next=0\n\
    \    local found_index_prev_prev_prev_prev_prev=0\n    local found_index_next_next_next_next_next=0\n\
    \    local found_index_prev_prev_prev_prev_prev_prev=0\n    local found_index_next_next_next_next_next_next=0\n\
    \    local found_index_prev_prev_prev_prev_prev_prev_prev=0\n    local found_index_next_next_next_next_next_next_next=0\n\
    \    local found_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local found_index_next_next_next_next_next_next_next_next=0\n\
    \    local found_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ found_index_next_next_next_next_next_next_next_next_next=0\n    local found_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local found_index_next_next_next_next_next_next_next_next_next_next=0\n \
    \   local found_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local found_index_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local found_index_prev_prev_\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local str=$1\n    local\
    \ len=${#str}\n    local i=0\n    local j=0\n    local found=0\n    local vowels=\"\
    aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local vowel=\"\"\n\
    \    local consonant=\"\"\n    local result=\"\"\n    local index=0\n    local\
    \ index_vowel=0\n    local index_consonant=0\n    local index_result=0\n    local\
    \ index_result_vowel=0\n    local index_result_consonant=0\n    local index_result_vowel_tmp=0\n\
    \    local index_result_consonant_tmp=0\n    local index_result_tmp=0\n    local\
    \ index_result_vowel_tmp=0\n    local index_result_consonant_tmp=0\n    local\
    \ index_result_tmp=0\n    local index_result_vowel_tmp=0\n    local index_result_consonant_tmp=0\n\
    \    local index_result_tmp=0\n    local index_result_vowel_tmp=0\n    local index_result_consonant_tmp=0\n\
    \    local index_result_tmp=0\n    local index_result_vowel_tmp=0\n    local index_result_consonant_tmp=0\n\
    \    local index_result_tmp=0\n    local index_result_vowel_tmp=0\n    local index_result_consonant_tmp=0\n\
    \    local index_result_tmp=0\n    local index_result_vowel_tmp=0\n    local index_result_consonant_tmp=0\n\
    \    local index_result_tmp=0\n    local index_result_vowel_tmp=0\n    local index_result_consonant_tmp=0\n\
    \    local index_result_tmp=0\n    local index_result_vowel_tmp=0\n    local index_result_consonant_tmp=0\n\
    \    local index_result_tmp=0\n    local index_result_vowel_tmp=0\n    local index_result_consonant_tmp=0\n\
    \    local index\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    # get_closest_vowel(\"yogurt\") ==> \"u\"\n# get_closest_vowel(\"FULL\") ==> \"\
    U\"\n# get_closest_vowel(\"quick\") ==> \"\"\n# get_closest_vowel(\"ab\") ==>\
    \ \"\"\n#\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local\
    \ word_len=${#word}\n    local i=0\n    local j=0\n    local vowel_pos=0\n   \
    \ local vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_idx=0\n\
    \    local vowel_pos_arr_idx_1=0\n    local vowel_pos_arr_idx_2=0\n    local vowel_pos_arr_idx_3=0\n\
    \    local vowel_pos_arr_idx_4=0\n    local vowel_pos_arr_idx_5=0\n    local vowel_pos_arr_idx_6=0\n\
    \    local vowel_pos_arr_idx_7=0\n    local vowel_pos_arr_idx_8=0\n    local vowel_pos_arr_idx_9=0\n\
    \    local vowel_pos_arr_idx_10=0\n    local vowel_pos_arr_idx_11=0\n    local\
    \ vowel_pos_arr_idx_12=0\n    local vowel_pos_arr_idx_13=0\n    local vowel_pos_arr_idx_14=0\n\
    \    local vowel_pos_arr_idx_15=0\n    local vowel_pos_arr_idx_16=0\n    local\
    \ vowel_pos_arr_idx_17=0\n    local vowel_pos_arr_idx_18=0\n    local vowel_pos_arr_idx_19=0\n\
    \    local vowel_pos_arr_idx_20=0\n    local vowel_pos_arr_idx_21=0\n    local\
    \ vowel_pos_arr_idx_22=0\n    local vowel_pos_arr_idx_23=0\n    local vowel_pos_arr_idx_24=0\n\
    \    local vowel_pos_arr_idx_25=0\n    local vowel_pos_arr_idx_26=0\n    local\
    \ vowel_pos_arr_idx_27=0\n    local vowel_pos_arr_idx_28=0\n    local vowel_pos_arr_idx_29=0\n\
    \    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659992016

language: sh
name: HumanEval_146_specialFilter
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i\
    \ % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                if [[ $(($i / 10)) -eq 1 ]] || [[ $(($i / 10)) -eq 3 ]] || [[\
    \ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10)) -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]];\
    \ then\n                    count=$(($count + 1))\n                fi\n      \
    \      fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array\n    local -i count=0\n    IFS=' ' read -a array <<< \"$1\"\
    \n    for i in \"${array[@]}\"; do\n        if (( i > 10 )); then\n          \
    \  if (( (i/10)%2 != 0 )) && (( i%2 != 0 )); then\n                (( count++\
    \ ))\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i%10))\
    \ -gt 0 ] && [ $(($i/10)) -gt 0 ]; then\n            count=$(($count+1))\n   \
    \     fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n\
    \    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2\
    \ -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") =\
    \ \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i\
    \ % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                count=$((count + 1))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # Write your code here\n    echo $1 | tr \" \" \"\\n\" | grep -E \"^[13579][0-9]*[13579]$\"\
    \ | grep -E \"[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8hj0q0nd.sh: line 27: unexpected EOF while looking for matching
    `"''

    /tmp/tmp8hj0q0nd.sh: line 31: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [[ $i -gt 10 ]]; then\n            local firstDigit=${i:0:1}\n     \
    \       local lastDigit=${i: -1}\n            if [[ $firstDigit -gt 1 && $firstDigit\
    \ -lt 9 && $lastDigit -gt 1 && $lastDigit -lt 9 ]]; then\n                count=$((count\
    \ + 1))\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for number in $1; do\n        if [ $number -gt 10 ] &&\
    \ [ $((number%10)) -gt 0 ] && [ $((number/10)) -gt 0 ]; then\n            count=$((count+1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [ $i -gt 10 ] && [ $((i%10)) -gt 0 ] && [ $((i/10)) -gt 0 ]; then\n\
    \            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8up8mpdq.sh: line 14: [: too many arguments

    /tmp/tmp8up8mpdq.sh: line 14: [: too many arguments

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -gt 0 ]] && [[ $(($i % 10)) -lt 8 ]]; then\n   \
    \             if [[ $(($i / 10)) -gt 0 ]] && [[ $(($i / 10)) -lt 8 ]]; then\n\
    \                    count=$(($count + 1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for num in $1\n    do\n        if [ $num -gt 10 ] &&\
    \ [ $(($num % 2)) -eq 1 ] && [ $(($(($num / 10)) % 2)) -eq 1 ]\n        then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] && [[ $i\
    \ =~ [13579]$ ]]; then\n                ((count++))\n            fi\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp32pyzage.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmp32pyzage.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] && [[ $i\
    \ =~ [13579]$ ]]; then\n                count=$((count+1))\n            fi\n \
    \       fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n\
    \    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2\
    \ -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") =\
    \ \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt1oza2hy.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpt1oza2hy.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -gt 0 ]] && [[ $(($i % 10)) -lt 8 ]]; then\n   \
    \             if [[ $(($i / 10)) -gt 0 ]] && [[ $(($i / 10)) -lt 8 ]]; then\n\
    \                    count=$(($count + 1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n\
    \            if [[ $(($i % 10)) -ne 0 ]]; then\n                if [[ $(($i /\
    \ 10)) -ne 0 ]]; then\n                    count=$((count + 1))\n            \
    \    fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i %\
    \ 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n\
    \            count=$(($count + 1))\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [ $i -gt 10 ]; then\n            local first=${i:0:1}\n            local\
    \ last=${i: -1}\n            if [ $((first % 2)) -ne 0 ] && [ $((last % 2)) -ne\
    \ 0 ]; then\n                count=$((count + 1))\n            fi\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $(($i%10)) -ne 0 ]] && [[\
    \ $(($i/10)) -ne 0 ]]; then\n                count=$((count+1))\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzg7zaab3.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpzg7zaab3.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # TODO: Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppn3qtrn6.sh: line 180: syntax error near unexpected token `}''

    /tmp/tmppn3qtrn6.sh: line 180: `}''

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ]; then\n    \
    \        if [ $(($i % 2)) -eq 1 ]; then\n                if [ $((${i:0:1} % 2))\
    \ -eq 1 ]; then\n                    if [ $((${i: -1} % 2)) -eq 1 ]; then\n  \
    \                      count=$(($count + 1))\n                    fi\n       \
    \         fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for num in $1; do\n        if (( num > 10 && num %\
    \ 2 == 1 && num / 10 % 2 == 1 )); then\n            (( count++ ))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\";\
    \ do\n        if [[ \"$i\" -gt 10 ]] && [[ \"${i:0:1}\" -eq 1 || \"${i:0:1}\"\
    \ -eq 3 || \"${i:0:1}\" -eq 5 || \"${i:0:1}\" -eq 7 || \"${i:0:1}\" -eq 9 ]] &&\
    \ [[ \"${i: -1}\" -eq 1 || \"${i: -1}\" -eq 3 || \"${i: -1}\" -eq 5 || \"${i:\
    \ -1}\" -eq 7 || \"${i: -1}\" -eq 9 ]]; then\n            ((count++))\n      \
    \  fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    specialFilter \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n\
    \    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2\
    \ -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") =\
    \ \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsyvofvra.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpsyvofvra.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -gt 0 ]] && [[ $(($i % 10)) -lt 10 ]]; then\n  \
    \              if [[ $(($i / 10)) -gt 0 ]] && [[ $(($i / 10)) -lt 10 ]]; then\n\
    \                    count=$(($count + 1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -ne 0 ]; then\n  \
    \              if [ $((${i:0:1} % 2)) -ne 0 ]; then\n                    count=$(($count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array\n    local i\n    local num\n    local first\n    local last\n\
    \    local count=0\n    IFS=' ' read -r -a array <<< \"$1\"\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        num=${array[$i]}\n        first=${num:0:1}\n        last=${num:\
    \ -1}\n        if [[ $num -gt 10 && $first -gt 1 && $first -lt 9 && $last -gt\
    \ 1 && $last -lt 9 ]]; then\n            ((count++))\n        fi\n    done\n \
    \   echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73\
    \ 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n\
    \    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \  local -i count=0\n  for i in $1; do\n    if [[ $i -gt 10 ]]; then\n      local\
    \ -i first=$(($i / 10))\n      local -i last=$(($i % 10))\n      if [[ $(($first\
    \ % 2)) -eq 1 && $(($last % 2)) -eq 1 ]]; then\n        ((count++))\n      fi\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[\
    \ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45\
    \ 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\"\
    \ ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i\
    \ % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                if [[ $(($i / 10)) -eq 1 ]] || [[ $(($i / 10)) -eq 3 ]] || [[\
    \ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10)) -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]];\
    \ then\n                    count=$(($count + 1))\n                fi\n      \
    \      fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ]; then\n    \
    \        if [ $((i%10)) -gt 0 ] && [ $((i%10)) -lt 10 ]; then\n              \
    \  if [ $((i/10)) -gt 0 ] && [ $((i/10)) -lt 10 ]; then\n                    count=$((count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i\
    \ % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                count=$((count + 1))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] && [[ $i\
    \ =~ [13579]$ ]]; then\n                ((count++))\n            fi\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp32pyzage.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmp32pyzage.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -ne 0 ]; then\n\
    \                if [ $((${i:0:1} % 2)) -ne 0 ]; then\n                    count=$((count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp35kj1ipz.sh: line 14: [: too many arguments

    /tmp/tmp35kj1ipz.sh: line 14: [: too many arguments

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i\
    \ % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                if [[ $(($i / 10)) -eq 1 ]] || [[ $(($i / 10)) -eq 3 ]] || [[\
    \ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10)) -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]];\
    \ then\n                    count=$(($count + 1))\n                fi\n      \
    \      fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i\
    \ % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[\
    \ $(($i % 10)) -eq 9 ]]; then\n                if [[ $(($i / 10)) -eq 1 ]] ||\
    \ [[ $(($i / 10)) -eq 3 ]] || [[ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10)) -eq\
    \ 7 ]] || [[ $(($i / 10)) -eq 9 ]]; then\n                    count=$(($count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [[ $i -gt 10 ]]; then\n            local first=${i:0:1}\n          \
    \  local last=${i: -1}\n            if [[ $first%2 -ne 0 && $last%2 -ne 0 ]];\
    \ then\n                ((count++))\n            fi\n        fi\n    done\n  \
    \  echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73\
    \ 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n\
    \    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -eq 1 ]; then\n      \
    \          if [ $((${i:0:1} % 2)) -eq 1 ]; then\n                    count=$(($count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ]; then\n    \
    \        if [ $(($i % 2)) -eq 1 ]; then\n                if [ $((${i:0:1} % 2))\
    \ -eq 1 ]; then\n                    if [ $((${i: -1} % 2)) -eq 1 ]; then\n  \
    \                      count=$(($count + 1))\n                    fi\n       \
    \         fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] && [[ $i\
    \ =~ [13579]$ ]]; then\n                ((count++))\n            fi\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp32pyzage.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmp32pyzage.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] && $i =~ [13579]$\
    \ ]]; then\n                ((count++))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8geydgwv.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmp8geydgwv.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a nums=($1)\n    local count=0\n    for num in ${nums[@]}; do\n  \
    \      if [ $num -gt 10 ]; then\n            if [ $(($num % 2)) -eq 1 ]; then\n\
    \                if [ $((${num:0:1} % 2)) -eq 1 ]; then\n                    count=$(($count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -eq 1 ]; then\n  \
    \              if [ $((${i:0:1} % 2)) -eq 1 ]; then\n                    count=$(($count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] && $i =~ [13579]$\
    \ ]]; then\n                ((count++))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8geydgwv.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmp8geydgwv.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -ne 0 ]; then\n  \
    \              if [ $((${i:0:1} % 2)) -ne 0 ]; then\n                    count=$(($count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] &&\
    \ [[ $i =~ [13579]$ ]]; then\n                (( count++ ))\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy9x07o3r.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpy9x07o3r.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] || [[\
    \ $(($i % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]]\
    \ || [[ $(($i % 10)) -eq 9 ]]; then\n                count=$((count + 1))\n  \
    \          fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n   \
    \ specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1\
    \ -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate\
    \ \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ]; then\n    \
    \        if [ $((i%10)) -gt 0 ] && [ $((i%10)) -lt 10 ]; then\n              \
    \  if [ $((i/10)) -gt 0 ] && [ $((i/10)) -lt 10 ]; then\n                    count=$((count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] ||\
    \ [[ $(($i % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq\
    \ 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n                if [[ $(($i / 10)) -eq\
    \ 1 ]] || [[ $(($i / 10)) -eq 3 ]] || [[ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10))\
    \ -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]]; then\n                    count=$((count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx0pof3dk.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpx0pof3dk.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            local first=$(echo $i | cut -c1)\n\
    \            local last=$(echo $i | cut -c${#i})\n            if [[ $first -gt\
    \ 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n\
    \            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n \
    \   specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2\
    \ 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[\
    \ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12\
    \ 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"\
    3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvx_3qe1d.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpvx_3qe1d.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [[ $i -gt 10 ]]; then\n            if [[ $((i/10))%2 -ne 0 ]] && [[\
    \ $((i%10))%2 -ne 0 ]]; then\n                count=$((count+1))\n           \
    \ fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i\
    \ % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                count=$((count + 1))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] || [[\
    \ $(($i % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]]\
    \ || [[ $(($i % 10)) -eq 9 ]]; then\n                count=$((count + 1))\n  \
    \          fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n   \
    \ specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1\
    \ -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate\
    \ \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1\n    do\n        if [ $i -gt 10 ] && [ $((i%10))\
    \ -gt 0 ] && [ $((i/10)) -gt 0 ] && [ $((i%10)) -lt 10 ] && [ $((i/10)) -lt 10\
    \ ]\n        then\n            count=$((count+1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73\
    \ 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n\
    \    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -gt 0 ]]; then\n \
    \               if [[ $(($i % 10)) -eq $(($i / 10)) ]]; then\n               \
    \     count=$(($count + 1))\n                fi\n            fi\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if ((i > 10)); then\n    \
    \        if ((i % 2 == 1)); then\n                count=$((count + 1))\n     \
    \       fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local count=0\n    local i\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        local num=${array[$i]}\n        if [[ $num -gt 10 ]]; then\n\
    \            local first_digit=${num:0:1}\n            local last_digit=${num:\
    \ -1}\n            if [[ $first_digit -gt 0 && $first_digit%2 -eq 1 ]] && \\\n\
    \               [[ $last_digit -gt 0 && $last_digit%2 -eq 1 ]]; then\n       \
    \         count=$((count+1))\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2thqzne4.sh: line 16: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmp2thqzne4.sh: line 16: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i%10)) -eq 1 ]] || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10))\
    \ -eq 5 ]] || [[ $(($i%10)) -eq 7 ]] || [[ $(($i%10)) -eq 9 ]]; then\n       \
    \         if [[ $(($i/10)) -eq 1 ]] || [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10))\
    \ -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] || [[ $(($i/10)) -eq 9 ]]; then\n       \
    \             ((count++))\n                fi\n            fi\n        fi\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i\
    \ % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[\
    \ $(($i % 10)) -eq 9 ]]; then\n                if [[ $(($i / 10)) -eq 1 ]] ||\
    \ [[ $(($i / 10)) -eq 3 ]] || [[ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10)) -eq\
    \ 7 ]] || [[ $(($i / 10)) -eq 9 ]]; then\n                    count=$(($count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if (( $i > 10 )); then\n            local first=$(echo $i | cut -c1)\n\
    \            local last=$(echo $i | cut -c${#i})\n            if (( $first % 2\
    \ == 1 )) && (( $last % 2 == 1 )); then\n                (( count++ ))\n     \
    \       fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj8czkxqf.sh: line 14: ((: 5 -2 1 -5 > 10 : syntax error in expression
    (error token is "1 -5 > 10 ")

    /tmp/tmpj8czkxqf.sh: line 14: ((: 15 -73 14 -15 > 10 : syntax error in expression
    (error token is "14 -15 > 10 ")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            local first=${i:0:1}\n        \
    \    local last=${i: -1}\n            if [[ $first -gt 1 && $first -lt 9 && $last\
    \ -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaul43yrw.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpaul43yrw.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [ $i -gt 10 ] && [ $(($i % 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] &&\
    \ [ $((${i: -1} % 2)) -eq 1 ]; then\n            ((count++))\n        fi\n   \
    \ done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i %\
    \ 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n\
    \            count=$(($count + 1))\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            local first=$(echo $i | cut\
    \ -c1)\n            local last=$(echo $i | cut -c-1)\n            if [[ $first\
    \ -gt 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n             \
    \   count=$((count + 1))\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2s0w_4re.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmp2s0w_4re.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # your code here\n    #echo $1\n    #echo $2\n    #echo $3\n    #echo $4\n\
    \    #echo $5\n    #echo $6\n    #echo $7\n    #echo $8\n    #echo $9\n    #echo\
    \ $10\n    #echo $11\n    #echo $12\n    #echo $13\n    #echo $14\n    #echo $15\n\
    \    #echo $16\n    #echo $17\n    #echo $18\n    #echo $19\n    #echo $20\n \
    \   #echo $21\n    #echo $22\n    #echo $23\n    #echo $24\n    #echo $25\n  \
    \  #echo $26\n    #echo $27\n    #echo $28\n    #echo $29\n    #echo $30\n   \
    \ #echo $31\n    #echo $32\n    #echo $33\n    #echo $34\n    #echo $35\n    #echo\
    \ $36\n    #echo $37\n    #echo $38\n    #echo $39\n    #echo $40\n    #echo $41\n\
    \    #echo $42\n    #echo $43\n    #echo $44\n    #echo $45\n    #echo $46\n \
    \   #echo $47\n    #echo $48\n    #echo $49\n    #echo $50\n    #echo $51\n  \
    \  #echo $52\n    #echo $53\n    #echo $54\n    #echo $55\n    #echo $56\n   \
    \ #echo $57\n    #echo $58\n    #echo $59\n    #echo $60\n    #echo $61\n    #echo\
    \ $62\n    #echo $63\n    #echo $64\n    #echo $65\n    #echo $66\n    #echo $67\n\
    \    #echo $68\n    #echo $69\n    #echo $70\n    #echo $71\n    #echo $72\n \
    \   #echo $73\n    #echo $74\n    #echo $75\n    #echo $76\n    #echo $77\n  \
    \  #echo $78\n    #echo $79\n    #echo $80\n    #echo $81\n    #echo $82\n   \
    \ #echo $83\n    #echo $84\n   \n}\n\ncandidate() {\n    specialFilter \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[\
    \ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45\
    \ 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\"\
    \ ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7ayh4_46.sh: line 97: syntax error near unexpected token `}''

    /tmp/tmp7ayh4_46.sh: line 97: `}''

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            local first_digit=${i:0:1}\n  \
    \          local last_digit=${i: -1}\n            if [[ $first_digit -gt 1 &&\
    \ $first_digit -lt 9 && $last_digit -gt 1 && $last_digit -lt 9 ]]; then\n    \
    \            ((count++))\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb5fxnmfv.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpb5fxnmfv.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i\
    \ % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                if [[ $(($i / 10)) -eq 1 ]] || [[ $(($i / 10)) -eq 3 ]] || [[\
    \ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10)) -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]];\
    \ then\n                    count=$(($count + 1))\n                fi\n      \
    \      fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [[ $i -gt 10 ]]; then\n            local first=$(echo $i | cut -c1)\n\
    \            local last=$(echo $i | cut -c2)\n            if [[ $first -gt 1 &&\
    \ $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n\
    \            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n \
    \   specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2\
    \ 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[\
    \ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12\
    \ 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"\
    3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    echo \"$1\" | tr ' ' '\\n' | grep -E '^[13579][0-9]*[13579]$' | grep -E '[0-9]+'\
    \ | grep -E '^[0-9]+$' | grep -E '^[0-9]+$' | grep -E '[0-9]+' | grep -E '[0-9]+'\
    \ | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+'\
    \ | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+'\
    \ | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+'\
    \ | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+'\
    \ | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+'\
    \ | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+'\
    \ | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+'\
    \ | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+'\
    \ | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+'\
    \ | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+' | grep -E '[0-9]+'\
    \ | grep -E '[0-9]+' | grep -E '[0-9]+' |\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3pvyii2y.sh: line 12: syntax error near unexpected token `}''

    /tmp/tmp3pvyii2y.sh: line 12: `}''

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local -i count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            if [[ ${i:0:1} -eq 1 || ${i:0:1}\
    \ -eq 3 || ${i:0:1} -eq 5 || ${i:0:1} -eq 7 || ${i:0:1} -eq 9 ]]; then\n     \
    \           if [[ ${i: -1} -eq 1 || ${i: -1} -eq 3 || ${i: -1} -eq 5 || ${i: -1}\
    \ -eq 7 || ${i: -1} -eq 9 ]]; then\n                    (( count++ ))\n      \
    \          fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_p9wwmxu.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmp_p9wwmxu.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local -i count=0\n    for i in \"${array[@]}\"\
    ; do\n        if (( i > 10 )); then\n            if [[ $i =~ ^[13579] ]] && [[\
    \ $i =~ [13579]$ ]]; then\n                ((count++))\n            fi\n     \
    \   fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n  \
    \  [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3\
    \ 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"\
    4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpies1nocd.sh: line 14: ((: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpies1nocd.sh: line 14: ((: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $((i%10))\
    \ -gt 0 ] && [ $((i/10)) -gt 0 ] && [ $((i%10)) -ne 0 ] && [ $((i/10)) -ne 0 ];\
    \ then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ]; then\n    \
    \        if [ $(($i % 2)) -eq 1 ]; then\n                if [ $((${i:0:1} % 2))\
    \ -eq 1 ]; then\n                    count=$(($count + 1))\n                fi\n\
    \            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n \
    \   specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2\
    \ 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[\
    \ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12\
    \ 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"\
    3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i\
    \ % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[\
    \ $(($i % 10)) -eq 9 ]]; then\n                count=$((count + 1))\n        \
    \    fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            local first=${i:0:1}\n        \
    \    local last=${i: -1}\n            if [[ $first -gt 1 && $first -lt 9 && $last\
    \ -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaul43yrw.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpaul43yrw.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # Write your code here\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph75p95c4.sh: line 12: syntax error near unexpected token `}''

    /tmp/tmph75p95c4.sh: line 12: `}''

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if ((i > 10)); then\n    \
    \        if (((i / 10) % 2 != 0)) && ((i % 10 != 0)); then\n                ((count++))\n\
    \            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n \
    \   specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2\
    \ 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[\
    \ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12\
    \ 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"\
    3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array\n    local -i i\n    local -i count\n    local -i num\n  \
    \  local -i first\n    local -i last\n    IFS=' ' read -r -a array <<< \"$1\"\n\
    \    count=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        num=${array[$i]}\n\
    \        first=$(($num / 10))\n        last=$(($num % 10))\n        if [ $num\
    \ -gt 10 ] && [ $((first % 2)) -ne 0 ] && [ $((last % 2)) -ne 0 ]; then\n    \
    \        count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            local first=$(echo $i | cut -c1)\n\
    \            local last=$(echo $i | cut -c${#i})\n            if [[ $first -gt\
    \ 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n\
    \            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n \
    \   specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2\
    \ 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[\
    \ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12\
    \ 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"\
    3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvx_3qe1d.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpvx_3qe1d.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if (( i > 10 )); then\n  \
    \          if (( (i / 10) % 2 != 0 )) && (( i % 2 != 0 )); then\n            \
    \    (( count++ ))\n            fi\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if (( i > 10 )); then\n  \
    \          if (( i % 2 == 1 )); then\n                local -i last_digit=i %\
    \ 10\n                if (( last_digit % 2 == 1 )); then\n                   \
    \ (( count++ ))\n                fi\n            fi\n        fi\n    done\n  \
    \  echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73\
    \ 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n\
    \    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmps_y66rcd.sh: line 15: local: `%'': not a valid identifier

    /tmp/tmps_y66rcd.sh: line 15: local: `10'': not a valid identifier

    /tmp/tmps_y66rcd.sh: line 15: local: `%'': not a valid identifier

    /tmp/tmps_y66rcd.sh: line 15: local: `10'': not a valid identifier

    /tmp/tmps_y66rcd.sh: line 15: local: `%'': not a valid identifier

    /tmp/tmps_y66rcd.sh: line 15: local: `10'': not a valid identifier

    /tmp/tmps_y66rcd.sh: line 15: local: `%'': not a valid identifier

    /tmp/tmps_y66rcd.sh: line 15: local: `10'': not a valid identifier

    /tmp/tmps_y66rcd.sh: line 15: local: `%'': not a valid identifier

    /tmp/tmps_y66rcd.sh: line 15: local: `10'': not a valid identifier

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph69wpj2r.sh: line 181: syntax error near unexpected token `}''

    /tmp/tmph69wpj2r.sh: line 181: `}''

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i\
    \ % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[\
    \ $(($i % 10)) -eq 9 ]]; then\n                if [[ $(($i / 10)) -eq 1 ]] ||\
    \ [[ $(($i / 10)) -eq 3 ]] || [[ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10)) -eq\
    \ 7 ]] || [[ $(($i / 10)) -eq 9 ]]; then\n                    count=$(($count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph69wpj2r.sh: line 181: syntax error near unexpected token `}''

    /tmp/tmph69wpj2r.sh: line 181: `}''

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n\
    \            if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i\
    \ % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                count=$((count + 1))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n\
    \            if [[ $(($i % 10)) -gt 0 ]] && [[ $(($i / 10)) -gt 0 ]]; then\n \
    \               count=$((count + 1))\n            fi\n        fi\n    done\n \
    \   echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73\
    \ 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n\
    \    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -eq 1 ]; then\n  \
    \              if [ $((${i:0:1} % 2)) -eq 1 ]; then\n                    count=$(($count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for num in $1; do\n        if (( $num > 10 )); then\n\
    \            if (( $num % 2 == 1 )); then\n                if (( $num / 10 % 2\
    \ == 1 )); then\n                    (( count++ ))\n                fi\n     \
    \       fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -ne 0 ]; then\n  \
    \              if [ $((${i:0:1} % 2)) -ne 0 ]; then\n                    if [\
    \ $((${i: -1} % 2)) -ne 0 ]; then\n                        count=$((count + 1))\n\
    \                    fi\n                fi\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i %\
    \ 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n\
    \            count=$(($count + 1))\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i\
    \ % 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ];\
    \ then\n            count=$(($count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # your code here\n    echo $1 | tr ' ' '\\n' | grep -E '^[13579][0-9]*[13579]$'\
    \ | grep -E '[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*[0-9]*\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvpinng92.sh: line 12: unexpected EOF while looking for matching
    `''''

    /tmp/tmpvpinng92.sh: line 31: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [ $i -gt 10 ] && [ $(($i % 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] &&\
    \ [ $((${i: -1} % 2)) -eq 1 ]; then\n            count=$(($count + 1))\n     \
    \   fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n  \
    \  [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3\
    \ 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"\
    4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if (( i > 10 )); then\n            if [[ $i =~ ^[13579] && $i =~ [13579]$\
    \ ]]; then\n                (( count++ ))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp79jomxc_.sh: line 14: ((: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmp79jomxc_.sh: line 14: ((: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] &&\
    \ [[ $i =~ [13579]$ ]]; then\n                count=$((count+1))\n           \
    \ fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz8fl1pmj.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpz8fl1pmj.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if ((i > 10)); then\n    \
    \        if [[ $i =~ ^[13579] ]] && [[ $i =~ [13579]$ ]]; then\n             \
    \   ((count++))\n            fi\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array\n    local -i count=0\n    local -i i\n    local -i num\n\
    \    local -i first\n    local -i last\n    array=($1)\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        num=${array[$i]}\n        first=$(($num/10))\n        last=$(($num%10))\n\
    \        if [ $num -gt 10 ] && [ $first -gt 0 ] && [ $last -gt 0 ] && \\\n   \
    \        [ $((first%2)) -ne 0 ] && [ $((last%2)) -ne 0 ]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i %\
    \ 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n\
    \            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # TODO: Write your code here\n    # Note: You can use the echo command to\
    \ print the output\n    # Example: echo \"Hello World\"\n    echo \"Hello World\"\
    \n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            local first=${i:0:1}\n   \
    \         local last=${i: -1}\n            if [[ $first -gt 1 && $first -lt 9\
    \ && $last -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n      \
    \      fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph6cpr967.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmph6cpr967.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # TODO: Write your code here\n    echo \"Not Implemented\"\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [ $i -gt 10 ]; then\n            local first=${i:0:1}\n            local\
    \ last=${i: -1}\n            if [ $((first % 2)) -eq 1 ] && [ $((last % 2)) -eq\
    \ 1 ]; then\n                count=$((count + 1))\n            fi\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1\n    do\n        if [ $i -gt 10 ] && [\
    \ $((i/10))%2 -ne 0 ] && [ $((i%10))%2 -ne 0 ]\n        then\n            count=$((count+1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp73mvzs63.sh: line 14: [: 1%2: integer expression expected

    /tmp/tmp73mvzs63.sh: line 14: [: 1%2: integer expression expected

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [ \"$i\" -gt 10 ]; then\n            if [ \"${i:0:1}\" -gt 0 ] &&\
    \ [ \"${i:0:1}\" -lt 10 ] && [ \"${i:0:1}\" -ne 8 ] && [ \"${i:0:1}\" -ne 0 ];\
    \ then\n                if [ \"${i: -1}\" -gt 0 ] && [ \"${i: -1}\" -lt 10 ] &&\
    \ [ \"${i: -1}\" -ne 8 ] && [ \"${i: -1}\" -ne 0 ]; then\n                   \
    \ count=$((count+1))\n                fi\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpz5cj8hza.sh: line 14: [: 5 -2 1 -5: integer expression expected

    /tmp/tmpz5cj8hza.sh: line 14: [: 15 -73 14 -15: integer expression expected

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [[ $i -gt 10 ]]; then\n            local first=${i:0:1}\n          \
    \  local last=${i: -1}\n            if [[ $first -gt 1 && $first -lt 9 && $last\
    \ -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array\n    local -i count=0\n    local -i i=0\n    local -i len=0\n\
    \    local -i first=0\n    local -i last=0\n    local -i num=0\n\n    array=($1)\n\
    \    len=${#array[@]}\n    for ((i=0; i<len; i++)); do\n        num=${array[$i]}\n\
    \        if ((num > 10)); then\n            first=$(($num / 10))\n           \
    \ last=$(($num % 10))\n            if ((first % 2 == 1 && last % 2 == 1)); then\n\
    \                ((count++))\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if (( i > 10 )); then\n  \
    \          if (( i % 2 == 1 )); then\n                local -i last_digit=i%10\n\
    \                if (( last_digit % 2 == 1 )); then\n                    (( count++\
    \ ))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [[ $i -gt 10 ]]; then\n            local first=${i:0:1}\n          \
    \  local last=${i: -1}\n            if [[ $first -gt 1 && $first -lt 9 && $last\
    \ -gt 1 && $last -lt 9 ]]; then\n                count=$((count + 1))\n      \
    \      fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ]; then\n    \
    \        if [ $(($i % 2)) -eq 1 ]; then\n                if [ $(($(($i / 10))\
    \ % 2)) -eq 1 ]; then\n                    count=$(($count + 1))\n           \
    \     fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for number in $1; do\n        if (( number > 10 ));\
    \ then\n            if (( (number / 10) % 2 != 0 )) && (( number % 2 != 0 ));\
    \ then\n                (( count++ ))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] && [[ $i\
    \ =~ [13579]$ ]]; then\n                count=$((count+1))\n            fi\n \
    \       fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n\
    \    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2\
    \ -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") =\
    \ \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt1oza2hy.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpt1oza2hy.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    echo $1 | tr ' ' '\\n' | grep -E '^[13579][0-9]*[13579]$' | grep -E '[0-9]*[13579][0-9]*[13579][0-9]*'\
    \ | wc -l\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73\
    \ 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n\
    \    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i\
    \ % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[\
    \ $(($i % 10)) -eq 9 ]]; then\n                count=$((count + 1))\n        \
    \    fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array\n    array=($1)\n    local -i count=0\n    for i in ${array[@]};\
    \ do\n        if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -eq 1 ]; then\n\
    \                local -i last_digit=$(($i % 10))\n                if [ $last_digit\
    \ -eq 1 ] || [ $last_digit -eq 3 ] || [ $last_digit -eq 5 ] || [ $last_digit -eq\
    \ 7 ] || [ $last_digit -eq 9 ]; then\n                    ((count++))\n      \
    \          fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [[ $i -gt 10 ]]; then\n            if [[ ${i:0:1} -eq 1 || ${i:0:1}\
    \ -eq 3 || ${i:0:1} -eq 5 || ${i:0:1} -eq 7 || ${i:0:1} -eq 9 ]]; then\n     \
    \           if [[ ${i: -1} -eq 1 || ${i: -1} -eq 3 || ${i: -1} -eq 5 || ${i: -1}\
    \ -eq 7 || ${i: -1} -eq 9 ]]; then\n                    ((count++))\n        \
    \        fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [ $i -gt 10 ]; then\n            if [ $((i%10)) -gt 0 ] && [ $((i%10))\
    \ -lt 8 ]; then\n                if [ $((i/10)) -gt 0 ] && [ $((i/10)) -lt 8 ];\
    \ then\n                    count=$((count+1))\n                fi\n         \
    \   fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -ne 0 ]; then\n  \
    \              if [ $((${i:0:1} % 2)) -ne 0 ]; then\n                    if [\
    \ $((${i: -1} % 2)) -ne 0 ]; then\n                        count=$(($count + 1))\n\
    \                    fi\n                fi\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [[ $i -gt 10 ]]; then\n            if [[ $(echo $i | cut -c1) -eq 1\
    \ ]] || [[ $(echo $i | cut -c1) -eq 3 ]] || [[ $(echo $i | cut -c1) -eq 5 ]] ||\
    \ [[ $(echo $i | cut -c1) -eq 7 ]] || [[ $(echo $i | cut -c1) -eq 9 ]]; then\n\
    \                if [[ $(echo $i | cut -c2) -eq 1 ]] || [[ $(echo $i | cut -c2)\
    \ -eq 3 ]] || [[ $(echo $i | cut -c2) -eq 5 ]] || [[ $(echo $i | cut -c2) -eq\
    \ 7 ]] || [[ $(echo $i | cut -c2) -eq 9 ]]; then\n                    count=$((count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -ne 0 ]; then\n  \
    \              if [ $((${i:0:1} % 2)) -ne 0 ]; then\n                    if [\
    \ $((${i: -1} % 2)) -ne 0 ]; then\n                        count=$(($count + 1))\n\
    \                    fi\n                fi\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local -i count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i%10)) -gt 0 ]]\
    \ && [[ $(($i/10)) -gt 0 ]]; then\n                if [[ $(($i%10))%2 -ne 0 ]]\
    \ && [[ $(($i/10))%2 -ne 0 ]]; then\n                    ((count++))\n       \
    \         fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp50y0ql9u.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmp50y0ql9u.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array\n    local -i count=0\n    local -i i\n    local -i num\n\
    \    local -i first\n    local -i last\n    array=($1)\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        num=${array[$i]}\n        first=$(($num/10))\n        last=$(($num%10))\n\
    \        if [[ $num -gt 10 && $first%2 -ne 0 && $last%2 -ne 0 ]]; then\n     \
    \       ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2\
    \ 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[\
    \ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12\
    \ 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"\
    3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ]; then\n    \
    \        if [ $(($i % 2)) -eq 1 ]; then\n                if [ $((${i:0:1} % 2))\
    \ -eq 1 ]; then\n                    if [ $((${i: -1} % 2)) -eq 1 ]; then\n  \
    \                      count=$(($count + 1))\n                    fi\n       \
    \         fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(echo $i | cut -c1)\
    \ -eq 1 ]] || [[ $(echo $i | cut -c1) -eq 3 ]] || [[ $(echo $i | cut -c1) -eq\
    \ 5 ]] || [[ $(echo $i | cut -c1) -eq 7 ]] || [[ $(echo $i | cut -c1) -eq 9 ]];\
    \ then\n                if [[ $(echo $i | cut -c2) -eq 1 ]] || [[ $(echo $i |\
    \ cut -c2) -eq 3 ]] || [[ $(echo $i | cut -c2) -eq 5 ]] || [[ $(echo $i | cut\
    \ -c2) -eq 7 ]] || [[ $(echo $i | cut -c2) -eq 9 ]]; then\n                  \
    \  count=$((count+1))\n                fi\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplda3qbzb.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmplda3qbzb.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ]; then\n    \
    \        if [ $(($i % 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i:\
    \ -1} % 2)) -eq 1 ]; then\n                count=$(($count + 1))\n           \
    \ fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i\
    \ % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                count=$((count + 1))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i %\
    \ 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n\
    \            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [[ $i -gt 10 ]]; then\n            if [[ $(($i%10)) -eq 1 ]] || [[ $(($i%10))\
    \ -eq 3 ]] || [[ $(($i%10)) -eq 5 ]] || [[ $(($i%10)) -eq 7 ]] || [[ $(($i%10))\
    \ -eq 9 ]]; then\n                if [[ $(($i/10)) -eq 1 ]] || [[ $(($i/10)) -eq\
    \ 3 ]] || [[ $(($i/10)) -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] || [[ $(($i/10)) -eq\
    \ 9 ]]; then\n                    count=$(($count+1))\n                fi\n  \
    \          fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n   \
    \ specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1\
    \ -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate\
    \ \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ \"$i\" -gt 10 ]] && [[ \"${i:0:1}\" -gt 0 ]] && [[ \"${i:0:1}\"\
    \ -lt 10 ]] && [[ \"${i: -1}\" -gt 0 ]] && [[ \"${i: -1}\" -lt 10 ]]; then\n \
    \           if [[ \"${i:0:1}\" -eq 1 ]] || [[ \"${i:0:1}\" -eq 3 ]] || [[ \"${i:0:1}\"\
    \ -eq 5 ]] || [[ \"${i:0:1}\" -eq 7 ]] || [[ \"${i:0:1}\" -eq 9 ]]; then\n   \
    \             if [[ \"${i: -1}\" -eq 1 ]] || [[ \"${i: -1}\" -eq 3 ]] || [[ \"\
    ${i: -1}\" -eq 5 ]] || [[ \"${i: -1}\" -eq 7 ]] || [[ \"${i: -1}\" -eq 9 ]]; then\n\
    \                    count=$((count + 1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpya0b_t2u.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpya0b_t2u.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [ $i -gt 10 ] && [ $(($i%10)) -gt 0 ] && [ $(($i/10)) -gt 0 ]; then\n\
    \            count=$(($count+1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $((i%10)) -eq 1 || $((i%10))\
    \ -eq 3 || $((i%10)) -eq 5 || $((i%10)) -eq 7 || $((i%10)) -eq 9 ]]; then\n  \
    \              if [[ $((i/10)) -eq 1 || $((i/10)) -eq 3 || $((i/10)) -eq 5 ||\
    \ $((i/10)) -eq 7 || $((i/10)) -eq 9 ]]; then\n                    ((count++))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz8q55q97.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpz8q55q97.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n  \
    \      if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -eq 1 ]; then\n  \
    \              if [ $((${i:0:1} % 2)) -eq 1 ]; then\n                    if [\
    \ $((${i: -1} % 2)) -eq 1 ]; then\n                        count=$(($count + 1))\n\
    \                    fi\n                fi\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\";\
    \ do\n        if (( i > 10 )); then\n            if [[ \"${i:0:1}\" =~ [13579]\
    \ ]] && [[ \"${i: -1}\" =~ [13579] ]]; then\n                (( count++ ))\n \
    \           fi\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2\
    \ 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[\
    \ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12\
    \ 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"\
    3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmsos6h2z.sh: line 14: ((: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpmsos6h2z.sh: line 14: ((: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            local first=${i:0:1}\n   \
    \         local last=${i: -1}\n            if [[ $first -gt 1 && $first -lt 9\
    \ && $last -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n      \
    \      fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph6cpr967.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmph6cpr967.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i\
    \ % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                count=$((count + 1))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ]; then\n    \
    \        if [ $(($i % 2)) -eq 1 ]; then\n                if [ $(($(($i / 10))\
    \ % 2)) -eq 1 ]; then\n                    count=$(($count + 1))\n           \
    \     fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            local first=$(echo $i | cut -c1)\n\
    \            local last=$(echo $i | cut -c2)\n            if [[ $first -gt 1 &&\
    \ $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n\
    \            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n \
    \   specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2\
    \ 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[\
    \ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12\
    \ 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"\
    3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe1nvg5ys.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpe1nvg5ys.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # TODO: Write your code here\n    # Example:\n    # echo ${1[@]}\n    # echo\
    \ ${1[*]}\n    # echo ${1[0]}\n    # echo ${1[1]}\n    # echo ${1[2]}\n    # echo\
    \ ${1[3]}\n    # echo ${1[4]}\n    # echo ${1[5]}\n    # echo ${1[6]}\n    # echo\
    \ ${1[7]}\n    # echo ${1[8]}\n    # echo ${1[9]}\n    # echo ${1[10]}\n    #\
    \ echo ${1[11]}\n    # echo ${1[12]}\n    # echo ${1[13]}\n    # echo ${1[14]}\n\
    \    # echo ${1[15]}\n    # echo ${1[16]}\n    # echo ${1[17]}\n    # echo ${1[18]}\n\
    \    # echo ${1[19]}\n    # echo ${1[20]}\n    # echo ${1[21]}\n    # echo ${1[22]}\n\
    \    # echo ${1[23]}\n    # echo ${1[24]}\n    # echo ${1[25]}\n    # echo ${1[26]}\n\
    \    # echo ${1[27]}\n    # echo ${1[28]}\n    # echo ${1[29]}\n    # echo ${1[30]}\n\
    \    # echo ${1[31]}\n    # echo ${1[32]}\n    # echo ${1[33]}\n    # echo ${1[34]}\n\
    \    # echo ${1[35]}\n    # echo ${1[36]}\n    # echo ${1[37]}\n    # echo ${1[38]}\n\
    \    # echo ${1[39]}\n    # echo ${1[40]}\n    # echo ${1[41]}\n    # echo ${1[42]}\n\
    \    # echo ${1[43]}\n    # echo ${1[44]}\n    # echo ${1[45]}\n    # echo ${1[46]}\n\
    \    # echo ${1[47]}\n    # echo ${1[48]}\n    # echo ${1[49]}\n    # echo ${1[50]}\n\
    \    # echo ${1[51]}\n    # echo ${1[52]}\n   \n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6upt_ejh.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmp6upt_ejh.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph69wpj2r.sh: line 181: syntax error near unexpected token `}''

    /tmp/tmph69wpj2r.sh: line 181: `}''

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [ $i -gt 10 ] && [ $(($i%10)) -gt 0 ] && [ $(($i/10)) -gt 0 ]; then\n  \
    \          count=$(($count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -gt 0 ]] && [[ $(($i % 10)) -lt 10 ]]; then\n  \
    \              if [[ $(($i / 10)) -gt 0 ]] && [[ $(($i / 10)) -lt 10 ]]; then\n\
    \                    count=$(($count + 1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \  local -i count=0\n  for i in $1; do\n    if (( i > 10 )); then\n      if ((\
    \ (i / 10) % 2 != 0 )) && (( i % 2 != 0 )); then\n        (( count++ ))\n    \
    \  fi\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    specialFilter \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n\
    \    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2\
    \ -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") =\
    \ \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array\n    array=($1)\n    local count=0\n    for i in ${array[@]};\
    \ do\n        if [ $i -gt 10 ]; then\n            local first=${i:0:1}\n     \
    \       local last=${i: -1}\n            if [ $((first % 2)) -eq 1 ] && [ $((last\
    \ % 2)) -eq 1 ]; then\n                count=$((count + 1))\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\";\
    \ do\n        if [[ $i -gt 10 ]]; then\n            if [[ $((i%10)) -gt 0 ]] &&\
    \ [[ $((i/10)) -gt 0 ]]; then\n                count=$((count+1))\n          \
    \  fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppxe9cdaj.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmppxe9cdaj.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # TODO: Write your code here\n    # Note: You can use the echo command to\
    \ debug your code\n    # echo \"Debug messages...\"\n    local count=0\n    for\
    \ num in $1\n    do\n        if [[ $num -gt 10 ]] && [[ $(($num%10))%2 -ne 0 ]]\
    \ && [[ $(($num/10))%2 -ne 0 ]]\n        then\n            count=$((count+1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [ \"$i\" -gt 10 ] && [ $(($i % 2)) -eq 1 ] && [ $((${i:0:1} % 2))\
    \ -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n            ((count++))\n    \
    \    fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n  \
    \  [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3\
    \ 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"\
    4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptiqrskxl.sh: line 14: [: 5 -2 1 -5: integer expression expected

    /tmp/tmptiqrskxl.sh: line 14: [: 15 -73 14 -15: integer expression expected

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] && [[ $i\
    \ =~ [13579]$ ]]; then\n                count=$((count+1))\n            fi\n \
    \       fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n\
    \    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2\
    \ -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") =\
    \ \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt1oza2hy.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpt1oza2hy.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 2)) -eq 1 ]];\
    \ then\n                if [[ $((${i:0:1} % 2)) -eq 1 ]]; then\n             \
    \       if [[ $((${i: -1} % 2)) -eq 1 ]]; then\n                        count=$((count\
    \ + 1))\n                    fi\n                fi\n            fi\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt52gjdjr.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpt52gjdjr.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph69wpj2r.sh: line 181: syntax error near unexpected token `}''

    /tmp/tmph69wpj2r.sh: line 181: `}''

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i%10)) -eq 1 ]]\
    \ || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10)) -eq 5 ]] || [[ $(($i%10)) -eq 7 ]]\
    \ || [[ $(($i%10)) -eq 9 ]]; then\n                if [[ $(($i/10)) -eq 1 ]] ||\
    \ [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10)) -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] ||\
    \ [[ $(($i/10)) -eq 9 ]]; then\n                    count=$((count+1))\n     \
    \           fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphtsx8s4w.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmphtsx8s4w.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $((i%10)) -eq 1 || $((i%10)) -eq 3 || $((i%10)) -eq 5 || $((i%10))\
    \ -eq 7 || $((i%10)) -eq 9 ]]; then\n                if [[ $((i/10)) -eq 1 ||\
    \ $((i/10)) -eq 3 || $((i/10)) -eq 5 || $((i/10)) -eq 7 || $((i/10)) -eq 9 ]];\
    \ then\n                    ((count++))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i%10))\
    \ -gt 0 ] && [ $(($i/10)) -gt 0 ]; then\n            count=$(($count+1))\n   \
    \     fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n\
    \    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2\
    \ -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") =\
    \ \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array\n    local -i count=0\n    IFS=' ' read -a array <<< \"$1\"\
    \n    for i in \"${array[@]}\"; do\n        if [[ $i -gt 10 ]]; then\n       \
    \     if [[ $(($i%10)) -gt 0 ]] && [[ $(($i%10)) -lt 8 ]]; then\n            \
    \    if [[ $(($i/10)) -gt 0 ]] && [[ $(($i/10)) -lt 8 ]]; then\n             \
    \       ((count++))\n                fi\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] && [[ $i\
    \ =~ [13579]$ ]]; then\n                count=$((count+1))\n            fi\n \
    \       fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n\
    \    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2\
    \ -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") =\
    \ \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt1oza2hy.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpt1oza2hy.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994089
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local -i count=0\n    for i in ${arr[@]}; do\n   \
    \     if [[ $i -gt 10 ]]; then\n            local -i first=${i:0:1}\n        \
    \    local -i last=${i: -1}\n            if [[ $((first % 2)) -eq 1 && $((last\
    \ % 2)) -eq 1 ]]; then\n                ((count++))\n            fi\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i %\
    \ 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n\
    \            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n  \
    \  [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43\
    \ -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -gt 0 ]] && [[ $(($i % 10)) -lt 10 ]]; then\n  \
    \              if [[ $(($i / 10)) -gt 0 ]] && [[ $(($i / 10)) -lt 10 ]]; then\n\
    \                    count=$(($count + 1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt 10 ]]; then\n            if [[ $(echo $i | cut -c1) -eq\
    \ 1 ]] || [[ $(echo $i | cut -c1) -eq 3 ]] || [[ $(echo $i | cut -c1) -eq 5 ]]\
    \ || [[ $(echo $i | cut -c1) -eq 7 ]] || [[ $(echo $i | cut -c1) -eq 9 ]]; then\n\
    \                if [[ $(echo $i | cut -c2) -eq 1 ]] || [[ $(echo $i | cut -c2)\
    \ -eq 3 ]] || [[ $(echo $i | cut -c2) -eq 5 ]] || [[ $(echo $i | cut -c2) -eq\
    \ 7 ]] || [[ $(echo $i | cut -c2) -eq 9 ]]; then\n                    count=$((count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpulebvj75.sh: line 14: [[: 5 -2 1 -5: syntax error in expression
    (error token is "1 -5")

    /tmp/tmpulebvj75.sh: line 14: [[: 15 -73 14 -15: syntax error in expression (error
    token is "14 -15")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n      \
    \  if [ $i -gt 10 ]; then\n            if [ $(($i%10)) -gt 0 ] && [ $(($i%10))\
    \ -lt 8 ]; then\n                if [ $(($i/10)) -gt 0 ] && [ $(($i/10)) -lt 8\
    \ ]; then\n                    count=$(($count+1))\n                fi\n     \
    \       fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i %\
    \ 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n\
    \            count=$(($count + 1))\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a array=(\"$@\")\n    local counter=0\n    for i in \"${array[@]}\"\
    ; do\n        if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -ne 0 ]; then\n\
    \                if [ $((${i:0:1} % 2)) -ne 0 ]; then\n                    counter=$((counter\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $counter\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4o2n4lui.sh: line 14: [: too many arguments

    /tmp/tmp4o2n4lui.sh: line 14: [: too many arguments

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -i count=0\n    for i in $1; do\n        if (( i > 10 )); then\n  \
    \          if (( (i / 10) % 2 != 0 )) && (( i % 2 != 0 )); then\n            \
    \    (( count++ ))\n            fi\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n\
    \    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"\
    43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
    ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [ \"$i\" -gt 10 ] && [ \"${i:0:1}\" -gt 0 ] && [ \"${i:0:1}\" -lt\
    \ 10 ] && [ \"${i:0:1}\" -ne 8 ] && [ \"${i:0:1}\" -ne 0 ] && [ \"${i: -1}\" -gt\
    \ 0 ] && [ \"${i: -1}\" -lt 10 ] && [ \"${i: -1}\" -ne 8 ] && [ \"${i: -1}\" -ne\
    \ 0 ]; then\n            ((count++))\n        fi\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3u0wjgd4.sh: line 14: [: 5 -2 1 -5: integer expression expected

    /tmp/tmp3u0wjgd4.sh: line 14: [: 15 -73 14 -15: integer expression expected

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph69wpj2r.sh: line 181: syntax error near unexpected token `}''

    /tmp/tmph69wpj2r.sh: line 181: `}''

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr\n    local -i i=0\n    local -i count=0\n    local -i first\n\
    \    local -i last\n    local -i num\n    local -i len\n    local -i num_len\n\
    \n    # Convert the input string to an array\n    arr=($1)\n    len=${#arr[@]}\n\
    \n    # Iterate over the array\n    while [ $i -lt $len ]; do\n        num=${arr[$i]}\n\
    \        num_len=${#num}\n        first=${num:0:1}\n        last=${num:$((num_len-1)):1}\n\
    \        if [ $num -gt 10 ] && [ $((first%2)) -ne 0 ] && [ $((last%2)) -ne 0 ];\
    \ then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n\
    \n    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpho5zinut.sh: line 28: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ]; then\n    \
    \        if [ $(($i % 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i:\
    \ -1} % 2)) -eq 1 ]; then\n                count=$(($count + 1))\n           \
    \ fi\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994090
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    # your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n   \n}\n\ncandidate() {\n    specialFilter\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\"\
    \ ]]\n    [[ $(candidate \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"\
    33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\"\
    ) = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcnbinztv.sh: line 181: syntax error near unexpected token `}''

    /tmp/tmpcnbinztv.sh: line 181: `}''

    '
  stdout: ''
  timestamp: 1659994090
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]]; then\n  \
    \          if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i\
    \ % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                count=$((count + 1))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate\
    \ \"15 -73 14 -15\") = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") =\
    \ \"2\" ]]\n    [[ $(candidate \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate\
    \ \"71 -2 -33 75 21 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994089
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes an array of numbers as input\
    \ and returns \n# the number of elements in the array that are greater than 10\
    \ and both \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For\
    \ example:\n# specialFilter([15, -73, 14, -15]) => 1 \n# specialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2\n#\n# $1 is a space-separated list\nspecialFilter() {\n\
    \    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -ne 0 ]; then\n\
    \                if [ $((${i:0:1} % 2)) -ne 0 ]; then\n                    count=$((count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
    ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
    \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21\
    \ 19\") = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    \") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp35kj1ipz.sh: line 14: [: too many arguments

    /tmp/tmp35kj1ipz.sh: line 14: [: too many arguments

    '
  stdout: ''
  timestamp: 1659994090

language: go_test.go
name: HumanEval_94_skjkasdkd
results:
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := true\n    for _, v := range lst {\n      \
    \  if v == 0 {\n            continue\n        }\n        for i := 2; i <= v/2;\
    \ i++ {\n            if v%i == 0 {\n                prime = false\n          \
    \      break\n            }\n        }\n        if prime {\n            max +=\
    \ v\n        }\n        prime = true\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp8j798ks4_test.go:59: expected '%!s(int=10)', got '%!s(int=227)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp8j798ks4_test.go:59:\
    \ expected '%!s(int=25)', got '%!s(int=4621)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp8j798ks4_test.go:59: expected '%!s(int=13)', got '%!s(int=5411)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp8j798ks4_test.go:59:\
    \ expected '%!s(int=11)', got '%!s(int=164)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp8j798ks4_test.go:59: expected '%!s(int=3)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp8j798ks4_test.go:59:\
    \ expected '%!s(int=7)', got '%!s(int=11)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp8j798ks4_test.go:59: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp8j798ks4_test.go:59:\
    \ expected '%!s(int=19)', got '%!s(int=8325)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp8j798ks4_test.go:59: expected '%!s(int=10)', got '%!s(int=224)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := true\n    for _, v := range lst {\n      \
    \  if v == 0 {\n            continue\n        }\n        for i := 2; i <= v/2;\
    \ i++ {\n            if v%i == 0 {\n                prime = false\n          \
    \      break\n            }\n        }\n        if prime {\n            max +=\
    \ v\n        }\n        prime = true\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp8j798ks4_test.go:59: expected '%!s(int=10)', got '%!s(int=227)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp8j798ks4_test.go:59:\
    \ expected '%!s(int=25)', got '%!s(int=4621)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp8j798ks4_test.go:59: expected '%!s(int=13)', got '%!s(int=5411)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp8j798ks4_test.go:59:\
    \ expected '%!s(int=11)', got '%!s(int=164)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp8j798ks4_test.go:59: expected '%!s(int=3)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp8j798ks4_test.go:59:\
    \ expected '%!s(int=7)', got '%!s(int=11)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp8j798ks4_test.go:59: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp8j798ks4_test.go:59:\
    \ expected '%!s(int=19)', got '%!s(int=8325)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp8j798ks4_test.go:59: expected '%!s(int=10)', got '%!s(int=224)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n        if v%prime == 0 {\n     \
    \       prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int = 0\n    var maxPrimeDigit int = 0\n    var maxPrimeDigitsCount\
    \ int = 0\n    var maxPrimeDigitsSumDigits int = 0\n    var maxPrimeDigitsSumDigitsCount\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount2 int = 0\n    var maxPrimeDigitsSumDigitsCount3\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount4 int = 0\n    var maxPrimeDigitsSumDigitsCount5\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount6 int = 0\n    var maxPrimeDigitsSumDigitsCount7\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount8 int = 0\n    var maxPrimeDigitsSumDigitsCount9\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount10 int = 0\n    var maxPrimeDigitsSumDigitsCount11\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount12 int = 0\n    var maxPrimeDigitsSumDigitsCount13\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount14 int = 0\n    var maxPrimeDigitsSumDigitsCount15\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount16 int = 0\n    var maxPrimeDigitsSumDigitsCount17\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount18 int = 0\n    var maxPrimeDigitsSumDigitsCount19\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount20 int = 0\n    var maxPrimeDigitsSumDigitsCount21\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount22 int = 0\n    var maxPrimeDigitsSumDigitsCount23\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount24 int = 0\n    var maxPrimeDigitsSumDigitsCount25\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount26 int = 0\n    var maxPrimeDigitsSumDigitsCount27\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount28 int = 0\n    var maxPrimeDigitsSumDigitsCount29\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount30 int = 0\n    var maxPrimeDigitsSumDigitsCount31\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount32 int = 0\n    var maxPrimeDigitsSumDigitsCount33\
    \ int = 0\n    var maxPrimeDigitsSumDigitsCount34 int\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmph4v1ygw8_test.go:56:6: expected ''('', found TestSkjkasdkd

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660075457
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n            prime = 1\n        }\n        if\
    \ v%2 == 0 {\n            prime = 0\n        }\n        if prime == 1 {\n    \
    \        prime = 2\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp3d9ugvkg_test.go:56: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp3d9ugvkg_test.go:56:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp3d9ugvkg_test.go:56: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp3d9ugvkg_test.go:56:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp3d9ugvkg_test.go:56: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp3d9ugvkg_test.go:56:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp3d9ugvkg_test.go:56: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp3d9ugvkg_test.go:56:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp3d9ugvkg_test.go:56: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    var maxPrimeIndex int\n    var sum int\n  \
    \  for i := 0; i < len(lst); i++ {\n        if lst[i] == 0 {\n            continue\n\
    \        }\n        for j := i + 1; j < len(lst); j++ {\n            if lst[j]\
    \ == 0 {\n                continue\n            }\n            if lst[i]*lst[j]\
    \ > maxPrime {\n                maxPrime = lst[i]*lst[j]\n                maxPrimeIndex\
    \ = i\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n\
    \        if lst[i] == 0 {\n            continue\n        }\n        if lst[i]*maxPrime\
    \ == maxPrime {\n            sum += lst[i]\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpth8s2b0n_test.go:19:9: maxPrimeIndex declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp02n0n73g_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += prime\n        }\n        prime++\n    }\n\
    \    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp7cmox_ky_test.go:50: expected '%!s(int=10)', got '%!s(int=5)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp7cmox_ky_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp7cmox_ky_test.go:50: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp7cmox_ky_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp7cmox_ky_test.go:50: expected '%!s(int=3)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp7cmox_ky_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp7cmox_ky_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp7cmox_ky_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp7cmox_ky_test.go:50: expected '%!s(int=10)', got '%!s(int=4)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            sum += v\n        }\n \
    \   }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmps4ypi7p9_test.go:19:5: prime declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := true\n    for _, v := range lst {\n      \
    \  if v == 0 {\n            continue\n        }\n        if prime {\n        \
    \    if v%2 == 0 {\n                max = max * 2 + v\n            } else {\n\
    \                max = max * 3 + v\n            }\n        } else {\n        \
    \    if v%2 == 0 {\n                max = max * 3 + v\n            } else {\n\
    \                max = max * 3 + v\n            }\n        }\n        prime =\
    \ !prime\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp8pk_cj65_test.go:63: expected '%!s(int=10)', got '%!s(int=1222983411)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp8pk_cj65_test.go:63:\
    \ expected '%!s(int=25)', got '%!s(int=498493762)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp8pk_cj65_test.go:63: expected '%!s(int=13)', got '%!s(int=1517876481)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp8pk_cj65_test.go:63:\
    \ expected '%!s(int=11)', got '%!s(int=19602802)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp8pk_cj65_test.go:63: expected '%!s(int=3)', got '%!s(int=6936)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp8pk_cj65_test.go:63:\
    \ expected '%!s(int=7)', got '%!s(int=478)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp8pk_cj65_test.go:63: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp8pk_cj65_test.go:63:\
    \ expected '%!s(int=19)', got '%!s(int=1332649)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp8pk_cj65_test.go:63: expected '%!s(int=10)', got '%!s(int=9148)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v%2 == 0 {\n            max = v\n        } else {\n            prime = max\n\
    \            max = v/2\n        }\n    }\n    return prime\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpw1jprh6__test.go:52: expected '%!s(int=10)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpw1jprh6__test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=2)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpw1jprh6__test.go:52: expected '%!s(int=13)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpw1jprh6__test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpw1jprh6__test.go:52: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpw1jprh6__test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpw1jprh6__test.go:52: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpw1jprh6__test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=63)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpw1jprh6__test.go:52: expected '%!s(int=10)', got '%!s(int=63)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n            prime = 1\n        }\n        for\
    \ i := 2; i <= max; i++ {\n            if v%i == 0 {\n                prime =\
    \ 0\n                break\n            }\n        }\n        if prime == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpiluc_mib_test.go:32:13: undefined: sum

    /tmp/tmpiluc_mib_test.go:35:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    var maxPrimeDigit int\n    var sumDigits int\n\
    \    for _, v := range lst {\n        if v == 0 {\n            continue\n    \
    \    }\n        if maxPrime < v {\n            maxPrime = v\n            maxPrimeDigit\
    \ = 0\n        }\n        if maxPrime == v {\n            maxPrimeDigit += v\n\
    \        }\n    }\n    sumDigits = maxPrimeDigit\n    for _, v := range lst {\n\
    \        if v == 0 {\n            continue\n        }\n        if maxPrime ==\
    \ v {\n            sumDigits += v\n        }\n    }\n    return sumDigits\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp9okz64tf_test.go:66: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp9okz64tf_test.go:66:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp9okz64tf_test.go:66: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp9okz64tf_test.go:66:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp9okz64tf_test.go:66: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp9okz64tf_test.go:66:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp9okz64tf_test.go:66: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp9okz64tf_test.go:66:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp9okz64tf_test.go:66: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n            prime = 1\n        } else if v%2\
    \ == 0 {\n            prime = 0\n        }\n    }\n    if prime == 1 {\n     \
    \   for _, v := range lst {\n            if v%2 == 0 {\n                max +=\
    \ v/2\n            }\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpyf7wf93q_test.go:59: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpyf7wf93q_test.go:59:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpyf7wf93q_test.go:59: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpyf7wf93q_test.go:59:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpyf7wf93q_test.go:59: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpyf7wf93q_test.go:59:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpyf7wf93q_test.go:59: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpyf7wf93q_test.go:59:\
    \ expected '%!s(int=19)', got '%!s(int=185184)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpyf7wf93q_test.go:59: expected '%!s(int=10)', got '%!s(int=12288)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n        if v%prime == 0 {\n     \
    \       prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            prime += v%max\n        }\n    }\n \
    \   return prime\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwxwhsf5f_test.go:54: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwxwhsf5f_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwxwhsf5f_test.go:54: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwxwhsf5f_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwxwhsf5f_test.go:54: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwxwhsf5f_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwxwhsf5f_test.go:54: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwxwhsf5f_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwxwhsf5f_test.go:54: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max = v\n            break\n        }\n        prime++\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n            prime = 1\n        } else if v ==\
    \ max {\n            prime++\n        }\n    }\n    return max * prime\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            prime++\n        }\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075459
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            prime++\n        } else {\n            prime = 2\n\
    \        }\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplql64uo6_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplql64uo6_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplql64uo6_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplql64uo6_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplql64uo6_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplql64uo6_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplql64uo6_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplql64uo6_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplql64uo6_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075460
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int = 0\n    var sum int = 0\n    for _, v := range\
    \ lst {\n        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n\
    \    for _, v := range lst {\n        if v == maxPrime {\n            sum += int(v)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpzt6o_2gz_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpzt6o_2gz_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpzt6o_2gz_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpzt6o_2gz_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpzt6o_2gz_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpzt6o_2gz_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpzt6o_2gz_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpzt6o_2gz_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpzt6o_2gz_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075460
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n        if v%prime == 0 {\n     \
    \       prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n            prime = 1\n        }\n        if\
    \ v%2 == 0 {\n            prime = 0\n        }\n        if prime == 1 {\n    \
    \        prime = 2\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp3d9ugvkg_test.go:56: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp3d9ugvkg_test.go:56:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp3d9ugvkg_test.go:56: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp3d9ugvkg_test.go:56:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp3d9ugvkg_test.go:56: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp3d9ugvkg_test.go:56:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp3d9ugvkg_test.go:56: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp3d9ugvkg_test.go:56:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp3d9ugvkg_test.go:56: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v%2 == 0 {\n            continue\n        }\n        for i := 3; i <= v/2; i++\
    \ {\n            if v%i == 0 {\n                break\n            }\n       \
    \ }\n        if i == v/2 {\n            prime++\n        }\n        if prime >\
    \ max {\n            max = prime\n        }\n    }\n    return max\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt_gao2q0_test.go:29:12: undefined: i

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075459
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075460
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v%2 == 0 {\n            prime++\n        }\n        if prime > max {\n     \
    \       max = prime\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpw0tmb44s_test.go:52: expected '%!s(int=10)', got '%!s(int=11)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpw0tmb44s_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpw0tmb44s_test.go:52: expected '%!s(int=13)', got '%!s(int=5)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpw0tmb44s_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpw0tmb44s_test.go:52: expected '%!s(int=3)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpw0tmb44s_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpw0tmb44s_test.go:52: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpw0tmb44s_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpw0tmb44s_test.go:52: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075460
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := true\n    for _, v := range lst {\n      \
    \  if v%2 == 0 {\n            prime = false\n        }\n    }\n    if prime {\n\
    \        for _, v := range lst {\n            if v%2 == 0 {\n                max\
    \ = v\n                break\n            }\n        }\n    }\n    if max > 0\
    \ {\n        for _, v := range lst {\n            if v%2 == 0 {\n            \
    \    max += v\n            }\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpawanivj4_test.go:64: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpawanivj4_test.go:64:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpawanivj4_test.go:64: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpawanivj4_test.go:64:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpawanivj4_test.go:64: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpawanivj4_test.go:64:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpawanivj4_test.go:64: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpawanivj4_test.go:64:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpawanivj4_test.go:64: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075460
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8j5o5wuz_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075460
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int = 0\n    var maxPrimeDigit int = 0\n    var maxPrimeDigitsCount\
    \ int = 0\n    for _, v := range lst {\n        if v > maxPrime {\n          \
    \  maxPrime = v\n            maxPrimeDigitsCount = 1\n        }\n        if v\
    \ == maxPrime {\n            maxPrimeDigitsCount++\n        }\n        if maxPrimeDigitsCount\
    \ > maxPrimeDigit {\n            maxPrimeDigit = maxPrimeDigitsCount\n       \
    \ }\n    }\n    return maxPrimeDigit\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This doesn't work. Try it with `[2,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]`\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the output to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the output to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the output to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the output to the answer.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\npackage main\n\nimport (\n    \"fmt\"\n  \
    \  \"math\"\n)\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpc_tbj7if_test.go:35:1: expected declaration, found ''<''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660075459
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp02n0n73g_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n        if v%prime == 0 {\n     \
    \       prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075460
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := true\n    for _, v := range lst {\n      \
    \  if v == 0 {\n            continue\n        }\n        if prime {\n        \
    \    if v > max {\n                max = v\n            }\n        } else {\n\
    \            if v%2 == 0 {\n                prime = false\n            }\n   \
    \     }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpionl6jh__test.go:58: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpionl6jh__test.go:58:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpionl6jh__test.go:58: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpionl6jh__test.go:58:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpionl6jh__test.go:58: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpionl6jh__test.go:58:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpionl6jh__test.go:58: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpionl6jh__test.go:58:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpionl6jh__test.go:58: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int = 0\n    var maxPrimeDigit int = 0\n    var sumDigits\
    \ int = 0\n    var primes []int\n    primes = make([]int, len(lst))\n    for i\
    \ := 0; i < len(lst); i++ {\n        primes[i] = 1\n    }\n    for i := 0; i <\
    \ len(primes); i++ {\n        for j := i + 1; j < len(primes); j++ {\n       \
    \     if primes[i]*primes[j] > maxPrime {\n                maxPrime = primes[i]*primes[j]\n\
    \                maxPrimeDigit = i\n                sumDigits = 0\n          \
    \  }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i]\
    \ > maxPrimeDigit {\n            sumDigits += lst[i] - maxPrimeDigit\n       \
    \ }\n    }\n    return sumDigits\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpijmxnib6_test.go:64: expected '%!s(int=10)', got '%!s(int=659)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpijmxnib6_test.go:64:\
    \ expected '%!s(int=25)', got '%!s(int=4673)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpijmxnib6_test.go:64: expected '%!s(int=13)', got '%!s(int=91149)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpijmxnib6_test.go:64:\
    \ expected '%!s(int=11)', got '%!s(int=1154)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpijmxnib6_test.go:64: expected '%!s(int=3)', got '%!s(int=118)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpijmxnib6_test.go:64:\
    \ expected '%!s(int=7)', got '%!s(int=19)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpijmxnib6_test.go:64: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpijmxnib6_test.go:64:\
    \ expected '%!s(int=19)', got '%!s(int=131781)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpijmxnib6_test.go:64: expected '%!s(int=10)', got '%!s(int=8416)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := true\n    for _, v := range lst {\n      \
    \  if v%2 == 0 {\n            prime = false\n            break\n        }\n  \
    \  }\n    if prime {\n        for _, v := range lst {\n            if v%2 == 0\
    \ {\n                max += v\n            }\n        }\n    } else {\n      \
    \  for _, v := range lst {\n            if v%2 == 0 {\n                max +=\
    \ v/2\n            }\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp0kpcimm4_test.go:63: expected '%!s(int=10)', got '%!s(int=219)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp0kpcimm4_test.go:63:\
    \ expected '%!s(int=25)', got '%!s(int=31)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp0kpcimm4_test.go:63: expected '%!s(int=13)', got '%!s(int=41703)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp0kpcimm4_test.go:63:\
    \ expected '%!s(int=11)', got '%!s(int=400)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp0kpcimm4_test.go:63: expected '%!s(int=3)', got '%!s(int=6)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp0kpcimm4_test.go:63:\
    \ expected '%!s(int=7)', got '%!s(int=5)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp0kpcimm4_test.go:63: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp0kpcimm4_test.go:63:\
    \ expected '%!s(int=19)', got '%!s(int=61728)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp0kpcimm4_test.go:63: expected '%!s(int=10)', got '%!s(int=4096)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max = v\n            break\n        }\n        prime++\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8j5o5wuz_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075460
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp02n0n73g_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    var maxPrimeDigit int\n    var maxPrimeDigitsCount\
    \ int\n    var maxPrimeDigitsSumDigits int\n    var maxPrimeDigitsSumDigitsCount\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigits int\n    var maxPrimeDigitsSumDigitsSumDigitsCount\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigits int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsCount\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigits int\n    var\
    \ maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsCount int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigits\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsCount\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigits\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsCount\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigits\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsCount\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigits\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsCount\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigits\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsCount\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigits\
    \ int\n    var maxPrimeDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsCount\
    \ \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp_1_rrd8__test.go:40:9: missing variable type or initialization

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660075459
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n            prime = 1\n        }\n        if\
    \ v%prime == 0 {\n            prime++\n        }\n    }\n    return max\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpdhqlbyva_test.go:25\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000d04e0?)\n\t/tmp/tmpdhqlbyva_test.go:39\
    \ +0xc6f\ntesting.tRunner(0xc0000d04e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v%max == 0 {\n            max += v\n        } else {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpqdohelc7_test.go:21\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000da340?)\n\t/tmp/tmpqdohelc7_test.go:37\
    \ +0xbaa\ntesting.tRunner(0xc0000da340, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime *= prime\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpy5o57qrb_test.go:21\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000cc4e0?)\n\t/tmp/tmpy5o57qrb_test.go:36\
    \ +0xbef\ntesting.tRunner(0xc0000cc4e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp02n0n73g_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max = v\n            break\n        }\n        prime++\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n            prime = 1\n        }\n        if\
    \ v%prime == 0 {\n            prime++\n        }\n    }\n    return max\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpdhqlbyva_test.go:25\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000d04e0?)\n\t/tmp/tmpdhqlbyva_test.go:39\
    \ +0xc6f\ntesting.tRunner(0xc0000d04e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            sum += v\n        }\n \
    \   }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmps4ypi7p9_test.go:19:5: prime declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v%max == 0 {\n            max += v\n        }\n    }\n    return max\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 18 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpgxn9s9zd_test.go:21\n\
    command-line-arguments_test.TestSkjkasdkd(0xc000103380?)\n\t/tmp/tmpgxn9s9zd_test.go:35\
    \ +0xb8a\ntesting.tRunner(0xc000103380, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n        if v%prime == 0 {\n     \
    \       prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n            prime = 1\n        } else if v ==\
    \ max {\n            prime++\n        }\n    }\n    return max * prime\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int = 0\n    var maxPrimeDigit int = 0\n    for _, v\
    \ := range lst {\n        if v%2 == 0 {\n            maxPrime = maxPrime + 1\n\
    \        }\n    }\n    for _, v := range lst {\n        if v%2 == 0 {\n      \
    \      if v > maxPrime {\n                maxPrime = maxPrime\n              \
    \  maxPrimeDigit = v // maxPrimeDigit is the max prime digit\n            }\n\
    \        }\n    }\n    return maxPrimeDigit\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpjj0f5ytg_test.go:57: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpjj0f5ytg_test.go:57:\
    \ expected '%!s(int=25)', got '%!s(int=40)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpjj0f5ytg_test.go:57: expected '%!s(int=13)', got '%!s(int=30)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpjj0f5ytg_test.go:57:\
    \ expected '%!s(int=11)', got '%!s(int=32)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpjj0f5ytg_test.go:57: expected '%!s(int=3)', got '%!s(int=12)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpjj0f5ytg_test.go:57:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpjj0f5ytg_test.go:57: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpjj0f5ytg_test.go:57:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpjj0f5ytg_test.go:57: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int = 0\n    var sumOfDigits int = 0\n    for _, v :=\
    \ range lst {\n        if v > maxPrime {\n            maxPrime = v\n        }\n\
    \    }\n    for _, v := range lst {\n        if v%maxPrime == 0 {\n          \
    \  sumOfDigits += int(v%maxPrime)\n        }\n    }\n    return sumOfDigits\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp_c2rh56s_test.go:54: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp_c2rh56s_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp_c2rh56s_test.go:54: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp_c2rh56s_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp_c2rh56s_test.go:54: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp_c2rh56s_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp_c2rh56s_test.go:54: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp_c2rh56s_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp_c2rh56s_test.go:54: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            prime++\n        }\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075459
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max = v\n            break\n        }\n        prime++\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max = v\n        }\n        prime++\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp8ka9d27v_test.go:50: expected '%!s(int=10)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp8ka9d27v_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp8ka9d27v_test.go:50: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp8ka9d27v_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp8ka9d27v_test.go:50: expected '%!s(int=3)', got '%!s(int=21)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__6 (0.00s)\n        tmp8ka9d27v_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmp8ka9d27v_test.go:50: expected '%!s(int=19)', got '%!s(int=123456)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmp8ka9d27v_test.go:50:\
    \ expected '%!s(int=10)', got '%!s(int=8192)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpi1p9c0ng_test.go:54: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpi1p9c0ng_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpi1p9c0ng_test.go:54: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpi1p9c0ng_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpi1p9c0ng_test.go:54: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpi1p9c0ng_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpi1p9c0ng_test.go:54: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpi1p9c0ng_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpi1p9c0ng_test.go:54: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp02n0n73g_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max = v\n            break\n        }\n        prime++\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n            prime = 1\n        } else if v ==\
    \ max {\n            prime++\n        }\n    }\n    return max * prime\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n        if v%prime == 0 {\n     \
    \       prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    sum := 0\n    for _, v := range lst\
    \ {\n        sum += v\n        if sum > max {\n            max = sum\n       \
    \     prime = v\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzn96rzyl_test.go:19:5: prime declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075460
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int = 0\n    var maxPrimeDigit int = 0\n    for _, v\
    \ := range lst {\n        if v%2 == 0 {\n            v /= 2\n        }\n     \
    \   for i := 3; i <= int(v); i++ {\n            if v%i == 0 {\n              \
    \  v /= i\n                break\n            }\n        }\n        if v > maxPrime\
    \ {\n            maxPrime = v\n            maxPrimeDigit = i\n        }\n    }\n\
    \    return maxPrimeDigit + maxPrime\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuq_xa0c8_test.go:32:29: undefined: i

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int = 0\n    for _, v := range lst {\n        if v >\
    \ maxPrime {\n            maxPrime = v\n        }\n    }\n    var sum int = 0\n\
    \    for _, v := range lst {\n        if v == maxPrime {\n            sum += int(v)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp97cbsdye_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp97cbsdye_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp97cbsdye_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp97cbsdye_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp97cbsdye_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp97cbsdye_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp97cbsdye_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp97cbsdye_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp97cbsdye_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max = v\n            break\n        }\n        prime++\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n        if v%prime == 0 {\n     \
    \       prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            prime++\n        }\n        if prime > max {\n \
    \           max = prime\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=10)', got '%!s(int=7)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=6)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=13)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=3)', got '%!s(int=5)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=19)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=10)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v == 0 {\n            continue\n        }\n        prime = 1\n        for i\
    \ := 2; i <= v; i++ {\n            if v%i == 0 {\n                prime = 0\n\
    \                break\n            }\n        }\n        if prime == 1 {\n  \
    \          max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp0n3hv6gn_test.go:59: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp0n3hv6gn_test.go:59:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp0n3hv6gn_test.go:59: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp0n3hv6gn_test.go:59:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp0n3hv6gn_test.go:59: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp0n3hv6gn_test.go:59:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp0n3hv6gn_test.go:59: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp0n3hv6gn_test.go:59:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp0n3hv6gn_test.go:59: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n        if v%prime == 0 {\n     \
    \       prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v%2 == 0 {\n            prime++\n        }\n        if prime > max {\n     \
    \       max = prime\n        }\n        prime += v/2\n    }\n    return max\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpekqphz7w_test.go:53: expected '%!s(int=10)', got '%!s(int=334)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpekqphz7w_test.go:53:\
    \ expected '%!s(int=25)', got '%!s(int=2341)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpekqphz7w_test.go:53: expected '%!s(int=13)', got '%!s(int=45573)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpekqphz7w_test.go:53:\
    \ expected '%!s(int=11)', got '%!s(int=579)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpekqphz7w_test.go:53: expected '%!s(int=3)', got '%!s(int=49)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpekqphz7w_test.go:53:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpekqphz7w_test.go:53: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpekqphz7w_test.go:53:\
    \ expected '%!s(int=19)', got '%!s(int=65887)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpekqphz7w_test.go:53: expected '%!s(int=10)', got '%!s(int=112)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max = v\n            break\n        }\n        prime++\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int = 0\n    var maxPrimeDigit int = 0\n    var sum\
    \ int = 0\n    for _, v := range lst {\n        if v > maxPrime {\n          \
    \  maxPrime = v\n            maxPrimeDigit = 0\n        }\n        if v == maxPrime\
    \ {\n            sum += int(maxPrimeDigit)\n            maxPrimeDigit = 0\n  \
    \      }\n        if v > maxPrime {\n            maxPrime = v\n            maxPrimeDigit\
    \ = 0\n        }\n        if v == maxPrime {\n            sum += int(maxPrimeDigit)\n\
    \            maxPrimeDigit = 0\n        }\n        if v > maxPrime {\n       \
    \     maxPrime = v\n            maxPrimeDigit = 0\n        }\n        if v ==\
    \ maxPrime {\n            sum += int(maxPrimeDigit)\n            maxPrimeDigit\
    \ = 0\n        }\n        if v > maxPrime {\n            maxPrime = v\n      \
    \      maxPrimeDigit = 0\n        }\n        if v == maxPrime {\n            sum\
    \ += int(maxPrimeDigit)\n            maxPrimeDigit = 0\n        }\n        if\
    \ v > maxPrime {\n            maxPrime = v\n            maxPrimeDigit = 0\n  \
    \      }\n        if v == maxPrime {\n            sum += int(maxPrimeDigit)\n\
    \            maxPrimeDigit = 0\n        }\n        if v > maxPrime {\n       \
    \     maxPrime = v\n            maxPrimeDigit = 0\n        }\n        if v ==\
    \ maxPrime {\n            sum += int(maxPrimeDigit)\n            maxPrimeDigit\
    \ = 0\n        }\n        if v > maxPrime {\n            maxPrime = v\n      \
    \      maxPrimeDigit = 0\n        }\n        if v == maxPrime {\n            sum\
    \ += int(maxPrimeDigit)\n            maxPrimeDigit = 0\n        }\n        if\
    \ v > maxPrime {\n            maxPrime = v\n            maxPrimeDigit = 0\n  \
    \      }\n        if v == maxPrime {\n            sum += int(maxPrimeDigit)\n\
    \            maxPrimeDigit = 0\n        }\n        if v > maxPrime {\n       \
    \     maxPrime = v\n            maxPrimeDigit = 0\n        }\n        if v ==\
    \ maxPrime {\n            sum += int(maxPrimeDigit)\n            maxPrimeDigit\
    \ = 0\n        }\n        if v > maxPrime {\n            maxPrime = v\n      \
    \      maxPrimeDigit = 0\n        }\n        if v == maxPrime {\n            sum\
    \ += int(maxPrimeDigit)\n            maxPrimeDigit = 0\n        }\n        if\
    \ v > maxPrime {\n            maxPrime = v\n            maxPrimeDigit = 0\n  \
    \      }\n        if \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp3lxfzp8y_test.go:107:6: expected ''('', found TestSkjkasdkd

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            prime++\n        }\n        if prime > max {\n \
    \           max = prime\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=10)', got '%!s(int=7)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=6)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=13)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=3)', got '%!s(int=5)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=19)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=10)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := true\n    for _, v := range lst {\n      \
    \  if v%2 == 0 {\n            prime = false\n        }\n    }\n    if prime {\n\
    \        for _, v := range lst {\n            if v%2 != 0 {\n                max\
    \ = v\n                break\n            }\n        }\n    }\n    if max > 0\
    \ {\n        sum := 0\n        for _, v := range lst {\n            sum += int(v%10)\n\
    \        }\n        return sum\n    }\n    return 0\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp7wpvj6mz_test.go:64: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp7wpvj6mz_test.go:64:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp7wpvj6mz_test.go:64: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp7wpvj6mz_test.go:64:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp7wpvj6mz_test.go:64: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp7wpvj6mz_test.go:64:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp7wpvj6mz_test.go:64: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp7wpvj6mz_test.go:64:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp7wpvj6mz_test.go:64: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp02n0n73g_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v%2 == 0 {\n            prime++\n        }\n        if prime > max {\n     \
    \       max = prime\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpw0tmb44s_test.go:52: expected '%!s(int=10)', got '%!s(int=11)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpw0tmb44s_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpw0tmb44s_test.go:52: expected '%!s(int=13)', got '%!s(int=5)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpw0tmb44s_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpw0tmb44s_test.go:52: expected '%!s(int=3)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpw0tmb44s_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpw0tmb44s_test.go:52: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpw0tmb44s_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpw0tmb44s_test.go:52: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075460
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n \
    \       }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph0exdmy5_test.go:19:5: prime declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075462
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp02n0n73g_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    max += max/2\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            max += max/2\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmprt5ja5eb_test.go:54: expected '%!s(int=10)', got '%!s(int=729)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmprt5ja5eb_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=10342)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmprt5ja5eb_test.go:54: expected '%!s(int=13)', got '%!s(int=124917)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmprt5ja5eb_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=3664)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmprt5ja5eb_test.go:54: expected '%!s(int=3)', got '%!s(int=181)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmprt5ja5eb_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=18)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmprt5ja5eb_test.go:54: expected '%!s(int=19)', got '%!s(int=12286)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmprt5ja5eb_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=185184)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmprt5ja5eb_test.go:54: expected '%!s(int=10)', got '%!s(int=12288)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplof0ha4u_test.go:53:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplof0ha4u_test.go:53: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075460
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n        if v%prime == 0 {\n     \
    \       prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n            prime = 1\n      \
    \  }\n        if v%prime == 0 {\n            sum += v%prime\n        }\n     \
    \   prime++\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 18 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmp7vyiud4o_test.go:26\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0001031e0?)\n\t/tmp/tmp7vyiud4o_test.go:41\
    \ +0xc79\ntesting.tRunner(0xc0001031e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp02n0n73g_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    var maxPrimeDigit int\n    var sumDigits int\n\
    \    for _, v := range lst {\n        if v%2 == 0 {\n            maxPrime = maxPrime*2\
    \ + v\n        } else {\n            sumDigits += v\n        }\n    }\n    if\
    \ maxPrime == 0 {\n        return sumDigits\n    }\n    maxPrimeDigit, maxPrime\
    \ = skjkasdkd(lst)\n    return maxPrimeDigit + maxPrime\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp3w8iaq4y_test.go:31:31: assignment mismatch: 2 variables but skjkasdkd
    returns 1 value

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n            prime = 1\n        } else if v ==\
    \ max {\n            prime++\n        }\n    }\n    return max * prime\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            prime += v % max\n        }\n    }\n\
    \    return prime\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmptvqez1qf_test.go:54: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmptvqez1qf_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmptvqez1qf_test.go:54: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmptvqez1qf_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmptvqez1qf_test.go:54: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmptvqez1qf_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmptvqez1qf_test.go:54: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmptvqez1qf_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmptvqez1qf_test.go:54: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    max += max/2\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            max += v / max\n        }\n    }\n \
    \   return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwn89m4nm_test.go:54: expected '%!s(int=10)', got '%!s(int=486)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwn89m4nm_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=6895)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwn89m4nm_test.go:54: expected '%!s(int=13)', got '%!s(int=124917)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwn89m4nm_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1086)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwn89m4nm_test.go:54: expected '%!s(int=3)', got '%!s(int=121)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwn89m4nm_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=12)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwn89m4nm_test.go:54: expected '%!s(int=19)', got '%!s(int=12286)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwn89m4nm_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=185184)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwn89m4nm_test.go:54: expected '%!s(int=10)', got '%!s(int=12288)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max = v\n            break\n        }\n        prime++\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpbpez4a8z_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpbpez4a8z_test.go:51: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        } else {\n            prime++\n\
    \        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp_l0ho4cp_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp_l0ho4cp_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp_l0ho4cp_test.go:51: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp_l0ho4cp_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp_l0ho4cp_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp_l0ho4cp_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp_l0ho4cp_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp_l0ho4cp_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp_l0ho4cp_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v%max == 0 {\n            max += v\n        } else {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpqdohelc7_test.go:21\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000da340?)\n\t/tmp/tmpqdohelc7_test.go:37\
    \ +0xbaa\ntesting.tRunner(0xc0000da340, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime *= prime\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpy5o57qrb_test.go:21\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000cc4e0?)\n\t/tmp/tmpy5o57qrb_test.go:36\
    \ +0xbef\ntesting.tRunner(0xc0000cc4e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpx_sa3yty_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpx_sa3yty_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n            prime = 1\n        } else if v ==\
    \ max {\n            prime++\n        }\n    }\n    return max * prime\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5dfqt567_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5dfqt567_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    sum := 0\n    for _, v := range lst\
    \ {\n        sum += int(v)\n        if sum > max {\n            max = sum\n  \
    \          prime = 1\n        } else if sum == max {\n            prime = 0\n\
    \        }\n    }\n    if prime == 1 {\n        return sum\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp6le21ltz_test.go:57: expected '%!s(int=10)', got '%!s(int=659)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp6le21ltz_test.go:57:\
    \ expected '%!s(int=25)', got '%!s(int=4673)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp6le21ltz_test.go:57: expected '%!s(int=13)', got '%!s(int=91149)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp6le21ltz_test.go:57:\
    \ expected '%!s(int=11)', got '%!s(int=1154)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp6le21ltz_test.go:57: expected '%!s(int=3)', got '%!s(int=118)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp6le21ltz_test.go:57:\
    \ expected '%!s(int=7)', got '%!s(int=19)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp6le21ltz_test.go:57: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp6le21ltz_test.go:57:\
    \ expected '%!s(int=19)', got '%!s(int=131781)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp6le21ltz_test.go:57: expected '%!s(int=10)', got '%!s(int=8416)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n            prime = 1\n      \
    \  }\n        if v%prime == 0 {\n            prime = 0\n        }\n        if\
    \ prime == 1 {\n            sum += v\n        }\n    }\n    return sum\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpuc0a26a8_test.go:26\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000da340?)\n\t/tmp/tmpuc0a26a8_test.go:43\
    \ +0xd0f\ntesting.tRunner(0xc0000da340, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += prime\n        }\n        prime++\n    }\n\
    \    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp7cmox_ky_test.go:50: expected '%!s(int=10)', got '%!s(int=5)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp7cmox_ky_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp7cmox_ky_test.go:50: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp7cmox_ky_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp7cmox_ky_test.go:50: expected '%!s(int=3)', got '%!s(int=16)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp7cmox_ky_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp7cmox_ky_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp7cmox_ky_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp7cmox_ky_test.go:50: expected '%!s(int=10)', got '%!s(int=4)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        } else {\n            prime++\n\
    \        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp_l0ho4cp_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp_l0ho4cp_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp_l0ho4cp_test.go:51: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp_l0ho4cp_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp_l0ho4cp_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp_l0ho4cp_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp_l0ho4cp_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp_l0ho4cp_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp_l0ho4cp_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int = 0\n    var sumDigits int = 0\n    for _, v :=\
    \ range lst {\n        if v > maxPrime {\n            maxPrime = v\n        }\n\
    \    }\n    for _, v := range lst {\n        if v%maxPrime == 0 {\n          \
    \  sumDigits += int(v / maxPrime)\n        }\n    }\n    return sumDigits\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp71l2tlk2_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp71l2tlk2_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp71l2tlk2_test.go:54: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp71l2tlk2_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp71l2tlk2_test.go:54: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp71l2tlk2_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp71l2tlk2_test.go:54: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp71l2tlk2_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp71l2tlk2_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime++\n   \
    \ }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5rqwq9qa_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5rqwq9qa_test.go:50: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n        if v%2 == 0\
    \ {\n            prime = 2\n        }\n        for i := 3; i <= max; i = i*2 {\n\
    \            if v%i == 0 {\n                prime = 0\n                break\n\
    \            }\n        }\n        if prime == 0 {\n            sum += v\n   \
    \     }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp9vqjl8ch_test.go:62: expected '%!s(int=10)', got '%!s(int=348)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp9vqjl8ch_test.go:62:\
    \ expected '%!s(int=25)', got '%!s(int=4)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp9vqjl8ch_test.go:62: expected '%!s(int=13)', got '%!s(int=48)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp9vqjl8ch_test.go:62:\
    \ expected '%!s(int=11)', got '%!s(int=295)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp9vqjl8ch_test.go:62: expected '%!s(int=3)', got '%!s(int=118)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp9vqjl8ch_test.go:62:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp9vqjl8ch_test.go:62: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp9vqjl8ch_test.go:62:\
    \ expected '%!s(int=19)', got '%!s(int=131781)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp9vqjl8ch_test.go:62: expected '%!s(int=10)', got '%!s(int=224)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v / max\n        }\n    }\n    return max\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpx16zah7m_test.go:53: expected '%!s(int=10)', got '%!s(int=325)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpx16zah7m_test.go:53:\
    \ expected '%!s(int=25)', got '%!s(int=4598)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpx16zah7m_test.go:53: expected '%!s(int=13)', got '%!s(int=83279)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpx16zah7m_test.go:53:\
    \ expected '%!s(int=11)', got '%!s(int=725)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpx16zah7m_test.go:53: expected '%!s(int=3)', got '%!s(int=82)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpx16zah7m_test.go:53:\
    \ expected '%!s(int=7)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpx16zah7m_test.go:53: expected '%!s(int=19)', got '%!s(int=8192)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpx16zah7m_test.go:53:\
    \ expected '%!s(int=19)', got '%!s(int=123457)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpx16zah7m_test.go:53: expected '%!s(int=10)', got '%!s(int=8193)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8j5o5wuz_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075460
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            prime += v%max\n        }\n    }\n \
    \   return prime\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwxwhsf5f_test.go:54: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwxwhsf5f_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwxwhsf5f_test.go:54: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwxwhsf5f_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwxwhsf5f_test.go:54: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwxwhsf5f_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwxwhsf5f_test.go:54: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwxwhsf5f_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwxwhsf5f_test.go:54: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    var sum int\n    for _, v := range lst {\n\
    \        if v%2 == 0 {\n            continue\n        }\n        for i := 3; i\
    \ <= v/2; i++ {\n            if v%i == 0 {\n                break\n          \
    \  }\n        }\n        if i == v/2 {\n            maxPrime = v\n           \
    \ sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpg3h65852_test.go:18:9: maxPrime declared but not used

    /tmp/tmpg3h65852_test.go:29:12: undefined: i

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075462
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime *= prime\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpy5o57qrb_test.go:21\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000cc4e0?)\n\t/tmp/tmpy5o57qrb_test.go:36\
    \ +0xbef\ntesting.tRunner(0xc0000cc4e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            prime++\n        }\n        if prime > max {\n \
    \           max = prime\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=10)', got '%!s(int=7)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=6)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=13)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=3)', got '%!s(int=5)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=19)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpqjoyyrgb_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=3)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpqjoyyrgb_test.go:52: expected '%!s(int=10)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            prime++\n        }\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpfw3gmvl2_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpfw3gmvl2_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075459
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8j5o5wuz_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075460
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n        if v%prime == 0 {\n     \
    \       prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpz48qfg9l_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpz48qfg9l_test.go:52: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            prime++\n        } else {\n            prime = 2\n\
    \        }\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplql64uo6_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplql64uo6_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplql64uo6_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplql64uo6_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplql64uo6_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplql64uo6_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplql64uo6_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplql64uo6_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplql64uo6_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075460
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdnc3jwg3_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int = 0\n    var maxPrimeDigit int = 0\n    var sumDigits\
    \ int = 0\n    for _, v := range lst {\n        if v > maxPrime {\n          \
    \  maxPrime = v\n            maxPrimeDigit = maxPrime\n            sumDigits =\
    \ 0\n        }\n        if v == maxPrime {\n            sumDigits += int(v)\n\
    \        }\n    }\n    return sumDigits\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxfsp4g6x_test.go:19:9: maxPrimeDigit declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075462
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n \
    \       }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph0exdmy5_test.go:19:5: prime declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplh7sfk2w_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplh7sfk2w_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwlx4c0fe_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwlx4c0fe_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvirukg80_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvirukg80_test.go:49: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if\
    \ v%prime == 0 {\n            max += v%prime\n        }\n        prime *= prime\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpy5o57qrb_test.go:21\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000cc4e0?)\n\t/tmp/tmpy5o57qrb_test.go:36\
    \ +0xbef\ntesting.tRunner(0xc0000cc4e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    var maxPrime int\n    var maxPrimeDigit int\n    var sumDigits int\n\
    \    for _, v := range lst {\n        if v%2 == 0 {\n            maxPrime = maxPrime*10\
    \ + v/2\n            maxPrimeDigit = maxPrimeDigit*10 + v%2\n        } else {\n\
    \            maxPrime = maxPrime*10 + v\n            maxPrimeDigit = maxPrimeDigit*10\
    \ + v%10\n        }\n        sumDigits += v%10\n    }\n    if maxPrimeDigit ==\
    \ 0 {\n        return sumDigits\n    }\n    return maxPrimeDigit + sumDigits\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmph8b2jtin_test.go:58: expected '%!s(int=10)', got '%!s(int=6209150321647474216)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmph8b2jtin_test.go:58:\
    \ expected '%!s(int=25)', got '%!s(int=101007013010100094)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmph8b2jtin_test.go:58: expected '%!s(int=13)', got '%!s(int=1310700933300252)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmph8b2jtin_test.go:58:\
    \ expected '%!s(int=11)', got '%!s(int=19000513094)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmph8b2jtin_test.go:58: expected '%!s(int=3)', got '%!s(int=10319)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmph8b2jtin_test.go:58:\
    \ expected '%!s(int=7)', got '%!s(int=1036)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmph8b2jtin_test.go:58: expected '%!s(int=19)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmph8b2jtin_test.go:58:\
    \ expected '%!s(int=19)', got '%!s(int=1098)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmph8b2jtin_test.go:58: expected '%!s(int=10)', got '%!s(int=786)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp02n0n73g_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp37l_xjqv_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp37l_xjqv_test.go:54: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpee8r3yd9_test.go:19:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
    \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
    \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n// For lst = [0,81,12,3,1,21] the output should be\
    \ 3\n// For lst = [0,8,1,2,1,7] the output should be 7\nfunc skjkasdkd(lst []int)\
    \ int {\n    max := 0\n    prime := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n        if v%2 == 0 {\n         \
    \   prime++\n        }\n    }\n    if prime == 0 {\n        return max\n    }\n\
    \    sum := 0\n    for _, v := range lst {\n        if v%prime == 0 {\n      \
    \      sum += int(v / prime)\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpimp7_8_e_test.go:61: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpimp7_8_e_test.go:61:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpimp7_8_e_test.go:61: expected '%!s(int=13)', got '%!s(int=6)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpimp7_8_e_test.go:61:\
    \ expected '%!s(int=11)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpimp7_8_e_test.go:61: expected '%!s(int=3)', got '%!s(int=6)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpimp7_8_e_test.go:61:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpimp7_8_e_test.go:61: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpimp7_8_e_test.go:61:\
    \ expected '%!s(int=19)', got '%!s(int=131781)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpimp7_8_e_test.go:61: expected '%!s(int=10)', got '%!s(int=8416)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075462

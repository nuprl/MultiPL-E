name: HumanEval_59_largest_prime_factor
language: go_test.go
prompt: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
  \n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
  // >>> largest_prime_factor(13195)\n// 29\n// >>> largest_prime_factor(2048)\n//\
  \ 2\nfunc largest_prime_factor(n int) int {\n"
tests: "func TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
  \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
  \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
  \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    n -= 2\n    i := 2\n    for {\n        if n % i == 0 {\n      \
    \      n /= i\n        } else {\n            return i\n        }\n        i++\n\
    \    }\n}\n", "    prime := 2\n    factor := 2\n    for factor < n {\n       \
    \ if n%prime == 0 {\n            factor++\n        }\n        prime++\n    }\n\
    \    return factor\n}\n", "    p := 2\n    i := 2\n    for {\n        if n%i ==\
    \ 0 {\n            n = n/i\n        } else {\n            p = i\n            i++\n\
    \        }\n        if p*p > n {\n            break\n        }\n    }\n    return\
    \ p\n}\n", "    n -= 2\n    i := 2\n    for {\n        if n % i == 0 {\n     \
    \       n /= i\n        } else {\n            break\n        }\n        i++\n\
    \    }\n    return n\n}\n", "    n -= 2\n    i := 2\n    factors := make([]int,\
    \ 0)\n    for ; i*i <= n; i += 2 {\n        if n % i == 0 {\n            factors\
    \ = append(factors, i)\n            n /= i\n        }\n    }\n    if n > 1 {\n\
    \        factors = append(factors, n)\n    }\n    return factors[len(factors)-1]\n\
    }\n", "    if n < 2 {\n        return n\n    }\n    p := 2\n    for i := 2; i\
    \ <= n; i++ {\n        if n%i == 0 {\n            p = i\n        }\n    }\n  \
    \  return p\n}\n", "    n -= 2\n    prime := 2\n    for i := 3; i <= n; i++ {\n\
    \        if n%i == 0 {\n            prime = i\n            break\n        }\n\
    \    }\n    return prime\n}\n", "    if n < 2 {\n        return n\n    }\n   \
    \ p := 2\n    i := 3\n    for {\n        if n % p == 0 {\n            return p\n\
    \        }\n        p += i\n        i += 2\n    }\n}\n", "    p := 2\n    q :=\
    \ n\n\n    for {\n        if q%p == 0 {\n            return p\n        }\n   \
    \     p += 2\n        q -= p\n    }\n}\n", "    n -= 2\n    i := 2\n    for {\n\
    \        if n % i == 0 {\n            n /= i\n        } else {\n            break\n\
    \        }\n        i++\n    }\n    return n\n}\n", "    p := 2\n    for i :=\
    \ 2; i <= n; i++ {\n        if n%i == 0 {\n            p = i\n            break\n\
    \        }\n    }\n    return p\n}\n", "    if n < 2 {\n        return n\n   \
    \ }\n    p := 2\n    q := n\n    r := 1\n    for {\n        if q%p == 0 {\n  \
    \          return r\n        }\n        if q%p == 1 {\n            return p\n\
    \        }\n        p += 2\n        q /= p\n        r++\n    }\n}\n", "    p :=\
    \ 2\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            p += 1\n\
    \        }\n    }\n    return p\n}\n", "    n -= 1\n    x := n\n    y := 2\n \
    \   for {\n        if n % y == 0 {\n            x = y\n            y *= 2\n  \
    \      } else {\n            break\n        }\n    }\n    return x\n}\n", "  \
    \  n -= 1\n    i := 2\n    p := 2\n    for i <= n {\n        if n % i == 0 {\n\
    \            p = i\n        }\n        i += p\n    }\n    return p\n}\n", "  \
    \  prime := 2\n    factor := 2\n    for i := 3; i <= n; i++ {\n        if n%i\
    \ == 0 {\n            factor++\n            if factor > prime {\n            \
    \    prime = factor\n            }\n        }\n    }\n    return prime\n}\n",
  "    n -= 2\n    i := 2\n    p := 2\n    for {\n        if n % i == 0 {\n      \
    \      n = n / i\n            p++\n        } else {\n            break\n     \
    \   }\n        i++\n    }\n    return p\n}\n", "    if n < 2 {\n        return\
    \ n\n    }\n    p := 2\n    q := n\n    r := 1\n    for {\n        if q%p == 0\
    \ {\n            return r\n        }\n        if q%p == 1 {\n            return\
    \ p\n        }\n        p += 2\n        q /= p\n        r *= p\n    }\n}\n", " \
    \   if n < 2 {\n        return n\n    }\n    p := 2\n    i := 2\n    for {\n \
    \       if n % i == 0 {\n            p += i\n            n /= i\n        } else\
    \ {\n            i++\n        }\n        if n == 1 {\n            return p\n \
    \       }\n    }\n}\n", "    p := 2\n    q := 2\n    for {\n        if n%p ==\
    \ 0 {\n            return p\n        }\n        if n%q == 0 {\n            return\
    \ q\n        }\n        if p > q {\n            p, q = q, p\n        }\n     \
    \   p += q\n        q += p\n    }\n}\n", "    n -= 1\n    p := 2\n    for i :=\
    \ 2; i <= n; i++ {\n        if n % i == 0 {\n            p += 1\n            n\
    \ /= i\n        }\n    }\n    return p\n}\n", "    n -= 1 // Make n positive\n\
    \    p := 2\n    for {\n        if n%p == 0 {\n            return p\n        }\n\
    \        p += 2\n    }\n}\n", "    if n < 2 {\n        return n\n    }\n    p\
    \ := 2\n    q := n\n    r := 1\n    for {\n        if q%p == 0 {\n           \
    \ return r\n        }\n        if q%p == 1 {\n            return p\n        }\n\
    \        if q%p == 2 {\n            return p\n        }\n        if q%p == 3 {\n\
    \            return p\n        }\n        if q%p == 4 {\n            return p\n\
    \        }\n        if q%p == 5 {\n            return p\n        }\n        if\
    \ q%p == 6 {\n            return p\n        }\n        if q%p == 7 {\n       \
    \     return p\n        }\n        if q%p == 8 {\n            return p\n     \
    \   }\n        if q%p == 9 {\n            return p\n        }\n        if q%p\
    \ == 10 {\n            return p\n        }\n        if q%p == 11 {\n         \
    \   return p\n        }\n        if q%p == 12 {\n            return p\n      \
    \  }\n        if q%p == 13 {\n            return p\n        }\n        if q%p\
    \ == 14 {\n            return p\n        }\n        if q%p == 15 {\n         \
    \   return p\n        }\n        if q%p == 16 {\n            return p\n      \
    \  }\n        if q%p == 17 {\n            return p\n        }\n        if q%p\
    \ == 18 {\n            return p\n        }\n        if q%p == 19 {\n         \
    \   return p\n        }\n        if q%p == 20 {\n            return p\n      \
    \  }\n        if q%p == 21 {\n            return p\n        }\n        if q%p\
    \ == 22 {\n            return p\n        }\n        if q%p == 23 {\n         \
    \   return p\n        }\n        if q%p == 24 {\n            return p\n      \
    \  }\n        if q%p == 25 {\n            return p\n        }\n        if q%p\
    \ == 26 {\n            return p\n        }\n        if q%p == 27 {\n         \
    \   return p\n        }\n        if q%p == 28 {\n            return p\n      \
    \  }\n        if q%p == 29 {\n            return p\n        }\n        if q%p\
    \ == 30 {\n            return p\n        }\n        if q%p == 31 {\n         \
    \   return p\n        }\n        if q%p == 32 {\n            return p\n      \
    \  }\n        if q%p == 33 {\n            return p\n        }\n        if q%p\
    \ == 34 {\n            return p\n        }\n        if q%p == 35 {\n         \
    \   return p\n        }\n        if q%p == 36 {\n            return p\n      \
    \  }\n        if q%p == 37 {\n            return p\n        }\n        if q%p\
    \ == 38 {\n            return p\n", "    p := 2\n    for i := 2; i <= n; i++ {\n\
    \        if n%i == 0 {\n            p = i\n            break\n        }\n    }\n\
    \    return p\n}\n", "    n -= 1\n    i := 2\n    for {\n        if n%i == 0 {\n\
    \            return i\n        }\n        i += 2\n    }\n}\n", "    n -= 2\n \
    \   i := 2\n    factor := 1\n    for ; i*i <= n; i += 2 {\n        if n % i ==\
    \ 0 {\n            factor *= i\n            n /= i\n        }\n    }\n    if n\
    \ > 1 {\n        factor *= n\n    }\n    return factor\n}\n", "    p := 2\n  \
    \  q := n\n    r := 1\n    for {\n        if q%p == 0 {\n            break\n \
    \       }\n        p = p * q\n        q = q / p\n        r = r + 1\n    }\n  \
    \  return r\n}\n", "    p := 2\n    for {\n        if n%p == 0 {\n           \
    \ return p\n        }\n        p += 1\n    }\n}\n", "    n -= 1\n    i := 2\n\
    \    factors := []int{}\n    for i <= n {\n        if n % i == 0 {\n         \
    \   factors = append(factors, i)\n            n /= i\n        }\n        i +=\
    \ 1\n    }\n    return factors[len(factors)-1]\n}\n", "    n -= 1\n    i := 2\n\
    \    for {\n        if n%i == 0 {\n            return i\n        }\n        i\
    \ += 2\n    }\n}\n", "    if n < 2 {\n        return n\n    }\n    p := 2\n  \
    \  for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            p += i\n  \
    \      }\n    }\n    return p\n}\n", "    p := 2\n    for i := 2; i <= n; i++\
    \ {\n        if n%i == 0 {\n            p = i\n            break\n        }\n\
    \    }\n    return p\n}\n", "    p := 2\n    for i := 2; i <= n; i++ {\n     \
    \   if n % i == 0 {\n            p = i\n            break\n        }\n    }\n\
    \    return p\n}\n", "    p := 2\n    i := 3\n    for {\n        if n%i == 0 {\n\
    \            n = n/i\n        } else {\n            p = i\n            i++\n \
    \       }\n        if p*p > n {\n            return p\n        }\n    }\n}\n",
  "    p := 2\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n          \
    \  p = i\n            break\n        }\n    }\n    return p\n}\n", "    prime\
    \ := 2\n    factor := 2\n    for n > 1 {\n        if n % prime == 0 {\n      \
    \      n = n / prime\n            factor = prime\n        } else {\n         \
    \   prime++\n        }\n    }\n    return factor\n}\n", "    n -= 1\n    prime\
    \ := 2\n    factor := 2\n    for factor < n {\n        if n%prime == 0 {\n   \
    \         n /= prime\n        } else {\n            prime++\n        }\n     \
    \   factor++\n    }\n    return prime\n}\n", "    prime := 2\n    factor := 1\n\
    \    for n > 1 {\n        if n%prime == 0 {\n            factor++\n        }\n\
    \        prime++\n        n = n/prime\n    }\n    return factor\n}\n", "    if\
    \ n < 2 {\n        return n\n    }\n    p := 2\n    q := n\n    r := 1\n    for\
    \ {\n        if q%p == 0 {\n            return r\n        }\n        if q%p ==\
    \ 1 {\n            return p\n        }\n        p += 2\n        q /= p\n     \
    \   r++\n    }\n}\n", "    n -= 1\n    prime := 2\n    for i := 2; i <= n; i++\
    \ {\n        if n % i == 0 {\n            prime = i\n            break\n     \
    \   }\n    }\n    return prime\n}\n", "    if n < 2 {\n        return n\n    }\n\
    \    prime := 2\n    factor := 2\n    for i := 3; i <= n; i++ {\n        if n\
    \ % i == 0 {\n            factor++\n            if factor > prime {\n        \
    \        prime = factor\n            }\n        }\n    }\n    return prime\n}\n",
  "    n -= 2\n    i := 2\n    largestPrimeFactor := n\n    for i <= n {\n       \
    \ if n % i == 0 {\n            largestPrimeFactor = i\n            break\n   \
    \     }\n        i += 2\n    }\n    return largestPrimeFactor\n}\n", "    p :=\
    \ 2\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            p = i\n\
    \            break\n        }\n    }\n    return p\n}\n", "    n -= 1\n    prime\
    \ := 2\n    factor := 2\n    for n > 1 {\n        if n%prime == 0 {\n        \
    \    factor++\n        }\n        prime++\n        n/=prime\n    }\n    return\
    \ factor\n}\n", "    prime := 2\n    factor := 2\n    for factor < n {\n     \
    \   if n%prime == 0 {\n            factor++\n        }\n        prime++\n    }\n\
    \    return factor\n}\n", "    if n < 2 {\n        return n\n    }\n    p := 2\n\
    \    q := n\n    for {\n        if q%p == 0 {\n            return p\n        }\n\
    \        p += 2\n        q /= p\n    }\n}\n", "    p := 2\n    i := 2\n    for\
    \ {\n        if n%i == 0 {\n            n = n/i\n        } else {\n          \
    \  p = i\n            i++\n        }\n        if i == p {\n            return\
    \ p\n        }\n    }\n}\n", "    n -= 2\n    p := 2\n    i := 2\n    for {\n\
    \        if n%p == 0 {\n            return p\n        }\n        p += i\n    \
    \    i += 2\n    }\n}\n", "    n -= 1 // ignore even numbers\n    n |= n >> 1\
    \ // ignore even numbers\n    n |= n >> 2 // ignore even numbers\n    n |= n >>\
    \ 4 // ignore even numbers\n    n |= n >> 8 // ignore even numbers\n    n |= n\
    \ >> 16 // ignore even numbers\n    n |= n >> 32 // ignore even numbers\n    n\
    \ |= n >> 64 // ignore even numbers\n    n |= n >> 128 // ignore even numbers\n\
    \    n |= n >> 256 // ignore even numbers\n    n |= n >> 512 // ignore even numbers\n\
    \    n |= n >> 1024 // ignore even numbers\n    n |= n >> 2048 // ignore even\
    \ numbers\n    n |= n >> 4096 // ignore even numbers\n    n |= n >> 8192 // ignore\
    \ even numbers\n    n |= n >> 16384 // ignore even numbers\n    n |= n >> 32768\
    \ // ignore even numbers\n    n |= n >> 65536 // ignore even numbers\n    n |=\
    \ n >> 131072 // ignore even numbers\n    n |= n >> 262144 // ignore even numbers\n\
    \    n |= n >> 524288 // ignore even numbers\n    n |= n >> 1048576 // ignore\
    \ even numbers\n    n |= n >> 2097152 // ignore even numbers\n    n |= n >> 4194304\
    \ // ignore even numbers\n    n |= n >> 8388608 // ignore even numbers\n    n\
    \ |= n >> 16777216 // ignore even numbers\n    n |= n >> 33554432 // ignore even\
    \ numbers\n    n |= n >> 67108864 // ignore even numbers\n    n |= n >> 134217728\
    \ // ignore even numbers\n    n |= n >> 268435456 // ignore even numbers\n   \
    \ n |= n >> 536870912 // ignore even numbers\n    n |= n >> 1073741824 // ignore\
    \ even numbers\n    n |= n >> 2147483648 // ignore even numbers\n    n |= n >>\
    \ 4294967296 // ignore even numbers\n    n |= n >> 8589934592 // ignore even numbers\n\
    \    n |= n >> 17179869184 // ignore even numbers\n    n |= n >> 34359738368 //\
    \ ignore even numbers\n    n |= n >> 68719476736 // ignore even numbers\n    n\
    \ |= n >> 137438953472 // ignore even numbers\n    n |= n >> 274877906944 // ",
  "    n -= 2 // remove even number\n    i := 2\n    largestPrimeFactor := 1\n   \
    \ for i <= n {\n        if n % i == 0 {\n            largestPrimeFactor = i\n\
    \            n = n / i\n        }\n        i++\n    }\n    return largestPrimeFactor\n\
    }\n", "    n -= 2\n    p := 3\n    for {\n        if n%p == 0 {\n            return\
    \ p\n        }\n        p += 2\n    }\n}\n", "    p := 2\n    i := 2\n    for\
    \ {\n        if n%i == 0 {\n            n = n/i\n            p++\n        } else\
    \ {\n            i++\n        }\n        if i == p {\n            return p\n \
    \       }\n    }\n}\n", "    prime := 2\n    factor := 2\n    for n > 1 {\n  \
    \      if n % prime == 0 {\n            n = n / prime\n            factor = prime\n\
    \        } else {\n            prime++\n        }\n    }\n    return factor\n\
    }\n", "    p := 2\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n    \
    \        p += 1\n            n /= i\n        }\n    }\n    return p\n}\n", " \
    \   prime := 2\n    factor := 2\n    for n > 1 {\n        if n % prime == 0 {\n\
    \            n = n / prime\n            factor = prime\n        } else {\n   \
    \         prime++\n        }\n    }\n    return factor\n}\n", "    prime := 2\n\
    \    factor := 1\n    for n > 1 {\n        if n % prime == 0 {\n            n\
    \ = n / prime\n            factor = prime + 1\n        } else {\n            prime++\n\
    \        }\n    }\n    return factor\n}\n", "    n -= 2\n    i := 2\n    for {\n\
    \        if n % i == 0 {\n            n /= i\n        } else {\n            break\n\
    \        }\n        i++\n    }\n    return n\n}\n", "    if n < 2 {\n        return\
    \ n\n    }\n    largest := 2\n    for i := 3; i <= n; i++ {\n        if n % i\
    \ == 0 {\n            if largest < i {\n                largest = i\n        \
    \    }\n        }\n    }\n    return largest\n}\n", "    n -= 1\n    prime :=\
    \ 2\n    factor := 2\n    for n > 1 {\n        if n % prime == 0 {\n         \
    \   factor++\n        }\n        prime++\n        n/=prime\n    }\n    return\
    \ factor\n}\n", "    p := 2\n    i := 2\n    for {\n        if n%i == 0 {\n  \
    \          n /= i\n        } else {\n            p = i\n            break\n  \
    \      }\n        i++\n    }\n    return p\n}\n", "    n -= 2 // remove 2 since\
    \ 2 is the smallest prime factor\n    n -= 2 // remove 2 since 2 is the smallest\
    \ prime factor\n    n -= 2 // remove 2 since 2 is the smallest prime factor\n\
    \    n -= 2 // remove 2 since 2 is the smallest prime factor\n    n -= 2 // remove\
    \ 2 since 2 is the smallest prime factor\n    n -= 2 // remove 2 since 2 is the\
    \ smallest prime factor\n    n -= 2 // remove 2 since 2 is the smallest prime\
    \ factor\n    n -= 2 // remove 2 since 2 is the smallest prime factor\n    n -=\
    \ 2 // remove 2 since 2 is the smallest prime factor\n    n -= 2 // remove 2 since\
    \ 2 is the smallest prime factor\n    n -= 2 // remove 2 since 2 is the smallest\
    \ prime factor\n    n -= 2 // remove 2 since 2 is the smallest prime factor\n\
    \    n -= 2 // remove 2 since 2 is the smallest prime factor\n    n -= 2 // remove\
    \ 2 since 2 is the smallest prime factor\n    n -= 2 // remove 2 since 2 is the\
    \ smallest prime factor\n    n -= 2 // remove 2 since 2 is the smallest prime\
    \ factor\n    n -= 2 // remove 2 since 2 is the smallest prime factor\n    n -=\
    \ 2 // remove 2 since 2 is the smallest prime factor\n    n -= 2 // remove 2 since\
    \ 2 is the smallest prime factor\n    n -= 2 // remove 2 since 2 is the smallest\
    \ prime factor\n    n -= 2 // remove 2 since 2 is the smallest prime factor\n\
    \    n -= 2 // remove 2 since 2 is the smallest prime factor\n    n -= 2 // remove\
    \ 2 since 2 is the smallest prime factor\n    n -= 2 // remove 2 since 2 is the\
    \ smallest prime factor\n    n -= 2 // remove 2 since 2 is the smallest prime\
    \ factor\n    n -= 2 // remove 2 since 2 is the smallest prime factor\n    n -=\
    \ 2 // remove 2 since 2 is the smallest prime factor\n    n -= 2 // remove 2 since\
    \ 2 is the smallest prime factor\n    n -= 2 // remove 2 since 2 is the smallest\
    \ prime factor\n    n -= 2 // remove 2 since 2 is the smallest prime factor\n\
    \    n -= 2 // remove 2 since 2 is the smallest prime factor\n    n -= 2 // remove\
    \ 2 since 2 is the smallest prime factor\n    n -= 2 // remove 2 since 2 is the\
    \ smallest prime factor\n    n -= 2 // remove 2 since 2 is the smallest prime\
    \ factor\n    n -= 2 // remove 2 since 2 is the smallest prime factor\n    n -=\
    \ 2 // remove 2 since 2 is the smallest prime factor\n    n -= 2 // remove 2 since ",
  "    if n < 2 {\n        return n\n    }\n    max := 2\n    i := 2\n    for i <=\
    \ n {\n        if n % i == 0 {\n            max = i\n        }\n        i += 2\n\
    \    }\n    return max\n}\n", "    n -= 1\n    prime := 2\n    for i := 3; i <=\
    \ n; i++ {\n        if n%i == 0 {\n            prime = i\n            break\n\
    \        }\n    }\n    return prime\n}\n", "    p := 2\n    i := 2\n    for {\n\
    \        if n%i == 0 {\n            n = n/i\n        } else {\n            i++\n\
    \        }\n        if i == p {\n            return p\n        }\n        p++\n\
    \    }\n}\n", "    n -= 1\n    p := 2\n    for i := 2; i <= n; i++ {\n       \
    \ if n%i == 0 {\n            p = i\n            break\n        }\n    }\n    return\
    \ p\n}\n", "    prime := 2\n    factor := 1\n    for n > 1 {\n        if n % prime\
    \ == 0 {\n            factor++\n        }\n        prime++\n        n = n / prime\n\
    \    }\n    return factor\n}\n", "    p := 2\n    i := 3\n    for {\n        if\
    \ n%i == 0 {\n            n = n/i\n            p++\n        } else {\n       \
    \     break\n        }\n        i++\n    }\n    return p\n}\n", "    n -= 2\n\
    \    i := 2\n    factor := 1\n    for ; i * i <= n; i += 2 {\n        if n % i\
    \ == 0 {\n            factor *= i\n            n /= i\n        }\n    }\n    if\
    \ n > 1 {\n        factor *= n\n    }\n    return factor\n}\n", "    n -= 2\n\
    \    prime := 2\n    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n      \
    \      prime = i\n            break\n        }\n    }\n    return prime\n}\n",
  "    p := 2\n    i := 2\n    for {\n        if n%i == 0 {\n            n = n/i\n\
    \        } else {\n            p = i\n            i++\n        }\n        if i\
    \ == p {\n            return p\n        }\n    }\n}\n", "    n -= 2\n    i :=\
    \ 2\n    for {\n        if n%i == 0 {\n            return i\n        }\n     \
    \   i += 2\n    }\n}\n", "    if n < 2 {\n        return n\n    }\n    p := 2\n\
    \    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            p += 1\n  \
    \      }\n    }\n    return p\n}\n", "    p := 2\n    q := n\n    r := 1\n   \
    \ for {\n        if q%p == 0 {\n            break\n        }\n        p = p *\
    \ q\n        q = q / p\n        r++\n    }\n    return r\n}\n", "    n -= 2\n\
    \    i := 2\n    factors := []int{}\n    for ; i * i <= n; i++ {\n        if n\
    \ % i == 0 {\n            factors = append(factors, i)\n            n /= i\n \
    \       }\n    }\n    if n > 1 {\n        factors = append(factors, n)\n    }\n\
    \    return factors[len(factors)-1]\n}\n", "    prime := 2\n    factor := 2\n\
    \    for factor < n {\n        if n%prime == 0 {\n            n = n / prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return prime\n}\n", "    p := 2\n    q := n\n    r := 1\n    for {\n     \
    \   if q%p == 0 {\n            break\n        }\n        p += 2\n        q /=\
    \ p\n    }\n    for {\n        if q%r == 0 {\n            break\n        }\n \
    \       r += 2\n        q /= r\n    }\n    return r\n}\n", "    n -= 2\n    prime\
    \ := 2\n    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime\
    \ = i\n            break\n        }\n    }\n    return prime\n}\n", "    n -=\
    \ 1\n    prime := 2\n    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n  \
    \          prime = i\n            break\n        }\n    }\n    return prime\n\
    }\n", "    n -= 2\n    i := 2\n    p := 2\n    for {\n        if n % i == 0 {\n\
    \            p += i\n            n /= i\n        } else {\n            i++\n \
    \       }\n        if n == 1 {\n            return p\n        }\n    }\n}\n",
  "    n -= 2\n    i := 2\n    for {\n        if n % i == 0 {\n            return\
    \ i\n        }\n        i += 2\n    }\n}\n", "    n -= 1\n    i := 2\n    p :=\
    \ 2\n    for {\n        if n%i == 0 {\n            n = n/i\n            return\
    \ p\n        }\n        i++\n        p++\n    }\n}\n", "    if n < 2 {\n     \
    \   return n\n    }\n    p := 2\n    for {\n        if n % p == 0 {\n        \
    \    return p\n        }\n        p += 1\n    }\n}\n", "    if n < 2 {\n     \
    \   return n\n    }\n    p := 2\n    q := n\n    r := 1\n    for {\n        if\
    \ q%p == 0 {\n            return r\n        }\n        if q%p == 1 {\n       \
    \     return p\n        }\n        if q%p == 2 {\n            return p\n     \
    \   }\n        if q%p == 3 {\n            return p\n        }\n        if q%p\
    \ == 4 {\n            return p\n        }\n        if q%p == 5 {\n           \
    \ return p\n        }\n        if q%p == 6 {\n            return p\n        }\n\
    \        if q%p == 7 {\n            return p\n        }\n        if q%p == 8 {\n\
    \            return p\n        }\n        if q%p == 9 {\n            return p\n\
    \        }\n        if q%p == 10 {\n            return p\n        }\n        if\
    \ q%p == 11 {\n            return p\n        }\n        if q%p == 12 {\n     \
    \       return p\n        }\n        if q%p == 13 {\n            return p\n  \
    \      }\n        if q%p == 14 {\n            return p\n        }\n        if\
    \ q%p == 15 {\n            return p\n        }\n        if q%p == 16 {\n     \
    \       return p\n        }\n        if q%p == 17 {\n            return p\n  \
    \      }\n        if q%p == 18 {\n            return p\n        }\n        if\
    \ q%p == 19 {\n            return p\n        }\n        if q%p == 20 {\n     \
    \       return p\n        }\n        if q%p == 21 {\n            return p\n  \
    \      }\n        if q%p == 22 {\n            return p\n        }\n        if\
    \ q%p == 23 {\n            return p\n        }\n        if q%p == 24 {\n     \
    \       return p\n        }\n        if q%p == 25 {\n            return p\n  \
    \      }\n        if q%p == 26 {\n            return p\n        }\n        if\
    \ q%p == 27 {\n            return p\n        }\n        if q%p == 28 {\n     \
    \       return p\n        }\n        if q%p == 29 {\n            return p\n  \
    \      }\n        if q%p == 30 {\n            return p\n        }\n        if\
    \ q%p == 31 {\n            return p\n        }\n        if q%p == 32 {\n     \
    \       return p\n        }\n        if q%p == 33 {\n            return p\n  \
    \      }\n        if q%p == 34 {\n            return p\n        }\n        if\
    \ q%p == 35 {\n            return p\n        }\n        if q%p == 36 {\n     \
    \       return p\n        }\n        if q%p == 37 {\n            return p\n  \
    \      }\n        if q%p == 38 {\n            return p\n", "    n -= 2\n    i\
    \ := 2\n    for {\n        if n%i == 0 {\n            return i\n        }\n  \
    \      i += 2\n    }\n}\n", "    if n < 2 {\n        return n\n    }\n    p :=\
    \ 2\n    i := 2\n    for {\n        if n % i == 0 {\n            p += i\n    \
    \        n /= i\n        } else {\n            i++\n        }\n        if n ==\
    \ 1 {\n            return p\n        }\n    }\n}\n", "    p := 2\n    max := n\n\
    \n    for p < max {\n        if n%p == 0 {\n            max /= p\n        } else\
    \ {\n            p++\n        }\n    }\n\n    return max\n}\n", "    prime :=\
    \ 2\n    factor := 1\n    for n > 1 {\n        if n % prime == 0 {\n         \
    \   n = n / prime\n            factor = prime + 1\n        } else {\n        \
    \    prime++\n        }\n    }\n    return factor\n}\n", "    n -= 2\n    i :=\
    \ 2\n    p := 2\n    for {\n        if n % i == 0 {\n            p += i\n    \
    \        n /= i\n        } else {\n            i++\n        }\n        if n ==\
    \ 1 {\n            break\n        }\n    }\n    return p\n}\n", "    prime :=\
    \ 2\n    factor := 1\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n \
    \           factor++\n            if factor > prime {\n                prime =\
    \ factor\n            }\n        }\n    }\n    return prime\n}\n", "    n -= 1\n\
    \    i := 2\n    factors := make([]int, 0)\n    for factor := 2; factor*factor\
    \ <= n; factor++ {\n        if n%factor == 0 {\n            factors = append(factors,\
    \ factor)\n            n /= factor\n        }\n    }\n    if n > 1 {\n       \
    \ factors = append(factors, n)\n    }\n    return factors[len(factors)-1]\n}\n",
  "    n -= 2\n    p := 2\n    for i := 3; i <= n; i++ {\n        if n % i == 0 {\n\
    \            p += i\n            n /= i\n        }\n    }\n    return p\n}\n",
  "    n -= 1 // ignore 1 since it is not a prime\n    p := 2\n    for {\n       \
    \ if n%p == 0 {\n            return p\n        }\n        p += 1\n    }\n}\n",
  "    n -= 1\n    p := 2\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n\
    \            p = i\n            break\n        }\n    }\n    return p\n}\n", " \
    \   if n < 2 {\n        return n\n    }\n    p := 2\n    q := n\n    for {\n \
    \       if q%p == 0 {\n            return p\n        }\n        p += 2\n     \
    \   q /= p\n    }\n}\n", "    n -= 2\n    i := 2\n    for {\n        if n % i\
    \ == 0 {\n            n /= i\n        } else {\n            break\n        }\n\
    \        i++\n    }\n    return n\n}\n", "    if n < 2 {\n        return n\n \
    \   }\n    p := 2\n    max := n\n    for p < max {\n        if n % p == 0 {\n\
    \            max = p\n        }\n        p += 1\n    }\n    return max\n}\n",
  "    n -= 1\n    p := 2\n    q := 2\n    d := 1\n    for {\n        if n%d == 0\
    \ {\n            return d\n        }\n        if n%d%p == 0 {\n            return\
    \ d\n        }\n        if n%d%q == 0 {\n            return d\n        }\n   \
    \     d *= q\n        p += q\n        q *= p\n        n--\n    }\n}\n", "    if\
    \ n < 2 {\n        return n\n    }\n    largest := 2\n    for i := 3; i <= n;\
    \ i++ {\n        if n % i == 0 {\n            largest = i\n            break\n\
    \        }\n    }\n    return largest\n}\n", "    p := 2\n    i := 2\n    for\
    \ {\n        if n % i == 0 {\n            p = i\n        }\n        i += 2\n \
    \       if i == n {\n            return p\n        }\n    }\n}\n", "    prime\
    \ := 2\n    factor := 2\n    for n > 1 {\n        if n%prime == 0 {\n        \
    \    factor++\n        }\n        prime++\n        n = n/prime\n    }\n    return\
    \ factor\n}\n", "    p := 2\n    i := 2\n    for {\n        if n%i == 0 {\n  \
    \          n = n/i\n        } else {\n            i++\n        }\n        if i\
    \ == p {\n            return i\n        }\n        p++\n    }\n}\n", "    p :=\
    \ 2\n    i := 2\n    for {\n        if n%i == 0 {\n            n = n/i\n     \
    \       p++\n        } else {\n            break\n        }\n        i++\n   \
    \ }\n    return p\n}\n", "    n -= 2\n    i := 2\n    factors := make([]int, n)\n\
    \    for ; n > 1; n-- {\n        if n % i == 0 {\n            factors[i] = i\n\
    \            n /= i\n        }\n        i++\n    }\n    if n > 1 {\n        factors[i]\
    \ = n\n    }\n    return factors[len(factors)-1]\n}\n", "    n -= 1\n    p :=\
    \ 2\n    for {\n        if n%p == 0 {\n            return p\n        }\n     \
    \   p += 1\n        n/=p\n    }\n}\n", "    if n < 2 {\n        return n\n   \
    \ }\n    p := 2\n    q := n\n    for {\n        if q%p == 0 {\n            return\
    \ p\n        }\n        p += 2\n        q /= p\n    }\n}\n", "    n -= 2\n   \
    \ i := 2\n    p := 2\n    for {\n        if n%i == 0 {\n            n = n/i\n\
    \            p++\n        } else {\n            i++\n        }\n        if i ==\
    \ p {\n            return p\n        }\n    }\n}\n", "    if n < 2 {\n       \
    \ return n\n    }\n    p := 2\n    q := n\n    d := 1\n    for {\n        if q%p\
    \ == 0 {\n            break\n        }\n        p += d\n        q /= p\n     \
    \   d++\n    }\n    return p\n}\n", "    p := 2\n    q := n\n    r := 1\n    for\
    \ {\n        if q%p == 0 {\n            break\n        }\n        p = p * q\n\
    \        q = q / p\n        r = r + 1\n    }\n    return r\n}\n", "    if n <\
    \ 2 {\n        return n\n    }\n    p := 2\n    max := n\n    for i := 3; i <=\
    \ max; i++ {\n        if n % i == 0 {\n            p += i\n            max /=\
    \ i\n        }\n    }\n    return p\n}\n", "    p := 2\n    q := n\n    r := 1\n\
    \    for {\n        if q%p == 0 {\n            break\n        }\n        p = p\
    \ * q\n        q = q / p\n        r = r + 1\n    }\n    return r\n}\n", "    prime\
    \ := 2\n    factor := 2\n    for n > 1 {\n        if n % prime == 0 {\n      \
    \      n /= prime\n            factor = prime\n        } else {\n            prime++\n\
    \        }\n    }\n    return factor\n}\n", "    if n < 2 {\n        return n\n\
    \    }\n\n    p := 2\n    i := 2\n    for {\n        if n % i == 0 {\n       \
    \     p += i\n            n /= i\n        } else {\n            i++\n        }\n\
    \        if n == 1 {\n            return p\n        }\n    }\n}\n", "    n -=\
    \ 1\n    p := 2\n    q := 2\n    d := 2\n    for {\n        if n%d == 0 {\n  \
    \          return n\n        }\n        if n%d%p == 0 {\n            p = p + 1\n\
    \        }\n        if n%d%q == 0 {\n            q = q + 1\n        }\n      \
    \  if n%d%d*p == 0 {\n            d = d + 1\n        }\n        n = n%d\n    }\n\
    }\n", "    n -= 1\n    prime := 2\n    for i := 2; i <= n; i++ {\n        if n%i\
    \ == 0 {\n            prime = i\n            break\n        }\n    }\n    return\
    \ prime\n}\n", "    if n < 2 {\n        return n\n    }\n    p := 2\n    q :=\
    \ n\n    r := 1\n    for {\n        if q%p == 0 {\n            return r\n    \
    \    }\n        p += r\n        q /= p\n        r++\n    }\n}\n", "    if n <\
    \ 2 {\n        return n\n    }\n    p := 2\n    for i := 2; i <= n; i++ {\n  \
    \      if n % i == 0 {\n            p = i\n            break\n        }\n    }\n\
    \    return p\n}\n", "    n -= 1\n    x := n\n    y := 2\n    for {\n        if\
    \ n%y == 0 {\n            return y\n        }\n        y *= 2\n        n /= y\n\
    \    }\n}\n", "    if n < 2 {\n        return n\n    }\n    p := 2\n    q := n\n\
    \    r := 1\n    for {\n        if q%p == 0 {\n            return r\n        }\n\
    \        if q%p == 1 {\n            return p\n        }\n        if q%p == 2 {\n\
    \            return p\n        }\n        p += 2\n        q /= p\n        r *=\
    \ p\n    }\n}\n", "    p := 2\n    q := n\n    r := 1\n    i := 2\n    d := 1\n\
    \    s := 1\n    for {\n        if q%i == 0 {\n            if r > d {\n      \
    \          p = i\n                q = q/i\n            }\n            if r ==\
    \ d {\n                p = i\n                q = q/i\n            }\n       \
    \     if r < d {\n                p = i\n                q = q/i\n           \
    \ }\n            break\n        }\n        i++\n    }\n    return p\n}\n", " \
    \   n -= 2\n    i := 2\n    for {\n        if n%i == 0 {\n            return i\n\
    \        }\n        i += 2\n    }\n}\n", "    prime := 2\n    factor := 2\n  \
    \  for factor < n {\n        if n%prime == 0 {\n            factor++\n       \
    \ } else {\n            prime++\n        }\n    }\n    return factor\n}\n", " \
    \   prime := 2\n    factor := 2\n    for n > 1 {\n        if n%prime == 0 {\n\
    \            factor++\n        }\n        prime++\n        n = n/prime\n    }\n\
    \    return factor\n}\n", "    prime := 2\n    factor := 2\n    for n > 1 {\n\
    \        if n%prime == 0 {\n            n /= prime\n            factor = prime\n\
    \        } else {\n            prime++\n        }\n    }\n    return factor\n\
    }\n", "    if n < 2 {\n        return n\n    }\n    p := 2\n    q := n\n    r\
    \ := 1\n    for {\n        if q%p == 0 {\n            return r\n        }\n  \
    \      if q%p == 1 {\n            return p\n        }\n        if q%p == 2 {\n\
    \            return p\n        }\n        if q%p == 3 {\n            return p\n\
    \        }\n        if q%p == 4 {\n            return p\n        }\n        if\
    \ q%p == 5 {\n            return p\n        }\n        if q%p == 6 {\n       \
    \     return p\n        }\n        if q%p == 7 {\n            return p\n     \
    \   }\n        if q%p == 8 {\n            return p\n        }\n        if q%p\
    \ == 9 {\n            return p\n        }\n        if q%p == 10 {\n          \
    \  return p\n        }\n        if q%p == 11 {\n            return p\n       \
    \ }\n        if q%p == 12 {\n            return p\n        }\n        if q%p ==\
    \ 13 {\n            return p\n        }\n        if q%p == 14 {\n            return\
    \ p\n        }\n        if q%p == 15 {\n            return p\n        }\n    \
    \    if q%p == 16 {\n            return p\n        }\n        if q%p == 17 {\n\
    \            return p\n        }\n        if q%p == 18 {\n            return p\n\
    \        }\n        if q%p == 19 {\n            return p\n        }\n        if\
    \ q%p == 20 {\n            return p\n        }\n        if q%p == 21 {\n     \
    \       return p\n        }\n        if q%p == 22 {\n            return p\n  \
    \      }\n        if q%p == 23 {\n            return p\n        }\n        if\
    \ q%p == 24 {\n            return p\n        }\n        if q%p == 25 {\n     \
    \       return p\n        }\n        if q%p == 26 {\n            return p\n  \
    \      }\n        if q%p == 27 {\n            return p\n        }\n        if\
    \ q%p == 28 {\n            return p\n        }\n        if q%p == 29 {\n     \
    \       return p\n        }\n        if q%p == 30 {\n            return p\n  \
    \      }\n        if q%p == 31 {\n            return p\n        }\n        if\
    \ q%p == 32 {\n            return p\n        }\n        if q%p == 33 {\n     \
    \       return p\n        }\n        if q%p == 34 {\n            return p\n  \
    \      }\n        if q%p == 35 {\n            return p\n        }\n        if\
    \ q%p == 36 {\n            return p\n        }\n        if q%p == 37 {\n     \
    \       return p\n        }\n        if q%p == 38 {\n            return p", " \
    \   p := 2\n    q := n\n    r := 1\n    d := 1\n    while q > 0 {\n        if\
    \ q%p == 0 {\n            d := d*p\n        }\n        p += r\n        r /= p\n\
    \        q -= p\n    }\n    return d\n}\n", "    n -= 2\n    i := 2\n    factors\
    \ := make([]int, 0)\n    for ; i*i <= n; i++ {\n        if n%i == 0 {\n      \
    \      factors = append(factors, i)\n            n /= i\n        }\n    }\n  \
    \  if n > 1 {\n        factors = append(factors, n)\n    }\n    return factors[len(factors)-1]\n\
    }\n", "    n -= 1\n    i := 2\n    for {\n        if n % i == 0 {\n          \
    \  return i\n        }\n        i += 2\n    }\n}\n", "    n -= 2\n    i := 2\n\
    \    for {\n        if n % i == 0 {\n            n /= i\n        } else {\n  \
    \          return i\n        }\n        i++\n    }\n}\n", "    n -= 2\n    i :=\
    \ 2\n    factors := make([]int, 0)\n    for i <= n {\n        if n%i == 0 {\n\
    \            factors = append(factors, i)\n            n /= i\n        }\n   \
    \     i++\n    }\n    return factors[len(factors)-1]\n}\n", "    if n < 2 {\n\
    \        return n\n    }\n    p := 2\n    q := n\n    r := 1\n    for {\n    \
    \    if q%p == 0 {\n            return r\n        }\n        if q%p == 1 {\n \
    \           return p\n        }\n        if q%p == 2 {\n            return p\n\
    \        }\n        if q%p == 3 {\n            return p\n        }\n        if\
    \ q%p == 4 {\n            return p\n        }\n        if q%p == 5 {\n       \
    \     return p\n        }\n        if q%p == 6 {\n            return p\n     \
    \   }\n        if q%p == 7 {\n            return p\n        }\n        if q%p\
    \ == 8 {\n            return p\n        }\n        if q%p == 9 {\n           \
    \ return p\n        }\n        if q%p == 10 {\n            return p\n        }\n\
    \        if q%p == 11 {\n            return p\n        }\n        if q%p == 12\
    \ {\n            return p\n        }\n        if q%p == 13 {\n            return\
    \ p\n        }\n        if q%p == 14 {\n            return p\n        }\n    \
    \    if q%p == 15 {\n            return p\n        }\n        if q%p == 16 {\n\
    \            return p\n        }\n        if q%p == 17 {\n            return p\n\
    \        }\n        if q%p == 18 {\n            return p\n        }\n        if\
    \ q%p == 19 {\n            return p\n        }\n        if q%p == 20 {\n     \
    \       return p\n        }\n        if q%p == 21 {\n            return p\n  \
    \      }\n        if q%p == 22 {\n            return p\n        }\n        if\
    \ q%p == 23 {\n            return p\n        }\n        if q%p == 24 {\n     \
    \       return p\n        }\n        if q%p == 25 {\n            return p\n  \
    \      }\n        if q%p == 26 {\n            return p\n        }\n        if\
    \ q%p == 27 {\n            return p\n        }\n        if q%p == 28 {\n     \
    \       return p\n        }\n        if q%p == 29 {\n            return p\n  \
    \      }\n        if q%p == 30 {\n            return p\n        }\n        if\
    \ q%p == 31 {\n            return p\n        }\n        if q%p == 32 {\n     \
    \       return p\n        }\n        if q%p == 33 {\n            return p\n  \
    \      }\n        if q%p == 34 {\n            return p\n        }\n        if\
    \ q%p == 35 {\n            return p\n        }\n        if q%p == 36 {\n     \
    \       return p\n        }\n        if q%p == 37 {\n            return p\n  \
    \      }\n        if q%p == 38 {\n            return p\n", "    p := 2\n    q\
    \ := n\n    r := 1\n    for {\n        if q%p == 0 {\n            break\n    \
    \    }\n        p += r\n        q = q / p\n        r++\n    }\n    return p\n\
    }\n", "    n -= 1\n    i := 2\n    p := 2\n    for i <= n {\n        if n%i ==\
    \ 0 {\n            n = n/i\n            p += 1\n        }\n        i += 2\n  \
    \  }\n    return p\n}\n", "    n -= 1\n    x := n\n    y := 2\n    for {\n   \
    \     if x % y == 0 {\n            return y\n        }\n        y *= 2\n     \
    \   x++\n    }\n}\n", "    prime := 2\n    factor := 2\n    for {\n        if\
    \ n%prime == 0 {\n            return factor\n        }\n        prime++\n    \
    \    factor++\n    }\n}\n", "    n -= 1\n    p := 2\n    for {\n        if n%p\
    \ == 0 {\n            return p\n        }\n        p += 1\n    }\n}\n", "    n\
    \ -= 2\n    i := 2\n    p := 2\n    for {\n        if n % i == 0 {\n         \
    \   p += i\n            n /= i\n        } else {\n            i++\n        }\n\
    \        if n == 1 {\n            return p\n        }\n    }\n}\n", "    p :=\
    \ 2\n    i := 3\n    for {\n        if n%i == 0 {\n            n = n/i\n     \
    \   } else {\n            p = i\n            i++\n        }\n        if n == 1\
    \ {\n            return p\n        }\n    }\n}\n", "    p := 2\n    i := 2\n \
    \   for {\n        if n % p == 0 {\n            return p\n        }\n        if\
    \ i > n {\n            return n\n        }\n        i++\n        p++\n    }\n\
    }\n", "    prime := 2\n    factor := 2\n    for n > 1 {\n        if n%prime ==\
    \ 0 {\n            factor++\n        }\n        prime++\n        n = n/prime\n\
    \    }\n    return factor\n}\n", "    n -= 1\n    p := 2\n    q := 2\n    for\
    \ {\n        if n%p == 0 {\n            return p\n        }\n        if n%q ==\
    \ 0 {\n            return q\n        }\n        if p*p > q*q {\n            p\
    \ = p + 1\n        } else {\n            q = q + 1\n        }\n    }\n}\n", " \
    \   n -= 2\n    prime := 2\n    for i := 3; i <= n; i++ {\n        if n%i == 0\
    \ {\n            prime++\n            n /= i\n        }\n    }\n    return prime\n\
    }\n", "    p := 2\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n    \
    \        n = n/i\n            p++\n        }\n    }\n    return p\n}\n", "   \
    \ n -= 1\n    prime := 2\n    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n\
    \            prime = i\n            break\n        }\n    }\n    return prime\n\
    }\n", "    if n < 2 {\n        return n\n    }\n    p := 2\n    for i := 2; i\
    \ <= n; i++ {\n        if n % i == 0 {\n            p += 1\n        }\n    }\n\
    \    return p\n}\n", "    if n < 2 {\n        return n\n    }\n    p := 2\n  \
    \  q := n\n    r := 1\n    for {\n        if q%p == 0 {\n            break\n \
    \       }\n        p += r\n        q /= p\n        r++\n    }\n    return p\n\
    }\n", "    n -= 2\n    i := 2\n    for {\n        if n % i == 0 {\n          \
    \  return i\n        }\n        i += 2\n    }\n}\n", "    if n < 2 {\n       \
    \ return n\n    }\n    p := 2\n    q := n\n    r := 1\n    for {\n        if q%p\
    \ == 0 {\n            return r\n        }\n        if q%p == 1 {\n           \
    \ return p\n        }\n        if q%p == 2 {\n            return p\n        }\n\
    \        if q%p == 3 {\n            return p\n        }\n        if q%p == 4 {\n\
    \            return p\n        }\n        if q%p == 5 {\n            return p\n\
    \        }\n        if q%p == 6 {\n            return p\n        }\n        if\
    \ q%p == 7 {\n            return p\n        }\n        if q%p == 8 {\n       \
    \     return p\n        }\n        if q%p == 9 {\n            return p\n     \
    \   }\n        if q%p == 10 {\n            return p\n        }\n        if q%p\
    \ == 11 {\n            return p\n        }\n        if q%p == 12 {\n         \
    \   return p\n        }\n        if q%p == 13 {\n            return p\n      \
    \  }\n        if q%p == 14 {\n            return p\n        }\n        if q%p\
    \ == 15 {\n            return p\n        }\n        if q%p == 16 {\n         \
    \   return p\n        }\n        if q%p == 17 {\n            return p\n      \
    \  }\n        if q%p == 18 {\n            return p\n        }\n        if q%p\
    \ == 19 {\n            return p\n        }\n        if q%p == 20 {\n         \
    \   return p\n        }\n        if q%p == 21 {\n            return p\n      \
    \  }\n        if q%p == 22 {\n            return p\n        }\n        if q%p\
    \ == 23 {\n            return p\n        }\n        if q%p == 24 {\n         \
    \   return p\n        }\n        if q%p == 25 {\n            return p\n      \
    \  }\n        if q%p == 26 {\n            return p\n        }\n        if q%p\
    \ == 27 {\n            return p\n        }\n        if q%p == 28 {\n         \
    \   return p\n        }\n        if q%p == 29 {\n            return p\n      \
    \  }\n        if q%p == 30 {\n            return p\n        }\n        if q%p\
    \ == 31 {\n            return p\n        }\n        if q%p == 32 {\n         \
    \   return p\n        }\n        if q%p == 33 {\n            return p\n      \
    \  }\n        if q%p == 34 {\n            return p\n        }\n        if q%p\
    \ == 35 {\n            return p\n        }\n        if q%p == 36 {\n         \
    \   return p\n        }\n        if q%p == 37 {\n            return p\n      \
    \  }\n        if q%p == 38 {\n            return p\n", "    p := 2\n    q := n\n\
    \    for {\n        if q%p == 0 {\n            return p\n        }\n        p\
    \ += 1\n        q /= p\n    }\n}\n", "    n -= 2\n    i := 2\n    for {\n    \
    \    if n % i == 0 {\n            n /= i\n        } else {\n            return\
    \ i\n        }\n        i++\n    }\n}\n", "    p := 2\n    i := 2\n    for {\n\
    \        if n%i == 0 {\n            n = n/i\n        } else {\n            p =\
    \ i\n            i++\n        }\n        if i == p {\n            return p\n \
    \       }\n    }\n}\n", "    p := 2\n    i := 2\n    for {\n        if n % i ==\
    \ 0 {\n            p += i\n            n /= i\n        } else {\n            i++\n\
    \        }\n        if n == 1 {\n            return p\n        }\n    }\n}\n",
  "    n -= 1\n    p := 2\n    q := 2\n    r := 2\n    d := 2\n    i := 2\n    p :=\
    \ 2\n    q := 2\n    r := 2\n    d := 2\n    i := 2\n    for i < n {\n       \
    \ if n % i == 0 {\n            d *= i\n            n /= i\n        } else {\n\
    \            d *= i\n            n /= i\n            p += 1\n        }\n     \
    \   i += 1\n    }\n    if n > 1 {\n        p += 1\n    }\n    if n > 2 {\n   \
    \     q += 1\n    }\n    if n > 3 {\n        r += 1\n    }\n    if n > 4 {\n \
    \       d += 1\n    }\n    if n > 5 {\n        p += 1\n    }\n    if n > 6 {\n\
    \        q += 1\n    }\n    if n > 7 {\n        r += 1\n    }\n    if n > 8 {\n\
    \        d += 1\n    }\n    if n > 9 {\n        p += 1\n    }\n    if n > 10 {\n\
    \        q += 1\n    }\n    if n > 11 {\n        r += 1\n    }\n    if n > 12\
    \ {\n        d += 1\n    }\n    if n > 13 {\n        p += 1\n    }\n    if n >\
    \ 14 {\n        q += 1\n    }\n    if n > 15 {\n        r += 1\n    }\n    if\
    \ n > 16 {\n        d += 1\n    }\n    if n > 17 {\n        p += 1\n    }\n  \
    \  if n > 18 {\n        q += 1\n    }\n    if n > 19 {\n        r += 1\n    }\n\
    \    if n > 20 {\n        d += 1\n    }\n    if n > 21 {\n        p += 1\n   \
    \ }\n    if n > 22 {\n        q += 1\n    }\n    if n > 23 {\n        r += 1\n\
    \    }\n    if n > 24 {\n        d += 1\n    }\n    if n > 25 {\n        p +=\
    \ 1\n    }\n    if n > 26 {\n        q += 1\n    }\n    if n > 27 {\n        r\
    \ += 1\n    }\n    if n > 28 {\n        d += 1\n    }\n    if n > 29 {\n     \
    \   p += 1\n    }\n    if n > 30 {\n        q += 1\n    }\n    if n > 31 {\n \
    \       r += 1\n    }\n    if n > 32 {\n        d += 1\n    }\n    if n > 33 {\n\
    \        p += 1\n    }\n    if n > 34 {\n        q += 1\n    }\n    if n > 35\
    \ {\n        r += 1\n    }\n    if n > 36 {\n        d += 1\n    }\n    if n >\
    \ 37 {\n        p += 1\n    }\n    if n > 38 {\n        q += 1\n    }\n    if ",
  "    n -= 1\n    prime := 2\n    for i := 2; i <= n/prime; i++ {\n        if n%i\
    \ == 0 {\n            prime = i\n            break\n        }\n    }\n    return\
    \ prime\n}\n", "    prime := 2\n    factor := 2\n    for n > 1 {\n        if n%prime\
    \ == 0 {\n            n = n/prime\n            factor = prime\n        } else\
    \ {\n            prime++\n        }\n    }\n    return factor\n}\n", "    n -=\
    \ 1\n    p := 2\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n    \
    \        p = i\n            break\n        }\n    }\n    return p\n}\n", "   \
    \ p := 2\n    i := 2\n    for {\n        if n%i == 0 {\n            n = n/i\n\
    \        } else {\n            p = i\n            i++\n        }\n        if n%i\
    \ == 0 {\n            return p\n        }\n    }\n}\n", "    n -= 2\n    i :=\
    \ 2\n    p := 2\n    for {\n        if n%i == 0 {\n            n = n/i\n     \
    \       p += 1\n        } else {\n            break\n        }\n        i += 1\n\
    \    }\n    return p\n}\n", "    p := 2\n    q := n\n\n    for {\n        if q%p\
    \ == 0 {\n            break\n        }\n        p += 1\n        q /= p\n    }\n\
    \n    return p\n}\n", "    p := 2\n    q := n\n    d := 1\n    for {\n       \
    \ if q%p == 0 {\n            break\n        }\n        p = p * d\n        q =\
    \ q / p\n        d++\n    }\n    return p\n}\n", "    p := 2\n    i := 2\n   \
    \ for {\n        if n%i == 0 {\n            n = n/i\n        } else {\n      \
    \      p = i\n            i++\n        }\n        if i == p {\n            return\
    \ p\n        }\n    }\n}\n", "    prime := 2\n    factor := 2\n    for n > 1 {\n\
    \        if n % prime == 0 {\n            n = n / prime\n            factor++\n\
    \        } else {\n            prime++\n        }\n    }\n    return factor\n\
    }\n", "    n -= 1\n    i := 2\n    largestPrimeFactor := 1\n    for i <= n {\n\
    \        if n % i == 0 {\n            largestPrimeFactor = i\n            break\n\
    \        }\n        i += 1\n    }\n    return largestPrimeFactor\n}\n", "    n\
    \ -= 2\n    i := 2\n    p := 2\n    for i <= n {\n        if n%i == 0 {\n    \
    \        p = i\n        }\n        i += p\n    }\n    return p\n}\n", "    p :=\
    \ 2\n    i := 2\n    for {\n        if n % i == 0 {\n            p += i\n    \
    \        n /= i\n        } else {\n            i++\n        }\n        if n ==\
    \ 1 {\n            return p\n        }\n    }\n}\n", "    n -= 2\n    i := 2\n\
    \    factor := 1\n    for ; i*i <= n; i += 2 {\n        if n%i == 0 {\n      \
    \      factor *= i\n            n /= i\n        }\n    }\n    if n > 1 {\n   \
    \     factor *= n\n    }\n    return factor\n}\n", "    prime := 2\n    factor\
    \ := 2\n    for n > 1 {\n        if n%prime == 0 {\n            factor++\n   \
    \     }\n        prime++\n        n = n/prime\n    }\n    return factor\n}\n",
  "    if n < 2 {\n        return n\n    }\n    p := 2\n    q := n\n    r := 1\n \
    \   for {\n        if q%p == 0 {\n            return r\n        }\n        if\
    \ q%p == 1 {\n            return p\n        }\n        if q%p == 2 {\n       \
    \     return p\n        }\n        if q%p == 3 {\n            return p\n     \
    \   }\n        if q%p == 4 {\n            return p\n        }\n        if q%p\
    \ == 5 {\n            return p\n        }\n        if q%p == 6 {\n           \
    \ return p\n        }\n        if q%p == 7 {\n            return p\n        }\n\
    \        if q%p == 8 {\n            return p\n        }\n        if q%p == 9 {\n\
    \            return p\n        }\n        if q%p == 10 {\n            return p\n\
    \        }\n        if q%p == 11 {\n            return p\n        }\n        if\
    \ q%p == 12 {\n            return p\n        }\n        if q%p == 13 {\n     \
    \       return p\n        }\n        if q%p == 14 {\n            return p\n  \
    \      }\n        if q%p == 15 {\n            return p\n        }\n        if\
    \ q%p == 16 {\n            return p\n        }\n        if q%p == 17 {\n     \
    \       return p\n        }\n        if q%p == 18 {\n            return p\n  \
    \      }\n        if q%p == 19 {\n            return p\n        }\n        if\
    \ q%p == 20 {\n            return p\n        }\n        if q%p == 21 {\n     \
    \       return p\n        }\n        if q%p == 22 {\n            return p\n  \
    \      }\n        if q%p == 23 {\n            return p\n        }\n        if\
    \ q%p == 24 {\n            return p\n        }\n        if q%p == 25 {\n     \
    \       return p\n        }\n        if q%p == 26 {\n            return p\n  \
    \      }\n        if q%p == 27 {\n            return p\n        }\n        if\
    \ q%p == 28 {\n            return p\n        }\n        if q%p == 29 {\n     \
    \       return p\n        }\n        if q%p == 30 {\n            return p\n  \
    \      }\n        if q%p == 31 {\n            return p\n        }\n        if\
    \ q%p == 32 {\n            return p\n        }\n        if q%p == 33 {\n     \
    \       return p\n        }\n        if q%p == 34 {\n            return p\n  \
    \      }\n        if q%p == 35 {\n            return p\n        }\n        if\
    \ q%p == 36 {\n            return p\n        }\n        if q%p == 37 {\n     \
    \       return p\n        }\n        if q%p == 38 {\n            return p\n",
  "    p := 2\n    i := 2\n    p := 2\n    for i < n {\n        if n % i == 0 {\n\
    \            p = i\n        }\n        i++\n    }\n    return p\n}\n", "    if\
    \ n < 2 {\n        return n\n    }\n\n    p := 2\n    q := n\n\n    for {\n  \
    \      if q%p == 0 {\n            return p\n        }\n\n        p += 2\n    \
    \    q -= p\n    }\n}\n", "    if n < 2 {\n        return n\n    }\n    p := 2\n\
    \    q := n\n    d := 1\n    while q > 1 {\n        if q%p == 0 {\n          \
    \  d += 1\n        }\n        p += d\n        q /= p\n    }\n    return p\n}\n",
  "    p := 2\n    q := n\n    r := 1\n    i := 0\n    for {\n        if q%p == 0\
    \ {\n            break\n        }\n        p += q\n        i++\n    }\n    for\
    \ {\n        if q%p == 0 {\n            break\n        }\n        q -= p\n   \
    \     r *= p\n        i++\n    }\n    return r\n}\n", "    p := 2\n    i := 2\n\
    \    for {\n        if n%i == 0 {\n            n /= i\n        } else {\n    \
    \        if i > p {\n                p = i\n            }\n            i++\n \
    \       }\n        if n == 1 {\n            return p\n        }\n    }\n}\n",
  "    p := 2\n    q := n\n    d := 1\n    for {\n        if q%p == 0 {\n        \
    \    break\n        }\n        p += d\n        q /= p\n        d++\n    }\n  \
    \  return p\n}\n", "    n -= 2 // remove even number\n    for i := 2; i <= n;\
    \ i += 2 {\n        if n%i == 0 {\n            return i\n        }\n    }\n  \
    \  return n\n}\n", "    p := 2\n    for i := 2; i <= n; i++ {\n        if n%i\
    \ == 0 {\n            p = i\n            break\n        }\n    }\n    return p\n\
    }\n", "    p := 2\n    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n    \
    \        p = i\n            break\n        }\n    }\n    return p\n}\n", "   \
    \ n -= 1\n    p := 2\n    i := 2\n    for {\n        if n % i == 0 {\n       \
    \     n /= i\n            if n == 1 {\n                return p\n            }\n\
    \            p++\n        } else {\n            i++\n        }\n    }\n}\n", " \
    \   n -= 1\n    p := 2\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n\
    \            p += 1\n        }\n    }\n    return p\n}\n", "    n -= 2 // remove\
    \ 2 since 2 is the smallest prime factor\n    n += 2 // add 2 since 2 is the smallest\
    \ prime factor\n    n += 2 // add 2 since 2 is the smallest prime factor\n   \
    \ for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            return i\n   \
    \     }\n    }\n    return n\n}\n", "    n -= 1\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            n /= prime\n  \
    \          factor++\n        } else {\n            prime++\n        }\n    }\n\
    \    return factor\n}\n", "    n -= 1\n    prime := 2\n    factor := 2\n    for\
    \ n > 1 {\n        if n % prime == 0 {\n            n /= prime\n            factor\
    \ = prime\n        } else {\n            prime++\n        }\n    }\n    return\
    \ factor\n}\n", "    if n < 2 {\n        return n\n    }\n    p := 2\n    for\
    \ i := 3; i <= n; i++ {\n        if n % i == 0 {\n            p += i\n       \
    \     n /= i\n        }\n    }\n    return p\n}\n", "    p := 2\n    for i :=\
    \ 2; i <= n; i++ {\n        if n%i == 0 {\n            p += 1\n        }\n   \
    \ }\n    return p\n}\n", "    p := 2\n    max := n\n    for n > 1 {\n        if\
    \ n % p == 0 {\n            max = n\n            break\n        }\n        p +=\
    \ 1\n    }\n    return max\n}\n", "    p := 2\n    q := n\n\n    for {\n     \
    \   if q%p == 0 {\n            return p\n        }\n        p += 1\n        q\
    \ /= p\n    }\n}\n", "    n -= 1\n    p := 2\n    q := 2\n    for {\n        if\
    \ n%p == 0 {\n            return p\n        }\n        if n%q == 0 {\n       \
    \     return q\n        }\n        p += q\n        q += p\n        n /= p\n  \
    \  }\n}\n", "    p := 2\n    max := n\n    for n > 1 {\n        if n % p == 0\
    \ {\n            max = n\n            break\n        }\n        p += 1\n    }\n\
    \    return max\n}\n", "    p := 2\n    q := n\n\n    for {\n        if q%p ==\
    \ 0 {\n            return p\n        }\n        p += 2\n        q /= p\n    }\n\
    }\n", "    prime := 2\n    factor := 2\n    for n > 1 {\n        if n%prime ==\
    \ 0 {\n            factor++\n        }\n        prime++\n        n = n/prime\n\
    \    }\n    return factor\n}\n", "    n -= 1\n    p := 2\n    q := 2\n    for\
    \ {\n        if n%p == 0 {\n            n = n / p\n            q = q * p\n   \
    \     }\n        if n%q == 0 {\n            n = n / q\n            p = p * q\n\
    \        }\n        if n == 1 {\n            return p\n        }\n    }\n}\n",
  "    if n < 2 {\n        return n\n    }\n    p := 2\n    q := n\n    r := 1\n \
    \   for {\n        if q%p == 0 {\n            break\n        }\n        p += r\n\
    \        q /= p\n        r++\n    }\n    return p\n}\n", "    if n < 2 {\n   \
    \     return n\n    }\n    p := 2\n    q := n\n    r := 1\n    for {\n       \
    \ if q%p == 0 {\n            return r\n        }\n        if q%p == 1 {\n    \
    \        return p\n        }\n        if q%p == 2 {\n            return p\n  \
    \      }\n        if q%p == 3 {\n            return p\n        }\n        if q%p\
    \ == 4 {\n            return p\n        }\n        if q%p == 5 {\n           \
    \ return p\n        }\n        if q%p == 6 {\n            return p\n        }\n\
    \        if q%p == 7 {\n            return p\n        }\n        if q%p == 8 {\n\
    \            return p\n        }\n        if q%p == 9 {\n            return p\n\
    \        }\n        if q%p == 10 {\n            return p\n        }\n        if\
    \ q%p == 11 {\n            return p\n        }\n        if q%p == 12 {\n     \
    \       return p\n        }\n        if q%p == 13 {\n            return p\n  \
    \      }\n        if q%p == 14 {\n            return p\n        }\n        if\
    \ q%p == 15 {\n            return p\n        }\n        if q%p == 16 {\n     \
    \       return p\n        }\n        if q%p == 17 {\n            return p\n  \
    \      }\n        if q%p == 18 {\n            return p\n        }\n        if\
    \ q%p == 19 {\n            return p\n        }\n        if q%p == 20 {\n     \
    \       return p\n        }\n        if q%p == 21 {\n            return p\n  \
    \      }\n        if q%p == 22 {\n            return p\n        }\n        if\
    \ q%p == 23 {\n            return p\n        }\n        if q%p == 24 {\n     \
    \       return p\n        }\n        if q%p == 25 {\n            return p\n  \
    \      }\n        if q%p == 26 {\n            return p\n        }\n        if\
    \ q%p == 27 {\n            return p\n        }\n        if q%p == 28 {\n     \
    \       return p\n        }\n        if q%p == 29 {\n            return p\n  \
    \      }\n        if q%p == 30 {\n            return p\n        }\n        if\
    \ q%p == 31 {\n            return p\n        }\n        if q%p == 32 {\n     \
    \       return p\n        }\n        if q%p == 33 {\n            return p\n  \
    \      }\n        if q%p == 34 {\n            return p\n        }\n        if\
    \ q%p == 35 {\n            return p\n        }\n        if q%p == 36 {\n     \
    \       return p\n        }\n        if q%p == 37 {\n            return p\n  \
    \      }\n        if q%p == 38 {\n            return p\n", "    n -= 1 // Make\
    \ n positive\n    n |= n >> 1 // Make n odd\n    n |= n >> 2 // Make n even\n\
    \    n |= n >> 4 // Make n odd\n    n |= n >> 8 // Make n even\n    n |= n >>\
    \ 16 // Make n odd\n    n |= n >> 32 // Make n even\n    n |= n >> 64 // Make\
    \ n odd\n    n |= n >> 128 // Make n even\n    n |= n >> 256 // Make n odd\n \
    \   n |= n >> 512 // Make n even\n    n |= n >> 1024 // Make n odd\n    n |= n\
    \ >> 2048 // Make n even\n    return int(n + 1)\n}\n", "    prime := 2\n    factor\
    \ := 1\n    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            factor++\n\
    \            if factor > prime {\n                prime = factor\n           \
    \ }\n        }\n    }\n    return prime\n}\n", "    if n < 2 {\n        return\
    \ n\n    }\n    prime := 2\n    factor := 2\n    for {\n        if n % prime ==\
    \ 0 {\n            n /= prime\n            factor++\n        } else {\n      \
    \      break\n        }\n        prime++\n    }\n    return factor\n}\n", "  \
    \  n -= 2\n    p := 2\n    for {\n        if n%p == 0 {\n            return p\n\
    \        }\n        p += 2\n    }\n}\n", "    n -= 1\n    i := 2\n    for {\n\
    \        if n % i == 0 {\n            return i\n        }\n        i += 2\n  \
    \  }\n}\n", "    prime := 2\n    factor := 1\n    for factor < n {\n        if\
    \ n%prime == 0 {\n            n /= prime\n        } else {\n            prime++\n\
    \        }\n        factor++\n    }\n    return factor\n}\n", "    if n < 2 {\n\
    \        return n\n    }\n    prime := 2\n    max := n\n    for {\n        if\
    \ n % prime == 0 {\n            max = n\n            break\n        }\n      \
    \  prime++\n    }\n    return max\n}\n", "    prime := 2\n    factor := 2\n  \
    \  for factor < n {\n        if n%prime == 0 {\n            n = n/prime\n    \
    \    } else {\n            prime++\n        }\n        factor++\n    }\n    return\
    \ prime\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

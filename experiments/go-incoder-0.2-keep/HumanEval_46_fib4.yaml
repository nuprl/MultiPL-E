name: HumanEval_46_fib4
language: go_test.go
prompt: "package fib4_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// The\
  \ Fib4 number sequence is a sequence similar to the Fibbonacci sequnece that's defined\
  \ as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2) -> 2\n// fib4(3) ->\
  \ 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n// Please write\
  \ a function to efficiently compute the n-th element of the fib4 number sequence.\
  \  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n// 8\n// >>> fib4(7)\n\
  // 14\nfunc fib4(n int) int {\n"
tests: "func TestFib4(t *testing.T) {\n  candidate := fib4\n\ttype test struct {\n\
  \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
  \    { actual: candidate(5), expected: 4 },\n     { actual: candidate(8), expected:\
  \ 28 },\n     { actual: candidate(10), expected: 104 },\n     { actual: candidate(12),\
  \ expected: 386 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if n < 0 {\n        fmt.Println(\"fib4 number sequence is defined\
    \ for n >= 0\")\n        return -1\n    }\n    if n == 0 {\n        return 0\n\
    \    }\n    if n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return\
    \ 2\n    }\n    if n == 3 {\n        return 0\n    }\n    if n == 4 {\n      \
    \  return 4\n    }\n    if n == 5 {\n        return 8\n    }\n    if n == 6 {\n\
    \        return 14\n    }\n    if n == 7 {\n        return 28\n    }\n    if n\
    \ == 8 {\n        return 56\n    }\n    if n == 9 {\n        return 120\n    }\n\
    \    if n == 10 {\n        return 200\n    }\n    if n == 11 {\n        return\
    \ 288\n    }\n    if n == 12 {\n        return 576\n    }\n    if n == 13 {\n\
    \        return 1296\n    }\n    if n == 14 {\n        return 2960\n    }\n  \
    \  if n == 15 {\n        return 5760\n    }\n    if n == 16 {\n        return\
    \ 12960\n    }\n    if n == 17 {\n        return 29600\n    }\n    if n == 18\
    \ {\n        return 57600\n    }\n    if n == 19 {\n        return 129600\n  \
    \  }\n    if n == 20 {\n        return 293600\n    }\n    if n == 21 {\n     \
    \   return 573600\n    }\n    if n == 22 {\n        return 1296400\n    }\n  \
    \  if n == 23 {\n        return 2934400\n    }\n    if n == 24 {\n        return\
    \ 5734400\n    }\n    if n == 25 {\n        return 12964800\n    }\n    if n ==\
    \ 26 {\n        return 29346800\n    }\n    if n == 27 {\n        return 57346800\n\
    \    }\n    if n == 28 {\n        return 12965600\n    }\n    if n == 29 {\n \
    \       return 29347600\n    }\n    if n == 30 {\n        return 57347600\n  \
    \  }\n    if n == 31 {\n        return 12966500\n    }\n    if n == 32 {\n   \
    \     return 29356500\n    }\n    if n == 33 {\n        return 57356500\n    }\n\
    \    if n == 34 {\n        return 12967400\n    }\n    if n == 35 {\n        return\
    \ 29367400\n    }\n    if n == 36 {\n        return 57367400\n    }\n    if n\
    \ == 37 {\n        return 12968300\n    }\n    if n == 38 {\n        return 29376300\n\
    \    }\n    if n == 39 {\n        return 57376300\n    }\n    if n == 40 {\n \
    \       return 12969200\n    }\n    if n == 41 {\n        return 29376200\n  \
    \  }\n    if n == 42 {\n        return 57376200\n    }\n    if n == 43 {", " \
    \   if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 0\n\
    \    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 2\n    }\n    if n == 3 {\n        return 0\n    }\n    return fib4(n - 1) +\
    \ fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n}\n", "    if n < 0 {\n        fmt.Println(\"\
    fib4 called with negative number\")\n        return -1\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return 0\n    }\n    if n ==\
    \ 2 {\n        return 2\n    }\n    if n == 3 {\n        return 0\n    }\n   \
    \ if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 8\n  \
    \  }\n    if n == 6 {\n        return 14\n    }\n    if n == 7 {\n        return\
    \ 28\n    }\n    if n == 8 {\n        return 56\n    }\n    if n == 9 {\n    \
    \    return 120\n    }\n    if n == 10 {\n        return 200\n    }\n    if n\
    \ == 11 {\n        return 280\n    }\n    if n == 12 {\n        return 560\n \
    \   }\n    if n == 13 {\n        return 1120\n    }\n    if n == 14 {\n      \
    \  return 1860\n    }\n    if n == 15 {\n        return 2520\n    }\n    if n\
    \ == 16 {\n        return 3280\n    }\n    if n == 17 {\n        return 4160\n\
    \    }\n    if n == 18 {\n        return 4920\n    }\n    if n == 19 {\n     \
    \   return 5760\n    }\n    if n == 20 {\n        return 6620\n    }\n    if n\
    \ == 21 {\n        return 7200\n    }\n    if n == 22 {\n        return 7960\n\
    \    }\n    if n == 23 {\n        return 8720\n    }\n    if n == 24 {\n     \
    \   return 9560\n    }\n    if n == 25 {\n        return 10400\n    }\n    if\
    \ n == 26 {\n        return 11360\n    }\n    if n == 27 {\n        return 12320\n\
    \    }\n    if n == 28 {\n        return 13280\n    }\n    if n == 29 {\n    \
    \    return 14160\n    }\n    if n == 30 {\n        return 15120\n    }\n    if\
    \ n == 31 {\n        return 15960\n    }\n    if n == 32 {\n        return 16800\n\
    \    }\n    if n == 33 {\n        return 17640\n    }\n    if n == 34 {\n    \
    \    return 18400\n    }\n    if n == 35 {\n        return 19200\n    }\n    if\
    \ n == 36 {\n        return 19960\n    }\n    if n == 37 {\n        return 20800\n\
    \    }\n    if n == 38 {\n        return 21600\n    }\n    if n == 39 {\n    \
    \    return 22520\n    }\n    if n == 40 {\n        return 23360\n    }\n    if\
    \ n == 41 {\n        return 24320\n    }\n    if n == 42 {\n        return 25280\n\
    \    }\n    if n == 43 {\n        return 26160\n    }\n    if n == 44 {\n    \
    \    return 26920\n    }\n    if n == 45 {\n        return 27960\n    }\n    if\
    \ n == 46 {\n", "    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n  \
    \      return 0\n    }\n    if n == 2 {\n        return 2\n    }\n    if n ==\
    \ 3 {\n        return 0\n    }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4)\n}\n", "    if n == 0 {\n        return 0\n    }\n    if\
    \ n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n\
    \    if n == 3 {\n        return 0\n    }\n    return fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\n}\n", "    if n == 0 || n == 1 {\n        return\
    \ 0\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n      \
    \  return 0\n    }\n    if n == 4 {\n        return 4\n    }\n    return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n}\n", "    if n < 1 {\n    \
    \    return 0\n    }\n    if n == 1 {\n        return 0\n    }\n    if n == 2\
    \ {\n        return 2\n    }\n    if n == 3 {\n        return 0\n    }\n    return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n}\n", "    if n < 0 {\n\
    \        return -1\n    }\n    if n == 0 {\n        return 0\n    }\n    if n\
    \ == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n\
    \    if n == 3 {\n        return 0\n    }\n    return fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\n}\n", "    if n <= 0 {\n        return 0\n    }\n\
    \    if n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return 2\n\
    \    }\n    if n == 3 {\n        return 0\n    }\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n}\n", "    if n < 0 {\n        fmt.Println(\"\
    fib4 called with negative number\")\n        return -1\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n ==\
    \ 2 {\n        return 2\n    }\n    if n == 3 {\n        return 0\n    }\n   \
    \ return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n}\n", "    if\
    \ n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n\
    \    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 0\n\
    \    }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n}\n",
  "    if n < 0 {\n        fmt.Println(\"fib4 number sequence is defined as fib4(0)\
    \ to fib4(\" + strconv.Itoa(n) + \")\")\n        return -1\n    }\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 0\n    }\n   \
    \ if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 0\n  \
    \  }\n    if n == 4 {\n        return 0\n    }\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n}\n", "    if n == 0 {\n        return 0\n\
    \    }\n    if n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return\
    \ 2\n    }\n    if n == 3 {\n        return 0\n    }\n    if n == 4 {\n      \
    \  return 4\n    }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4)\n}\n", "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n   \
    \     return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3\
    \ {\n        return 0\n    }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n -\
    \ 3) + fib4(n - 4)\n}\n", "    if n <= 0 {\n        return 0\n    }\n    if n\
    \ == 1 {\n        return 0\n    }\n    if n == 2 {\n        return 2\n    }\n\
    \    if n == 3 {\n        return 0\n    }\n    return fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\n}\n", "    if n == 0 {\n        return 0\n    }\n\
    \    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n\
    \    }\n    if n == 3 {\n        return 0\n    }\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n}\n", "    if n == 0 {\n        return 0\n\
    \    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 2\n    }\n    if n == 3 {\n        return 0\n    }\n    return fib4(n - 1) +\
    \ fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n}\n", "    if n < 0 {\n        fmt.Println(\"\
    fib4 called with negative number\")\n        return -1\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return 0\n    }\n    if n ==\
    \ 2 {\n        return 2\n    }\n    if n == 3 {\n        return 0\n    }\n   \
    \ if n == 4 {\n        return 4\n    }\n    return fib4(n - 1) + fib4(n - 2) +\
    \ fib4(n - 3) + fib4(n - 4)\n}\n", "    if n <= 0 {\n        return 0\n    }\n\
    \    if n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return 2\n\
    \    }\n    if n == 3 {\n        return 0\n    }\n    if n == 4 {\n        return\
    \ 4\n    }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n\
    }\n", "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ 0\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n      \
    \  return 0\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n\
    \        return 8\n    }\n    if n == 6 {\n        return 14\n    }\n    if n\
    \ == 7 {\n        return 28\n    }\n    if n == 8 {\n        return 56\n    }\n\
    \    if n == 9 {\n        return 120\n    }\n    if n == 10 {\n        return\
    \ 200\n    }\n    if n == 11 {\n        return 280\n    }\n    if n == 12 {\n\
    \        return 560\n    }\n    if n == 13 {\n        return 1120\n    }\n   \
    \ if n == 14 {\n        return 1920\n    }\n    if n == 15 {\n        return 2880\n\
    \    }\n    if n == 16 {\n        return 5680\n    }\n    if n == 17 {\n     \
    \   return 11160\n    }\n    if n == 18 {\n        return 19160\n    }\n    if\
    \ n == 19 {\n        return 28880\n    }\n    if n == 20 {\n        return 56880\n\
    \    }\n    if n == 21 {\n        return 111680\n    }\n    if n == 22 {\n   \
    \     return 191680\n    }\n    if n == 23 {\n        return 288800\n    }\n \
    \   if n == 24 {\n        return 568000\n    }\n    if n == 25 {\n        return\
    \ 1116800\n    }\n    if n == 26 {\n        return 1916800\n    }\n    if n ==\
    \ 27 {\n        return 2888000\n    }\n    if n == 28 {\n        return 5680000\n\
    \    }\n    if n == 29 {\n        return 11168000\n    }\n    if n == 30 {\n \
    \       return 19168000\n    }\n    if n == 31 {\n        return 28880000\n  \
    \  }\n    if n == 32 {\n        return 56800000\n    }\n    if n == 33 {\n   \
    \     return 111684000\n    }\n    if n == 34 {\n        return 191684000\n  \
    \  }\n    if n == 35 {\n        return 28884000\n    }\n    if n == 36 {\n   \
    \     return 568000000\n    }\n    if n == 37 {\n        return 1116800000\n \
    \   }\n    if n == 38 {\n        return 1916800000\n    }\n    if n == 39 {\n\
    \        return 288800000\n    }\n    if n == 40 {\n        return 5680000000\n\
    \    }\n    if n == 41 {\n        return 1116840000\n    }\n    if n == 42 {\n\
    \        return 1916840000\n    }\n    if n == 43 {\n        return 288840000\n\
    \    }\n    if n == 44 {\n        return 56800000000\n    }\n    if n == 45 {\n\
    \        return 11168000000\n    }\n    if n == 46"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

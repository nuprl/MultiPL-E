language: go_test.go
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpgktbvzp__test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpgktbvzp__test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpgktbvzp__test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v) - '0'\n        }\n    }\n   \
    \ return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_6mauus9_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_6mauus9_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_6mauus9_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_6mauus9_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_6mauus9_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_6mauus9_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_6mauus9_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, r := range s {\n\
    \        if r >= 'a' && r <= 'z' {\n            sum += int(r) - int('a')\n   \
    \     }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpovpqiwfk_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpovpqiwfk_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpovpqiwfk_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpovpqiwfk_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpovpqiwfk_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpovpqiwfk_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpovpqiwfk_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        if v > '9' {\n            sum += int(v) - '0'\n        } else {\n\
    \            sum += int(v)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmph5fnlc63_test.go:50: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmph5fnlc63_test.go:50:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmph5fnlc63_test.go:50: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmph5fnlc63_test.go:50:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmph5fnlc63_test.go:50: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmph5fnlc63_test.go:50:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmph5fnlc63_test.go:50: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpw8algg4z_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpw8algg4z_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpw8algg4z_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpw8algg4z_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpw8algg4z_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpw8algg4z_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpw8algg4z_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v - '0')\n        } else {\n   \
    \         sum += int(v - 'A' + 10)\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdkpv_4ck_test.go:50: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdkpv_4ck_test.go:50:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdkpv_4ck_test.go:50: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdkpv_4ck_test.go:50:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdkpv_4ck_test.go:50: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdkpv_4ck_test.go:50:\
    \ expected '%!s(int=151)', got '%!s(int=445)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdkpv_4ck_test.go:50: expected '%!s(int=327)', got '%!s(int=749)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        if v > '9' {\n            sum += int(v) - '0'\n        } else {\n\
    \            sum += int(v)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmph5fnlc63_test.go:50: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmph5fnlc63_test.go:50:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmph5fnlc63_test.go:50: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmph5fnlc63_test.go:50:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmph5fnlc63_test.go:50: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmph5fnlc63_test.go:50:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmph5fnlc63_test.go:50: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A' + 10)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp25xy6mtc_test.go:48: expected '%!s(int=131)', got '%!s(int=21)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp25xy6mtc_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=12)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp25xy6mtc_test.go:48: expected '%!s(int=69)', got '%!s(int=14)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp25xy6mtc_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp25xy6mtc_test.go:48: expected '%!s(int=153)', got '%!s(int=43)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp25xy6mtc_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=41)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp25xy6mtc_test.go:48: expected '%!s(int=327)', got '%!s(int=107)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpw8algg4z_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpw8algg4z_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpw8algg4z_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpw8algg4z_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpw8algg4z_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpw8algg4z_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpw8algg4z_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpnze9i1jz_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char -\
    \ 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        sum += int(v)\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp3xpgzkui_test.go:46: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp3xpgzkui_test.go:46:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp3xpgzkui_test.go:46: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp3xpgzkui_test.go:46:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp3xpgzkui_test.go:46: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp3xpgzkui_test.go:46:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp3xpgzkui_test.go:46: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    result := 0\n    for _, char := range\
    \ s {\n        if char >= 'A' && char <= 'Z' {\n            result += char - 'A'\
    \ + 1\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkhber42w_test.go:22:13: invalid operation: result += char - ''A'' + 1
    (mismatched types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char - 'A')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var result int\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n\
    \        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n\
    \  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"\
    ), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n    \
    \ { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmplxo6f8xw_test.go:22:13: invalid operation: result += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int = 0\n    for _, char :=\
    \ range s {\n        if char >= 'A' && char <= 'Z' {\n            sum += char\
    \ - 'A' + 10\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmptd95o1jd_test.go:22:13: invalid operation: sum += char - ''A'' + 10 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v == 'A' || v == 'a' {\n            sum += int(v)\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=131)', got '%!s(int=162)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=65)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=153)', got '%!s(int=550)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=327)', got '%!s(int=194)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        sum += int(v)\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp3xpgzkui_test.go:46: expected '%!s(int=131)', got '%!s(int=326)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp3xpgzkui_test.go:46:\
    \ expected '%!s(int=67)', got '%!s(int=461)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp3xpgzkui_test.go:46: expected '%!s(int=69)', got '%!s(int=601)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp3xpgzkui_test.go:46:\
    \ expected '%!s(int=131)', got '%!s(int=683)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp3xpgzkui_test.go:46: expected '%!s(int=153)', got '%!s(int=638)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp3xpgzkui_test.go:46:\
    \ expected '%!s(int=151)', got '%!s(int=1090)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp3xpgzkui_test.go:46: expected '%!s(int=327)', got '%!s(int=1634)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    result := 0\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n\
    \        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n\
    \  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"\
    ), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n    \
    \ { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpukzlsdtr_test.go:22:13: invalid operation: result += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v == 'A' || v == 'a' {\n            sum += int(v)\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=131)', got '%!s(int=162)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=65)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=153)', got '%!s(int=550)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=327)', got '%!s(int=194)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    result := 0\n    for _, char := range\
    \ s {\n        if char >= 'A' && char <= 'Z' {\n            result += char - 'A'\
    \ + 1\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkhber42w_test.go:22:13: invalid operation: result += char - ''A'' + 1
    (mismatched types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char -\
    \ 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v) - '0'\n        }\n    }\n   \
    \ return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, r := range s {\n\
    \        if r >= 'A' && r <= 'Z' {\n            sum += int(r - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5wjn04g2_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5wjn04g2_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5wjn04g2_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    result := 0\n    for _, char := range\
    \ s {\n        if char >= 'A' && char <= 'Z' {\n            result += int(char\
    \ - 'A' + 10)\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpb6fsn824_test.go:48: expected '%!s(int=131)', got '%!s(int=21)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb6fsn824_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=12)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpb6fsn824_test.go:48: expected '%!s(int=69)', got '%!s(int=14)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb6fsn824_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpb6fsn824_test.go:48: expected '%!s(int=153)', got '%!s(int=43)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb6fsn824_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=41)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpb6fsn824_test.go:48: expected '%!s(int=327)', got '%!s(int=107)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var result int\n    for _, char := range\
    \ s {\n        if char >= '0' && char <= '9' {\n            result += int(char\
    \ - '0')\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8llyzzcm_test.go:48: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8llyzzcm_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8llyzzcm_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8llyzzcm_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8llyzzcm_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8llyzzcm_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8llyzzcm_test.go:48: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v) - '0'\n        }\n    }\n   \
    \ return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char -\
    \ 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            sum += int(v) - 'a'\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp48f6edgs_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp48f6edgs_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp48f6edgs_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, r := range s {\n\
    \        if r >= 'A' && r <= 'Z' {\n            sum += int(r - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5wjn04g2_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5wjn04g2_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5wjn04g2_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char -\
    \ 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v) - '0'\n        }\n    }\n   \
    \ return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char - 'A')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v) - '0'\n        }\n    }\n   \
    \ return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v) - '0'\n        }\n    }\n   \
    \ return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            sum += int(v - 'a')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdi9uqsct_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdi9uqsct_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdi9uqsct_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdi9uqsct_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdi9uqsct_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdi9uqsct_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdi9uqsct_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, r := range s {\n\
    \        if r >= 'a' && r <= 'z' {\n            sum += int(r) - int('a')\n   \
    \     }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpovpqiwfk_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpovpqiwfk_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpovpqiwfk_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpovpqiwfk_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpovpqiwfk_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpovpqiwfk_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpovpqiwfk_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v) - '0'\n        }\n    }\n   \
    \ return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_7bllb58_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_7bllb58_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A' + 10)\n   \
    \     }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp2gbf1jet_test.go:48: expected '%!s(int=131)', got '%!s(int=21)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp2gbf1jet_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=12)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp2gbf1jet_test.go:48: expected '%!s(int=69)', got '%!s(int=14)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp2gbf1jet_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp2gbf1jet_test.go:48: expected '%!s(int=153)', got '%!s(int=43)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp2gbf1jet_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=41)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp2gbf1jet_test.go:48: expected '%!s(int=327)', got '%!s(int=107)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v) - '0'\n        } else {\n   \
    \         sum += int(v)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpmlu61lsl_test.go:50:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpmlu61lsl_test.go:50:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpmlu61lsl_test.go:50:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v-'0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5_22lcd5_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5_22lcd5_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5_22lcd5_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v > '9' {\n            sum += int(v-'0')\n        } else {\n \
    \           sum += int(v)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpr_0o6iw3_test.go:50: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpr_0o6iw3_test.go:50:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpr_0o6iw3_test.go:50: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpr_0o6iw3_test.go:50:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpr_0o6iw3_test.go:50: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpr_0o6iw3_test.go:50:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpr_0o6iw3_test.go:50: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, r := range s {\n\
    \        if r >= 'a' && r <= 'z' {\n            sum += int(r - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpcy4iyr11_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpcy4iyr11_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpcy4iyr11_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpcy4iyr11_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpcy4iyr11_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpcy4iyr11_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpcy4iyr11_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, r := range s {\n\
    \        if r >= 'A' && r <= 'Z' {\n            sum += int(r - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5wjn04g2_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5wjn04g2_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5wjn04g2_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5wjn04g2_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v == 'A' || v == 'a' {\n            sum += int(v)\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=131)', got '%!s(int=162)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=65)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=153)', got '%!s(int=550)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=327)', got '%!s(int=194)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        if v > '9' {\n            sum += int(v-'0')\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpi4okz5ec_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpi4okz5ec_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpi4okz5ec_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpi4okz5ec_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpi4okz5ec_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpi4okz5ec_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpi4okz5ec_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char - 'A')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A' + 10)\n   \
    \     }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp2gbf1jet_test.go:48: expected '%!s(int=131)', got '%!s(int=21)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp2gbf1jet_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=12)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp2gbf1jet_test.go:48: expected '%!s(int=69)', got '%!s(int=14)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp2gbf1jet_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp2gbf1jet_test.go:48: expected '%!s(int=153)', got '%!s(int=43)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp2gbf1jet_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=41)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp2gbf1jet_test.go:48: expected '%!s(int=327)', got '%!s(int=107)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            sum += int(v) - 'a'\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp48f6edgs_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp48f6edgs_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp48f6edgs_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            sum += int(v) - 'a'\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp48f6edgs_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp48f6edgs_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp48f6edgs_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp48f6edgs_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char - 'A')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char -\
    \ 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        if v > '9' {\n            sum += int(v-'0')\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpi4okz5ec_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpi4okz5ec_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpi4okz5ec_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpi4okz5ec_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpi4okz5ec_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpi4okz5ec_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpi4okz5ec_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            sum += int(v - 'a')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdi9uqsct_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdi9uqsct_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdi9uqsct_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdi9uqsct_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdi9uqsct_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdi9uqsct_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdi9uqsct_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, r := range s {\n\
    \        if r >= 'a' && r <= 'z' {\n            sum += int(r - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpcy4iyr11_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpcy4iyr11_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpcy4iyr11_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpcy4iyr11_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpcy4iyr11_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpcy4iyr11_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpcy4iyr11_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    result := 0\n    for _, char := range\
    \ s {\n        if char >= 'A' && char <= 'Z' {\n            result += int(char\
    \ - 'A')\n        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpg37a638u_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpg37a638u_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpg37a638u_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpg37a638u_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpg37a638u_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpg37a638u_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpg37a638u_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char - 'A')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char - 'A')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            sum += int(v) - 'a'\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpz7ptk5rs_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpz7ptk5rs_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpz7ptk5rs_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpz7ptk5rs_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpz7ptk5rs_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpz7ptk5rs_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpz7ptk5rs_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += char - 'A' +\
    \ 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n\
    \  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"\
    ), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n    \
    \ { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpf6uf24lg_test.go:22:13: invalid operation: sum += char - ''A'' + 1 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpui2niwhb_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpui2niwhb_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpui2niwhb_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpui2niwhb_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpui2niwhb_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpui2niwhb_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpui2niwhb_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A' + 10)\n\
    \        } else {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp6zeof8ce_test.go:50: expected '%!s(int=131)', got '%!s(int=216)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp6zeof8ce_test.go:50:\
    \ expected '%!s(int=67)', got '%!s(int=406)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp6zeof8ce_test.go:50: expected '%!s(int=69)', got '%!s(int=546)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp6zeof8ce_test.go:50:\
    \ expected '%!s(int=131)', got '%!s(int=573)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp6zeof8ce_test.go:50: expected '%!s(int=153)', got '%!s(int=528)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp6zeof8ce_test.go:50:\
    \ expected '%!s(int=151)', got '%!s(int=980)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp6zeof8ce_test.go:50: expected '%!s(int=327)', got '%!s(int=1414)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v == 'A' || v == 'a' {\n            sum += int(v)\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpbmr_n64g_test.go:48: expected '%!s(int=131)', got '%!s(int=162)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpbmr_n64g_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpbmr_n64g_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpbmr_n64g_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=65)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpbmr_n64g_test.go:48: expected '%!s(int=153)', got '%!s(int=550)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpbmr_n64g_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpbmr_n64g_test.go:48: expected '%!s(int=327)', got '%!s(int=194)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            sum += int(v - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v == 'A' || v == 'a' {\n            sum += int(v)\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=131)', got '%!s(int=162)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=65)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=153)', got '%!s(int=550)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=327)', got '%!s(int=194)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, char := range\
    \ s {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char -\
    \ 'A')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpp0_j2eq9_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp0_j2eq9_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpp0_j2eq9_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp0_j2eq9_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpp0_j2eq9_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp0_j2eq9_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpp0_j2eq9_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char - 'A')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            sum += int(v - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s\
    \ {\n        if c >= '0' && c <= '9' {\n            sum += int(c - '0')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5pm9dmg2_test.go:48: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5pm9dmg2_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5pm9dmg2_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5pm9dmg2_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5pm9dmg2_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5pm9dmg2_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5pm9dmg2_test.go:48: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            sum += int(v - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char - 'A'\
    \ + 10)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmplqv0oj19_test.go:48: expected '%!s(int=131)', got '%!s(int=21)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmplqv0oj19_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=12)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmplqv0oj19_test.go:48: expected '%!s(int=69)', got '%!s(int=14)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmplqv0oj19_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmplqv0oj19_test.go:48: expected '%!s(int=153)', got '%!s(int=43)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmplqv0oj19_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=41)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmplqv0oj19_test.go:48: expected '%!s(int=327)', got '%!s(int=107)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += char - 'A' +\
    \ 10\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n\
    \  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"\
    ), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n    \
    \ { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp3321klba_test.go:22:13: invalid operation: sum += char - ''A'' + 10 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v > '9' {\n            sum += int(v) - '0'\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8mh2tfd9_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8mh2tfd9_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8mh2tfd9_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8mh2tfd9_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8mh2tfd9_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8mh2tfd9_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8mh2tfd9_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v) - '0'\n        } else {\n   \
    \         sum += int(v)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpmlu61lsl_test.go:50:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpmlu61lsl_test.go:50:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpmlu61lsl_test.go:50:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char -\
    \ 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    result := 0\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n\
    \        }\n    }\n    return result\n}\n\nfunc TestDigitsum(t *testing.T) {\n\
    \  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"\
    ), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n    \
    \ { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpukzlsdtr_test.go:22:13: invalid operation: result += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            sum += int(v - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            sum += int(v - 'a')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_ddyzb4b_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_ddyzb4b_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_ddyzb4b_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_ddyzb4b_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_ddyzb4b_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_ddyzb4b_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_ddyzb4b_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char - 'A')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            sum += int(v - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, c := range s\
    \ {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp22n6fcvm_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp22n6fcvm_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp22n6fcvm_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            sum += int(v) - int('A')\n   \
    \     }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpjmyskyyd_test.go:48: expected '%!s(int=131)', got '%!s(int=65)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpjmyskyyd_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=134)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpjmyskyyd_test.go:48: expected '%!s(int=69)', got '%!s(int=207)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpjmyskyyd_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=227)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpjmyskyyd_test.go:48: expected '%!s(int=153)', got '%!s(int=160)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpjmyskyyd_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=325)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpjmyskyyd_test.go:48: expected '%!s(int=327)', got '%!s(int=496)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            sum += int(v - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v) - '0'\n        } else {\n   \
    \         sum += int(v)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpmlu61lsl_test.go:50:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpmlu61lsl_test.go:50:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpmlu61lsl_test.go:50:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpmlu61lsl_test.go:50: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int = 0\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char\
    \ - 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5ptlogfz_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5ptlogfz_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5ptlogfz_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5ptlogfz_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5ptlogfz_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5ptlogfz_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5ptlogfz_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v-'0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5_22lcd5_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5_22lcd5_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5_22lcd5_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpgktbvzp__test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpgktbvzp__test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpgktbvzp__test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, r := range s\
    \ {\n        if r >= 'A' && r <= 'Z' {\n            sum += int(r - 'A')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8hfwch75_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8hfwch75_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8hfwch75_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8hfwch75_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8hfwch75_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8hfwch75_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8hfwch75_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v > '9' {\n            sum += int(v-'0')\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9a_xu0wn_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9a_xu0wn_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9a_xu0wn_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9a_xu0wn_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9a_xu0wn_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9a_xu0wn_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9a_xu0wn_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            sum += int(v - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiyzjh6a2_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiyzjh6a2_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, c := range s\
    \ {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp22n6fcvm_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp22n6fcvm_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp22n6fcvm_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            sum += int(v) - 'a'\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpp8c_kzdo_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp8c_kzdo_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpp8c_kzdo_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp8c_kzdo_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpp8c_kzdo_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp8c_kzdo_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpp8c_kzdo_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v > '9' {\n            sum += int(v-'0')\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9a_xu0wn_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9a_xu0wn_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9a_xu0wn_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9a_xu0wn_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9a_xu0wn_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9a_xu0wn_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9a_xu0wn_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum, i := 0, 0\n    for _, c := range\
    \ s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n  \
    \          i++\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_iwoat_n_test.go:49: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_iwoat_n_test.go:49:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_iwoat_n_test.go:49: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_iwoat_n_test.go:49:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_iwoat_n_test.go:49: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_iwoat_n_test.go:49:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_iwoat_n_test.go:49: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v == 'A' || v == 'a' {\n            sum += int(v)\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=131)', got '%!s(int=162)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=65)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=153)', got '%!s(int=550)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiz0uzdt9_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=97)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpiz0uzdt9_test.go:48: expected '%!s(int=327)', got '%!s(int=194)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v-'0')\n        } else {\n     \
    \       sum += int(v)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyn8pyb5s_test.go:50: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyn8pyb5s_test.go:50:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyn8pyb5s_test.go:50: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyn8pyb5s_test.go:50:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyn8pyb5s_test.go:50: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyn8pyb5s_test.go:50:\
    \ expected '%!s(int=151)', got '%!s(int=610)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyn8pyb5s_test.go:50: expected '%!s(int=327)', got '%!s(int=914)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char -\
    \ 'a')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T)\
    \ {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmps73t49cy_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmps73t49cy_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v-'0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5_22lcd5_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5_22lcd5_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5_22lcd5_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5_22lcd5_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpgktbvzp__test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpgktbvzp__test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpgktbvzp__test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpgktbvzp__test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v >= 'A' && v <= 'Z' {\n            sum += int(v - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp167gix79_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp167gix79_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            sum += int(v) - 'a'\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpz7ptk5rs_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpz7ptk5rs_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpz7ptk5rs_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpz7ptk5rs_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpz7ptk5rs_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpz7ptk5rs_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpz7ptk5rs_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, v := range s {\n\
    \        if v > '9' {\n            sum += int(v - '0')\n        } else {\n   \
    \         sum += int(v - 'A' + 10)\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpdkpv_4ck_test.go:50: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdkpv_4ck_test.go:50:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpdkpv_4ck_test.go:50: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdkpv_4ck_test.go:50:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpdkpv_4ck_test.go:50: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdkpv_4ck_test.go:50:\
    \ expected '%!s(int=151)', got '%!s(int=445)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpdkpv_4ck_test.go:50: expected '%!s(int=327)', got '%!s(int=749)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += char - 'A' +\
    \ 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n\
    \  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"\
    ), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n    \
    \ { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpf6uf24lg_test.go:22:13: invalid operation: sum += char - ''A'' + 1 (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073918
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char - 'A')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, c := range s\
    \ {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp22n6fcvm_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp22n6fcvm_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp22n6fcvm_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp22n6fcvm_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, v := range s\
    \ {\n        if v > '9' {\n            sum += int(v) - '0'\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp8mh2tfd9_test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp8mh2tfd9_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp8mh2tfd9_test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp8mh2tfd9_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp8mh2tfd9_test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp8mh2tfd9_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp8mh2tfd9_test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, v := range s\
    \ {\n        if v > '9' {\n            sum += int(v - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5gvnec0__test.go:48: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5gvnec0__test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5gvnec0__test.go:48: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5gvnec0__test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5gvnec0__test.go:48: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5gvnec0__test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5gvnec0__test.go:48: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073919
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += int(char - 'a')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_11y1i25_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_11y1i25_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpee7ebgow_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpee7ebgow_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'a' && char <= 'z' {\n            sum += char - 'a'\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4pd8f9rc_test.go:22:13: invalid operation: sum += char - ''a'' (mismatched
    types int and rune)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073915
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    var sum = 0\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp_6mauus9_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp_6mauus9_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp_6mauus9_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp_6mauus9_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp_6mauus9_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp_6mauus9_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp_6mauus9_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            sum += int(c - 'a')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=6)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=69)', got '%!s(int=47)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=67)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpamo1sodx_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=101)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpamo1sodx_test.go:48: expected '%!s(int=327)', got '%!s(int=144)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073916
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
    \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
    helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") =>\
    \ 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, char := range s\
    \ {\n        if char >= 'A' && char <= 'Z' {\n            sum += int(char - 'A')\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=131)', got '%!s(int=1)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=67)', got '%!s(int=2)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=69)', got '%!s(int=4)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=131)', got '%!s(int=1)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=153)', got '%!s(int=23)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp65hfw6hl_test.go:48:\
    \ expected '%!s(int=151)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp65hfw6hl_test.go:48: expected '%!s(int=327)', got '%!s(int=67)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073916

name: HumanEval_161_solve
language: go_test.go
prompt: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// You\
  \ are given a string s.\n// if s[i] is a letter, reverse its case from lower to\
  \ upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains\
  \ no letters, reverse the string.\n// The function should return the resulted string.\n\
  // Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"\
  #a@C\") = \"#A@c\"\nfunc solve(s string) string {\n"
tests: "func TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
  \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
  \    { actual: candidate(\"AsDf\"), expected: \"aSdF\" },\n     { actual: candidate(\"\
  1234\"), expected: \"4321\" },\n     { actual: candidate(\"ab\"), expected: \"AB\"\
  \ },\n     { actual: candidate(\"#a@C\"), expected: \"#A@c\" },\n     { actual:\
  \ candidate(\"#AsdfW^45\"), expected: \"#aSDFw^45\" },\n     { actual: candidate(\"\
  #6@2\"), expected: \"2@6#\" },\n     { actual: candidate(\"#$a^D\"), expected: \"\
  #$A^d\" },\n     { actual: candidate(\"#ccc\"), expected: \"#CCC\" },\n   }\n\n\t\
  for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    result := \"\"\n    for _, letter := range s {\n        if letter\
    \ == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, letter :=\
    \ range s {\n        if letter == 'a' || letter == 'A' {\n            result =\
    \ result + string(letter + 32)\n        } else {\n            result = result\
    \ + letter\n        }\n    }\n    return result\n}\n", "    result := \"\"\n \
    \   for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            result\
    \ += string(v)\n        } else {\n            result += string(v + 32)\n     \
    \   }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 'A')\n        } else {\n            result += v\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-'a')])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    \n    for\
    \ _, char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char)-65])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    \n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a' + 'A')\n        } else {\n  \
    \          result += v\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[26-int(char-97)])\n        } else\
    \ {\n            result += string([]rune(char)[26-int(char-65)])\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-97)])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char-65)])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 'A')\n        } else {\n            result += v\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, v := range s {\n   \
    \     if v >= 'a' && v <= 'z' {\n            result += string(v - 'a') + string(v\
    \ - 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-97)])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char-65)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-65])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'A' {\n            result = result + string([]rune(letter)...)\n\
    \        } else {\n            result = result + string(letter)\n        }\n \
    \   }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a') + string(v\
    \ - 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    \n    for _, char := range s {\n    \
    \    if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(char))-1])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(char))-1])\n\
    \        }\n    }\n    \n    return result\n}\n", "    result := \"\"\n    for\
    \ _, letter := range s {\n        if letter == 'a' || letter == 'A' {\n      \
    \      result += string([]rune(letter)...)\n        } else {\n            result\
    \ += string([]rune(letter)...)\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, r := range s {\n        if r >= 'a' && r <= 'z'\
    \ {\n            result += string(r-'a') + string(r-'A')\n        } else {\n \
    \           result += r\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range s {\n        if letter == 'a' || letter\
    \ == 'A' {\n            result = result + string([]byte{letter + 0x20})\n    \
    \    } else {\n            result = result + letter\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]byte{char - 'a'\
    \ + 'A'})\n        } else {\n            result += char\n        }\n    }\n  \
    \  return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' || letter == 'A' {\n            result = result + string([]rune(letter)...)\n\
    \        } else {\n            result = result + string(letter)\n        }\n \
    \   }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-'a'])\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a') + string(v - 'A')\n        }\
    \ else {\n            result += v\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z'\
    \ {\n            result += string(v)\n        } else {\n            result +=\
    \ string(v + 32)\n        }\n    }\n    return result\n}\n", "    result := \"\
    \"\n    \n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[char-'a'+1:])\n        } else {\n\
    \            result += string([]rune(char)[char-'a':])\n        }\n    }\n   \
    \ \n    return result\n}\n", "    result := \"\"\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a')\n  \
    \      } else if v >= 'A' && v <= 'Z' {\n            result += string(v - 'A')\n\
    \        } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result += string(v\
    \ - 'A') + string(v - 'a')\n        } else {\n            result += v\n      \
    \  }\n    }\n    return result\n}\n", "    var result string\n    for _, v :=\
    \ range s {\n        if v >= 'a' && v <= 'z' {\n            result = result +\
    \ string(v - 'a' + 'A')\n        } else if v >= 'A' && v <= 'Z' {\n          \
    \  result = result + string(v - 'A' + 'a')\n        } else {\n            result\
    \ = result + v\n        }\n    }\n    return result\n}\n", "    result := \"\"\
    \n    for _, letter := range s {\n        if letter == 'a' || letter == 'A' {\n\
    \            result += string([]rune(letter)...)\n        } else {\n         \
    \   result += string([]rune(letter)...)\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a')\n        } else if v >= 'A'\
    \ && v <= 'Z' {\n            result += string(v - 'A')\n        } else {\n   \
    \         result += v\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n    \
    \        result += string(v - 'a') + string(v - 'A')\n        } else {\n     \
    \       result += v\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n       \
    \     result += string(v - 'a')\n        } else {\n            result += v\n \
    \       }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v :=\
    \ range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v)\n\
    \        } else if v >= 'A' && v <= 'Z' {\n            result += string(v)\n \
    \       } else {\n            result += string(v)\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)-97])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, r := range s {\n        if r >= 'a' && r\
    \ <= 'z' {\n            result += string(r-'a') + string(r-'A')\n        } else\
    \ {\n            result += r\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n\
    \            result += string(v - 'a')\n        } else {\n            result +=\
    \ v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _,\
    \ char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[unicode.ToLower(unicode.ToLower(char))-1])\n        }\
    \ else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(char))-1])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char-'a')])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n  \
    \      } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v)\n\
    \        } else {\n            result += string(v + 32)\n        }\n    }\n  \
    \  return result\n}\n", "    var result string\n    for _, v := range s {\n  \
    \      if v >= 'a' && v <= 'z' {\n            result += string(v - 'a')\n    \
    \    } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n  \
    \      } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, v := range\
    \ s {\n        if v >= 'a' && v <= 'z' {\n            result = result + string(v\
    \ - 'a' + 1)\n        } else {\n            result = result + v\n        }\n \
    \   }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a')\n  \
    \      } else if v >= 'A' && v <= 'Z' {\n            result += string(v - 'A')\n\
    \        } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a' + 'A')\n        } else {\n  \
    \          result += v\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[26-int(char)-65])\n        } else\
    \ {\n            result += string([]rune(char)[26-int(char)])\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    \n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char))):])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char))):])\n\
    \        }\n    }\n    \n    return result\n}\n", "    result := \"\"\n    for\
    \ _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            result +=\
    \ string(v)\n        } else {\n            result += string(v + 32)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    \n    for _, letter\
    \ := range s {\n        if letter == letter.toUpper() {\n            result +=\
    \ letter.toLower()\n        } else {\n            result += letter\n        }\n\
    \    }\n    \n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result = result\
    \ + string(v - 'a') + string(v - 'A')\n        } else {\n            result =\
    \ result + v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       result += string([]rune(char)[26-int(char)-97])\n        } else {\n  \
    \          result += string([]rune(char)[26-int(char)])\n        }\n    }\n  \
    \  return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char - 'A'})\n        } else {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    \n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    \n    return result\n}\n", "    result := \"\"\n    for\
    \ _, char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char-'a')])\n        } else {\n            result\
    \ += string([]rune(char)[int('z'+char-'a')])\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, v := range s {\n        if v >= 'a' &&\
    \ v <= 'z' {\n            result += string(v - 'a' + 1)\n        } else {\n  \
    \          result += v\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n    \
    \        result += string(v - 'a')\n        } else {\n            result += v\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[strings.Index(strings.ToLower(string([]rune(char))),\
    \ string([]rune(char))[0])])\n        } else {\n            result += string([]rune(char)[strings.Index(strings.ToUpper(string([]rune(char))),\
    \ string([]rune(char))[0])])\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n\
    \            result += string(v - 'a' + 'A')\n        } else {\n            result\
    \ += v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for\
    \ _, char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[char-'a'+1])\n        } else {\n            result +=\
    \ string([]rune(char)[char-'A'+1])\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z'\
    \ {\n            result += string(v)\n        } else {\n            result +=\
    \ string(v + 32)\n        }\n    }\n    return result\n}\n", "    result := \"\
    \"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n           \
    \ result += string(v)\n        } else {\n            result += string(unicode.ToUpper(v))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result += string(v\
    \ - 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, v := range s {\n        if v >=\
    \ 'a' && v <= 'z' {\n            result += string(v)\n        } else {\n     \
    \       result += string(v + 32)\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n    \
    \    } else {\n            result += string([]rune(char)[26-int(char)])\n    \
    \    }\n    }\n    return result\n}\n", "    var result string\n    for _, v :=\
    \ range s {\n        if v >= 'a' && v <= 'z' {\n            result = result +\
    \ string(v - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result\
    \ = result + string(v - 'A') + string(v - 'a')\n        } else {\n           \
    \ result = result + v\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[26-int(char)-97])\n        } else\
    \ {\n            result += string([]rune(char)[26-int(char)])\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[char-'a'+1])\n\
    \        } else {\n            result += string([]rune(char)[char-'A'+1])\n  \
    \      }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v :=\
    \ range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 'A')\n        } else {\n            result += v\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    \n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-'a')])\n\
    \        } else {\n            result += char\n        }\n    }\n    \n    return\
    \ result\n}\n", "    var result string\n    for _, char := range s {\n       \
    \ if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-'a'])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 1)\n        } else {\n            result += v\n        }\n    }\n  \
    \  return result\n}\n", "    result := \"\"\n    for _, char := range s {\n  \
    \      if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-'a')])\n\
    \        } else {\n            result += string([]rune(char)[int('a')-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result = result\
    \ + string(v - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result\
    \ = result + string(v - 'A') + string((len(s) - 1) - int(v - 'A'))\n        }\
    \ else {\n            result = result + v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n  \
    \      } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 1)\n        } else if v >= 'A' && v <= 'Z' {\n            result +=\
    \ string(v - 'A' + 1)\n        } else {\n            result += v\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == letter.toUpper() {\n            result += letter.toLower()\n\
    \        } else {\n            result += letter\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]byte{char - 'a'\
    \ + 'A'})\n        } else {\n            result += char\n        }\n    }\n  \
    \  return result\n}\n", "    result := \"\"\n    for _, v := range s {\n     \
    \   if v >= 'a' && v <= 'z' {\n            result += string(v)\n        } else\
    \ {\n            result += string(unicode.ToUpper(v))\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char)))\
    \ - 'a' + 'A'])\n        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char)))\
    \ - 'a' + 'A'])\n        }\n    }\n    return result\n}\n", "    result := \"\"\
    \n    for _, letter := range s {\n        if letter == letter.toUpper() {\n  \
    \          result += letter.toLower()\n        } else {\n            result +=\
    \ letter\n        }\n    }\n    return result\n}\n", "    result := \"\"\n   \
    \ for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n        \
    \    result += string([]rune(char)[26-int(char)-97])\n        } else {\n     \
    \       result += string([]rune(char)[26-int(char)])\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char))):])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char))):])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ = result + string([]rune(letter)...)\n        } else {\n            result =\
    \ result + string(letter)\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[26-int(char)-65])\n        } else\
    \ {\n            result += string([]rune(char)[26-int(char)])\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result = result\
    \ + string([]rune(letter)[3:]) + string([]rune(letter)[:3])\n        } else {\n\
    \            result = result + letter\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n    \
    \    } else {\n            result += string([]rune(char)[26-int(char)])\n    \
    \    }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char - 'A'})\n        } else {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[1::-1])\n\
    \        } else {\n            result += string([]rune(char)[1::-1])\n       \
    \ }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)])\n\
    \        } else {\n            result += string([]rune(char)[int('a')-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char-'a')])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, v := range s {\n        if v >= 'a' &&\
    \ v <= 'z' {\n            result = result + string(v - 'a')\n        } else if\
    \ v >= 'A' && v <= 'Z' {\n            result = result + string(v - 'A') + string(v\
    \ - 'a')\n        } else {\n            result = result + v\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a' + 'A')\n\
    \        } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[26-int(char-97)])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char-65)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, r\
    \ := range s {\n        if r >= 'a' && r <= 'z' {\n            result += string(r-'a')\
    \ + string(r-'A')\n        } else {\n            result += r\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' || letter == 'A' {\n            letter = letter + 32\n\
    \        } else if letter == 'b' || letter == 'B' {\n            letter = letter\
    \ - 32\n        } else if letter == 'c' || letter == 'C' {\n            letter\
    \ = letter + 64\n        } else if letter == 'd' || letter == 'D' {\n        \
    \    letter = letter - 64\n        } else if letter == 'e' || letter == 'E' {\n\
    \            letter = letter + 96\n        } else if letter == 'f' || letter ==\
    \ 'F' {\n            letter = letter - 96\n        } else if letter == 'g' ||\
    \ letter == 'G' {\n            letter = letter + 128\n        } else if letter\
    \ == 'h' || letter == 'H' {\n            letter = letter - 128\n        } else\
    \ if letter == 'i' || letter == 'I' {\n            letter = letter + 160\n   \
    \     } else if letter == 'j' || letter == 'J' {\n            letter = letter\
    \ - 160\n        } else if letter == 'k' || letter == 'K' {\n            letter\
    \ = letter + 192\n        } else if letter == 'l' || letter == 'L' {\n       \
    \     letter = letter - 192\n        } else if letter == 'm' || letter == 'M'\
    \ {\n            letter = letter + 224\n        } else if letter == 'n' || letter\
    \ == 'N' {\n            letter = letter - 224\n        } else if letter == 'o'\
    \ || letter == 'O' {\n            letter = letter + 256\n        } else if letter\
    \ == 'p' || letter == 'P' {\n            letter = letter - 256\n        } else\
    \ if letter == 'q' || letter == 'Q' {\n            letter = letter + 260\n   \
    \     } else if letter == 'r' || letter == 'R' {\n            letter = letter\
    \ - 260\n        } else if letter == 's' || letter == 'S' {\n            letter\
    \ = letter + 272\n        } else if letter == 't' || letter == 'T' {\n       \
    \     letter = letter - 272\n        } else if letter == 'u' || letter == 'U'\
    \ {\n            letter = letter + 288\n        } else if letter == 'v' || letter\
    \ == 'V' {\n            letter = letter - 288\n        } else if letter == 'w'\
    \ || letter == 'W' {\n            letter = letter + 304\n        } else if letter\
    \ == 'x' || letter == 'X' {\n            letter = letter - 304\n        } else\
    \ if letter == 'y' || letter == 'Y' {\n            letter = letter + 312\n", " \
    \   result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z'\
    \ {\n            result += string(v - 'a')\n        } else if v >= 'A' && v <=\
    \ 'Z' {\n            result += string(v - 'A')\n        } else {\n           \
    \ result += v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n\
    \    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n     \
    \       result += string([]rune(char)[26-int(char)-65])\n        } else {\n  \
    \          result += string([]rune(char)[26-int(char)])\n        }\n    }\n  \
    \  return result\n}\n", "    result := \"\"\n    for _, char := range s {\n  \
    \      if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[strings.Index(strings.ToLower(string([]rune(char))),\
    \ string([]rune(char)))-1])\n        } else {\n            result += string([]rune(char)[strings.Index(strings.ToUpper(string([]rune(char))),\
    \ string([]rune(char)))-1])\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[26-int(char)-('a' - 'a')])\n  \
    \      } else {\n            result += string([]rune(char)[26-int(char)-('A' -\
    \ 'A')])\n        }\n    }\n    return result\n}\n", "    result := \"\"\n   \
    \ for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n        \
    \    result += string([]rune(char)[26-int(char)-97])\n        } else {\n     \
    \       result += string([]rune(char)[26-int(char)])\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    \n    for _, letter := range s {\n  \
    \      if letter == 'a' || letter == 'A' {\n            letter = string(unicode.ToLower(letter))\n\
    \        }\n        if letter == 'b' || letter == 'B' {\n            letter =\
    \ string(unicode.ToUpper(letter))\n        }\n        result += letter\n    }\n\
    \    \n    return result\n}\n", "    result := \"\"\n    for _, r := range s {\n\
    \        if r >= 'a' && r <= 'z' {\n            result += string(r-'a') + string(r-'A')\n\
    \        } else {\n            result += r\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v)\n        } else if v >= 'A' && v <=\
    \ 'Z' {\n            result += string(v)\n        } else {\n            result\
    \ += v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for\
    \ _, char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char)-97])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v)\n        } else {\n            result\
    \ += string(unicode.ToLower(v) + unicode.ToUpper(v))\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char))):])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char))):])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)])\n        } else {\n            result +=\
    \ string([]rune(char)[26-int(char)-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result += string(v\
    \ - 'A') + string('A' - 'A')\n        } else {\n            result += v\n    \
    \    }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n  \
    \      } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, v := range\
    \ s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a'\
    \ + 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, v := range s {\n        if v >=\
    \ 'a' && v <= 'z' {\n            result += string(v - 'a')\n        } else {\n\
    \            result += v\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[26-int(char-97)])\n        } else\
    \ {\n            result += string([]rune(char)[int('z'+char-65)])\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a')\n\
    \        } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a') + string(v - 'A')\n        }\
    \ else {\n            result += v\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    \n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'A' {\n            result = result + string([]rune(letter)...)\n\
    \        } else {\n            result = result + string(letter)\n        }\n \
    \   }\n    \n    return result\n}\n", "    result := \"\"\n    \n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    \n    return result\n}\n", "    result := \"\"\n    for\
    \ _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            result +=\
    \ string(v - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result\
    \ += string(v - 'A')\n        } else {\n            result += v\n        }\n \
    \   }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == letter.toUpper() {\n            result += letter.toLower()\n\
    \        } else {\n            result += letter\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, v := range s {\n        if v >=\
    \ 'a' && v <= 'z' {\n            result += string(v)\n        } else {\n     \
    \       result += string(v + 32)\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z'\
    \ {\n            result += string(v - 'a')\n        } else if v >= 'A' && v <=\
    \ 'Z' {\n            result += string(v - 'A')\n        } else {\n           \
    \ result += v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n\
    \    for _, letter := range s {\n        if letter == 'a' || letter == 'A' {\n\
    \            result += string([]rune(letter)...)\n        } else {\n         \
    \   result += string([]rune(letter)...)\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[26-int(char-97)])\n\
    \        } else {\n            result += string([]rune(char)[int('z'+char-65)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v)\n\
    \        } else if v >= 'A' && v <= 'Z' {\n            result += string(v)\n \
    \       } else {\n            result += string(v)\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    \n    for\
    \ _, letter := range s {\n        if letter == 'a' || letter == 'A' {\n      \
    \      result = result + string([]rune(letter)[3:] + []rune(letter)[:3])\n   \
    \     } else {\n            result = result + letter\n        }\n    }\n    \n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char)])\n        } else if char >= 'A' && char <=\
    \ 'Z' {\n            result += string([]rune(char)[26-int(char)])\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z'\
    \ {\n            result += string(v)\n        } else {\n            result +=\
    \ string(v) + string(v)\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n     \
    \       result += string(v - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n\
    \            result += string(v - 'A')\n        } else {\n            result +=\
    \ v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _,\
    \ letter := range s {\n        if letter == 'a' || letter == 'A' {\n         \
    \   result += string([]rune(letter)[3:])\n        } else {\n            result\
    \ += string([]rune(letter)[:3])\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[strings.Index(strings.ToLower(string([]rune(char))),\
    \ string([]rune(char))[0])])\n        } else {\n            result += string([]rune(char)[strings.Index(strings.ToUpper(string([]rune(char))),\
    \ string([]rune(char))[0])])\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n\
    \            result += string(v - 'a')\n        } else if v >= 'A' && v <= 'Z'\
    \ {\n            result += string(v - 'A')\n        } else {\n            result\
    \ += v\n        }\n    }\n    return result\n}\n", "    var result string\n  \
    \  for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n       \
    \     result += string([]rune(char)[strings.Index(strings.ToLower(string([]rune(char))),\
    \ string([]rune(char))[0])])\n        } else {\n            result += string([]rune(char)[strings.Index(strings.ToUpper(string([]rune(char))),\
    \ string([]rune(char))[0])])\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n    \
    \    } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]byte{char - 'a' + 'A'})\n \
    \       } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v)\n        } else {\n            result\
    \ += string(v + 32)\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n       \
    \     result += string(v - 'a' + 'A')\n        } else {\n            result +=\
    \ v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result += string(v\
    \ - 'A') + string(v - 'a')\n        } else {\n            result += v\n      \
    \  }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 'A')\n        } else if v >= 'A' && v <= 'Z' {\n            result +=\
    \ string(v - 'A' + 'a')\n        } else {\n            result += v\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char))):])\n      \
    \  } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char))):])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char-97)])\n        } else {\n            result\
    \ += string([]rune(char)[int('z'-char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-'a'])\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, r := range s {\n        if r >= 'a' && r\
    \ <= 'z' {\n            result += string(r-'a') + string(r-'A')\n        } else\
    \ {\n            result += r\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    \n    for _, letter := range s {\n        if letter == 'a'\
    \ || letter == 'A' {\n            result += string([]rune(letter)...)\n      \
    \  } else {\n            result += string([]rune(letter)...)\n        }\n    }\n\
    \    \n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-'a')])\n\
    \        } else {\n            result += string([]rune(char)[int('z'+char-'a')])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 'A')\n        } else {\n            result += v\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[char-'a'+1])\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)...)\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result += string(v\
    \ - 'A') + string(v - 'a')\n        } else {\n            result += v\n      \
    \  }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-97)])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char-65)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[char-'a'+1])\n        } else {\n            result += string([]rune(char)[char-'A'+1])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[26-int(char-'a')])\n        } else {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, v := range s {\n        if v >= 'a' &&\
    \ v <= 'z' {\n            result = result + string(v - 'a' + 1)\n        } else\
    \ {\n            result = result + v\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n    \
    \    } else {\n            result += string([]rune(char)[26-int(char)])\n    \
    \    }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    \n    for\
    \ _, char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char))):])\n   \
    \     } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char))):])\n\
    \        }\n    }\n    \n    return result\n}\n", "    result := \"\"\n    for\
    \ _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            result +=\
    \ string(v - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result\
    \ += string(v - 'A')\n        } else {\n            result += v\n        }\n \
    \   }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += string([]rune(letter)...)\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s\
    \ {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a' +\
    \ 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, v := range s {\n        if v >=\
    \ 'a' && v <= 'z' {\n            result += string(v)\n        } else {\n     \
    \       result += string(v + 32)\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, letter := range s {\n        if letter == 'a' ||\
    \ letter == 'A' {\n            result += string([]rune(letter)...)\n        }\
    \ else {\n            result += string([]rune(letter)...)\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-97)])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char-65)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, r\
    \ := range s {\n        if r >= 'a' && r <= 'z' {\n            result += string(r-'a')\
    \ + string(r-'A')\n        } else {\n            result += r\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-'a')])\n\
    \        } else {\n            result += string([]rune(char)[int('a')-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 1)\n        } else {\n            result += v\n        }\n    }\n  \
    \  return result\n}\n", "    result := \"\"\n    \n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)[3:])\n\
    \        } else {\n            result += string([]rune(letter))\n        }\n \
    \   }\n    \n    return result\n}\n", "    result := \"\"\n    for _, v := range\
    \ s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v)\n  \
    \      } else {\n            result += string(v + 32)\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(rune(char)))\
    \ - 'a' + 'A'])\n        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(rune(char)))\
    \ - 'a' + 'A'])\n        }\n    }\n    return result\n}\n", "    result := \"\"\
    \n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            result\
    \ += string(v - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result\
    \ += string(v - 'A')\n        } else {\n            result += v\n        }\n \
    \   }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-97)])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char-65)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v)\n\
    \        } else {\n            result += string(v + 32)\n        }\n    }\n  \
    \  return result\n}\n", "    var result string\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-'a')])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_43_pairs_sum_to_zero
language: go_test.go
prompt: "package pairs_sum_to_zero_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// pairs_sum_to_zero takes a list of integers as an input.\n// it returns True\
  \ if there are two distinct elements in the list that\n// sum to zero, and False\
  \ otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1,\
  \ 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>>\
  \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n\
  // False\nfunc pairs_sum_to_zero(l []int) bool {\n"
tests: "func TestPairs_Sum_To_Zero(t *testing.T) {\n  candidate := pairs_sum_to_zero\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate([]int{1, 3, 5, 0}), expected: false\
  \ },\n     { actual: candidate([]int{1, 3, -2, 1}), expected: false },\n     { actual:\
  \ candidate([]int{1, 2, 3, 7}), expected: false },\n     { actual: candidate([]int{2,\
  \ 4, -5, 3, 5, 7}), expected: true },\n     { actual: candidate([]int{1}), expected:\
  \ false },\n     { actual: candidate([]int{-3, 9, -1, 3, 2, 30}), expected: true\
  \ },\n     { actual: candidate([]int{-3, 9, -1, 3, 2, 31}), expected: true },\n\
  \     { actual: candidate([]int{-3, 9, -1, 4, 2, 30}), expected: false },\n    \
  \ { actual: candidate([]int{-3, 9, -1, 4, 2, 31}), expected: false },\n   }\n\n\t\
  for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    if len(l) == 0 {\n        return false\n    }\n    s := 0\n   \
    \ for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    t := 0\n    for _, v := range l {\n        t += v\n      \
    \  if t == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    for _, v := range l {\n        if v != 0 {\n            sum\
    \ -= v\n            if sum == 0 {\n                return true\n            }\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n  \
    \  return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s ==\
    \ 0 {\n        return false\n    }\n    for _, v := range l {\n        if v !=\
    \ 0 {\n            s -= v\n            if s == 0 {\n                return true\n\
    \            }\n        }\n    }\n    return false\n}\n", "    if len(l) == 0\
    \ {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n  \
    \      sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    l\
    \ := make([]int, len(l))\n    copy(l, l)\n    for i := 0; i < len(l); i++ {\n\
    \        if l[i] == 0 {\n            l = append(l, 0)\n        } else {\n    \
    \        l := append(l, l[i])\n        }\n    }\n    sort.Ints(l)\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum == 0\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n \
    \           i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n     \
    \   return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n  \
    \  for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ for _, v := range l {\n        if sum == 0 {\n            return false\n   \
    \     }\n        sum -= v\n    }\n    return true\n}\n", "    if len(l) == 0 {\n\
    \        return false\n    }\n    sum := 0\n    for _, v := range l {\n      \
    \  sum += v\n    }\n    if sum < 0 {\n        return false\n    }\n    sum /=\
    \ 2\n    for _, v := range l {\n        if v == sum {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    t := 0\n    for _, v := range\
    \ l {\n        t += v\n        if t == 0 {\n            return true\n        }\n\
    \    }\n    return false\n}\n", "    if len(l) < 2 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    for\
    \ i := 0; i < len(l)-1; i++ {\n        if l[i]+l[i+1] != sum {\n            return\
    \ false\n        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n    s := 0\n    for _, v := range l {\n        s +=\
    \ v\n    }\n    if s == 0 {\n        return false\n    }\n    t := 0\n    for\
    \ _, v := range l {\n        t += v\n        if t != 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) < 2 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n  \
    \  return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l\
    \ {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i ==\
    \ len(l)\n}\n", "    if len(l) < 2 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n \
    \       return false\n    }\n    i := 0\n    j := len(l) - 1\n    for i < j {\n\
    \        if l[i]+l[j] == 0 {\n            i++\n            j--\n        } else\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n\
    \    i := 0\n    for _, v := range l {\n        if v == 0 {\n            i++\n\
    \            continue\n        }\n        if v != l[i-1] {\n            return\
    \ false\n        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n  \
    \  for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v == 0 {\n            i++\n            continue\n        }\n\
    \        if v != l[i] {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n\
    \    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    t := 0\n    for _, v := range l {\n        t += v\n      \
    \  if t == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum ==\
    \ 0 && len(l) == 1 || sum != 0 && len(l) == 2\n}\n", "    if len(l) == 0 {\n \
    \       return false\n    }\n    s := 0\n    for _, v := range l {\n        s\
    \ += v\n    }\n    if s == 0 {\n        return false\n    }\n    t := 0\n    for\
    \ _, v := range l {\n        t += v\n        if t == 0 {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) < 2 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    for _, v := range l\
    \ {\n        if v != 0 {\n            sum -= v\n            if sum != 0 {\n  \
    \              return false\n            }\n        }\n    }\n    return true\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n \
    \           i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n     \
    \   return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    for _, v := range l {\n        if sum == 0 {\n            return\
    \ false\n        }\n        sum -= v\n    }\n    return true\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    for _, v := range l {\n        if sum != 0 {\n \
    \           if sum != -v {\n                return false\n            }\n    \
    \    }\n    }\n    return true\n}\n", "    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l) == 0 {\n \
    \       return false\n    }\n    sum := 0\n    for _, v := range l {\n       \
    \ sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n\
    \    for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    if i == 0 {\n        return false\n    }\n    j := 0\n    for _, v\
    \ := range l {\n        if v != 0 {\n            j += v\n        }\n    }\n  \
    \  return j == i\n}\n", "    if len(l) == 0 {\n        return false\n    }\n \
    \   s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n\
    \        return false\n    }\n    t := 0\n    for _, v := range l {\n        t\
    \ += v\n        if t == 0 {\n            return true\n        }\n    }\n    return\
    \ false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n \
    \       return false\n    }\n    for _, v := range l {\n        if sum-v == 0\
    \ {\n            return true\n        }\n    }\n    return false\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n\
    \    i := 0\n    for _, v := range l {\n        if v != 0 {\n            i +=\
    \ v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n \
    \       return false\n    }\n    sum := 0\n    for _, v := range l {\n       \
    \ sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n        if sum == 0 {\n    \
    \        return true\n        }\n    }\n    return false\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n\
    \        s += v\n    }\n    if s == 0 {\n        return false\n    }\n    t :=\
    \ 0\n    for _, v := range l {\n        t += v\n        if t == 0 {\n        \
    \    return true\n        }\n    }\n    return false\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n  \
    \      s += v\n    }\n    if s == 0 {\n        return false\n    }\n    t := 0\n\
    \    for _, v := range l {\n        t += v\n        if t == 0 {\n            return\
    \ true\n        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n  \
    \  for _, v := range l {\n        if v == 0 {\n            i++\n            continue\n\
    \        }\n        if sum-i == 0 {\n            return true\n        }\n    \
    \    sum -= i\n        i++\n    }\n    return false\n}\n", "    result := false\n\
    \    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n\
    \            if l[i] + l[j] == 0 {\n                result = true\n          \
    \      break\n            }\n        }\n    }\n    return result\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n\
    \    l := make(map[int]int, len(l))\n    for _, v := range l {\n        l[v] =\
    \ -1\n    }\n    for _, v := range l {\n        if v == -1 {\n            continue\n\
    \        }\n        if sum-v != 0 {\n            return false\n        }\n   \
    \ }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum\
    \ == 0 {\n        return false\n    }\n    for _, v := range l {\n        if v\
    \ > 0 {\n            sum -= v\n            if sum == 0 {\n                return\
    \ true\n            }\n        }\n    }\n    return false\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l) == 0 {\n \
    \       return false\n    }\n    sum := 0\n    for _, v := range l {\n       \
    \ sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n\
    \    for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    for _, v := range l {\n        if v\
    \ != 0 {\n            s -= v\n            if s == 0 {\n                return\
    \ true\n            }\n        }\n    }\n    return false\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n     \
    \   return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n  \
    \  for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    for _, v := range\
    \ l {\n        if sum != 0 {\n            return false\n        }\n        sum\
    \ -= v\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ for _, v := range l {\n        if sum != 0 {\n            return false\n   \
    \     }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    return\
    \ s == 0\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum == 0 &&\
    \ len(l) == 2 // if sum is zero, there are two distinct elements in the list that\
    \ sum to zero\n}\n", "    if len(l) < 2 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n\
    \        return false\n    }\n    l := make([]int, len(l))\n    for i, v := range\
    \ l {\n        l[i] = v\n    }\n    sort.Sort(l)\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum != 0 {\n        return false\n\
    \    }\n    for i := 1; i < len(l); i++ {\n        if l[i-1] != l[i] {\n     \
    \       return false\n        }\n    }\n    return true\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == len(l)\n}\n", "    if len(l) < 2 {\n      \
    \  return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum +=\
    \ v\n    }\n    if sum == 0 {\n        return false\n    }\n    for _, v := range\
    \ l {\n        if v != 0 {\n            sum -= v\n            if sum != 0 {\n\
    \                return false\n            }\n        }\n    }\n    return true\n\
    }\n", "    if len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    for _, v := range l {\n    \
    \    if sum == 0 {\n            return false\n        }\n        sum -= v\n  \
    \  }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    l := make(map[int]bool)\n    for\
    \ _, v := range l {\n        l[v] = true\n    }\n    for _, v := range l {\n \
    \       if v == true {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n   \
    \ }\n    return sum == 0\n}\n", "    if len(l) < 2 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0\n}\n", "    if len(l) < 2 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n \
    \       return false\n    }\n    l := make([]int, len(l))\n    for i, v := range\
    \ l {\n        l[i] = v\n    }\n    sort.Ints(l)\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum != 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        if v != 0 {\n       \
    \     return false\n        }\n    }\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum < 0 {\n        return false\n    }\n    i\
    \ := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n \
    \       }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n      \
    \  return false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n\
    \    }\n    if s == 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n  \
    \  return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s ==\
    \ 0 {\n        return false\n    }\n    l := make([]int, len(l))\n    for i, v\
    \ := range l {\n        l[i] = v\n    }\n    sort.Sort(l)\n    i := 0\n    j :=\
    \ len(l)-1\n    for i < j {\n        if l[i]+l[j] == 0 {\n            i++\n  \
    \          j--\n        } else {\n            if l[i]+l[j] != 0 {\n          \
    \      return false\n            }\n        }\n    }\n    return true\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ sort.Ints(l)\n    i := 0\n    for _, v := range l {\n        if v != l[i] {\n\
    \            return false\n        }\n        i++\n    }\n    return true\n}\n",
  "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum\
    \ == 0 && len(l) == 2 // if sum is zero and length is 2, then there are two distinct\
    \ elements\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n\
    \        return false\n    }\n    i := 0\n    for _, v := range l {\n        if\
    \ v != 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for _, v :=\
    \ range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n  \
    \  }\n    t := 0\n    for _, v := range l {\n        t += v\n        if t == 0\
    \ {\n            return true\n        }\n    }\n    return false\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n\
    \    i := 0\n    for _, v := range l {\n        if v == 0 {\n            i++\n\
    \            continue\n        }\n        if sum-v == 0 {\n            return\
    \ false\n        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    return sum == 0\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    for _, v := range l {\n        if sum == 0 {\n            return false\n\
    \        }\n        sum -= v\n    }\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n     \
    \   return false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n\
    \    }\n    if s == 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v == 0 {\n            i++\n            if i == len(l)\
    \ {\n                return true\n            }\n        }\n    }\n    return\
    \ false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n \
    \       return false\n    }\n    i := 0\n    for _, v := range l {\n        if\
    \ v != 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    for _, v := range l {\n        if sum\
    \ == 0 {\n            return false\n        }\n        sum -= v\n    }\n    return\
    \ true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n     \
    \   return false\n    }\n    i := 0\n    for _, v := range l {\n        if v ==\
    \ 0 {\n            i++\n            continue\n        }\n        if sum-v != 0\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    s := 0\n    for _, v := range\
    \ l {\n        s += v\n    }\n    if s == 0 {\n        return false\n    }\n \
    \   t := 0\n    for _, v := range l {\n        t += v\n        if t == 0 {\n \
    \           return true\n        }\n    }\n    return false\n}\n", "    if len(l)\
    \ < 2 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n     \
    \   return false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n\
    \    }\n    if s == 0 {\n        return false\n    }\n    for _, v := range l\
    \ {\n        if v != 0 {\n            s -= v\n            if s == 0 {\n      \
    \          return true\n            }\n        }\n    }\n    return false\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    if i == 0 {\n        return false\n    }\n \
    \   for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    if i == 0 {\n        return true\n    }\n    return false\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n     \
    \   return false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n\
    \    }\n    if s == 0 {\n        return false\n    }\n    t := 0\n    for _, v\
    \ := range l {\n        t += v\n        if t != 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    for _, v := range l {\n   \
    \     if v > 0 {\n            s -= v\n        }\n    }\n    return s == 0\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    return sum == 0 && len(l) == 1 || sum\
    \ > 0 && len(l) == 2\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    for _, v := range\
    \ l {\n        if sum == 0 {\n            return false\n        }\n        sum\
    \ -= v\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    for _, v := range l {\n    \
    \    if sum-v == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n", "    if len(l) < 2 {\n        return false\n    }\n    s := 0\n    for _,\
    \ v := range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n\
    \    }\n    t := 0\n    for _, v := range l {\n        t += v\n        if t !=\
    \ 0 {\n            return false\n        }\n    }\n    return true\n}\n", "  \
    \  if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    for _, v := range l {\n        if sum == 0 {\n \
    \           return false\n        }\n        sum -= v\n    }\n    return true\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    left := 0\n    right := len(l)\n    for left < right {\n \
    \       middle := (left + right) / 2\n        if sum == l[middle] {\n        \
    \    return true\n        }\n        if sum < l[middle] {\n            left =\
    \ middle + 1\n        } else {\n            right = middle\n        }\n    }\n\
    \    return false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum\
    \ == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l {\n\
    \        if v != 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    i := 0\n    for _, v := range l {\n        if v == 0 {\n \
    \           i++\n            continue\n        }\n        if sum-v != 0 {\n  \
    \          return false\n        }\n    }\n    return true\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v == 0 {\n            i++\n  \
    \          continue\n        }\n        if i == 0 {\n            return false\n\
    \        }\n        if v != l[i-1] {\n            return false\n        }\n  \
    \      i++\n    }\n    return true\n}\n", "    if len(l) < 2 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    for _, v := range l {\n        if sum != 0 {\n            return false\n\
    \        }\n        sum -= v\n    }\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ for _, v := range l {\n        if v != 0 {\n            sum -= v\n         \
    \   if sum != 0 {\n                return false\n            }\n        }\n  \
    \  }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum < 0 {\n        return false\n    }\n    l := make(map[int]int, len(l))\n\
    \    for _, v := range l {\n        l[v] = -1\n    }\n    for _, v := range l\
    \ {\n        if v == -1 {\n            continue\n        }\n        if sum-v !=\
    \ 0 {\n            return false\n        }\n    }\n    return true\n}\n", "  \
    \  if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v == 0 {\n         \
    \   i++\n            continue\n        }\n        if i == len(l)-1 {\n       \
    \     return true\n        }\n        if v != l[i+1] {\n            return false\n\
    \        }\n        i++\n    }\n    return false\n}\n", "    if len(l) < 2 {\n\
    \        return false\n    }\n    sum := 0\n    for _, v := range l {\n      \
    \  sum += v\n    }\n    if sum < 0 {\n        return false\n    }\n    i := 0\n\
    \    for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    if i != 0 {\n        return false\n    }\n    return true\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for _, v :=\
    \ range l {\n        s += v\n    }\n    return s == 0\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0 && len(l) == 1 || sum != 0 && len(l)\
    \ == 2\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n     \
    \   return false\n    }\n    i := 0\n    for _, v := range l {\n        if v !=\
    \ 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n  \
    \      s += v\n    }\n    if s == 0 {\n        return false\n    }\n    t := 0\n\
    \    for _, v := range l {\n        t += v\n        if t != s {\n            return\
    \ false\n        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n    s := 0\n    for _, v := range l {\n        s +=\
    \ v\n    }\n    if s == 0 {\n        return false\n    }\n    i := 0\n    for\
    \ _, v := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n\
    \    return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n\
    \        return false\n    }\n    i := 0\n    for _, v := range l {\n        if\
    \ v != 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n}\n",
  "    if len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum < 0 {\n        return false\n    }\n    i\
    \ := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n \
    \       }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n      \
    \  return false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n\
    \    }\n    if s == 0 {\n        return false\n    }\n    t := 0\n    for _, v\
    \ := range l {\n        t += v\n        if t == 0 {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    return sum == 0\n}\n", "    if len(l) < 2 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum ==\
    \ 0\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    return sum == 0\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    for _, v := range l {\n        if sum\
    \ == 0 {\n            return false\n        }\n        sum -= v\n    }\n    return\
    \ true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n     \
    \   return false\n    }\n    i := 0\n    for _, v := range l {\n        if v !=\
    \ 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v == 0 {\n         \
    \   i++\n        }\n        if i == len(l) {\n            return true\n      \
    \  }\n        sum += v\n        i++\n    }\n    return false\n}\n", "    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum == 0\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    return sum == 0\n}\n", "   \
    \ if len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v == 0 {\n         \
    \   return false\n        }\n        if v != l[i] {\n            return false\n\
    \        }\n        i++\n    }\n    return true\n}\n", "    if len(l) == 0 {\n\
    \        return false\n    }\n    sum := 0\n    for _, v := range l {\n      \
    \  sum += v\n    }\n    for _, v := range l {\n        if sum == 0 {\n       \
    \     return false\n        }\n        sum -= v\n    }\n    return true\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    for _, v := range l {\n        if sum\
    \ == 0 {\n            return false\n        }\n        sum -= v\n    }\n    return\
    \ true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    for _, v := range l {\n\
    \        if sum == 0 {\n            return false\n        }\n        sum -= v\n\
    \    }\n    return true\n}\n", "    if len(l) < 2 {\n        return false\n  \
    \  }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum < 0 {\n        return false\n    }\n    l := make([]int, len(l))\n    copy(l,\
    \ l)\n    l := append(l, 0)\n    i := 0\n    for _, v := range l {\n        if\
    \ v == 0 {\n            i++\n            continue\n        }\n        if i ==\
    \ len(l) {\n            return false\n        }\n        if v != l[i+1] {\n  \
    \          return false\n        }\n        i++\n    }\n    return true\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v == 0 {\n            i++\n  \
    \          continue\n        }\n        if i == len(l) {\n            return false\n\
    \        }\n        if v != l[i+1] {\n            return false\n        }\n  \
    \      i++\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    for _, v := range l {\n        if sum == 0 {\n            return false\n\
    \        }\n        sum -= v\n    }\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v == 0 {\n            i++\n  \
    \          continue\n        }\n        if sum-v != 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n  \
    \  return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s ==\
    \ 0 {\n        return false\n    }\n    for _, v := range l {\n        if v !=\
    \ 0 {\n            s -= v\n            if s == 0 {\n                return true\n\
    \            }\n        }\n    }\n    return false\n}\n", "    if len(l) == 0\
    \ {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n    \
    \    s += v\n    }\n    if s == 0 {\n        return false\n    }\n    t := 0\n\
    \    for _, v := range l {\n        t += v\n        if t == 0 {\n            return\
    \ true\n        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum < 0 {\n        return false\n    }\n    i := 0\n   \
    \ for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    t := 0\n    for _, v := range l {\n\
    \        t += v\n        if t == 0 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l\
    \ {\n        if v == 0 {\n            return false\n        }\n        if v !=\
    \ l[i] {\n            return false\n        }\n        i++\n    }\n    return\
    \ true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n\
    \    for _, v := range l {\n        s += v\n    }\n    return s == 0\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for _, v :=\
    \ range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n  \
    \  }\n    for _, v := range l {\n        if v != 0 {\n            s -= v\n   \
    \         if s == 0 {\n                return true\n            }\n        }\n\
    \    }\n    return false\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum < 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n\
    \        return false\n    }\n    i := 0\n    for _, v := range l {\n        if\
    \ v != 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l) == 0 {\n \
    \       return false\n    }\n    sum := 0\n    for _, v := range l {\n       \
    \ sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    l := make([]int,\
    \ len(l))\n    copy(l, l)\n    l := append(l, 0)\n    i := 0\n    for _, v :=\
    \ range l {\n        if v > 0 {\n            i++\n        }\n        if i == len(l)\
    \ {\n            return true\n        }\n        if v != l[i] {\n            return\
    \ false\n        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n   \
    \     return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n  \
    \  for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n\
    \        return false\n    }\n    i := 0\n    for _, v := range l {\n        if\
    \ v == 0 {\n            i++\n            continue\n        }\n        if sum-v\
    \ == 0 {\n            return false\n        }\n    }\n    return true\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    return sum == 0 && len(l) == 2 //\
    \ if sum is zero and there are two distinct elements, then return true\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    return sum == 0 || sum == -1\n}\n",
  "    if len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if v != 0 {\n            sum -= v\n\
    \            if sum == 0 {\n                return true\n            }\n     \
    \   }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    l := make([]int, 0, len(l))\n    for\
    \ _, v := range l {\n        if v == 0 {\n            l = append(l, v)\n     \
    \   }\n    }\n    if len(l) == 2 {\n        return true\n    }\n    return pairs_sum_to_zero(l)\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    for _, v := range l {\n    \
    \    if sum == 0 {\n            return false\n        }\n        sum -= v\n  \
    \  }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s ==\
    \ 0 {\n        return false\n    }\n    l := make([]int, len(l))\n    copy(l,\
    \ l)\n    for i := len(l) - 1; i >= 0; i-- {\n        if l[i] == 0 {\n       \
    \     l = append(l[:i], l[i+1:]...)\n        }\n    }\n    return len(l) == 2\
    \ && l[0] == 0 && l[1] == 0\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n\
    \        return false\n    }\n    l := make([]int, len(l))\n    for i, v := range\
    \ l {\n        l[i] = v\n    }\n    sort.Sort(l)\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum != 0 {\n        return false\n\
    \    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    left := 0\n    right := len(l)\
    \ - 1\n    for left < right {\n        current := l[left]\n        next := l[right]\n\
    \        if current == next {\n            left++\n            right--\n     \
    \   } else {\n            if sum-current == 0 {\n                return true\n\
    \            }\n            left++\n            right--\n        }\n    }\n  \
    \  return false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n  \
    \  sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum ==\
    \ 0 {\n        return false\n    }\n    for _, v := range l {\n        if sum-v\
    \ != 0 {\n            return false\n        }\n    }\n    return true\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    l := make([]int, 0, len(l))\n    for _, v := range l {\n        l\
    \ := append(l, v)\n    }\n    sort.Ints(l)\n    i := 0\n    j := len(l) - 1\n\
    \    for i < j {\n        if l[i]+l[j] == 0 {\n            i++\n            j--\n\
    \        } else {\n            return true\n        }\n    }\n    return false\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    l := make([]int, len(l))\n    for i := range l {\n       \
    \ l[i] = l[i] + sum\n    }\n    return len(l) == 2 && l[0] != l[1]\n}\n", "  \
    \  m := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n \
    \   }\n    for _, v := range l {\n        if m[v] {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    for _, v := range l {\n   \
    \     if v > 0 {\n            s -= v\n        }\n        if s == 0 {\n       \
    \     return true\n        }\n    }\n    return false\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n     \
    \   return false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n\
    \    }\n    if s == 0 {\n        return false\n    }\n    l := make([]int, len(l))\n\
    \    for i := range l {\n        l[i] = l[i] + s\n    }\n    return len(l) ==\
    \ 2 && l[0] == 0 && l[1] == 0\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ return sum == 0\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

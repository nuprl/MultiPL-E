language: go_test.go
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    a, b := 2,\
    \ 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return b\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpi618zxv7_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpi618zxv7_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpi618zxv7_test.go:58: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpi618zxv7_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpi618zxv7_test.go:58: expected '%!s(int=89)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpi618zxv7_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpi618zxv7_test.go:58: expected '%!s(int=1597)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpi618zxv7_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=55)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpi618zxv7_test.go:58: expected '%!s(int=514229)', got '%!s(int=89)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpi618zxv7_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=144)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1304969\n    }\n    if n == 32 {\n        return 2117031\n    }\n\
    \    if n == 33 {\n        return 2902193\n    }\n    if n == 34 {\n        return\
    \ 3903155\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7602040\n    }\n    if n == 37 {\n        return 9420160\n\
    \    }\n    if n == 38 {\n        return 11965563\n    }\n    if n == 39 {\n \
    \       return 17799401\n    }\n    if n == 40 {\n        return 25841581\n  \
    \  }\n    if n == 41 {\n        return 34136363\n    }\n    if n == 42 {\n   \
    \     return 46774919\n    }\n    if n == 43 {\n        return 62317065\n    }\n\
    \    if n == 44 {\n        return 79583553\n    }\n    if n == 45 {\n        return\
    \ 104410251\n    }\n    if n == 46 {\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpvr4omrdz_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074622
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return i\n        }\n\
    \        a, b = b, a+b\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    a, b\
    \ := 2, 3\n    for i := 6; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpfb3u0tyf_test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpfb3u0tyf_test.go:64:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpfb3u0tyf_test.go:64: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpfb3u0tyf_test.go:64:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpfb3u0tyf_test.go:64: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpfb3u0tyf_test.go:64:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    a, b\
    \ := 2, 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpc11aggyw_test.go:64:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=233)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpc11aggyw_test.go:64:\
    \ expected '%!s(int=1597)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=28657)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpc11aggyw_test.go:64:\
    \ expected '%!s(int=514229)', got '%!s(int=55)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=433494437)', got\
    \ '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    x := prime_fib(n-1)\n\
    \    y := prime_fib(n-2)\n    if x == y {\n        return x\n    }\n    return\
    \ x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmnaqpk4n_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmnaqpk4n_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpmnaqpk4n_test.go:59: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpmnaqpk4n_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpmnaqpk4n_test.go:59: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpmnaqpk4n_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpmnaqpk4n_test.go:59: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpmnaqpk4n_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpmnaqpk4n_test.go:59: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpmnaqpk4n_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1188704\n    }\n    if n == 32 {\n        return 1819871\n    }\n\
    \    if n == 33 {\n        return 2365887\n    }\n    if n == 34 {\n        return\
    \ 3036011\n    }\n    if n == 35 {\n        return 4603409\n    }\n    if n ==\
    \ 36 {\n        return 6283875\n    }\n    if n == 37 {\n        return 9048419\n\
    \    }\n    if n == 38 {\n        return 12540253\n    }\n    if n == 39 {\n \
    \       return 18960431\n    }\n    if n == 40 {\n        return 25204461\n  \
    \  }\n    if n == 41 {\n        return 30103801\n    }\n    if n == 42 {\n   \
    \     return 38674247\n    }\n    if n == 43 {\n        return 56294995\n    }\n\
    \    if n == 44 {\n        return 73595570\n    }\n    if n == 45 {\n        return\
    \ 102334155\n    }\n    if n == 46 {\n\nfunc TestPrime_Fib(t *testing.T) {\n \
    \ candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmps9qxjrzi_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074622
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i <= n; i++ {\n        if a > b {\n            return a\n     \
    \   }\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp2kncie7i_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp2kncie7i_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp2kncie7i_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp2kncie7i_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp2kncie7i_test.go:56: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp2kncie7i_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp2kncie7i_test.go:56: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp2kncie7i_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp2kncie7i_test.go:56: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp2kncie7i_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1180595\n    }\n    if n == 32 {\n        return 1690141\n    }\n\
    \    if n == 33 {\n        return 2528921\n    }\n    if n == 34 {\n        return\
    \ 405663\n    }\n    if n == 35 {\n        return 655737\n    }\n    if n == 36\
    \ {\n        return 946697\n    }\n    if n == 37 {\n        return 1304969\n\
    \    }\n    if n == 38 {\n        return 2119952\n    }\n    if n == 39 {\n  \
    \      return 2918094\n    }\n    if n == 40 {\n        return 3772193\n    }\n\
    \    if n == 41 {\n        return 5434447\n    }\n    if n == 42 {\n        return\
    \ 7014087\n    }\n    if n == 43 {\n        return 9278782\n    }\n    if n ==\
    \ 44 {\n        return 12586269\n    }\n    if n == 45 {\n        return 15942487\n\
    \    }\n    if n == 46 {\n        return 209960\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp4v1bwnfm_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074622
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1304969\n    }\n    if n == 32 {\n        return 1922368\n    }\n\
    \    if n == 33 {\n        return 3175648\n    }\n    if n == 34 {\n        return\
    \ 514229\n    }\n    if n == 35 {\n        return 765571\n    }\n    if n == 36\
    \ {\n        return 1304969\n    }\n    if n == 37 {\n        return 1922368\n\
    \    }\n    if n == 38 {\n        return 3175648\n    }\n    if n == 39 {\n  \
    \      return 514229\n    }\n    if n == 40 {\n        return 765571\n    }\n\
    \    if n == 41 {\n        return 1304969\n    }\n    if n == 42 {\n        return\
    \ 1922368\n    }\n    if n == 43 {\n        return 3175648\n    }\n    if n ==\
    \ 44 {\n        return 514229\n    }\n    if n == 45 {\n        return 765571\n\
    \    }\n    if n == 46 {\n        return 1304969\n    }\n    if \nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmppewkgmbo_test.go:159:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074622
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 1\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      break\n        }\n        i++\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptaryi_q3_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptaryi_q3_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptaryi_q3_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptaryi_q3_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptaryi_q3_test.go:63: expected '%!s(int=89)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptaryi_q3_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=10)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptaryi_q3_test.go:63: expected '%!s(int=1597)', got '%!s(int=10)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptaryi_q3_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=10)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptaryi_q3_test.go:63: expected '%!s(int=514229)', got '%!s(int=10)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptaryi_q3_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            a, b = b, a+b\n     \
    \   } else {\n            a, b = b, a\n        }\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpur5s3xjb_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpur5s3xjb_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpur5s3xjb_test.go:56: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpur5s3xjb_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpur5s3xjb_test.go:56: expected '%!s(int=89)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpur5s3xjb_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpur5s3xjb_test.go:56: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpur5s3xjb_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpur5s3xjb_test.go:56: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpur5s3xjb_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n    \n    switch\
    \ {\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 2 == 0 && n == 2:\n        return prime_fib(n - 1)\n    case\
    \ n % 2 == 1 && n != 3:\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    case n % 2 == 1 && n == 3:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    case n % 3 == 0 && n != 5:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3)\n    case n % 3 == 0 && n == 5:\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    case n % 3 == 1 && n != 7:\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4)\n    case n %\
    \ 3 == 1 && n == 7:\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3)\n    case n % 5 == 0 && n != 13:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6)\n    case n % 5 == 0 && n == 13:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5)\n    case n %\
    \ 5 == 1 && n != 21:\n        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n\
    \ - 7)\n    case n % 5 == 1 && n == 21:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6)\n    case n % 7 == 0 && n != 89:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7) + prime_fib(n - 8)\n    case n % 7 == 0 && n == 89:\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpzk7mncgl_test.go:58:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074622
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i <= n; i++ {\n        if a > b {\n            return a\n     \
    \   }\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp2kncie7i_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp2kncie7i_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp2kncie7i_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp2kncie7i_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp2kncie7i_test.go:56: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp2kncie7i_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp2kncie7i_test.go:56: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp2kncie7i_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp2kncie7i_test.go:56: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp2kncie7i_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    a, b\
    \ := 2, 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpc11aggyw_test.go:64:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=233)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpc11aggyw_test.go:64:\
    \ expected '%!s(int=1597)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=28657)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpc11aggyw_test.go:64:\
    \ expected '%!s(int=514229)', got '%!s(int=55)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=433494437)', got\
    \ '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            a, b = b, a+b\n      \
    \  } else {\n            a, b = b, a+b\n        }\n    }\n    return b\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp6zjcxy70_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp6zjcxy70_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp6zjcxy70_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp6zjcxy70_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp6zjcxy70_test.go:56: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp6zjcxy70_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp6zjcxy70_test.go:56: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp6zjcxy70_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp6zjcxy70_test.go:56: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp6zjcxy70_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 832040\n    }\n    if n == 31 {\n   \
    \     return 1267650\n    }\n    if n == 32 {\n        return 2097150\n    }\n\
    \    if n == 33 {\n        return 2980132\n    }\n    if n == 34 {\n        return\
    \ 4973921\n    }\n    if n == 35 {\n        return 8058024\n    }\n    if n ==\
    \ 36 {\n        return 16021570\n    }\n    if n == 37 {\n        return 26791429\n\
    \    }\n    if n == 38 {\n        return 43349449\n    }\n    if n == 39 {\n \
    \       return 62259858\n    }\n    if n == 40 {\n        return 102334155\n \
    \   }\n    if n == 41 {\n        return 172839894\n    }\n    if n == 42 {\n \
    \       return 263546221\n    }\n    if n == 43 {\n        return 43349449\n \
    \   }\n    if n == 44 {\n        return 62259858\n    }\n    if n == 45 {\n  \
    \      return 8058024\n    }\n    if n == 46 {\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmplkg7nink_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074622
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 1\n    for i < n {\n        if j%i == 0 {\n            j++\n   \
    \     } else {\n            i++\n        }\n    }\n    return j\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpyo2hnaz0_test.go:69: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpyo2hnaz0_test.go:69:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpyo2hnaz0_test.go:69: expected '%!s(int=233)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpyo2hnaz0_test.go:69:\
    \ expected '%!s(int=1597)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpyo2hnaz0_test.go:69: expected '%!s(int=28657)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpyo2hnaz0_test.go:69:\
    \ expected '%!s(int=514229)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpyo2hnaz0_test.go:69: expected '%!s(int=433494437)', got\
    \ '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1304969\n    }\n    if n == 32 {\n        return 2111393\n    }\n\
    \    if n == 33 {\n        return 2934414\n    }\n    if n == 34 {\n        return\
    \ 466897\n    }\n    if n == 35 {\n        return 613741\n    }\n    if n == 36\
    \ {\n        return 792266\n    }\n    if n == 37 {\n        return 1044560\n\
    \    }\n    if n == 38 {\n        return 1396261\n    }\n    if n == 39 {\n  \
    \      return 2189221\n    }\n    if n == 40 {\n        return 2867641\n    }\n\
    \    if n == 41 {\n        return 4258621\n    }\n    if n == 42 {\n        return\
    \ 5702881\n    }\n    if n == 43 {\n        return 7340081\n    }\n    if n ==\
    \ 44 {\n        return 9163921\n    }\n    if n == 45 {\n        return 10842421\n\
    \    }\n    if n == 46 {\n        return \nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpgt19_qnc_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074622
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1180595\n    }\n    if n == 32 {\n        return 1699829\n    }\n\
    \    if n == 33 {\n        return 2554531\n    }\n    if n == 34 {\n        return\
    \ 4052707\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7163351\n    }\n    if n == 37 {\n        return 9261619\n\
    \    }\n    if n == 38 {\n        return 11404466\n    }\n    if n == 39 {\n \
    \       return 13212777\n    }\n    if n == 40 {\n        return 15373566\n  \
    \  }\n    if n == 41 {\n        return 18491463\n    }\n    if n == 42 {\n   \
    \     return 21451623\n    }\n    if n == 43 {\n        return 24590334\n    }\n\
    \    if n == 44 {\n        return 27674255\n    }\n    if n == 45 {\n        return\
    \ 30805987\n    }\n    if n == 46 {\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpa7u4lzf__test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074622
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            a, b = b, a+b\n      \
    \  } else {\n            a, b = b, a+b\n        }\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpuje6j1bd_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpuje6j1bd_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpuje6j1bd_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpuje6j1bd_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpuje6j1bd_test.go:56: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpuje6j1bd_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpuje6j1bd_test.go:56: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpuje6j1bd_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpuje6j1bd_test.go:56: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpuje6j1bd_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n <= 1:\n        return n\n    case n ==\
    \ 2:\n        return 1\n    case n % 2 == 0 && n != 2:\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    default:\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptvlh707r_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptvlh707r_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptvlh707r_test.go:54: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptvlh707r_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptvlh707r_test.go:54: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptvlh707r_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptvlh707r_test.go:54: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptvlh707r_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptvlh707r_test.go:54: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptvlh707r_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 1\n    k := 1\n    sum := 0\n    for {\n        if j > n {\n   \
    \         break\n        }\n        sum = k\n        i += j\n        j += k\n\
    \        k = sum\n    }\n    return i\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpg8i541ik_test.go:73: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpg8i541ik_test.go:73:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpg8i541ik_test.go:73: expected '%!s(int=233)', got '%!s(int=23)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpg8i541ik_test.go:73:\
    \ expected '%!s(int=1597)', got '%!s(int=30)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpg8i541ik_test.go:73: expected '%!s(int=28657)', got '%!s(int=38)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpg8i541ik_test.go:73:\
    \ expected '%!s(int=514229)', got '%!s(int=47)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpg8i541ik_test.go:73: expected '%!s(int=433494437)', got\
    \ '%!s(int=57)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    for i < n {\n        if j > n {\n            return n\n       \
    \ }\n        if j == i {\n            j++\n            continue\n        }\n \
    \       if j > n {\n            return n\n        }\n        i += j\n        j++\n\
    \    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp8j1s51sw_test.go:70: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp8j1s51sw_test.go:70:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp8j1s51sw_test.go:70: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp8j1s51sw_test.go:70:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp8j1s51sw_test.go:70: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp8j1s51sw_test.go:70:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp8j1s51sw_test.go:70: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp8j1s51sw_test.go:70:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp8j1s51sw_test.go:70: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp8j1s51sw_test.go:70:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    if n\
    \ == 6 {\n        return 25\n    }\n    if n == 7 {\n        return 55\n    }\n\
    \    if n == 8 {\n        return 135\n    }\n    if n == 9 {\n        return 413\n\
    \    }\n    if n == 10 {\n        return 987\n    }\n    if n == 11 {\n      \
    \  return 1597\n    }\n    if n == 12 {\n        return 2583\n    }\n    if n\
    \ == 13 {\n        return 4181\n    }\n    if n == 14 {\n        return 6765\n\
    \    }\n    if n == 15 {\n        return 10946\n    }\n    if n == 16 {\n    \
    \    return 17711\n    }\n    if n == 17 {\n        return 28657\n    }\n    if\
    \ n == 18 {\n        return 46135\n    }\n    if n == 19 {\n        return 68607\n\
    \    }\n    if n == 20 {\n        return 100957\n    }\n    if n == 21 {\n   \
    \     return 121429\n    }\n    if n == 22 {\n        return 152061\n    }\n \
    \   if n == 23 {\n        return 183487\n    }\n    if n == 24 {\n        return\
    \ 212607\n    }\n    if n == 25 {\n        return 243989\n    }\n    if n == 26\
    \ {\n        return 277273\n    }\n    if n == 27 {\n        return 308527\n \
    \   }\n    if n == 28 {\n        return 341391\n    }\n    if n == 29 {\n    \
    \    return 371897\n    }\n    if n == 30 {\n        return 402297\n    }\n  \
    \  if n == 31 {\n        return 433837\n    }\n    if n == 32 {\n        return\
    \ 465701\n    }\n    if n == 33 {\n        return 497037\n    }\n    if n == 34\
    \ {\n        return 529191\n    }\n    if n == 35 {\n        return 564771\n \
    \   }\n    if n == 36 {\n        return 600151\n    }\n    if n == 37 {\n    \
    \    return 626239\n    }\n    if n == 38 {\n        return 664893\n    }\n  \
    \  if n == 39 {\n        return 707419\n    }\n    if n == 40 {\n        return\
    \ 740079\n    }\n    if n == 41 {\n        return 771191\n    }\n    if n == 42\
    \ {\n        return 801773\n    }\n    if n == 43 {\n        return 832701\n \
    \   }\n    if n == 44 {\n        return 863409\n    }\n    if n == 45 {\n    \
    \    return 893739\n    }\n    if \nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpho2qhzhl_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074622
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1304969\n    }\n    if n == 32 {\n        return 2095801\n    }\n\
    \    if n == 33 {\n        return 2902189\n    }\n    if n == 34 {\n        return\
    \ 3903571\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7602049\n    }\n    if n == 37 {\n        return 9420163\n\
    \    }\n    if n == 38 {\n        return 11965975\n    }\n    if n == 39 {\n \
    \       return 18350087\n    }\n    if n == 40 {\n        return 24990267\n  \
    \  }\n    if n == 41 {\n        return 39521749\n    }\n    if n == 42 {\n   \
    \     return 55725729\n    }\n    if n == 43 {\n        return 69683375\n    }\n\
    \    if n == 44 {\n        return 84528719\n    }\n    if n == 45 {\n        return\
    \ 103218127\n    }\n    if n == 46 {\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpxy69aoto_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074622
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    n -=\
    \ 2\n    a, b := 2, 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n\
    \    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp5zib63gv_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp5zib63gv_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp5zib63gv_test.go:65: expected '%!s(int=233)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp5zib63gv_test.go:65:\
    \ expected '%!s(int=1597)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp5zib63gv_test.go:65: expected '%!s(int=28657)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp5zib63gv_test.go:65:\
    \ expected '%!s(int=514229)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp5zib63gv_test.go:65: expected '%!s(int=433494437)', got\
    \ '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    sum := 0\n    for i <= n {\n        sum += i\n        if sum > n {\n\
    \            sum -= n\n        }\n        i += 2\n    }\n    return sum\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp2kipld89_test.go:69: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp2kipld89_test.go:69:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp2kipld89_test.go:69: expected '%!s(int=233)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp2kipld89_test.go:69:\
    \ expected '%!s(int=1597)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp2kipld89_test.go:69: expected '%!s(int=28657)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp2kipld89_test.go:69:\
    \ expected '%!s(int=514229)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp2kipld89_test.go:69: expected '%!s(int=433494437)', got\
    \ '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        if a > b {\n            return a\n      \
    \  }\n        a, b = b, a+b\n    }\n\n    return a\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpf4jg620z_test.go:57: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpf4jg620z_test.go:57:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpf4jg620z_test.go:57: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpf4jg620z_test.go:57:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpf4jg620z_test.go:57: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpf4jg620z_test.go:57:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpf4jg620z_test.go:57: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpf4jg620z_test.go:57:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpf4jg620z_test.go:57: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpf4jg620z_test.go:57:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2862047\n    }\n    if n == 34 {\n        return\
    \ 4115695\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7162837\n    }\n    if n == 37 {\n        return 9283293\n\
    \    }\n    if n == 38 {\n        return 11545707\n    }\n    if n == 39 {\n \
    \       return 16781375\n    }\n    if n == 40 {\n        return 19852869\n  \
    \  }\n    if n == 41 {\n        return 22009175\n    }\n    if n == 42 {\n   \
    \     return 25125783\n    }\n    if n == 43 {\n        return 29186455\n    }\n\
    \    if n == 44 {\n        return 33321787\n    }\n    if n == 45 {\n        return\
    \ 38331793\n    }\n    if n == \nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpjlr9tusa_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    if n == 2 {\n   \
    \     return 1\n    }\n\n    if n == 3 {\n        return 2\n    }\n\n    i :=\
    \ 2\n    sum := 0\n    for i <= n {\n        sum += i\n        i++\n    }\n\n\
    \    if sum == n {\n        return n\n    }\n\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpp7xy4phg_test.go:68: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpp7xy4phg_test.go:68:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpp7xy4phg_test.go:68: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpp7xy4phg_test.go:68:\
    \ expected '%!s(int=13)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpp7xy4phg_test.go:68: expected '%!s(int=89)', got '%!s(int=14)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpp7xy4phg_test.go:68:\
    \ expected '%!s(int=233)', got '%!s(int=20)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpp7xy4phg_test.go:68: expected '%!s(int=1597)', got '%!s(int=27)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpp7xy4phg_test.go:68:\
    \ expected '%!s(int=28657)', got '%!s(int=35)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpp7xy4phg_test.go:68: expected '%!s(int=514229)', got '%!s(int=44)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpp7xy4phg_test.go:68:\
    \ expected '%!s(int=433494437)', got '%!s(int=54)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n    \n    a, b :=\
    \ 0, 1\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpy7bwd_au_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpy7bwd_au_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpy7bwd_au_test.go:58: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpy7bwd_au_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpy7bwd_au_test.go:58: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpy7bwd_au_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpy7bwd_au_test.go:58: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpy7bwd_au_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpy7bwd_au_test.go:58: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpy7bwd_au_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n\n    a, b := 2,\
    \ 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return b\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpqcr22gtb_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpqcr22gtb_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpqcr22gtb_test.go:58: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpqcr22gtb_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpqcr22gtb_test.go:58: expected '%!s(int=89)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpqcr22gtb_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpqcr22gtb_test.go:58: expected '%!s(int=1597)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpqcr22gtb_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=55)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpqcr22gtb_test.go:58: expected '%!s(int=514229)', got '%!s(int=89)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpqcr22gtb_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=144)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2109448\n    }\n    if n == 34 {\n        return\
    \ 2637558\n    }\n    if n == 35 {\n        return 4052705\n    }\n    if n ==\
    \ 36 {\n        return 5520368\n    }\n    if n == 37 {\n        return 7168097\n\
    \    }\n    if n == 38 {\n        return 9871947\n    }\n    if n == 39 {\n  \
    \      return 15480087\n    }\n    if n == 40 {\n        return 20946027\n   \
    \ }\n    if n == 41 {\n        return 26189131\n    }\n    if n == 42 {\n    \
    \    return 32759227\n    }\n    if n == 43 {\n        return 46600644\n    }\n\
    \    if n == 44 {\n        return 62259676\n    }\n    if n == 45 {\n        return\
    \ 78818143\n    }\n    if n == 46 {\n        return \nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp859g92sz_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        if a > b {\n            a, b = b, a+b\n \
    \       }\n    }\n    return b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp8lb_etct_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp8lb_etct_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp8lb_etct_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp8lb_etct_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp8lb_etct_test.go:55: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp8lb_etct_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp8lb_etct_test.go:55: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp8lb_etct_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp8lb_etct_test.go:55: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp8lb_etct_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    n -=\
    \ 2\n    a, b := prime_fib(n-1), prime_fib(n-2)\n    return a + b\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp9t8nstb6_test.go:62: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp9t8nstb6_test.go:62:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp9t8nstb6_test.go:62: expected '%!s(int=233)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp9t8nstb6_test.go:62:\
    \ expected '%!s(int=1597)', got '%!s(int=18)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp9t8nstb6_test.go:62: expected '%!s(int=28657)', got '%!s(int=102)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp9t8nstb6_test.go:62:\
    \ expected '%!s(int=514229)', got '%!s(int=96)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp9t8nstb6_test.go:62: expected '%!s(int=433494437)', got\
    \ '%!s(int=25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 734773\n    }\n    if n == 31 {\n   \
    \     return 1140704\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2679141\n    }\n    if n == 34 {\n        return\
    \ 4334944\n    }\n    if n == 35 {\n        return 6935297\n    }\n    if n ==\
    \ 36 {\n        return 10233455\n    }\n    if n == 37 {\n        return 16695936\n\
    \    }\n    if n == 38 {\n        return 26776825\n    }\n    if n == 39 {\n \
    \       return 43349441\n    }\n    if n == 40 {\n        return 69352973\n  \
    \  }\n    if n == 41 {\n        return 102334551\n    }\n    if n == 42 {\n  \
    \      return 166959361\n    }\n    if n == 43 {\n        return 267768251\n \
    \   }\n    if n == 44 {\n        return 433494411\n    }\n    if n == 45 {\n \
    \       return 693529731\n    }\n    if n == \nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp8_9ohr7w_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    x := prime_fib(n-1)\n\
    \    y := prime_fib(n-2)\n    if x == y {\n        return y\n    }\n    return\
    \ x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpkoc9nvhh_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpkoc9nvhh_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpkoc9nvhh_test.go:59: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpkoc9nvhh_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpkoc9nvhh_test.go:59: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpkoc9nvhh_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpkoc9nvhh_test.go:59: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpkoc9nvhh_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpkoc9nvhh_test.go:59: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpkoc9nvhh_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 3\n    k := 5\n    m := 5\n    for {\n        if j > i {\n     \
    \       break\n        }\n        if k >= m {\n            break\n        }\n\
    \        if j%i == 0 {\n            m += k\n        }\n        i += j\n      \
    \  j /= i\n        k /= i\n    }\n    return m\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpiuweoo5w_test.go:78: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpiuweoo5w_test.go:78:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpiuweoo5w_test.go:78: expected '%!s(int=233)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpiuweoo5w_test.go:78:\
    \ expected '%!s(int=1597)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpiuweoo5w_test.go:78: expected '%!s(int=28657)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpiuweoo5w_test.go:78:\
    \ expected '%!s(int=514229)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpiuweoo5w_test.go:78: expected '%!s(int=433494437)', got\
    \ '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return i\n        }\n\
    \        a, b = b, a+b\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2189311\n    }\n    if n == 34 {\n        return\
    \ 2867671\n    }\n    if n == 35 {\n        return 4258871\n    }\n    if n ==\
    \ 36 {\n        return 5702881\n    }\n    if n == 37 {\n        return 7340071\n\
    \    }\n    if n == 38 {\n        return 9071571\n    }\n    if n == 39 {\n  \
    \      return 10973821\n    }\n    if n == 40 {\n        return 13835791\n   \
    \ }\n    if n == 41 {\n        return 17197381\n    }\n    if n == 42 {\n    \
    \    return 19975681\n    }\n    if n == 43 {\n        return 22517481\n    }\n\
    \    if n == 44 {\n        return 25140481\n    }\n    if n == 45 {\n        return\
    \ 27777281\n    }\n    if n == 46 {\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp8rr6up6p_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 734748\n    }\n    if n == 31 {\n   \
    \     return 1140739\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2679141\n    }\n    if n == 34 {\n        return\
    \ 4334944\n    }\n    if n == 35 {\n        return 6935296\n    }\n    if n ==\
    \ 36 {\n        return 10233487\n    }\n    if n == 37 {\n        return 16695936\n\
    \    }\n    if n == 38 {\n        return 2679141\n    }\n    if n == 39 {\n  \
    \      return 4334944\n    }\n    if n == 40 {\n        return 6935296\n    }\n\
    \    if n == 41 {\n        return 10233487\n    }\n    if n == 42 {\n        return\
    \ 16695936\n    }\n    if n == 43 {\n        return 2679141\n    }\n    if n ==\
    \ 44 {\n        return 4334944\n    }\n    if n == 45 {\n        return 6935296\n\
    \    }\n    if n == 46 {\n        return 10233\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpxmriszzr_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    case n % 2 == 0 &&\
    \ n != 4:\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    case n % 2\
    \ == 0 && n == 4:\n        return prime_fib(n - 1) + prime_fib(n - 3)\n    case\
    \ n % 2 == 0 && n != 5:\n        return prime_fib(n - 2) + prime_fib(n - 3)\n\
    \    case n % 2 == 0 && n == 5:\n        return prime_fib(n - 2) + prime_fib(n\
    \ - 4)\n    case n % 3 == 0 && n != 5:\n        return prime_fib(n - 3) + prime_fib(n\
    \ - 4)\n    case n % 3 == 0 && n == 5:\n        return prime_fib(n - 3) + prime_fib(n\
    \ - 5)\n    case n % 5 == 0 && n != 5:\n        return prime_fib(n - 5) + prime_fib(n\
    \ - 4)\n    case n % 5 == 0 && n == 5:\n        return prime_fib(n - 5) + prime_fib(n\
    \ - 6)\n    default:\n        return prime_fib(n - 1) + prime_fib(n - 2)\n   \
    \ }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp6zxkubqs_test.go:70: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp6zxkubqs_test.go:70:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp6zxkubqs_test.go:70: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp6zxkubqs_test.go:70:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp6zxkubqs_test.go:70: expected '%!s(int=89)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp6zxkubqs_test.go:70:\
    \ expected '%!s(int=233)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp6zxkubqs_test.go:70: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp6zxkubqs_test.go:70:\
    \ expected '%!s(int=28657)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp6zxkubqs_test.go:70: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp6zxkubqs_test.go:70:\
    \ expected '%!s(int=433494437)', got '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307676\n    }\n    if n == 32 {\n        return 2033903\n    }\n\
    \    if n == 33 {\n        return 2863607\n    }\n    if n == 34 {\n        return\
    \ 4290067\n    }\n    if n == 35 {\n        return 5642274\n    }\n    if n ==\
    \ 36 {\n        return 7401791\n    }\n    if n == 37 {\n        return 8314697\n\
    \    }\n    if n == 38 {\n        return 10677279\n    }\n    if n == 39 {\n \
    \       return 13595697\n    }\n    if n == 40 {\n        return 15259097\n  \
    \  }\n    if n == 41 {\n        return 17774571\n    }\n    if n == 42 {\n   \
    \     return 20951877\n    }\n    if n == 43 {\n        return 24683177\n    }\n\
    \    if n == 44 {\n        return 29582877\n    }\n    if n == 45 {\n        return\
    \ 35137947\n    }\n    if n == \nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpcp0eeqm5_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    n -= 2\n  \
    \  a, b := prime_fib(n - 1), prime_fib(n - 2)\n    if a > b {\n        return\
    \ a\n    }\n    return b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp1z94wm08_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp1z94wm08_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp1z94wm08_test.go:59: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp1z94wm08_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp1z94wm08_test.go:59: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp1z94wm08_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp1z94wm08_test.go:59: expected '%!s(int=1597)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp1z94wm08_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp1z94wm08_test.go:59: expected '%!s(int=514229)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp1z94wm08_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            a, b = b, a+b\n     \
    \   } else {\n            a, b = b, a\n        }\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        if a > b {\n            return a\n      \
    \  }\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 3\n  \
    \  j := 1\n    for {\n        if j > n {\n            break\n        }\n     \
    \   if j == i {\n            return j\n        }\n        i += j\n        j +=\
    \ 1\n    }\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp5f61x0fe_test.go:66: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp5f61x0fe_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp5f61x0fe_test.go:66: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp5f61x0fe_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp5f61x0fe_test.go:66: expected '%!s(int=89)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp5f61x0fe_test.go:66:\
    \ expected '%!s(int=233)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp5f61x0fe_test.go:66: expected '%!s(int=1597)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp5f61x0fe_test.go:66:\
    \ expected '%!s(int=28657)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp5f61x0fe_test.go:66: expected '%!s(int=514229)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp5f61x0fe_test.go:66:\
    \ expected '%!s(int=433494437)', got '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    x := prime_fib(n\
    \ - 2)\n    y := prime_fib(n - 1)\n    return x + y\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp27exa6sa_test.go:56: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp27exa6sa_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    prime := true\n    for i <= n {\n        if j > n {\n         \
    \   break\n        }\n        if j == i {\n            prime = false\n       \
    \ }\n        if prime {\n            j = j + i\n        } else {\n           \
    \ i = i + j\n        }\n    }\n    return i\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp6flwhuqx_test.go:70: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp6flwhuqx_test.go:70:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp6flwhuqx_test.go:70: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp6flwhuqx_test.go:70:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp6flwhuqx_test.go:70: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp6flwhuqx_test.go:70:\
    \ expected '%!s(int=233)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp6flwhuqx_test.go:70: expected '%!s(int=1597)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp6flwhuqx_test.go:70:\
    \ expected '%!s(int=28657)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp6flwhuqx_test.go:70: expected '%!s(int=514229)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp6flwhuqx_test.go:70:\
    \ expected '%!s(int=433494437)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    if n\
    \ == 6 {\n        return 13\n    }\n    if n == 7 {\n        return 21\n    }\n\
    \    if n == 8 {\n        return 34\n    }\n    if n == 9 {\n        return 55\n\
    \    }\n    if n == 10 {\n        return 89\n    }\n    if n == 11 {\n       \
    \ return 13\n    }\n    if n == 12 {\n        return 21\n    }\n    if n == 13\
    \ {\n        return 34\n    }\n    if n == 14 {\n        return 55\n    }\n  \
    \  if n == 15 {\n        return 89\n    }\n    if n == 16 {\n        return 13\n\
    \    }\n    if n == 17 {\n        return 21\n    }\n    if n == 18 {\n       \
    \ return 34\n    }\n    if n == 19 {\n        return 55\n    }\n    if n == 20\
    \ {\n        return 89\n    }\n    if n == 21 {\n        return 13\n    }\n  \
    \  if n == 22 {\n        return 21\n    }\n    if n == 23 {\n        return 34\n\
    \    }\n    if n == 24 {\n        return 55\n    }\n    if n == 25 {\n       \
    \ return 89\n    }\n    if n == 26 {\n        return 13\n    }\n    if n == 27\
    \ {\n        return 21\n    }\n    if n == 28 {\n        return 34\n    }\n  \
    \  if n == 29 {\n        return 55\n    }\n    if n == 30 {\n        return 89\n\
    \    }\n    if n == 31 {\n        return 13\n    }\n    if n == 32 {\n       \
    \ return 21\n    }\n    if n == 33 {\n        return 34\n    }\n    if n == 34\
    \ {\n        return 55\n    }\n    if n == 35 {\n        return 89\n    }\n  \
    \  if n == 36 {\n        return 13\n    }\n    if n == 37 {\n        return 21\n\
    \    }\n    if n == 38 {\n        return 34\n    }\n    if n == 39 {\n       \
    \ return 55\n    }\n    if n == 40 {\n        return 89\n    }\n    if n == 41\
    \ {\n        return 13\n    }\n    if n == 42 {\n        return 21\n    }\n  \
    \  if n == 43 {\n        return 34\n    }\n    if n == 44 {\n        return 55\n\
    \    }\n    if n == 45 {\n        return 89\n    }\n    if n == 46 {\n       \
    \ return 13\n    }\n    if n == 47 {\n        return 21\n    }\n    if n == 48\
    \ {\n        return 34\n    }\n    if n == 49 {\n        return 55\n    }\n  \
    \  if n == 50 {\n        return 89\n    }\n    if n == 51 {\n        return 13\n\
    \    }\n    if n == 52 {\n        return \nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp8d9ji2dg_test.go:175:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074567
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    a, b\
    \ := 2, 3\n    for i := 5; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp4iugr_9__test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp4iugr_9__test.go:64:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp4iugr_9__test.go:64: expected '%!s(int=233)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp4iugr_9__test.go:64:\
    \ expected '%!s(int=1597)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp4iugr_9__test.go:64: expected '%!s(int=28657)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp4iugr_9__test.go:64:\
    \ expected '%!s(int=514229)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp4iugr_9__test.go:64: expected '%!s(int=433494437)', got\
    \ '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n\n    a, b := 2,\
    \ 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2862047\n    }\n    if n == 34 {\n        return\
    \ 4115695\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7256109\n    }\n    if n == 37 {\n        return 9583587\n\
    \    }\n    if n == 38 {\n        return 12676507\n    }\n    if n == 39 {\n \
    \       return 18426087\n    }\n    if n == 40 {\n        return 25845869\n  \
    \  }\n    if n == 41 {\n        return 34131072\n    }\n    if n == 42 {\n   \
    \     return 46600641\n    }\n    if n == 43 {\n        return 61399206\n    }\n\
    \    if n == 44 {\n        return 76121507\n    }\n    if n == 45 {\n        return\
    \ 93241701\n    }\n    if n == \nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp280uixeh_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 734773\n    }\n    if n == 31 {\n   \
    \     return 1140704\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2679141\n    }\n    if n == 34 {\n        return\
    \ 4334944\n    }\n    if n == 35 {\n        return 6935297\n    }\n    if n ==\
    \ 36 {\n        return 10233463\n    }\n    if n == 37 {\n        return 16695936\n\
    \    }\n    if n == 38 {\n        return 26795983\n    }\n    if n == 39 {\n \
    \       return 43349443\n    }\n    if n == 40 {\n        return 69352973\n  \
    \  }\n    if n == 41 {\n        return 102334629\n    }\n    if n == 42 {\n  \
    \      return 166959363\n    }\n    if n == 43 {\n        return 267959833\n \
    \   }\n    if n == 44 {\n        return 433494433\n    }\n    if n == 45 {\n \
    \       return 693529737\n    }\n    if \nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp0wir7r14_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2189311\n    }\n    if n == 34 {\n        return\
    \ 2867671\n    }\n    if n == 35 {\n        return 4258871\n    }\n    if n ==\
    \ 36 {\n        return 5702881\n    }\n    if n == 37 {\n        return 7168061\n\
    \    }\n    if n == 38 {\n        return 9263361\n    }\n    if n == 39 {\n  \
    \      return 11878112\n    }\n    if n == 40 {\n        return 15673312\n   \
    \ }\n    if n == 41 {\n        return 19497461\n    }\n    if n == 42 {\n    \
    \    return 23207761\n    }\n    if n == 43 {\n        return 28657622\n    }\n\
    \    if n == 44 {\n        return 36541272\n    }\n    if n == 45 {\n        return\
    \ 41849376\n    }\n    if n == 46\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpa5j60v2o_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    if n\
    \ == 6 {\n        return 13\n    }\n    if n == 7 {\n        return 23\n    }\n\
    \    if n == 8 {\n        return 34\n    }\n    if n == 9 {\n        return 55\n\
    \    }\n    if n == 10 {\n        return 89\n    }\n    if n == 11 {\n       \
    \ return 13\n    }\n    if n == 12 {\n        return 21\n    }\n    if n == 13\
    \ {\n        return 34\n    }\n    if n == 14 {\n        return 55\n    }\n  \
    \  if n == 15 {\n        return 89\n    }\n    if n == 16 {\n        return 13\n\
    \    }\n    if n == 17 {\n        return 23\n    }\n    if n == 18 {\n       \
    \ return 34\n    }\n    if n == 19 {\n        return 55\n    }\n    if n == 20\
    \ {\n        return 89\n    }\n    if n == 21 {\n        return 13\n    }\n  \
    \  if n == 22 {\n        return 23\n    }\n    if n == 23 {\n        return 34\n\
    \    }\n    if n == 24 {\n        return 55\n    }\n    if n == 25 {\n       \
    \ return 89\n    }\n    if n == 26 {\n        return 13\n    }\n    if n == 27\
    \ {\n        return 23\n    }\n    if n == 28 {\n        return 34\n    }\n  \
    \  if n == 29 {\n        return 55\n    }\n    if n == 30 {\n        return 89\n\
    \    }\n    if n == 31 {\n        return 13\n    }\n    if n == 32 {\n       \
    \ return 23\n    }\n    if n == 33 {\n        return 34\n    }\n    if n == 34\
    \ {\n        return 55\n    }\n    if n == 35 {\n        return 89\n    }\n  \
    \  if n == 36 {\n        return 13\n    }\n    if n == 37 {\n        return 23\n\
    \    }\n    if n == 38 {\n        return 34\n    }\n    if n == 39 {\n       \
    \ return 55\n    }\n    if n == 40 {\n        return 89\n    }\n    if n == 41\
    \ {\n        return 13\n    }\n    if n == 42 {\n        return 23\n    }\n  \
    \  if n == 43 {\n        return 34\n    }\n    if n == 44 {\n        return 55\n\
    \    }\n    if n == 45 {\n        return 89\n    }\n    if n == 46 {\n       \
    \ return 13\n    }\n    if n == 47 {\n        return 23\n    }\n    if n == 48\
    \ {\n        return 34\n    }\n    if n == 49 {\n        return 55\n    }\n  \
    \  if n == 50 {\n        return 89\n    }\n    if n == 51 {\n        return 13\n\
    \    }\n    if n == 52 {\n        return \nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpl3om1vp9_test.go:175:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 734003\n    }\n    if n == 31 {\n   \
    \     return 1023307\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2679141\n    }\n    if n == 34 {\n        return\
    \ 4334944\n    }\n    if n == 35 {\n        return 6979394\n    }\n    if n ==\
    \ 36 {\n        return 11000863\n    }\n    if n == 37 {\n        return 17226526\n\
    \    }\n    if n == 38 {\n        return 2868426\n    }\n    if n == 39 {\n  \
    \      return 4259680\n    }\n    if n == 40 {\n        return 5702887\n    }\n\
    \    if n == 41 {\n        return 7347233\n    }\n    if n == 42 {\n        return\
    \ 10689663\n    }\n    if n == 43 {\n        return 16356457\n    }\n    if n\
    \ == 44 {\n        return 26795929\n    }\n    if n == 45 {\n        return 43349442\n\
    \    }\n    if n == 46 {\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp2v7z5b_l_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074625
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    for i < n {\n        if j > n {\n            return n\n       \
    \ }\n        i += j\n        j = j + i\n    }\n    return i\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmppq2jjtfs_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmppq2jjtfs_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmppq2jjtfs_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmppq2jjtfs_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmppq2jjtfs_test.go:63: expected '%!s(int=89)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmppq2jjtfs_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmppq2jjtfs_test.go:63: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmppq2jjtfs_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmppq2jjtfs_test.go:63: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmppq2jjtfs_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 3\n    k := 1\n    m := 1\n    for i < n {\n        if j > m {\n\
    \            m = j\n        }\n        if k >= m {\n            k = k + m\n  \
    \      }\n        j = k\n        i = i + 2\n    }\n    return i\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp_tmz8mvu_test.go:74: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp_tmz8mvu_test.go:74:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp_tmz8mvu_test.go:74: expected '%!s(int=233)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp_tmz8mvu_test.go:74:\
    \ expected '%!s(int=1597)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp_tmz8mvu_test.go:74: expected '%!s(int=28657)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp_tmz8mvu_test.go:74:\
    \ expected '%!s(int=514229)', got '%!s(int=10)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp_tmz8mvu_test.go:74: expected '%!s(int=433494437)', got\
    \ '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 3\n    k := 5\n    m := 5\n    for i < n {\n        if j > m {\n     \
    \       m = j\n        }\n        if k > m {\n            m = k\n        }\n \
    \       if j == m {\n            return i\n        }\n        if k == m {\n  \
    \          return j\n        }\n        i, j = j, j+k\n        k = k + 2\n   \
    \ }\n    return j\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp6m5mjh2p_test.go:74: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp6m5mjh2p_test.go:74:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp6m5mjh2p_test.go:74: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp6m5mjh2p_test.go:74:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp6m5mjh2p_test.go:74: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp6m5mjh2p_test.go:74:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp6m5mjh2p_test.go:74: expected '%!s(int=1597)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp6m5mjh2p_test.go:74:\
    \ expected '%!s(int=28657)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp6m5mjh2p_test.go:74: expected '%!s(int=514229)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp6m5mjh2p_test.go:74:\
    \ expected '%!s(int=433494437)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 1\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      sum = 1\n        }\n        if sum == n {\n            return i\n     \
    \   }\n        i++\n    }\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpqqpp0363_test.go:66: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpqqpp0363_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpqqpp0363_test.go:66: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpqqpp0363_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpqqpp0363_test.go:66: expected '%!s(int=89)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpqqpp0363_test.go:66:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpqqpp0363_test.go:66: expected '%!s(int=1597)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpqqpp0363_test.go:66:\
    \ expected '%!s(int=28657)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpqqpp0363_test.go:66: expected '%!s(int=514229)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpqqpp0363_test.go:66:\
    \ expected '%!s(int=433494437)', got '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2863607\n    }\n    if n == 34 {\n        return\
    \ 4258117\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7162817\n    }\n    if n == 37 {\n        return 9263317\n\
    \    }\n    if n == 38 {\n        return 11563317\n    }\n    if n == 39 {\n \
    \       return 13903417\n    }\n    if n == 40 {\n        return 161863417\n \
    \   }\n    if n == 41 {\n        return 193983417\n    }\n    if n == 42 {\n \
    \       return 223983417\n    }\n    if n == 43 {\n        return 253983417\n\
    \    }\n    if n == 44 {\n        return 273983417\n    }\n    if n == 45 {\n\
    \        return 303983417\n    }\n    if n == \nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpas958m_3_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            a, b = b, a+b\n     \
    \   } else {\n            a, b = b, a\n        }\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2092272\n    }\n\
    \    if n == 33 {\n        return 2865771\n    }\n    if n == 34 {\n        return\
    \ 4636878\n    }\n    if n == 35 {\n        return 7502573\n    }\n    if n ==\
    \ 36 {\n        return 1213937\n    }\n    if n == 37 {\n        return 1964179\n\
    \    }\n    if n == 38 {\n        return 3178123\n    }\n    if n == 39 {\n  \
    \      return 5142293\n    }\n    if n == 40 {\n        return 7655713\n    }\n\
    \    if n == 41 {\n        return 13076753\n    }\n    if n == 42 {\n        return\
    \ 20922723\n    }\n    if n == 43 {\n        return 28657713\n    }\n    if n\
    \ == 44 {\n        return 46368783\n    }\n    if n == 45 {\n        return 75025735\n\
    \    }\n    if n == 46 {\n        return 12\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpc97_qtlg_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    i := 2\n  \
    \  sum := 0\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      break\n        }\n        i++\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpa2m3gqke_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpa2m3gqke_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpa2m3gqke_test.go:63: expected '%!s(int=13)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpa2m3gqke_test.go:63:\
    \ expected '%!s(int=89)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpa2m3gqke_test.go:63: expected '%!s(int=233)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpa2m3gqke_test.go:63:\
    \ expected '%!s(int=1597)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpa2m3gqke_test.go:63: expected '%!s(int=28657)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpa2m3gqke_test.go:63:\
    \ expected '%!s(int=514229)', got '%!s(int=14)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpa2m3gqke_test.go:63: expected '%!s(int=433494437)', got\
    \ '%!s(int=14)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    if n == 2 {\n   \
    \     return 3\n    }\n\n    if n == 3 {\n        return 5\n    }\n\n    i :=\
    \ 2\n    j := 1\n    sum := 0\n\n    for i <= n {\n        sum = j\n        j\
    \ = i\n        i = sum + j\n    }\n\n    if i == n {\n        return i\n    }\n\
    \n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp5_p5pka0_test.go:71: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp5_p5pka0_test.go:71:\
    \ expected '%!s(int=13)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp5_p5pka0_test.go:71: expected '%!s(int=89)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp5_p5pka0_test.go:71:\
    \ expected '%!s(int=233)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp5_p5pka0_test.go:71: expected '%!s(int=1597)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp5_p5pka0_test.go:71:\
    \ expected '%!s(int=28657)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp5_p5pka0_test.go:71: expected '%!s(int=514229)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp5_p5pka0_test.go:71:\
    \ expected '%!s(int=433494437)', got '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2863607\n    }\n    if n == 34 {\n        return\
    \ 4290067\n    }\n    if n == 35 {\n        return 5643433\n    }\n    if n ==\
    \ 36 {\n        return 7405594\n    }\n    if n == 37 {\n        return 9580099\n\
    \    }\n    if n == 38 {\n        return 12141589\n    }\n    if n == 39 {\n \
    \       return 15201998\n    }\n    if n == 40 {\n        return 18351199\n  \
    \  }\n    if n == 41 {\n        return 21475131\n    }\n    if n == 42 {\n   \
    \     return 24695133\n    }\n    if n == 43 {\n        return 28657723\n    }\n\
    \    if n == 44 {\n        return 32702463\n    }\n    if n == 45 {\n        return\
    \ 36543599\n    }\n    if n == 46\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp5lgrn60u_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 0\n    for i < n {\n        sum += i\n        if sum > n {\n       \
    \     break\n        }\n        i += 2\n    }\n    if sum == n {\n        return\
    \ n\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp1q93qgnd_test.go:66: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp1q93qgnd_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp1q93qgnd_test.go:66: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp1q93qgnd_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp1q93qgnd_test.go:66: expected '%!s(int=89)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp1q93qgnd_test.go:66:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp1q93qgnd_test.go:66: expected '%!s(int=1597)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp1q93qgnd_test.go:66:\
    \ expected '%!s(int=28657)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp1q93qgnd_test.go:66: expected '%!s(int=514229)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp1q93qgnd_test.go:66:\
    \ expected '%!s(int=433494437)', got '%!s(int=12)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 1\n    k := 2\n    m := 3\n    for i < n {\n        if j > m {\n\
    \            k = k + m\n        }\n        m = j\n        j = k\n        k = k\
    \ + m\n        i = i + 1\n    }\n    return k\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpv5hb2ycb_test.go:73: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpv5hb2ycb_test.go:73:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpv5hb2ycb_test.go:73: expected '%!s(int=233)', got '%!s(int=24)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpv5hb2ycb_test.go:73:\
    \ expected '%!s(int=1597)', got '%!s(int=48)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpv5hb2ycb_test.go:73: expected '%!s(int=28657)', got '%!s(int=96)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpv5hb2ycb_test.go:73:\
    \ expected '%!s(int=514229)', got '%!s(int=192)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpv5hb2ycb_test.go:73: expected '%!s(int=433494437)', got\
    \ '%!s(int=384)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 3\n  \
    \  j := 5\n    sum := 0\n    for {\n        if j > i {\n            sum += prime_fib(j)\n\
    \        }\n        if sum > n {\n            return sum\n        }\n        i\
    \ += 2\n        j += 2\n    }\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "runtime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp=0xc0201e0380\
    \ stack=[0xc0201e0000, 0xc0401e0000]\nfatal error: stack overflow\n\nruntime stack:\n\
    runtime.throw({0x520355?, 0x5e3ea0?})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:992\
    \ +0x71\nruntime.newstack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/stack.go:1101\
    \ +0x5cc\nruntime.morestack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/asm_amd64.s:547\
    \ +0x8b\n\ngoroutine 6 [running]:\ncommand-line-arguments_test.prime_fib(0x5)\n\
    \t/tmp/tmpwt4rx5en_test.go:19 +0xbc fp=0xc0201e0390 sp=0xc0201e0388 pc=0x4ef71c\n\
    command-line-arguments_test.prime_fib(0x5)\n\t/tmp/tmpwt4rx5en_test.go:34 +0x87\
    \ fp=0xc0201e03c0 sp=0xc0201e0390 pc=0x4ef6e7\ncommand-line-arguments_test.prime_fib(0x5)\n\
    \t/tmp/tmpwt4rx5en_test.go:34 +0x87 fp=0xc0201e03f0 sp=0xc0201e03c0 pc=0x4ef6e7\n\
    command-line-arguments_test.prime_fib(0x5)\n\t/tmp/tmpwt4rx5en_test.go:34 +0x87\
    \ fp=0xc0201e0420 sp=0xc0201e03f0 pc=0x4ef6e7\ncommand-line-arguments_test.prime_fib(0x5)\n\
    \t/tmp/tmpwt4rx5en_test.go:34 +0x87 fp=0xc0201e0450 sp=0xc0201e0420 pc=0x4ef6e7\n\
    command-line-arguments_test.prime_fib(0x5)\n\t/tmp/tmpwt4rx5en_test.go:34 +0x87\
    \ fp=0xc0201e0480 sp=0xc0201e0450 pc=0x4ef6e7\ncommand-line-arguments_test.prime_fib(0x5)\n\
    \t/tmp/tmpwt4rx5en_test.go:34 +0x87 fp=0xc0201e04b0 sp=0xc0201e0480 pc=0x4ef6e7\n\
    command-line-arguments_test.prime_fib(0x5)\n\t/tmp/tmpwt4rx5en_test.go:34 +0x87\
    \ fp=0xc0201e04e0 sp=0xc0201e04b0 pc=0x4ef6e7\ncommand-line-arguments_test.prime_fib(0x5)\n\
    \t/tmp/tmpwt4rx5en_test.go:34 +0x87 fp=0xc0201e0510 sp=0xc0201e04e0 pc=0x4ef6e7\n\
    command-line-arguments_test.prime_fib(0x5)\n\t/tmp/tmpwt4rx5en_test.go:34 +0x87\
    \ fp=0xc0201e0540 sp=0xc0201e0510 pc=0x4ef6e7\ncommand-line-arguments_test.prime_fib(0x5)\n\
    \t/tmp/tmpwt4rx5en_test.go:34 +0x87 fp=0xc0201e0570 sp=0xc0201e0540 pc=0x4ef6e7\n\
    command-line-arguments_test.prime_fib(0x5)\n\t/tmp/tmpwt4rx5en_test.go:34 +0x87\
    \ fp=0xc0201e05a0 sp=0xc0201e0570 pc=0x4ef6e7\ncommand-line-arguments_test.prime_fib(0x5)\n\
    \t/tmp/tmpwt4rx5en_test.go:34 +0x87 fp=0xc0201e05d0 sp=0xc0201e05a0 pc"
  timestamp: 1660074627
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 3\n  \
    \  j := 1\n    k := 2\n    m := 3\n    for i < n {\n        if j > m {\n     \
    \       k = k + m\n        }\n        if k > n {\n            break\n        }\n\
    \        if j == i {\n            k = k + m\n        }\n        if k > n {\n \
    \           break\n        }\n        if j > i {\n            k = k + m\n    \
    \    }\n        if k > n {\n            break\n        }\n        m = k\n    \
    \    j = i\n        i = k\n        k = k + m\n    }\n    return i\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp4trv6b1b_test.go:82: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp4trv6b1b_test.go:82:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp4trv6b1b_test.go:82: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp4trv6b1b_test.go:82:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp4trv6b1b_test.go:82: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp4trv6b1b_test.go:82:\
    \ expected '%!s(int=233)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp4trv6b1b_test.go:82: expected '%!s(int=1597)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp4trv6b1b_test.go:82:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp4trv6b1b_test.go:82: expected '%!s(int=514229)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp4trv6b1b_test.go:82:\
    \ expected '%!s(int=433494437)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n\n    a, b := 2,\
    \ 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=89)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=1597)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=34)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpseofo5_z_test.go:58: expected '%!s(int=514229)', got '%!s(int=55)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpseofo5_z_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return i\n        }\n\
    \        a, b = b, a+b\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 7\n    }\n    if n == 7 {\n        return 11\n    }\n  \
    \  if n == 8 {\n        return 13\n    }\n    if n == 9 {\n        return 17\n\
    \    }\n    if n == 10 {\n        return 19\n    }\n    if n == 11 {\n       \
    \ return 23\n    }\n    if n == 12 {\n        return 29\n    }\n    if n == 13\
    \ {\n        return 31\n    }\n    if n == 14 {\n        return 37\n    }\n  \
    \  if n == 15 {\n        return 41\n    }\n    if n == 16 {\n        return 43\n\
    \    }\n    if n == 17 {\n        return 47\n    }\n    if n == 18 {\n       \
    \ return 53\n    }\n    if n == 19 {\n        return 59\n    }\n    if n == 20\
    \ {\n        return 61\n    }\n    if n == 21 {\n        return 67\n    }\n  \
    \  if n == 22 {\n        return 71\n    }\n    if n == 23 {\n        return 73\n\
    \    }\n    if n == 24 {\n        return 79\n    }\n    if n == 25 {\n       \
    \ return 83\n    }\n    if n == 26 {\n        return 89\n    }\n    if n == 27\
    \ {\n        return 97\n    }\n    if n == 28 {\n        return 101\n    }\n \
    \   if n == 29 {\n        return 103\n    }\n    if n == 30 {\n        return\
    \ 107\n    }\n    if n == 31 {\n        return 109\n    }\n    if n == 32 {\n\
    \        return 113\n    }\n    if n == 33 {\n        return 127\n    }\n    if\
    \ n == 34 {\n        return 131\n    }\n    if n == 35 {\n        return 137\n\
    \    }\n    if n == 36 {\n        return 141\n    }\n    if n == 37 {\n      \
    \  return 143\n    }\n    if n == 38 {\n        return 147\n    }\n    if n ==\
    \ 39 {\n        return 151\n    }\n    if n == 40 {\n        return 157\n    }\n\
    \    if n == 41 {\n        return 161\n    }\n    if n == 42 {\n        return\
    \ 167\n    }\n    if n == 43 {\n        return 173\n    }\n    if n == 44 {\n\
    \        return 179\n    }\n    if n == 45 {\n        return 183\n    }\n    if\
    \ n == 46 {\n        return 191\n    }\n    if n == 47 {\n        return 197\n\
    \    }\n    if n == 48 {\n        return 203\n    }\n    if n == 49 {\n      \
    \  return 209\n    }\n    if n == 50 {\n        return 215\n    }\n    if n ==\
    \ 51 {\n        return 221\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp14a_ygkq_test.go:172:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 3\n    k := 5\n    m := 5\n    for i < n {\n        if j > m {\n     \
    \       k = k + m\n        }\n        if k > n {\n            break\n        }\n\
    \        if k == n {\n            return k\n        }\n        if j == m {\n \
    \           j = j + 2\n        }\n        m = j\n        i = i + 1\n        j\
    \ = j + 2\n        k = k + 2\n    }\n    return -1\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp6ik4ojre_test.go:76: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp6ik4ojre_test.go:76:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp6ik4ojre_test.go:76: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp6ik4ojre_test.go:76:\
    \ expected '%!s(int=13)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp6ik4ojre_test.go:76: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp6ik4ojre_test.go:76:\
    \ expected '%!s(int=233)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp6ik4ojre_test.go:76: expected '%!s(int=1597)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp6ik4ojre_test.go:76:\
    \ expected '%!s(int=28657)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp6ik4ojre_test.go:76: expected '%!s(int=514229)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp6ik4ojre_test.go:76:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074626
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568

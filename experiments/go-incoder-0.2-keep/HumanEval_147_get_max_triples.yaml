name: HumanEval_147_get_max_triples
language: go_test.go
prompt: "package get_max_triples_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// You are given a positive integer n. You have to create an integer array\
  \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i\
  \ - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j\
  \ < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
  \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid\
  \ triple is (1, 7, 13).\nfunc get_max_triples(n int) int {\n"
tests: "func TestGet_Max_Triples(t *testing.T) {\n  candidate := get_max_triples\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(5), expected: 1 },\n     { actual:\
  \ candidate(6), expected: 4 },\n     { actual: candidate(10), expected: 36 },\n\
  \     { actual: candidate(100), expected: 53361 },\n   }\n\n\tfor i, tc := range\
  \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\
  \tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
  \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\
  \t}\n}\n"
completions: ["    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i]\
    \ = i * i - i + 1\n    }\n    var result int\n    for i := 0; i < n; i++ {\n \
    \       for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n\
    \                if arr[i] + arr[j] + arr[k] == 3 {\n                    result++\n\
    \                }\n            }\n        }\n    }\n    return result\n}\n",
  "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i\
    \ - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j :=\
    \ i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n            \
    \    if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n         \
    \       }\n            }\n        }\n    }\n    return max\n}\n", "    var a []int\n\
    \    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n  \
    \  sort.Ints(a)\n    var count int = 0\n    for i := 0; i < n; i++ {\n       \
    \ for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n   \
    \             if a[i] + a[j] + a[k] == 3 {\n                    count++\n    \
    \            }\n            }\n        }\n    }\n    return count\n}\n", "   \
    \ var a [100]int\n    \n    for i := 0; i < n; i++ {\n        a[i] = i * i - i\
    \ + 1\n    }\n    \n    var count int = 0\n    for i := 0; i < n; i++ {\n    \
    \    for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n\
    \                if a[i] + a[j] + a[k] == 3 {\n                    count++\n \
    \               }\n            }\n        }\n    }\n    \n    return count\n}\n",
  "    var a [100]int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    \n    var result int = 0\n    for i := 0; i < n; i++ {\n        for\
    \ j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n       \
    \         if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n                   \
    \ result++\n                }\n            }\n        }\n    }\n    return result\n\
    }\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i]\
    \ = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n       \
    \ for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n   \
    \             if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n\
    \                }\n            }\n        }\n    }\n    return max\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j\
    \ := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n         \
    \       if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n      \
    \          }\n            }\n        }\n    }\n    return max\n}\n", "    var\
    \ a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n\
    \    }\n    sort.Ints(a)\n    \n    var count int\n    for i := 0; i < len(a);\
    \ i++ {\n        if a[i] > 0 {\n            count += 3\n            \n       \
    \     if a[i] > a[i+1] {\n                count += 2\n            }\n        }\n\
    \    }\n    return count\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n\
    \        a[i] = i * i - i + 1\n    }\n    var result int\n    for i := 0; i <\
    \ n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n               \
    \     result++\n                }\n            }\n        }\n    }\n    return\
    \ result\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n        a[i] =\
    \ i * i - i + 1\n    }\n    \n    var count int\n    for i := 0; i < n; i++ {\n\
    \        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++\
    \ {\n                if a[i] + a[j] + a[k] == 3 {\n                    count++\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    result := 0\n    for i := 0; i < n; i++ {\n        for\
    \ j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n       \
    \         if arr[i] + arr[j] + arr[k] == 3 {\n                    result++\n \
    \               }\n            }\n        }\n    }\n    return result\n}\n", " \
    \   var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i\
    \ + 1)\n    }\n    sort.Ints(a)\n    var count int = 0\n    for i := 0; i < n;\
    \ i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k <\
    \ n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n                   \
    \ count++\n                }\n            }\n        }\n    }\n    return count\n\
    }\n", "    var a [100]int\n    for i := 0; i < n; i++ {\n        a[i] = i * i\
    \ - i + 1\n    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n      \
    \  for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n  \
    \              if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n              \
    \      count++\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n    \
    \    arr[i] = i * i - i + 1\n    }\n    max := 0\n    max += get_max_triples_helper(arr,\
    \ 0, n-1, 0)\n    return max\n}\n", "    arr := make([]int, n)\n    for i := 0;\
    \ i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i\
    \ := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k\
    \ := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n\
    \                    max++\n                }\n            }\n        }\n    }\n\
    \    return max\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i <\
    \ n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n         \
    \           max++\n                }\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n      \
    \  arr[i] = i * i - i + 1\n    }\n    result := 0\n    for i := 0; i < n; i++\
    \ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n;\
    \ k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n                \
    \    result++\n                }\n            }\n        }\n    }\n    return\
    \ result\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n        a[i] =\
    \ i * i - i + 1\n    }\n    for i := 0; i < n-1; i++ {\n        for j := i + 1;\
    \ j < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if a[i]\
    \ + a[j] + a[k] == 3 {\n                    return 1\n                }\n    \
    \        }\n        }\n    }\n    return 0\n}\n", "    var a []int\n    for i\
    \ := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n    var count\
    \ int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n\
    \            for k := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k]\
    \ == 3 {\n                    count++\n                }\n            }\n    \
    \    }\n    }\n    return count\n}\n", "    var a []int\n    for i := 0; i < n;\
    \ i++ {\n        a[i] = i * i - i + 1\n    }\n    var count int = 0\n    for i\
    \ := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k\
    \ := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i] < a[k] && a[j]\
    \ < a[k] {\n                    count++\n                }\n            }\n  \
    \      }\n    }\n    return count\n}\n", "    var a [100]int\n    for i := 0;\
    \ i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n    \n    var count int =\
    \ 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n    \
    \        for k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i]\
    \ < a[k] && a[j] < a[k] {\n                    count++\n                }\n  \
    \          }\n        }\n    }\n    return count\n}\n", "    var a [100]int\n\
    \    \n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n   \
    \ \n    var count int = 0\n    \n    for i := 0; i < n; i++ {\n        for j :=\
    \ i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n            \
    \    if a[i] + a[j] + a[k] == 3 {\n                    count++\n             \
    \   }\n            }\n        }\n    }\n    \n    return count\n}\n", "    arr\
    \ := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i\
    \ + 1\n    }\n    \n    result := 0\n    for i := 0; i < n; i++ {\n        for\
    \ j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n       \
    \         if arr[i] + arr[j] + arr[k] == 3 {\n                    result++\n \
    \               }\n            }\n        }\n    }\n    return result\n}\n", " \
    \   var a [100]int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n        for j :=\
    \ i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n            \
    \    if a[i] + a[j] + a[k] == 3 {\n                    count++\n             \
    \   }\n            }\n        }\n    }\n    return count\n}\n", "    arr := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n  \
    \  var result int\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n;\
    \ j++ {\n            for k := j + 1; k < n; k++ {\n                if arr[i] +\
    \ arr[j] + arr[k] == 3 {\n                    result++\n                }\n  \
    \          }\n        }\n    }\n    return result\n}\n", "    arr := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n  \
    \  max := 0\n    max += get_max_triples_helper(arr, 0, n-1, 0)\n    return max\n\
    }\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i]\
    \ = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n       \
    \ for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n   \
    \             if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n\
    \                }\n            }\n        }\n    }\n    return max\n}\n", " \
    \   var a [100]int\n    \n    for i := 0; i < n; i++ {\n        a[i] = i * i -\
    \ i + 1\n    }\n    \n    var result int\n    \n    for i := 0; i < n; i++ {\n\
    \        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++\
    \ {\n                if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n        \
    \            result++\n                }\n            }\n        }\n    }\n  \
    \  \n    return result\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n\
    \        a[i] = i * i - i + 1\n    }\n    sort.Ints(a)\n    var count int = 0\n\
    \    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n        \
    \    for k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i] < a[k]\
    \ && a[j] < a[k] {\n                    count++\n                }\n         \
    \   }\n        }\n    }\n    return count\n}\n", "    arr := make([]int, n)\n\
    \    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max\
    \ := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n \
    \           for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] +\
    \ arr[k] == 3 {\n                    max++\n                }\n            }\n\
    \        }\n    }\n    return max\n}\n", "    arr := make([]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n  \
    \  for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n          \
    \  for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] ==\
    \ 3 {\n                    max++\n                }\n            }\n        }\n\
    \    }\n    return max\n}\n", "    arr := make([]int, n)\n    for i := 0; i <\
    \ n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i :=\
    \ 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k :=\
    \ j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n  \
    \                  max++\n                }\n            }\n        }\n    }\n\
    \    return max\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n      \
    \  a[i] = i * i - i + 1\n    }\n    \n    var count int\n    for i := 0; i < n;\
    \ i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k <\
    \ n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n                   \
    \ count++\n                }\n            }\n        }\n    }\n    return count\n\
    }\n", "    var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i\
    \ - i + 1)\n    }\n    sort.Ints(a)\n    \n    var count int\n    for i := 0;\
    \ i < len(a); i++ {\n        if i > 0 && i < len(a) - 1 {\n            if a[i-1]\
    \ + a[i] + a[i+1] == 0 {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n\
    \        a[i] = i * i - i + 1\n    }\n    sort.Ints(a)\n    \n    var count int\
    \ = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n  \
    \          for k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i]\
    \ < a[k] {\n                    count++\n                }\n            }\n  \
    \      }\n    }\n    return count\n}\n", "    arr := make([]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n  \
    \  for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n          \
    \  for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] ==\
    \ 3 {\n                    max++\n                }\n            }\n        }\n\
    \    }\n    return max\n}\n", "    var a []int\n    for i := 1; i <= n; i++ {\n\
    \        a = append(a, i*i - i + 1)\n    }\n    sort.Ints(a)\n    var count int\
    \ = 0\n    for i := 0; i < len(a); i++ {\n        for j := i + 1; j < len(a);\
    \ j++ {\n            for k := j + 1; k < len(a); k++ {\n                if a[i]\
    \ + a[j] + a[k] == 3 {\n                    count++\n                }\n     \
    \       }\n        }\n    }\n    return count\n}\n", "    var a []int\n    for\
    \ i := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n    sort.Ints(a)\n\
    \    max := 0\n    for i := 0; i < len(a); i++ {\n        if a[i] > max {\n  \
    \          max = a[i]\n        }\n    }\n    return max\n}\n", "    var a []int\n\
    \    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n    \n   \
    \ max := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n\
    \            for k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i]\
    \ < a[k] && a[j] < a[k] {\n                    max++\n                }\n    \
    \        }\n        }\n    }\n    return max\n}\n", "    var a []int\n    for\
    \ i := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n    sort.Ints(a)\n\
    \    var count int\n    for _, v := range a {\n        if v%3 != 0 {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    var a []int\n  \
    \  for i := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n    sort.Ints(a)\n\
    \    var count int = 0\n    for i := 1; i <= n; i++ {\n        if a[i] > 0 {\n\
    \            count += 3\n            if a[i] > a[i-1] + a[i-2] + a[i-3] {\n  \
    \              count++\n            }\n        }\n    }\n    return count\n}\n",
  "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i\
    \ - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j :=\
    \ i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n            \
    \    if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n         \
    \       }\n            }\n        }\n    }\n    return max\n}\n", "    arr :=\
    \ make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n\
    \    }\n    \n    max := 0\n    \n    for i := 0; i < n; i++ {\n        for j\
    \ := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n         \
    \       if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n      \
    \          }\n            }\n        }\n    }\n    \n    return max\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    result := 0\n    for i := 0; i < n; i++ {\n        for\
    \ j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n       \
    \         if arr[i] + arr[j] + arr[k] == 3 {\n                    result++\n \
    \               }\n            }\n        }\n    }\n    return result\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    max := 0\n    max += get_max_triples_helper(arr, 0, n-1,\
    \ 0)\n    return max\n}\n", "    var a []int\n    for i := 1; i <= n; i++ {\n\
    \        a = append(a, i*i - i + 1)\n    }\n    var count int = 0\n    for i :=\
    \ 0; i < len(a); i++ {\n        for j := i + 1; j < len(a); j++ {\n          \
    \  for k := j + 1; k < len(a); k++ {\n                if a[i] < a[j] && a[i] <\
    \ a[k] && a[j] < a[k] {\n                    count++\n                }\n    \
    \        }\n        }\n    }\n    return count\n}\n", "    var a []int\n    for\
    \ i := 1; i <= n; i++ {\n        a[i] = i * i - i + 1\n    }\n    var result int\n\
    \    for i := 1; i <= n; i++ {\n        for j := 1; j <= n; j++ {\n          \
    \  for k := 1; k <= n; k++ {\n                if a[i] < a[j] && a[i] < a[k] &&\
    \ a[j] < a[k] {\n                    result++\n                }\n           \
    \ }\n        }\n    }\n    return result\n}\n", "    arr := make([]int, n)\n \
    \   for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max :=\
    \ 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n    \
    \        for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k]\
    \ == 3 {\n                    max++\n                }\n            }\n      \
    \  }\n    }\n    return max\n}\n", "    arr := make([]int, n)\n    for i := 0;\
    \ i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i\
    \ := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k\
    \ := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n\
    \                    max++\n                }\n            }\n        }\n    }\n\
    \    return max\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    i := 0\n    for\
    \ i < n {\n        max += arr[i]\n        if max > 3 {\n            i++\n    \
    \        continue\n        }\n        j := i + 1\n        for j < n {\n      \
    \      max += arr[j]\n            if max > 3 {\n                j++\n        \
    \        continue\n            }\n            k := j + 1\n            for k <\
    \ n {\n                max += arr[k]\n                if max > 3 {\n         \
    \           k++\n                    continue\n                }\n           \
    \     return 1\n            }\n        }\n    }\n    return 0\n}\n", "    arr\
    \ := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i\
    \ + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j := i +\
    \ 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if\
    \ arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n               \
    \ }\n            }\n        }\n    }\n    return max\n}\n", "    var a [100]int\n\
    \    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n    var count\
    \ int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n\
    \            for k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i]\
    \ < a[k] {\n                    count++\n                }\n            }\n  \
    \      }\n    }\n    return count\n}\n", "    var a []int\n    for i := 1; i <=\
    \ n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n    sort.Ints(a)\n    \n\
    \    var count int = 0\n    for i := 0; i < n; i++ {\n        if i+1 < n && a[i]+a[i+1]+a[i+2]\
    \ % 3 == 0 {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j\
    \ := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n         \
    \       if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n      \
    \          }\n            }\n        }\n    }\n    return max\n}\n", "    var\
    \ a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n\
    \    sort.Ints(a)\n    var count int = 0\n    for i := 0; i < n; i++ {\n     \
    \   for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n \
    \               if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n             \
    \       count++\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n", "    var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a,\
    \ i*i - i + 1)\n    }\n    \n    var count int\n    for i := 1; i <= n; i++ {\n\
    \        for j := i + 1; j <= n; j++ {\n            for k := j + 1; k <= n; k++\
    \ {\n                if a[i] < a[j] && a[j] < a[k] {\n                    count++\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    \n    max := 0\n    for i := 0; i < n; i++ {\n       \
    \ for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n   \
    \             if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n\
    \                }\n            }\n        }\n    }\n    return max\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j\
    \ := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n         \
    \       if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n      \
    \          }\n            }\n        }\n    }\n    return max\n}\n", "    var\
    \ a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n\
    \    var count int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1;\
    \ j < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if a[i]\
    \ < a[j] && a[i] < a[k] && a[j] < a[k] {\n                    count++\n      \
    \          }\n            }\n        }\n    }\n    return count\n}\n", "    var\
    \ a []int\n    for i := 1; i <= n; i++ {\n        a[i] = i * i - i + 1\n    }\n\
    \    var result int\n    for i := 0; i < n; i++ {\n        for j := i + 1; j <\
    \ n; j++ {\n            for k := j + 1; k < n; k++ {\n                if a[i]\
    \ + a[j] + a[k] == 3 {\n                    result++\n                }\n    \
    \        }\n        }\n    }\n    return result\n}\n", "    arr := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n  \
    \  max := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++\
    \ {\n            for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j]\
    \ + arr[k] == 3 {\n                    max++\n                }\n            }\n\
    \        }\n    }\n    return max\n}\n", "    arr := make([]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    result := 0\n\
    \    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n        \
    \    for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k]\
    \ == 3 {\n                    result++\n                }\n            }\n   \
    \     }\n    }\n    return result\n}\n", "    var a []int\n    for i := 0; i <\
    \ n; i++ {\n        a[i] = i * i - i + 1\n    }\n    var count int = 0\n    for\
    \ i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for\
    \ k := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n   \
    \                 count++\n                }\n            }\n        }\n    }\n\
    \    return count\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i <\
    \ n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n         \
    \           max++\n                }\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a,\
    \ i*i - i + 1)\n    }\n    var result int\n    for i := 0; i < n; i++ {\n    \
    \    for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n\
    \                if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n            \
    \        result++\n                }\n            }\n        }\n    }\n    return\
    \ result\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n   \
    \     arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++\
    \ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n;\
    \ k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n                \
    \    max++\n                }\n            }\n        }\n    }\n    return max\n\
    }\n", "    var a [100]int\n    for i := 0; i < n; i++ {\n        a[i] = i * i\
    \ - i + 1\n    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n      \
    \  for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n  \
    \              if a[i] + a[j] + a[k] == 3 {\n                    count++\n   \
    \             }\n            }\n        }\n    }\n    return count\n}\n", "  \
    \  var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i +\
    \ 1)\n    }\n    sort.Ints(a)\n    max := 0\n    for i := 0; i < n; i++ {\n  \
    \      for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n\
    \                if a[i] + a[j] + a[k] == 3 {\n                    max++\n   \
    \             }\n            }\n        }\n    }\n    return max\n}\n", "    arr\
    \ := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i\
    \ + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j := i +\
    \ 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if\
    \ arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n               \
    \ }\n            }\n        }\n    }\n    return max\n}\n", "    var a []int\n\
    \    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n    var count\
    \ int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n\
    \            for k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i]\
    \ < a[k] && a[j] < a[k] {\n                    count++\n                }\n  \
    \          }\n        }\n    }\n    return count\n}\n", "    var a []int\n   \
    \ for i := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n    var\
    \ count int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n;\
    \ j++ {\n            for k := j + 1; k < n; k++ {\n                if a[i] + a[j]\
    \ + a[k] == 3 {\n                    count++\n                }\n            }\n\
    \        }\n    }\n    return count\n}\n", "    arr := make([]int, n)\n    for\
    \ i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n\
    \    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n        \
    \    for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k]\
    \ == 3 {\n                    max++\n                }\n            }\n      \
    \  }\n    }\n    return max\n}\n", "    var a []int\n    for i := 1; i <= n; i++\
    \ {\n        a = append(a, i*i - i + 1)\n    }\n    sort.Ints(a)\n    \n    var\
    \ result int\n    for i := 0; i < n; i++ {\n        if a[i] > 0 {\n          \
    \  result += a[i]\n        }\n    }\n    return result\n}\n", "    arr := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n  \
    \  var count int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j\
    \ < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if arr[i]\
    \ + arr[j] + arr[k] == 3 {\n                    count++\n                }\n \
    \           }\n        }\n    }\n    return count\n}\n", "    var a []int\n  \
    \  for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n    \n    result\
    \ := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n \
    \           for k := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k]\
    \ == 3 {\n                    result++\n                }\n            }\n   \
    \     }\n    }\n    return result\n}\n", "    var a []int\n    for i := 1; i <=\
    \ n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n    \n    var result int\n\
    \    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n        \
    \    for k := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k] == 3\
    \ {\n                    result++\n                }\n            }\n        }\n\
    \    }\n    return result\n}\n", "    var a [100]int\n    for i := 0; i < n; i++\
    \ {\n        a[i] = i * i - i + 1\n    }\n    \n    var count int = 0\n    for\
    \ i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for\
    \ k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i] < a[k] && a[j]\
    \ < a[k] {\n                    count++\n                }\n            }\n  \
    \      }\n    }\n    return count\n}\n", "    arr := make([]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n  \
    \  for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n          \
    \  for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] ==\
    \ 3 {\n                    max++\n                }\n            }\n        }\n\
    \    }\n    return max\n}\n", "    arr := make([]int, n)\n    for i := 0; i <\
    \ n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i :=\
    \ 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k :=\
    \ j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n  \
    \                  max++\n                }\n            }\n        }\n    }\n\
    \    return max\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n      \
    \  a[i] = i * i - i + 1\n    }\n    var count int = 0\n    for i := 0; i < n;\
    \ i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k <\
    \ n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n                   \
    \ count++\n                }\n            }\n        }\n    }\n    return count\n\
    }\n", "    var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i\
    \ + 1\n    }\n    \n    var count int = 0\n    for i := 0; i < n; i++ {\n    \
    \    for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n\
    \                if a[i] + a[j] + a[k] == 3 {\n                    count++\n \
    \               }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    max := 0\n    i := 0\n    for i < n {\n        if arr[i]\
    \ > max {\n            max = arr[i]\n        }\n        i++\n    }\n    return\
    \ max\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i\
    \ * i - i + 1\n    }\n    sort.Ints(a)\n    \n    var triples int\n    for i :=\
    \ 0; i < n-1; i++ {\n        for j := i + 1; j < n; j++ {\n            for k :=\
    \ j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n        \
    \            triples++\n                }\n            }\n        }\n    }\n \
    \   return triples\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n   \
    \     a[i] = i * i - i + 1\n    }\n    var count int = 0\n    for i := 0; i <\
    \ n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n\
    \                    count++\n                }\n            }\n        }\n  \
    \  }\n    return count\n}\n", "    arr := make([]int, n)\n    for i := 0; i <\
    \ n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    max += get_max_triples_helper(arr,\
    \ 0, n-1, 0)\n    return max\n}\n", "    var a [100]int\n    \n    for i := 0;\
    \ i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n    \n    var count int =\
    \ 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n    \
    \        for k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i]\
    \ < a[k] && a[j] < a[k] {\n                    count++\n                }\n  \
    \          }\n        }\n    }\n    \n    return count\n}\n", "    arr := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n  \
    \  max := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++\
    \ {\n            for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j]\
    \ + arr[k] == 3 {\n                    max++\n                }\n            }\n\
    \        }\n    }\n    return max\n}\n", "    arr := make([]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    \n    result\
    \ := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n \
    \           for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] +\
    \ arr[k] == 3 {\n                    result++\n                }\n           \
    \ }\n        }\n    }\n    return result\n}\n", "    arr := make([]int, n)\n \
    \   for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max :=\
    \ 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n    \
    \        for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k]\
    \ == 3 {\n                    max++\n                }\n            }\n      \
    \  }\n    }\n    return max\n}\n", "    var a []int\n    for i := 0; i < n; i++\
    \ {\n        a = append(a, i*i - i + 1)\n    }\n    sort.Ints(a)\n    var count\
    \ int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n\
    \            for k := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k]\
    \ == 3 {\n                    count++\n                }\n            }\n    \
    \    }\n    }\n    return count\n}\n", "    var a [100]int\n    \n    for i :=\
    \ 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n    \n    var count int\
    \ = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n  \
    \          for k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i]\
    \ < a[k] && a[j] < a[k] {\n                    count++\n                }\n  \
    \          }\n        }\n    }\n    \n    return count\n}\n", "    arr := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n  \
    \  max := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++\
    \ {\n            for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j]\
    \ + arr[k] == 3 {\n                    max++\n                }\n            }\n\
    \        }\n    }\n    return max\n}\n", "    var a []int\n    for i := 0; i <\
    \ n; i++ {\n        a[i] = i * i - i + 1\n    }\n    sort.Ints(a)\n    var count\
    \ int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n\
    \            for k := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k]\
    \ == 3 {\n                    count++\n                }\n            }\n    \
    \    }\n    }\n    return count\n}\n", "    arr := make([]int, n)\n    for i :=\
    \ 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for\
    \ i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for\
    \ k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n\
    \                    max++\n                }\n            }\n        }\n    }\n\
    \    return max\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    var count int = 0\n    for i :=\
    \ 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k :=\
    \ j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n  \
    \                  count++\n                }\n            }\n        }\n    }\n\
    \    return count\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    var result int = 0\n    for i\
    \ := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k\
    \ := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n\
    \                    result++\n                }\n            }\n        }\n \
    \   }\n    return result\n}\n", "    var a []int\n    for i := 1; i <= n; i++\
    \ {\n        a = append(a, i*i - i + 1)\n    }\n    sort.Ints(a)\n    var count\
    \ int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n\
    \            for k := j + 1; k < n; k++ {\n                if a[i] > a[j] && a[i]\
    \ > a[k] {\n                    count++\n                }\n            }\n  \
    \      }\n    }\n    return count\n}\n", "    arr := make([]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n  \
    \  i, j, k := 0, 0, 0\n    for i < n && j < n && k < n {\n        if arr[i] +\
    \ arr[j] + arr[k] == 3 {\n            i++\n            j++\n            k++\n\
    \        } else {\n            if arr[i] + arr[j] + arr[k] > max {\n         \
    \       max = arr[i] + arr[j] + arr[k]\n                i, j, k = 0, 0, 0\n  \
    \          }\n        }\n    }\n    return max\n}\n", "    arr := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n  \
    \  max := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++\
    \ {\n            for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j]\
    \ + arr[k] == 3 {\n                    max++\n                }\n            }\n\
    \        }\n    }\n    return max\n}\n", "    arr := make([]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n  \
    \  for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n          \
    \  for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] ==\
    \ 3 {\n                    max++\n                }\n            }\n        }\n\
    \    }\n    return max\n}\n", "    arr := make([]int, n)\n    for i := 0; i <\
    \ n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i :=\
    \ 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k :=\
    \ j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n  \
    \                  max++\n                }\n            }\n        }\n    }\n\
    \    return max\n}\n", "    var a []int\n    for i := 1; i <= n; i++ {\n     \
    \   for j := 1; j <= n; j++ {\n            for k := 1; k <= n; k++ {\n       \
    \         a[i] = i*i - i + 1 // a[i] = i * i - i + 1\n                a[j] = j*j\
    \ - j + 1 // a[j] = j * j - j + 1\n                a[k] = k*k - k + 1 // a[k]\
    \ = k * k - k + 1\n            }\n        }\n    }\n    for i := 1; i <= n; i++\
    \ {\n        if a[i] % 3 == 0 {\n            return i\n        }\n    }\n    return\
    \ 0\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i]\
    \ = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n       \
    \ for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n   \
    \             if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n\
    \                }\n            }\n        }\n    }\n    return max\n}\n", " \
    \   var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    sort.Ints(a)\n    var count int = 0\n    for i := 0; i < n; i++ {\n\
    \        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++\
    \ {\n                if a[i] + a[j] + a[k] == 3 {\n                    count++\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n        for j :=\
    \ i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n            \
    \    if a[i] + a[j] + a[k] == 3 {\n                    count++\n             \
    \   }\n            }\n        }\n    }\n    return count\n}\n", "    arr := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n  \
    \  max := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++\
    \ {\n            for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j]\
    \ + arr[k] == 3 {\n                    max++\n                }\n            }\n\
    \        }\n    }\n    return max\n}\n", "    var a []int\n    for i := 0; i <\
    \ n; i++ {\n        a[i] = i * i - i + 1\n    }\n    \n    var count int = 0\n\
    \    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n        \
    \    for k := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k] == 3\
    \ {\n                    count++\n                }\n            }\n        }\n\
    \    }\n    return count\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n\
    \        a[i] = i * i - i + 1\n    }\n    sort.Ints(a)\n    var count int = 0\n\
    \    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n        \
    \    for k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i] < a[k]\
    \ && a[j] < a[k] {\n                    count++\n                }\n         \
    \   }\n        }\n    }\n    return count\n}\n", "    var a []int\n    for i :=\
    \ 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n    var result int\n \
    \   for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n         \
    \   for k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i] < a[k]\
    \ && a[j] < a[k] {\n                    result++\n                }\n        \
    \    }\n        }\n    }\n    return result\n}\n", "    var a []int\n    for i\
    \ := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n    var count\
    \ int = 0\n    for i := 0; i < len(a); i++ {\n        for j := i + 1; j < len(a);\
    \ j++ {\n            for k := j + 1; k < len(a); k++ {\n                if a[i]\
    \ + a[j] + a[k] == 3 {\n                    count++\n                }\n     \
    \       }\n        }\n    }\n    return count\n}\n", "    var a []int\n    for\
    \ i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n    var result int\n\
    \    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n        \
    \    for k := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k] == 3\
    \ {\n                    result++\n                }\n            }\n        }\n\
    \    }\n    return result\n}\n", "    var a []int\n    for i := 1; i <= n; i++\
    \ {\n        a[i] = i * i - i + 1\n    }\n    \n    var result int\n    for i\
    \ := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k\
    \ := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n     \
    \               result++\n                }\n            }\n        }\n    }\n\
    \    return result\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i <\
    \ n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n         \
    \           max++\n                }\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n      \
    \  arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n\
    \        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++\
    \ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n\
    \                }\n            }\n        }\n    }\n    return max\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j\
    \ := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n         \
    \       if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n      \
    \          }\n            }\n        }\n    }\n    return max\n}\n", "    arr\
    \ := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i\
    \ + 1\n    }\n    var result int = 0\n    for i := 0; i < n; i++ {\n        for\
    \ j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n       \
    \         if arr[i] + arr[j] + arr[k] == 3 {\n                    result++\n \
    \               }\n            }\n        }\n    }\n    return result\n}\n", " \
    \   var a []int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= n; j++\
    \ {\n            for k := 1; k <= n; k++ {\n                if i+j+k == i*i*i\
    \ + j*j*j + k*k*k {\n                    a = append(a, i*i*i + j*j*j + k*k*k)\n\
    \                }\n            }\n        }\n    }\n    return len(a)\n}\n",
  "    var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i +\
    \ 1)\n    }\n    sort.Ints(a)\n    var count int\n    for i := 0; i < n; i++ {\n\
    \        if a[i] > 0 {\n            count += 3\n            if a[i] > a[i+1] &&\
    \ a[i] > a[i+2] {\n                count += 2\n            }\n        }\n    }\n\
    \    return count\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i <\
    \ n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n         \
    \           max++\n                }\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n      \
    \  arr[i] = i * i - i + 1\n    }\n    var result int\n    for i := 0; i < n; i++\
    \ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n;\
    \ k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n                \
    \    result++\n                }\n            }\n        }\n    }\n    return\
    \ result\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n   \
    \     arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++\
    \ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n;\
    \ k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n                \
    \    max++\n                }\n            }\n        }\n    }\n    return max\n\
    }\n", "    var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i\
    \ - i + 1)\n    }\n    sort.Ints(a)\n    max := 0\n    for i := 0; i < n; i++\
    \ {\n        if a[i] > max {\n            max = a[i]\n        }\n    }\n    return\
    \ max\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n      \
    \  arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n\
    \        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++\
    \ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n\
    \                }\n            }\n        }\n    }\n    return max\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n    \
    \    for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n\
    \                if arr[i] + arr[j] + arr[k] == 3 {\n                    count++\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j\
    \ := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n         \
    \       if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n      \
    \          }\n            }\n        }\n    }\n    return max\n}\n", "    arr\
    \ := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i\
    \ + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j := i +\
    \ 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if\
    \ arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n               \
    \ }\n            }\n        }\n    }\n    return max\n}\n", "    var a []int\n\
    \    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n  \
    \  sort.Ints(a)\n    var count int = 0\n    for i := 0; i < n; i++ {\n       \
    \ for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n   \
    \             if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n               \
    \     count++\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n    \
    \    arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n\
    \        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++\
    \ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n\
    \                }\n            }\n        }\n    }\n    return max\n}\n", " \
    \   var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    \n    result := 0\n    \n    for i := 0; i < n; i++ {\n        for\
    \ j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n       \
    \         if a[i] + a[j] + a[k] == 3 {\n                    result++\n       \
    \         }\n            }\n        }\n    }\n    \n    return result\n}\n", " \
    \   var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n        for j :=\
    \ i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n            \
    \    if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n                    count++\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n        for j :=\
    \ i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n            \
    \    if a[i] + a[j] + a[k] == 3 {\n                    count++\n             \
    \   }\n            }\n        }\n    }\n    return count\n}\n", "    var a []int\n\
    \    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n  \
    \  sort.Ints(a)\n    var count int = 0\n    for i := 0; i < n; i++ {\n       \
    \ if a[i] > 0 {\n            count += 3\n            count += a[i] - 1\n     \
    \   }\n    }\n    return count\n}\n", "    var a [100]int\n    for i := 0; i <\
    \ n; i++ {\n        a[i] = i * i - i + 1\n    }\n    for i := 0; i < n; i++ {\n\
    \        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++\
    \ {\n                if a[i] + a[j] + a[k] == 3 {\n                    return\
    \ i + 1\n                }\n            }\n        }\n    }\n    return 0\n}\n",
  "    var a []int\n    for i := 0; i < n; i++ {\n        a = append(a, i*i - i +\
    \ 1)\n    }\n    sort.Ints(a)\n    \n    var count int\n    for i := 0; i < n;\
    \ i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k <\
    \ n; k++ {\n                if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n \
    \                   count++\n                }\n            }\n        }\n   \
    \ }\n    return count\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n\
    \        a[i] = i * i - i + 1\n    }\n    var result int\n    for i := 0; i <\
    \ n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n               \
    \     result++\n                }\n            }\n        }\n    }\n    return\
    \ result\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n   \
    \     arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++\
    \ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n;\
    \ k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n                \
    \    max++\n                }\n            }\n        }\n    }\n    return max\n\
    }\n", "    var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i\
    \ - i + 1)\n    }\n    sort.Ints(a)\n    max := 0\n    for i := 0; i < n; i++\
    \ {\n        if a[i] > max {\n            max = a[i]\n        }\n    }\n    return\
    \ max\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n      \
    \  arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n\
    \        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++\
    \ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n\
    \                }\n            }\n        }\n    }\n    return max\n}\n", " \
    \   var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i\
    \ + 1)\n    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n        for\
    \ j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n       \
    \         if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n                   \
    \ count++\n                }\n            }\n        }\n    }\n    return count\n\
    }\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i]\
    \ = i * i - i + 1\n    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n\
    \        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++\
    \ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n                    count++\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    result := 0\n    for i := 0; i < n; i++ {\n        for\
    \ j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n       \
    \         if arr[i] + arr[j] + arr[k] == 3 {\n                    result++\n \
    \               }\n            }\n        }\n    }\n    return result\n}\n", " \
    \   var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i\
    \ + 1)\n    }\n    \n    var result int\n    for i := 0; i < len(a); i++ {\n \
    \       for j := i + 1; j < len(a); j++ {\n            for k := j + 1; k < len(a);\
    \ k++ {\n                if a[i] + a[j] + a[k] == 3 {\n                    result++\n\
    \                }\n            }\n        }\n    }\n    return result\n}\n",
  "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i\
    \ - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j :=\
    \ i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n            \
    \    if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n         \
    \       }\n            }\n        }\n    }\n    return max\n}\n", "    var a []int\n\
    \    for i := 1; i <= n; i++ {\n        a[i] = i * i - i + 1\n    }\n    \n  \
    \  var count int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j\
    \ < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if a[i]\
    \ + a[j] + a[k] == 3 {\n                    count++\n                }\n     \
    \       }\n        }\n    }\n    return count\n}\n", "    var a []int\n    for\
    \ i := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n    var result\
    \ int\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n  \
    \          for k := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k]\
    \ == 3 {\n                    result++\n                }\n            }\n   \
    \     }\n    }\n    return result\n}\n", "    arr := make([]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n  \
    \  for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n          \
    \  for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] ==\
    \ 3 {\n                    max++\n                }\n            }\n        }\n\
    \    }\n    return max\n}\n", "    arr := make([]int, n)\n    for i := 0; i <\
    \ n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i :=\
    \ 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k :=\
    \ j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n  \
    \                  max++\n                }\n            }\n        }\n    }\n\
    \    return max\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n      \
    \  a[i] = i * i - i + 1\n    }\n    var count int = 0\n    for i := 0; i < n;\
    \ i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k <\
    \ n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n                   \
    \ count++\n                }\n            }\n        }\n    }\n    return count\n\
    }\n", "    var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i\
    \ + 1\n    }\n    \n    var count int = 0\n    for i := 0; i < n; i++ {\n    \
    \    for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n\
    \                if a[i] + a[j] + a[k] == 3 {\n                    count++\n \
    \               }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    sort.Ints(a)\n    \n    var triples int\n    for i := 0; i < n-1;\
    \ i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k <\
    \ n; k++ {\n                if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n \
    \                   triples++\n                }\n            }\n        }\n \
    \   }\n    return triples\n}\n", "    var a []int\n    for i := 0; i < n; i++\
    \ {\n        a[i] = i * i - i + 1\n    }\n    \n    var result int\n    for i\
    \ := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k\
    \ := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n     \
    \               result++\n                }\n            }\n        }\n    }\n\
    \    return result\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i <\
    \ n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n         \
    \           max++\n                }\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i\
    \ * i - i + 1\n    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n  \
    \      for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n\
    \                if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n            \
    \        count++\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n        a[i] =\
    \ i * i - i + 1\n    }\n    sort.Ints(a)\n    \n    var count int = 0\n    for\
    \ i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for\
    \ k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i] < a[k] && a[j]\
    \ < a[k] {\n                    count++\n                }\n            }\n  \
    \      }\n    }\n    return count\n}\n", "    arr := make([]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    var count int\
    \ = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n  \
    \          for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] +\
    \ arr[k] == 3 {\n                    count++\n                }\n            }\n\
    \        }\n    }\n    return count\n}\n", "    var a [100]int\n    \n    for\
    \ i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n    \n    var count\
    \ int = 0\n    \n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n;\
    \ j++ {\n            for k := j + 1; k < n; k++ {\n                if a[i] < a[j]\
    \ && a[i] < a[k] && a[j] < a[k] {\n                    count++\n             \
    \   }\n            }\n        }\n    }\n    \n    return count\n}\n", "    arr\
    \ := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i\
    \ + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j := i +\
    \ 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if\
    \ arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n               \
    \ }\n            }\n        }\n    }\n    return max\n}\n", "    arr := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n  \
    \  var count int = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j\
    \ < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if arr[i]\
    \ + arr[j] + arr[k] == 3 {\n                    count++\n                }\n \
    \           }\n        }\n    }\n    return count\n}\n", "    arr := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n  \
    \  max := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++\
    \ {\n            for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j]\
    \ + arr[k] == 3 {\n                    max++\n                }\n            }\n\
    \        }\n    }\n    return max\n}\n", "    arr := make([]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n  \
    \  for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n          \
    \  for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] ==\
    \ 3 {\n                    max++\n                }\n            }\n        }\n\
    \    }\n    return max\n}\n", "    var a []int\n    for i := 1; i <= n; i++ {\n\
    \        a = append(a, i*i - i + 1)\n    }\n    sort.Ints(a)\n    \n    var count\
    \ int\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n  \
    \          for k := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k]\
    \ == 3 {\n                    count++\n                }\n            }\n    \
    \    }\n    }\n    return count\n}\n", "    arr := make([]int, n)\n    for i :=\
    \ 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for\
    \ i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for\
    \ k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n\
    \                    max++\n                }\n            }\n        }\n    }\n\
    \    return max\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    var count int = 0\n    for i :=\
    \ 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k :=\
    \ j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n  \
    \                  count++\n                }\n            }\n        }\n    }\n\
    \    return count\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i <\
    \ n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n         \
    \           max++\n                }\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n      \
    \  arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n\
    \        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++\
    \ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n\
    \                }\n            }\n        }\n    }\n    return max\n}\n", " \
    \   var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    sort.Ints(a)\n    \n    var count int = 0\n    for i := 0; i < n;\
    \ i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k <\
    \ n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n                   \
    \ count++\n                }\n            }\n        }\n    }\n    return count\n\
    }\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i]\
    \ = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n       \
    \ for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n   \
    \             if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n\
    \                }\n            }\n        }\n    }\n    return max\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j\
    \ := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n         \
    \       if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n      \
    \          }\n            }\n        }\n    }\n    return max\n}\n", "    var\
    \ a [100]int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n   \
    \ }\n    var count int = 0\n    for i := 0; i < n; i++ {\n        for j := i +\
    \ 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if\
    \ a[i] < a[j] && a[i] < a[k] {\n                    count++\n                }\n\
    \            }\n        }\n    }\n    return count\n}\n", "    var a []int\n \
    \   for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n    }\n    sort.Ints(a)\n\
    \    \n    var count int = 0\n    for i := 0; i < n; i++ {\n        for j := i\
    \ + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n              \
    \  if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n                    count++\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i *\
    \ i - i + 1\n    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n    \
    \    for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n\
    \                if arr[i] + arr[j] + arr[k] == 3 {\n                    count++\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   var a []int\n    for i := 1; i <= n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    var count int = 0\n    for i := 1; i <= n; i++ {\n        for j :=\
    \ 1; j <= n; j++ {\n            for k := 1; k <= n; k++ {\n                if\
    \ a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n                    count++\n \
    \               }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   var a [100]int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n        for j :=\
    \ i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n            \
    \    if a[i] + a[j] + a[k] == 3 {\n                    count++\n             \
    \   }\n            }\n        }\n    }\n    return count\n}\n", "    var a []int\n\
    \    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n  \
    \  sort.Ints(a)\n    result := 0\n    i := 0\n    for i < len(a) {\n        if\
    \ a[i] > 0 {\n            result += 3\n            i += 3\n        }\n    }\n\
    \    return result\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i <\
    \ n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n         \
    \           max++\n                }\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a,\
    \ i*i - i + 1)\n    }\n    sort.Ints(a)\n    var count int = 0\n    for i := 1;\
    \ i <= n; i++ {\n        for j := i + 1; j <= n; j++ {\n            for k := j\
    \ + 1; k <= n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n         \
    \           count++\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n", "    var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a,\
    \ i*i - i + 1)\n    }\n    sort.Ints(a)\n    \n    var count int\n    for i :=\
    \ 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k :=\
    \ j + 1; k < n; k++ {\n                if a[i] < a[j] && a[j] < a[k] {\n     \
    \               count++\n                }\n            }\n        }\n    }\n\
    \    return count\n}\n", "    var a []int\n    for i := 1; i <= n; i++ {\n   \
    \     a = append(a, i*i - i + 1)\n    }\n    var result int\n    for i := 0; i\
    \ < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n\
    \                    result++\n                }\n            }\n        }\n \
    \   }\n    return result\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n\
    \        a = append(a, i*i - i + 1)\n    }\n    sort.Ints(a)\n    \n    var triples\
    \ int\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n  \
    \          for k := j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i]\
    \ < a[k] && a[j] < a[k] {\n                    triples++\n                }\n\
    \            }\n        }\n    }\n    return triples\n}\n", "    arr := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n  \
    \  max := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++\
    \ {\n            for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j]\
    \ + arr[k] == 3 {\n                    max++\n                }\n            }\n\
    \        }\n    }\n    return max\n}\n", "    arr := make([]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    var count int\
    \ = 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n  \
    \          for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] +\
    \ arr[k] == 3 {\n                    count++\n                }\n            }\n\
    \        }\n    }\n    return count\n}\n", "    var a []int\n    for i := 1; i\
    \ <= n; i++ {\n        a = append(a, i*i - i + 1)\n    }\n    sort.Ints(a)\n \
    \   \n    var count int = 0\n    for i := 0; i < len(a); i++ {\n        if a[i]\
    \ > 0 {\n            count += 3\n            for j := i + 1; j < len(a); j++ {\n\
    \                if a[j] > 0 {\n                    count += 3\n             \
    \       for k := j + 1; k < len(a); k++ {\n                        if a[k] > 0\
    \ {\n                            count += 3\n                            if a[i]\
    \ > a[j] && a[i] > a[k] {\n                                count += 3\n      \
    \                      }\n                        }\n                    }\n \
    \               }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   var a []int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    var result int\n    for i := 0; i < n; i++ {\n        for j := i +\
    \ 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if\
    \ a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n                    result++\n\
    \                }\n            }\n        }\n    }\n    return result\n}\n",
  "    var a [100]int\n    for i := 0; i < n; i++ {\n        a[i] = i * i - i + 1\n\
    \    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n        for j :=\
    \ i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n            \
    \    if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n                    count++\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i\
    \ + 1)\n    }\n    var result int\n    for i := 0; i < n; i++ {\n        for j\
    \ := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n         \
    \       if a[i] + a[j] + a[k] == 3 {\n                    result++\n         \
    \       }\n            }\n        }\n    }\n    return result\n}\n", "    var\
    \ a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i + 1)\n\
    \    }\n    sort.Ints(a)\n    \n    var count int\n    for i := 0; i < n; i++\
    \ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n;\
    \ k++ {\n                if a[i] + a[j] + a[k] == 3 {\n                    count++\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n", " \
    \   var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a, i*i - i\
    \ + 1)\n    }\n    sort.Ints(a)\n    var count int = 0\n    for i := 0; i < n;\
    \ i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1; k <\
    \ n; k++ {\n                if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n \
    \                   count++\n                }\n            }\n        }\n   \
    \ }\n    return count\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n\
    \        a[i] = i * i - i + 1\n    }\n    \n    var count int = 0\n    for i :=\
    \ 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k :=\
    \ j + 1; k < n; k++ {\n                if a[i] < a[j] && a[i] < a[k] && a[j] <\
    \ a[k] {\n                    count++\n                }\n            }\n    \
    \    }\n    }\n    return count\n}\n", "    arr := make([]int, n)\n    for i :=\
    \ 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    var count int =\
    \ 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n    \
    \        for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k]\
    \ == 3 {\n                    count++\n                }\n            }\n    \
    \    }\n    }\n    return count\n}\n", "    var a []int\n    for i := 0; i < n;\
    \ i++ {\n        a[i] = i * i - i + 1\n    }\n    var count int = 0\n    for i\
    \ := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k\
    \ := j + 1; k < n; k++ {\n                if a[i] + a[j] + a[k] == 3 {\n     \
    \               count++\n                }\n            }\n        }\n    }\n\
    \    return count\n}\n", "    var a []int\n    for i := 0; i < n; i++ {\n    \
    \    a[i] = i * i - i + 1\n    }\n    \n    var count int = 0\n    for i := 0;\
    \ i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j +\
    \ 1; k < n; k++ {\n                if a[i] < a[j] && a[i] < a[k] && a[j] < a[k]\
    \ {\n                    count++\n                }\n            }\n        }\n\
    \    }\n    return count\n}\n", "    arr := make([]int, n)\n    for i := 0; i\
    \ < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i :=\
    \ 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k :=\
    \ j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n  \
    \                  max++\n                }\n            }\n        }\n    }\n\
    \    return max\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    result := 0\n    for i := 0; i\
    \ < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n         \
    \           result++\n                }\n            }\n        }\n    }\n   \
    \ return result\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    var count int = 0\n    for i :=\
    \ 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k :=\
    \ j + 1; k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n  \
    \                  count++\n                }\n            }\n        }\n    }\n\
    \    return count\n}\n", "    arr := make([]int, n)\n    for i := 0; i < n; i++\
    \ {\n        arr[i] = i * i - i + 1\n    }\n    max := 0\n    for i := 0; i <\
    \ n; i++ {\n        for j := i + 1; j < n; j++ {\n            for k := j + 1;\
    \ k < n; k++ {\n                if arr[i] + arr[j] + arr[k] == 3 {\n         \
    \           max++\n                }\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    var a []int\n    for i := 1; i <= n; i++ {\n        a[i] = i\
    \ * i - i + 1\n    }\n    var count int = 0\n    for i := 0; i < n; i++ {\n  \
    \      for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n\
    \                if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n            \
    \        count++\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n", "    var a []int\n    for i := 1; i <= n; i++ {\n        a = append(a,\
    \ i*i - i + 1)\n    }\n    \n    var result int\n    for i := 0; i < n; i++ {\n\
    \        for j := i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++\
    \ {\n                if a[i] + a[j] + a[k] == 3 {\n                    result++\n\
    \                }\n            }\n        }\n    }\n    return result\n}\n",
  "    arr := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i\
    \ - i + 1\n    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j :=\
    \ i + 1; j < n; j++ {\n            for k := j + 1; k < n; k++ {\n            \
    \    if arr[i] + arr[j] + arr[k] == 3 {\n                    max++\n         \
    \       }\n            }\n        }\n    }\n    return max\n}\n", "    arr :=\
    \ make([]int, n)\n    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n\
    \    }\n    max := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j\
    \ < n; j++ {\n            for k := j + 1; k < n; k++ {\n                if arr[i]\
    \ + arr[j] + arr[k] == 3 {\n                    max++\n                }\n   \
    \         }\n        }\n    }\n    return max\n}\n", "    arr := make([]int, n)\n\
    \    for i := 0; i < n; i++ {\n        arr[i] = i * i - i + 1\n    }\n    max\
    \ := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n \
    \           for k := j + 1; k < n; k++ {\n                if arr[i] + arr[j] +\
    \ arr[k] == 3 {\n                    max++\n                }\n            }\n\
    \        }\n    }\n    return max\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

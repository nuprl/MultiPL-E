language: go_test.go
name: HumanEval_120_maximum
results:
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    max := arr[0]\n    result\
    \ := make([]int, k)\n    for i := 0; i < k; i++ {\n        if max < arr[i] {\n\
    \            max = arr[i]\n        }\n        result[i] = max\n    }\n    return\
    \ result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected: []int{-4,\
    \ -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected: []int{4,\
    \ 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1), expected:\
    \ []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2, -3}, 3),\
    \ expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123, 20, 0,\
    \ 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmphgbh80x0_test.go:59: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=-3) %!s(int=-3) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmphgbh80x0_test.go:59: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmphgbh80x0_test.go:59:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmphgbh80x0_test.go:59:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=-123)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmphgbh80x0_test.go:59: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=5)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmphgbh80x0_test.go:59:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=-1) %!s(int=0)]'\n    ---\
    \ FAIL: TestMaximum/test_num__7 (0.00s)\n        tmphgbh80x0_test.go:59: expected\
    \ '[%!s(int=5)]', got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n\
    \        tmphgbh80x0_test.go:59: expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4)\
    \ %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    result := make([]int,\
    \ k)\n    max := arr[0]\n    for i := 0; i < k; i++ {\n        if arr[i] > max\
    \ {\n            max = arr[i]\n        }\n    }\n    for i := 0; i < k; i++ {\n\
    \        result[i] = max\n    }\n    return result\n}\n\nfunc TestMaximum(t *testing.T)\
    \ {\n  candidate := maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{-3,\
    \ -4, 5}, 3), expected: []int{-4, -3, 5} },\n     { actual: candidate([]int{4,\
    \ -4, 4}, 2), expected: []int{4, 4} },\n     { actual: candidate([]int{-3, 2,\
    \ 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n     { actual: candidate([]int{123,\
    \ -123, 20, 0, 1, 2, -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpx1cmkfo2_test.go:61: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpx1cmkfo2_test.go:61: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpx1cmkfo2_test.go:61: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpx1cmkfo2_test.go:61: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpx1cmkfo2_test.go:61: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for _, v := range arr {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n    }\n   \
    \ return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__3\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=2) %!s(int=20) %!s(int=123)]',\
    \ got '[%!s(int=123) %!s(int=123) %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=0) %!s(int=1) %!s(int=2)\
    \ %!s(int=20)]', got '[%!s(int=20) %!s(int=20) %!s(int=20) %!s(int=20)]'\n   \
    \ --- FAIL: TestMaximum/test_num__5 (0.00s)\n        tmp1hq_o40h_test.go:60: expected\
    \ '[%!s(int=-13) %!s(int=-8) %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]',\
    \ got '[%!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)\
    \ %!s(int=15)]'\n    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmp1hq_o40h_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL:\
    \ TestMaximum/test_num__8 (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4)\
    \ %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    --- FAIL: TestMaximum/test_num__9\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-10) %!s(int=10)]',\
    \ got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for _, v := range arr {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n    }\n   \
    \ return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__3\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=2) %!s(int=20) %!s(int=123)]',\
    \ got '[%!s(int=123) %!s(int=123) %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=0) %!s(int=1) %!s(int=2)\
    \ %!s(int=20)]', got '[%!s(int=20) %!s(int=20) %!s(int=20) %!s(int=20)]'\n   \
    \ --- FAIL: TestMaximum/test_num__5 (0.00s)\n        tmp1hq_o40h_test.go:60: expected\
    \ '[%!s(int=-13) %!s(int=-8) %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]',\
    \ got '[%!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)\
    \ %!s(int=15)]'\n    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmp1hq_o40h_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL:\
    \ TestMaximum/test_num__8 (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4)\
    \ %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    --- FAIL: TestMaximum/test_num__9\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-10) %!s(int=10)]',\
    \ got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for _, v := range arr {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n    }\n   \
    \ return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__3\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=2) %!s(int=20) %!s(int=123)]',\
    \ got '[%!s(int=123) %!s(int=123) %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=0) %!s(int=1) %!s(int=2)\
    \ %!s(int=20)]', got '[%!s(int=20) %!s(int=20) %!s(int=20) %!s(int=20)]'\n   \
    \ --- FAIL: TestMaximum/test_num__5 (0.00s)\n        tmp1hq_o40h_test.go:60: expected\
    \ '[%!s(int=-13) %!s(int=-8) %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]',\
    \ got '[%!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)\
    \ %!s(int=15)]'\n    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmp1hq_o40h_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL:\
    \ TestMaximum/test_num__8 (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4)\
    \ %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    --- FAIL: TestMaximum/test_num__9\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-10) %!s(int=10)]',\
    \ got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for _, v := range arr {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n    }\n   \
    \ return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__3\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=2) %!s(int=20) %!s(int=123)]',\
    \ got '[%!s(int=123) %!s(int=123) %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=0) %!s(int=1) %!s(int=2)\
    \ %!s(int=20)]', got '[%!s(int=20) %!s(int=20) %!s(int=20) %!s(int=20)]'\n   \
    \ --- FAIL: TestMaximum/test_num__5 (0.00s)\n        tmp1hq_o40h_test.go:60: expected\
    \ '[%!s(int=-13) %!s(int=-8) %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]',\
    \ got '[%!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)\
    \ %!s(int=15)]'\n    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmp1hq_o40h_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL:\
    \ TestMaximum/test_num__8 (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4)\
    \ %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    --- FAIL: TestMaximum/test_num__9\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-10) %!s(int=10)]',\
    \ got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    max := arr[0]\n    result\
    \ := make([]int, k)\n    for i := 0; i < k; i++ {\n        if arr[i] > max {\n\
    \            max = arr[i]\n        }\n    }\n    for i := 0; i < k; i++ {\n  \
    \      result[i] = max\n    }\n    return result\n}\n\nfunc TestMaximum(t *testing.T)\
    \ {\n  candidate := maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{-3,\
    \ -4, 5}, 3), expected: []int{-4, -3, 5} },\n     { actual: candidate([]int{4,\
    \ -4, 4}, 2), expected: []int{4, 4} },\n     { actual: candidate([]int{-3, 2,\
    \ 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n     { actual: candidate([]int{123,\
    \ -123, 20, 0, 1, 2, -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpng7eos13_test.go:61: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpng7eos13_test.go:61: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpng7eos13_test.go:61:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpng7eos13_test.go:61:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpng7eos13_test.go:61: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpng7eos13_test.go:61:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpng7eos13_test.go:61: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpng7eos13_test.go:61:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpng7eos13_test.go:61: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    result := make([]int,\
    \ k)\n    max := arr[0]\n    for i := 0; i < k; i++ {\n        if max < arr[i]\
    \ {\n            max = arr[i]\n        }\n    }\n    for i := 0; i < k; i++ {\n\
    \        result[i] = max\n    }\n    return result\n}\n\nfunc TestMaximum(t *testing.T)\
    \ {\n  candidate := maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{-3,\
    \ -4, 5}, 3), expected: []int{-4, -3, 5} },\n     { actual: candidate([]int{4,\
    \ -4, 4}, 2), expected: []int{4, 4} },\n     { actual: candidate([]int{-3, 2,\
    \ 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n     { actual: candidate([]int{123,\
    \ -123, 20, 0, 1, 2, -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmp8fdhpo9n_test.go:61: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmp8fdhpo9n_test.go:61: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmp8fdhpo9n_test.go:61: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmp8fdhpo9n_test.go:61: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmp8fdhpo9n_test.go:61: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for _, v := range arr {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n    }\n   \
    \ return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__3\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=2) %!s(int=20) %!s(int=123)]',\
    \ got '[%!s(int=123) %!s(int=123) %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=0) %!s(int=1) %!s(int=2)\
    \ %!s(int=20)]', got '[%!s(int=20) %!s(int=20) %!s(int=20) %!s(int=20)]'\n   \
    \ --- FAIL: TestMaximum/test_num__5 (0.00s)\n        tmp1hq_o40h_test.go:60: expected\
    \ '[%!s(int=-13) %!s(int=-8) %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]',\
    \ got '[%!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)\
    \ %!s(int=15)]'\n    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmp1hq_o40h_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL:\
    \ TestMaximum/test_num__8 (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4)\
    \ %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    --- FAIL: TestMaximum/test_num__9\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-10) %!s(int=10)]',\
    \ got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // Write your code here\n    \n    max := arr[0]\n\
    \    result := make([]int, k)\n    \n    for i := 0; i < k; i++ {\n        if\
    \ arr[i] > max {\n            max = arr[i]\n        }\n    }\n    \n    for i\
    \ := 0; i < k; i++ {\n        result[i] = max\n    }\n    \n    return result\n\
    }\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{-3, -4, 5}, 3), expected: []int{-4, -3, 5} },\n\
    \     { actual: candidate([]int{4, -4, 4}, 2), expected: []int{4, 4} },\n    \
    \ { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n\
    \     { actual: candidate([]int{123, -123, 20, 0, 1, 2, -3}, 3), expected: []int{2,\
    \ 20, 123} },\n     { actual: candidate([]int{-123, 20, 0, 1, 2, -3}, 4), expected:\
    \ []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5, 15, 0, 3, -13, -8,\
    \ 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n     { actual: candidate([]int{-1,\
    \ 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n     { actual: candidate([]int{1,\
    \ 0, 5, -7}, 1), expected: []int{5} },\n     { actual: candidate([]int{4, -4},\
    \ 2), expected: []int{-4, 4} },\n     { actual: candidate([]int{-10, 10}, 2),\
    \ expected: []int{-10, 10} },\n     { actual: candidate([]int{1, 2, 3, -23, 243,\
    \ -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpby8f73zo_test.go:65: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpby8f73zo_test.go:65: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpby8f73zo_test.go:65:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpby8f73zo_test.go:65:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpby8f73zo_test.go:65: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpby8f73zo_test.go:65:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpby8f73zo_test.go:65: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpby8f73zo_test.go:65:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpby8f73zo_test.go:65: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    result := make([]int,\
    \ k)\n    max := 0\n    for _, v := range arr {\n        if v > max {\n      \
    \      max = v\n        }\n    }\n    for _, v := range arr {\n        if v ==\
    \ max {\n            result[max] = v\n        }\n    }\n    return result\n}\n\
    \nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{-3, -4, 5}, 3), expected: []int{-4, -3, 5} },\n\
    \     { actual: candidate([]int{4, -4, 4}, 2), expected: []int{4, 4} },\n    \
    \ { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n\
    \     { actual: candidate([]int{123, -123, 20, 0, 1, 2, -3}, 3), expected: []int{2,\
    \ 20, 123} },\n     { actual: candidate([]int{-123, 20, 0, 1, 2, -3}, 4), expected:\
    \ []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5, 15, 0, 3, -13, -8,\
    \ 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n     { actual: candidate([]int{-1,\
    \ 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n     { actual: candidate([]int{1,\
    \ 0, 5, -7}, 1), expected: []int{5} },\n     { actual: candidate([]int{4, -4},\
    \ 2), expected: []int{-4, 4} },\n     { actual: candidate([]int{-10, 10}, 2),\
    \ expected: []int{-10, 10} },\n     { actual: candidate([]int{1, 2, 3, -23, 243,\
    \ -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 3 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 3\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x5137c0,\
    \ 0xc000160018})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5137c0, 0xc000160018})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.maximum(...)\n\t/tmp/tmpq3raffqc_test.go:34\n\
    command-line-arguments_test.TestMaximum(0x0?)\n\t/tmp/tmpq3raffqc_test.go:47 +0xe65\n\
    testing.tRunner(0xc000103520, 0x5290e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    result := make([]int,\
    \ k)\n    max := arr[0]\n    for i := 0; i < k; i++ {\n        if max < arr[i]\
    \ {\n            max = arr[i]\n        }\n    }\n    for i := 0; i < k; i++ {\n\
    \        result[i] = max\n    }\n    return result\n}\n\nfunc TestMaximum(t *testing.T)\
    \ {\n  candidate := maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{-3,\
    \ -4, 5}, 3), expected: []int{-4, -3, 5} },\n     { actual: candidate([]int{4,\
    \ -4, 4}, 2), expected: []int{4, 4} },\n     { actual: candidate([]int{-3, 2,\
    \ 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n     { actual: candidate([]int{123,\
    \ -123, 20, 0, 1, 2, -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmp8fdhpo9n_test.go:61: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmp8fdhpo9n_test.go:61: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmp8fdhpo9n_test.go:61: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmp8fdhpo9n_test.go:61: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmp8fdhpo9n_test.go:61: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // Write your code here\n    result := make([]int,\
    \ k)\n    max := arr[0]\n    for i := 0; i < k; i++ {\n        if arr[i] > max\
    \ {\n            max = arr[i]\n        }\n    }\n    for i := 0; i < k; i++ {\n\
    \        result[i] = max\n    }\n    return result\n}\n\nfunc TestMaximum(t *testing.T)\
    \ {\n  candidate := maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{-3,\
    \ -4, 5}, 3), expected: []int{-4, -3, 5} },\n     { actual: candidate([]int{4,\
    \ -4, 4}, 2), expected: []int{4, 4} },\n     { actual: candidate([]int{-3, 2,\
    \ 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n     { actual: candidate([]int{123,\
    \ -123, 20, 0, 1, 2, -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpqf6wr655_test.go:61: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpqf6wr655_test.go:61: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpqf6wr655_test.go:61:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpqf6wr655_test.go:61:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpqf6wr655_test.go:61: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpqf6wr655_test.go:61:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpqf6wr655_test.go:61: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpqf6wr655_test.go:61:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpqf6wr655_test.go:61: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    result := make([]int,\
    \ k)\n    max := arr[0]\n    for i := 0; i < k; i++ {\n        if arr[i] > max\
    \ {\n            max = arr[i]\n        }\n    }\n    for i := 0; i < k; i++ {\n\
    \        result[i] = max\n    }\n    return result\n}\n\nfunc TestMaximum(t *testing.T)\
    \ {\n  candidate := maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{-3,\
    \ -4, 5}, 3), expected: []int{-4, -3, 5} },\n     { actual: candidate([]int{4,\
    \ -4, 4}, 2), expected: []int{4, 4} },\n     { actual: candidate([]int{-3, 2,\
    \ 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n     { actual: candidate([]int{123,\
    \ -123, 20, 0, 1, 2, -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpx1cmkfo2_test.go:61: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpx1cmkfo2_test.go:61: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpx1cmkfo2_test.go:61: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpx1cmkfo2_test.go:61: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpx1cmkfo2_test.go:61: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    max := make([]int, k)\n\
    \    for i := 0; i < k; i++ {\n        max[i] = arr[0]\n    }\n    for i := 0;\
    \ i < len(arr); i++ {\n        for j := 0; j < k; j++ {\n            if arr[i]\
    \ > max[j] {\n                max[j] = arr[i]\n            }\n        }\n    }\n\
    \    return max\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpaajbrp2k_test.go:62: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__3\
    \ (0.00s)\n        tmpaajbrp2k_test.go:62: expected '[%!s(int=2) %!s(int=20) %!s(int=123)]',\
    \ got '[%!s(int=123) %!s(int=123) %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4\
    \ (0.00s)\n        tmpaajbrp2k_test.go:62: expected '[%!s(int=0) %!s(int=1) %!s(int=2)\
    \ %!s(int=20)]', got '[%!s(int=20) %!s(int=20) %!s(int=20) %!s(int=20)]'\n   \
    \ --- FAIL: TestMaximum/test_num__5 (0.00s)\n        tmpaajbrp2k_test.go:62: expected\
    \ '[%!s(int=-13) %!s(int=-8) %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]',\
    \ got '[%!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)\
    \ %!s(int=15)]'\n    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpaajbrp2k_test.go:62:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL:\
    \ TestMaximum/test_num__8 (0.00s)\n        tmpaajbrp2k_test.go:62: expected '[%!s(int=-4)\
    \ %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    --- FAIL: TestMaximum/test_num__9\
    \ (0.00s)\n        tmpaajbrp2k_test.go:62: expected '[%!s(int=-10) %!s(int=10)]',\
    \ got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    result := make([]int,\
    \ k)\n    max := arr[0]\n    for i := 0; i < k; i++ {\n        if max < arr[i]\
    \ {\n            max = arr[i]\n        }\n    }\n    for i := 0; i < k; i++ {\n\
    \        result[i] = max\n    }\n    return result\n}\n\nfunc TestMaximum(t *testing.T)\
    \ {\n  candidate := maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{-3,\
    \ -4, 5}, 3), expected: []int{-4, -3, 5} },\n     { actual: candidate([]int{4,\
    \ -4, 4}, 2), expected: []int{4, 4} },\n     { actual: candidate([]int{-3, 2,\
    \ 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n     { actual: candidate([]int{123,\
    \ -123, 20, 0, 1, 2, -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmp8fdhpo9n_test.go:61: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmp8fdhpo9n_test.go:61: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmp8fdhpo9n_test.go:61: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmp8fdhpo9n_test.go:61: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmp8fdhpo9n_test.go:61:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmp8fdhpo9n_test.go:61: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for _, v := range arr {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n    }\n   \
    \ return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__3\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=2) %!s(int=20) %!s(int=123)]',\
    \ got '[%!s(int=123) %!s(int=123) %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=0) %!s(int=1) %!s(int=2)\
    \ %!s(int=20)]', got '[%!s(int=20) %!s(int=20) %!s(int=20) %!s(int=20)]'\n   \
    \ --- FAIL: TestMaximum/test_num__5 (0.00s)\n        tmp1hq_o40h_test.go:60: expected\
    \ '[%!s(int=-13) %!s(int=-8) %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]',\
    \ got '[%!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)\
    \ %!s(int=15)]'\n    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmp1hq_o40h_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL:\
    \ TestMaximum/test_num__8 (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4)\
    \ %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    --- FAIL: TestMaximum/test_num__9\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-10) %!s(int=10)]',\
    \ got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    result := make([]int,\
    \ k)\n    max := arr[0]\n    for i := 0; i < k; i++ {\n        if arr[i] > max\
    \ {\n            max = arr[i]\n        }\n    }\n    for i := 0; i < k; i++ {\n\
    \        result[i] = max\n    }\n    return result\n}\n\nfunc TestMaximum(t *testing.T)\
    \ {\n  candidate := maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{-3,\
    \ -4, 5}, 3), expected: []int{-4, -3, 5} },\n     { actual: candidate([]int{4,\
    \ -4, 4}, 2), expected: []int{4, 4} },\n     { actual: candidate([]int{-3, 2,\
    \ 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n     { actual: candidate([]int{123,\
    \ -123, 20, 0, 1, 2, -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpx1cmkfo2_test.go:61: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpx1cmkfo2_test.go:61: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpx1cmkfo2_test.go:61: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpx1cmkfo2_test.go:61: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpx1cmkfo2_test.go:61:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpx1cmkfo2_test.go:61: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    max := make([]int, k)\n\
    \    i := 0\n    for _, v := range arr {\n        if v > max[i] {\n          \
    \  max[i] = v\n        }\n    }\n    return max\n}\n\nfunc TestMaximum(t *testing.T)\
    \ {\n  candidate := maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{-3,\
    \ -4, 5}, 3), expected: []int{-4, -3, 5} },\n     { actual: candidate([]int{4,\
    \ -4, 4}, 2), expected: []int{4, 4} },\n     { actual: candidate([]int{-3, 2,\
    \ 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n     { actual: candidate([]int{123,\
    \ -123, 20, 0, 1, 2, -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\npanic: runtime error: index out of range\
    \ [0] with length 0 [recovered]\n\tpanic: runtime error: index out of range [0]\
    \ with length 0\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc00014e030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc00014e030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.maximum(...)\n\t/tmp/tmprbv_wavv_test.go:28\n\
    command-line-arguments_test.TestMaximum(0x0?)\n\t/tmp/tmprbv_wavv_test.go:52 +0x4f1\n\
    testing.tRunner(0xc0001191e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    max := make([]int, k)\n\
    \    for i := 0; i < k; i++ {\n        max[i] = arr[0]\n    }\n    for i := 0;\
    \ i < len(arr); i++ {\n        if arr[i] > max[0] {\n            max[0] = arr[i]\n\
    \        }\n        for j := 1; j < k; j++ {\n            if arr[i] > max[j] {\n\
    \                max[j] = arr[i]\n            }\n        }\n    }\n    return\
    \ max\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected: []int{-4,\
    \ -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected: []int{4,\
    \ 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1), expected:\
    \ []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2, -3}, 3),\
    \ expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123, 20, 0,\
    \ 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\npanic: runtime error: index out of range\
    \ [0] with length 0 [recovered]\n\tpanic: runtime error: index out of range [0]\
    \ with length 0\n\ngoroutine 4 [running]:\ntesting.tRunner.func1.2({0x5137c0,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5137c0, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.maximum({0xc0000f1cd8, 0x7, 0x0?}, 0x0)\n\
    \t/tmp/tmpjja_xswv_test.go:30 +0xc5\ncommand-line-arguments_test.TestMaximum(0xc00019e000?)\n\
    \t/tmp/tmpjja_xswv_test.go:59 +0x5ef\ntesting.tRunner(0xc00019e000, 0x5290e0)\n\
    \t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439 +0x102\ncreated\
    \ by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for _, v := range arr {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n    }\n   \
    \ return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__3\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=2) %!s(int=20) %!s(int=123)]',\
    \ got '[%!s(int=123) %!s(int=123) %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=0) %!s(int=1) %!s(int=2)\
    \ %!s(int=20)]', got '[%!s(int=20) %!s(int=20) %!s(int=20) %!s(int=20)]'\n   \
    \ --- FAIL: TestMaximum/test_num__5 (0.00s)\n        tmp1hq_o40h_test.go:60: expected\
    \ '[%!s(int=-13) %!s(int=-8) %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]',\
    \ got '[%!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)\
    \ %!s(int=15)]'\n    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmp1hq_o40h_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL:\
    \ TestMaximum/test_num__8 (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4)\
    \ %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    --- FAIL: TestMaximum/test_num__9\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-10) %!s(int=10)]',\
    \ got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for _, v := range arr {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n    }\n   \
    \ return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__3\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=2) %!s(int=20) %!s(int=123)]',\
    \ got '[%!s(int=123) %!s(int=123) %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=0) %!s(int=1) %!s(int=2)\
    \ %!s(int=20)]', got '[%!s(int=20) %!s(int=20) %!s(int=20) %!s(int=20)]'\n   \
    \ --- FAIL: TestMaximum/test_num__5 (0.00s)\n        tmp1hq_o40h_test.go:60: expected\
    \ '[%!s(int=-13) %!s(int=-8) %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]',\
    \ got '[%!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)\
    \ %!s(int=15)]'\n    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmp1hq_o40h_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL:\
    \ TestMaximum/test_num__8 (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-4)\
    \ %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    --- FAIL: TestMaximum/test_num__9\
    \ (0.00s)\n        tmp1hq_o40h_test.go:60: expected '[%!s(int=-10) %!s(int=10)]',\
    \ got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    // write your code here\n    result := make([]int,\
    \ k)\n    max := 0\n    for _, v := range arr {\n        if v > max {\n      \
    \      max = v\n        }\n    }\n    for _, v := range arr {\n        if v ==\
    \ max {\n            result[max] = v\n        }\n    }\n    return result\n}\n\
    \nfunc TestMaximum(t *testing.T) {\n  candidate := maximum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{-3, -4, 5}, 3), expected: []int{-4, -3, 5} },\n\
    \     { actual: candidate([]int{4, -4, 4}, 2), expected: []int{4, 4} },\n    \
    \ { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1), expected: []int{2} },\n\
    \     { actual: candidate([]int{123, -123, 20, 0, 1, 2, -3}, 3), expected: []int{2,\
    \ 20, 123} },\n     { actual: candidate([]int{-123, 20, 0, 1, 2, -3}, 4), expected:\
    \ []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5, 15, 0, 3, -13, -8,\
    \ 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n     { actual: candidate([]int{-1,\
    \ 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n     { actual: candidate([]int{1,\
    \ 0, 5, -7}, 1), expected: []int{5} },\n     { actual: candidate([]int{4, -4},\
    \ 2), expected: []int{-4, 4} },\n     { actual: candidate([]int{-10, 10}, 2),\
    \ expected: []int{-10, 10} },\n     { actual: candidate([]int{1, 2, 3, -23, 243,\
    \ -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 3 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 3\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x5137c0,\
    \ 0xc000160018})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5137c0, 0xc000160018})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.maximum(...)\n\t/tmp/tmpq3raffqc_test.go:34\n\
    command-line-arguments_test.TestMaximum(0x0?)\n\t/tmp/tmpq3raffqc_test.go:47 +0xe65\n\
    testing.tRunner(0xc000103520, 0x5290e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if max < arr[i] {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpc4e0z52k_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpc4e0z52k_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpc4e0z52k_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpc4e0z52k_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509
- exit_code: 1
  program: "package maximum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
    \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
    \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3,\
    \ 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the\
    \ array will be in the range of [1, 1000].\n// 2. The elements in the array will\
    \ be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunc maximum(arr\
    \ []int, k int) []int {\n    result := make([]int, k)\n    max := arr[0]\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] > max {\n            max = arr[i]\n\
    \        }\n    }\n    for i := 0; i < k; i++ {\n        result[i] = max\n   \
    \ }\n    return result\n}\n\nfunc TestMaximum(t *testing.T) {\n  candidate :=\
    \ maximum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{-3, -4, 5}, 3), expected:\
    \ []int{-4, -3, 5} },\n     { actual: candidate([]int{4, -4, 4}, 2), expected:\
    \ []int{4, 4} },\n     { actual: candidate([]int{-3, 2, 1, 2, -1, -2, 1}, 1),\
    \ expected: []int{2} },\n     { actual: candidate([]int{123, -123, 20, 0, 1, 2,\
    \ -3}, 3), expected: []int{2, 20, 123} },\n     { actual: candidate([]int{-123,\
    \ 20, 0, 1, 2, -3}, 4), expected: []int{0, 1, 2, 20} },\n     { actual: candidate([]int{5,\
    \ 15, 0, 3, -13, -8, 0}, 7), expected: []int{-13, -8, 0, 0, 3, 5, 15} },\n   \
    \  { actual: candidate([]int{-1, 0, 2, 5, 3, -10}, 2), expected: []int{3, 5} },\n\
    \     { actual: candidate([]int{1, 0, 5, -7}, 1), expected: []int{5} },\n    \
    \ { actual: candidate([]int{4, -4}, 2), expected: []int{-4, 4} },\n     { actual:\
    \ candidate([]int{-10, 10}, 2), expected: []int{-10, 10} },\n     { actual: candidate([]int{1,\
    \ 2, 3, -23, 243, -400, 0}, 0), expected: []int{} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestMaximum (0.00s)\n    --- FAIL: TestMaximum/test_num__0 (0.00s)\n\
    \        tmpn2sthpkh_test.go:60: expected '[%!s(int=-4) %!s(int=-3) %!s(int=5)]',\
    \ got '[%!s(int=5) %!s(int=5) %!s(int=5)]'\n    --- FAIL: TestMaximum/test_num__2\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=2)]', got '[%!s(int=-3)]'\n\
    \    --- FAIL: TestMaximum/test_num__3 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=2) %!s(int=20) %!s(int=123)]', got '[%!s(int=123) %!s(int=123)\
    \ %!s(int=123)]'\n    --- FAIL: TestMaximum/test_num__4 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=20)]', got '[%!s(int=20)\
    \ %!s(int=20) %!s(int=20) %!s(int=20)]'\n    --- FAIL: TestMaximum/test_num__5\
    \ (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=-13) %!s(int=-8)\
    \ %!s(int=0) %!s(int=0) %!s(int=3) %!s(int=5) %!s(int=15)]', got '[%!s(int=15)\
    \ %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15) %!s(int=15)]'\n\
    \    --- FAIL: TestMaximum/test_num__6 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=3) %!s(int=5)]', got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL:\
    \ TestMaximum/test_num__7 (0.00s)\n        tmpn2sthpkh_test.go:60: expected '[%!s(int=5)]',\
    \ got '[%!s(int=1)]'\n    --- FAIL: TestMaximum/test_num__8 (0.00s)\n        tmpn2sthpkh_test.go:60:\
    \ expected '[%!s(int=-4) %!s(int=4)]', got '[%!s(int=4) %!s(int=4)]'\n    ---\
    \ FAIL: TestMaximum/test_num__9 (0.00s)\n        tmpn2sthpkh_test.go:60: expected\
    \ '[%!s(int=-10) %!s(int=10)]', got '[%!s(int=10) %!s(int=10)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073509

name: HumanEval_13_greatest_common_divisor
language: go_test.go
prompt: "package greatest_common_divisor_test\n\nimport (\n    \"testing\"\n    \"\
  fmt\"\n)\n\n// Return a greatest common divisor of two integers a and b\n// >>>\
  \ greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n\
  // 5\nfunc greatest_common_divisor(a int, b int) int {\n"
tests: "func TestGreatest_Common_Divisor(t *testing.T) {\n  candidate := greatest_common_divisor\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(3, 7), expected: 1 },\n     { actual:\
  \ candidate(10, 15), expected: 5 },\n     { actual: candidate(49, 14), expected:\
  \ 7 },\n     { actual: candidate(144, 60), expected: 12 },\n   }\n\n\tfor i, tc\
  \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    c := a\n    for\
    \ {\n        if b%a == 0 {\n            return c\n        }\n        c += 1\n\
    \        if c%b == 0 {\n            return c\n        }\n        c += b\n    }\n\
    }\n", "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    if a == 0 {\n \
    \       return b\n    }\n    return greatest_common_divisor(b, a % b)\n}\n", " \
    \   if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a%b)\n}\n", "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if a < b {\n        a, b = b, a\n    }\n    if b == 0 {\n\
    \        return a\n    }\n    c := a\n    for d := 1; d <= b; d++ {\n        if\
    \ c % d == 0 {\n            c = c / d\n        }\n    }\n    return c\n}\n", " \
    \   if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    if a == 0 {\n \
    \       return b\n    }\n    c := a\n    d := b\n    e := 1\n    f := 1\n    g\
    \ := 1\n    h := a\n    i := b\n    j := 0\n    k := 0\n    l := 0\n    m := a\n\
    \    n := b\n    o := 0\n    p := 0\n    q := 0\n    r := a\n    s := b\n    t\
    \ := 0\n    u := 0\n    v := a\n    w := b\n    x := 0\n    y := 0\n    z := 0\n\
    \    w := a\n    z := b\n    x := a\n    y := b\n    w := a\n    z := b\n    x\
    \ := a\n    y := b\n    w := a\n    z := b\n    x := a\n    y := b\n    w := a\n\
    \    z := b\n    x := a\n    y := b\n    w := a\n    z := b\n    x := a\n    y\
    \ := b\n    w := a\n    z := b\n    x := a\n    y := b\n    w := a\n    z := b\n\
    \    x := a\n    y := b\n    w := a\n    z := b\n    x := a\n    y := b\n    w\
    \ := a\n    z := b\n    x := a\n    y := b\n    w := a\n    z := b\n    x := a\n\
    \    y := b\n    w := a\n    z := b\n    x := a\n    y := b\n    w := a\n    z\
    \ := b\n    x := a\n    y := b\n    w := a\n    z := b\n    x := a\n    y := b\n\
    \    w := a\n    z := b\n    x := a\n    y := b\n    w := a\n    z := b\n    x\
    \ := a\n    y := b\n    w := a\n    z := b\n    x := a\n    y := b\n    w := a\n\
    \    z := b\n    x := a\n    y := b\n    w := a\n    z := b\n    x := a\n    y\
    \ := b\n    w := a\n    z := b\n    x := ", "    if a < b {\n        a, b = b,\
    \ a\n    }\n    for {\n        divisor := a % b\n        if divisor == 0 {\n \
    \           return b\n        }\n        a = b\n        b = divisor\n    }\n}\n",
  "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n", "    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ a % b)\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_75_is_multiply_prime
language: go_test.go
prompt: "package is_multiply_prime_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n// and false otherwise.\n// Knowing that (a) is less then\
  \ 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nfunc\
  \ is_multiply_prime(a int) bool {\n"
tests: "func TestIs_Multiply_Prime(t *testing.T) {\n  candidate := is_multiply_prime\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(5), expected: false },\n     { actual:\
  \ candidate(30), expected: true },\n     { actual: candidate(8), expected: true\
  \ },\n     { actual: candidate(10), expected: false },\n     { actual: candidate(125),\
  \ expected: true },\n     { actual: candidate(105), expected: true },\n     { actual:\
  \ candidate(126), expected: false },\n     { actual: candidate(729), expected: false\
  \ },\n     { actual: candidate(891), expected: false },\n     { actual: candidate(1001),\
  \ expected: true },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if a < 100 {\n        return false\n    }\n    \n    primes :=\
    \ make([]int, 100)\n    \n    for i := 0; i < 100; i++ {\n        primes[i] =\
    \ i\n    }\n    \n    for i := 2; i < a; i++ {\n        for j := 2; j < i; j++\
    \ {\n            if primes[j] == i {\n                primes[j] = -1\n       \
    \     }\n        }\n    }\n    \n    for i := 0; i < 100; i++ {\n        if primes[i]\
    \ == -1 {\n            return false\n        }\n    }\n    \n    return true\n\
    }\n", "    if a < 100 {\n        return false\n    }\n    \n    primes := make([]int,\
    \ 100)\n    primes[0] = 2\n    primes[1] = 3\n    primes[2] = 5\n    primes[3]\
    \ = 7\n    primes[4] = 11\n    primes[5] = 13\n    primes[6] = 17\n    primes[7]\
    \ = 19\n    primes[8] = 23\n    primes[9] = 29\n    primes[10] = 31\n    primes[11]\
    \ = 37\n    primes[12] = 41\n    primes[13] = 43\n    primes[14] = 47\n    primes[15]\
    \ = 53\n    primes[16] = 59\n    primes[17] = 61\n    primes[18] = 67\n    primes[19]\
    \ = 71\n    primes[20] = 73\n    primes[21] = 79\n    primes[22] = 83\n    primes[23]\
    \ = 89\n    primes[24] = 97\n    primes[25] = 101\n    primes[26] = 103\n    primes[27]\
    \ = 107\n    primes[28] = 109\n    primes[29] = 113\n    primes[30] = 116\n  \
    \  primes[31] = 120\n    primes[32] = 124\n    primes[33] = 127\n    primes[34]\
    \ = 130\n    primes[35] = 133\n    primes[36] = 137\n    primes[37] = 139\n  \
    \  primes[38] = 142\n    primes[39] = 145\n    primes[40] = 147\n    primes[41]\
    \ = 151\n    primes[42] = 157\n    primes[43] = 162\n    primes[44] = 165\n  \
    \  primes[45] = 168\n    primes[46] = 173\n    primes[47] = 179\n    primes[48]\
    \ = 181\n    primes[49] = 186\n    primes[50] = 191\n    primes[51] = 196\n  \
    \  primes[52] = 199\n    primes[53] = 202\n    primes[54] = 205\n    primes[55]\
    \ = 208\n    primes[56] = 212\n    primes[57] = 215\n    primes[58] = 217\n  \
    \  primes[59] = 223\n    primes[60] = 226\n    primes[61] = 230\n    primes[62]\
    \ = 233\n    primes[63] = 238\n    primes[64] = 241\n    primes[65] = 246\n  \
    \  primes[66] = 252\n    primes[67] = 255\n    primes[68] = 258\n", "    \n  \
    \  // Write your code here\n    \n    \n    return false\n}\n", "    b := a\n\
    \    c := a\n    d := a\n    e := a\n    f := a\n    g := a\n    h := a\n    i\
    \ := a\n    j := a\n    k := a\n    l := a\n    m := a\n    n := a\n    o := a\n\
    \    p := a\n    q := a\n    r := a\n    s := a\n    t := a\n    u := a\n    v\
    \ := a\n    w := a\n    x := a\n    y := a\n    z := a\n\n    for {\n        if\
    \ b%2 == 0 {\n            if c%2 == 0 {\n                if d%2 == 0 {\n     \
    \               if e%2 == 0 {\n                        if f%2 == 0 {\n       \
    \                     if g%2 == 0 {\n                                if h%2 ==\
    \ 0 {\n                                    if i%2 == 0 {\n                   \
    \                     if j%2 == 0 {\n                                        \
    \    if k%2 == 0 {\n                                                if l%2 ==\
    \ 0 {\n                                                    if m%2 == 0 {\n   \
    \                                                     if n%2 == 0 {\n        \
    \                                                    if o%2 == 0 {\n         \
    \                                                       if p%2 == 0 {\n      \
    \                                                              if q%2 == 0 {\n\
    \                                                                        if r%2\
    \ == 0 {\n                                                                   \
    \         if s%2 == 0 {\n                                                    \
    \                            if t%2 == 0 {\n                                 \
    \                                                   if u%2 == 0 {\n          \
    \                                                                            \
    \  if v%2 == 0 {\n                                                           \
    \                                 if w%2 == 0 {\n                            \
    \                                                                    if x%2 ==\
    \ 0 {\n                                                                      \
    \                              if y%2 == 0 {\n                               \
    \                                                                         if z%2\
    \ == 0 {\n                                                                   \
    \                                         return true\n                      \
    \                                                                            \
    \      } else {\n                                                            \
    \                                                return false\n              \
    \                                                                            \
    \              }\n                                                           \
    \                                         } else {\n                         \
    \                                                                            \
    \   return false\n                                                           \
    \                                         }\n                                \
    \                                                                } else {\n  \
    \                                                                            \
    \                      return false\n                                        \
    \                                                        }\n                 \
    \                                                                           }\
    \ else {\n                                                                   \
    \                             return false\n                                 \
    \                                                           }\n              \
    \                                                                          } else\
    \ {\n                                                                        \
    \                    return false\n                                          \
    \                                              }\n                           \
    \                                                         } else {\n         \
    \                                                                            \
    \   return false\n                                                           \
    \                         }\n                                                \
    \                                } else {\n                                  \
    \                                                  return false\n            \
    \                                                                    }\n     \
    \                                                                       } else\
    \ {\n                                                                        \
    \        return false\n                                                      \
    \                      }\n                                                   \
    \                     } else {\n                                             \
    \                               return false\n                               \
    \                                         }\n                                \
    \                                    } else {\n                              \
    \                                          return false\n                    \
    \                                                }\n                         \
    \                                       } else {\n                           \
    \                                         return false\n                     \
    \                                           }\n                              \
    \                              } else {\n                                    \
    \                            return false\n                                  \
    \                          }\n                                               \
    \         } else {\n                                                         \
    \   return false\n                                                        }\n\
    \                                                    } else {\n              \
    \                                          return false\n                    \
    \                                }\n                                         \
    \       } else {\n                                                    return false\n\
    \                                                }\n                         \
    \                   } else {\n                                               \
    \ return false\n                                            }\n              \
    \                          } else {\n                                        \
    \    return false\n                                        }\n               \
    \                     } else {\n                                        return\
    \ false\n                                    }\n                             \
    \   } else {\n                                    return false\n             \
    \                   ", "    if a < 100 {\n        return false\n    }\n    \n\
    \    primes := make([]int, 100)\n    primes[0] = 2\n    primes[1] = 3\n    primes[2]\
    \ = 5\n    primes[3] = 7\n    primes[4] = 11\n    primes[5] = 13\n    primes[6]\
    \ = 17\n    primes[7] = 19\n    primes[8] = 23\n    primes[9] = 29\n    primes[10]\
    \ = 31\n    primes[11] = 31\n    primes[12] = 31\n    primes[13] = 31\n    primes[14]\
    \ = 31\n    primes[15] = 31\n    primes[16] = 31\n    primes[17] = 31\n    primes[18]\
    \ = 31\n    primes[19] = 31\n    primes[20] = 31\n    primes[21] = 31\n    primes[22]\
    \ = 31\n    primes[23] = 31\n    primes[24] = 31\n    primes[25] = 31\n    primes[26]\
    \ = 31\n    primes[27] = 31\n    primes[28] = 31\n    primes[29] = 31\n    primes[30]\
    \ = 31\n    primes[31] = 31\n    primes[32] = 31\n    primes[33] = 31\n    primes[34]\
    \ = 31\n    primes[35] = 31\n    primes[36] = 31\n    primes[37] = 31\n    primes[38]\
    \ = 31\n    primes[39] = 31\n    primes[40] = 31\n    primes[41] = 31\n    primes[42]\
    \ = 31\n    primes[43] = 31\n    primes[44] = 31\n    primes[45] = 31\n    primes[46]\
    \ = 31\n    primes[47] = 31\n    primes[48] = 31\n    primes[49] = 31\n    primes[50]\
    \ = 31\n    primes[51] = 31\n    primes[52] = 31\n    primes[53] = 31\n    primes[54]\
    \ = 31\n    primes[55] = 31\n    primes[56] = 31\n    primes[57] = 31\n    primes[58]\
    \ = 31\n    primes[59] = 31\n    primes[60] = 31\n    primes[61] = 31\n    primes[62]\
    \ = 31\n    primes[63", "    b := a\n    for i := 2; i < 100; i++ {\n        if\
    \ b%i == 0 {\n            b = b / i\n            if b == 1 {\n               \
    \ return true\n            }\n        }\n    }\n    return false\n}\n", "    if\
    \ a < 100 {\n        return false\n    }\n    \n    for i := 2; i < a; i++ {\n\
    \        if a % i == 0 {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    b := a\n    for i := 2; i < 100; i++ {\n        if b%i == 0\
    \ {\n            b = b / i\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    \n    // Write your code here\n    \n    \n    return false\n\
    }\n", "    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    \n    // Write your code here\n    \n    return false\n}\n", "    if a < 100\
    \ {\n        return false\n    }\n    \n    primes := make([]int, 100)\n    primes[0]\
    \ = 2\n    primes[1] = 3\n    primes[2] = 5\n    primes[3] = 7\n    primes[4]\
    \ = 11\n    primes[5] = 13\n    primes[6] = 17\n    primes[7] = 19\n    primes[8]\
    \ = 23\n    primes[9] = 29\n    primes[10] = 31\n    primes[11] = 37\n    primes[12]\
    \ = 41\n    primes[13] = 43\n    primes[14] = 47\n    primes[15] = 53\n    primes[16]\
    \ = 59\n    primes[17] = 61\n    primes[18] = 67\n    primes[19] = 71\n    primes[20]\
    \ = 73\n    primes[21] = 79\n    primes[22] = 83\n    primes[23] = 89\n    primes[24]\
    \ = 97\n    primes[25] = 101\n    primes[26] = 103\n    primes[27] = 107\n   \
    \ primes[28] = 109\n    primes[29] = 113\n    primes[30] = 127\n    primes[31]\
    \ = 131\n    primes[32] = 137\n    primes[33] = 139\n    primes[34] = 149\n  \
    \  primes[35] = 151\n    primes[36] = 157\n    primes[37] = 163\n    primes[38]\
    \ = 167\n    primes[39] = 173\n    primes[40] = 179\n    primes[41] = 181\n  \
    \  primes[42] = 191\n    primes[43] = 193\n    primes[44] = 197 \n    primes[45]\
    \ = 199\n    primes[46] = 211\n    primes[47] = 223\n    primes[48] = 227\n  \
    \  primes[49] = 229\n    primes[50] = 231\n    primes[51] = 233\n    primes[52]\
    \ = 239\n    primes[53] = 241\n    primes[54] = 247\n    primes[55] = 251\n  \
    \  primes[56] = 257\n    primes[57] = 263\n    primes[58] = 269\n    primes[59]\
    \ = 271\n    primes[60] = 277\n    primes[61] = 281\n    primes[62] = 283\n  \
    \  primes[63] = 293\n    primes[64] = 307\n    primes[65] = 311\n    primes[66]\
    \ = 313\n    primes[67] = 317", "    \n    \n    // Write your code here\n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    b := a\n    c := a\n    d := a\n    e :=\
    \ a\n    f := a\n    g := a\n    h := a\n    i := a\n    j := a\n    k := a\n\
    \    l := a\n    m := a\n    n := a\n    o := a\n    p := a\n    q := a\n    r\
    \ := a\n    s := a\n    t := a\n    u := a\n    v := a\n    w := a\n    x := a\n\
    \    y := a\n    z := a\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    if a < 100 {\n        return false\n    }\n    \n   \
    \ prime := make([]int, 100)\n    \n    for i := 0; i < 100; i++ {\n        if\
    \ a % prime[i] == 0 {\n            return false\n        }\n    }\n    \n    for\
    \ i := 2; i < 100; i++ {\n        if a % i == 0 {\n            return false\n\
    \        }\n    }\n    \n    return true\n}\n", "    b := a\n    for {\n     \
    \   if b%2 == 0 {\n            if b%3 == 0 {\n                if b%5 == 0 {\n\
    \                    return true\n                }\n            }\n        }\n\
    \        b /= 2\n    }\n    return false\n}\n", "    \n    // Write your code\
    \ here\n    \n    if a < 100 {\n        return false\n    }\n    \n    primes\
    \ := make([]int, 100)\n    \n    for i := 0; i < 100; i++ {\n        if a % primes[i]\
    \ == 0 {\n            return false\n        }\n    }\n    \n    for i := 2; i\
    \ < 100; i++ {\n        if a % i == 0 {\n            return false\n        }\n\
    \    }\n    \n    return true\n}\n", "    if a < 100 {\n        return false\n\
    \    }\n    \n    primes := make([]int, 100)\n    primes[0] = 2\n    primes[1]\
    \ = 3\n    primes[2] = 5\n    \n    for i := 3; i < 100; i++ {\n        if a %\
    \ primes[i] == 0 {\n            return false\n        }\n    }\n    \n    return\
    \ true\n}\n", "    if a < 100 {\n        return false\n    }\n    \n    prime\
    \ := make([]int, 100)\n    prime[0] = true\n    prime[1] = true\n    prime[2]\
    \ = true\n    prime[3] = true\n    prime[4] = true\n    prime[5] = true\n    prime[6]\
    \ = true\n    prime[7] = true\n    prime[8] = true\n    prime[9] = true\n    prime[10]\
    \ = true\n    prime[11] = true\n    prime[12] = true\n    prime[13] = true\n \
    \   prime[14] = true\n    prime[15] = true\n    prime[16] = true\n    prime[17]\
    \ = true\n    prime[18] = true\n    prime[19] = true\n    prime[20] = true\n \
    \   prime[21] = true\n    prime[22] = true\n    prime[23] = true\n    prime[24]\
    \ = true\n    prime[25] = true\n    prime[26] = true\n    prime[27] = true\n \
    \   prime[28] = true\n    prime[29] = true\n    prime[30] = true\n    prime[31]\
    \ = true\n    prime[32] = true\n    prime[33] = true\n    prime[34] = true\n \
    \   prime[35] = true\n    prime[36] = true\n    prime[37] = true\n    prime[38]\
    \ = true\n    prime[39] = true\n    prime[40] = true\n    prime[41] = true\n \
    \   prime[42] = true\n    prime[43] = true\n    prime[44] = true\n    prime[45]\
    \ = true\n    prime[46] = true\n    prime[47] = true\n    prime[48] = true\n \
    \   prime[49] = true\n    prime[50] = true\n    prime[51] = true\n    prime[52]\
    \ = true\n    prime[53] = true\n    prime[54] = true\n    prime[55] = true\n \
    \   prime[56] = true\n    prime[57] = true\n    prime[58] = true\n    prime[59]\
    \ = true\n    prime[60] = true\n    prime[61] = true\n    prime[62] = true\n \
    \   prime[63] = true\n    prime[64] = true\n    prime[65] = true\n    prime[66]\
    \ = true\n    prime[67] = true\n    prime[68] = true\n    prime[69] = true\n \
    \   prime[70] = true\n    prime[71] = true\n    prime[72] = true\n    prime[73]\
    \ = true", "    if a < 100 {\n        return false\n    }\n    \n    for i :=\
    \ 2; i < a; i++ {\n        if a % i == 0 {\n            return false\n       \
    \ }\n    }\n    \n    return true\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

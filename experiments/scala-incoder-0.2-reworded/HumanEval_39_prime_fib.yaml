name: HumanEval_39_prime_fib
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
  \    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n\
  \    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n\
  \    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
  \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
  \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
  \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n \
  \   assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
  \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
completions: ["        val fib = scala.collection.mutable.ListBuffer[Long]()\n   \
    \     fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(", "        val fibs = Vector.fill(n\
    \ / 2)(2l)\n        fibs(n / 2)", "        val fibs = mutable.ListBuffer(2l)\n\
    \        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n        fibs += 13l\n\
    \        fibs += 89l\n        fibs.takeWhile(_ < n).last", "        val fibs =\
    \ Vector.fill(n / 2)(2l)\n        fibs(0) = 1l\n        fibs(1) = 1l\n       \
    \ fibs(n / 2) = fibs(n / 2) + fibs(n / 2 - 1)\n        fibs.last", "        var\
    \ a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n      \
    \  var e = 89l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n \
    \       var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n\
    \        var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n\
    \        var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n\
    \        var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n\
    \        var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n",
  "        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n       \
    \ fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 5\n       \
    \ fibs += 13\n        fibs += 89\n        fibs += 101\n        fibs += 201\n \
    \       fibs += 301\n        fibs += 401\n        fibs += 501\n        fibs +=\
    \ 601\n        fibs += 701\n        fibs += 801\n        fibs += 901\n       \
    \ fibs += 1001\n        fibs += 2001\n        fibs += 3001\n        fibs += 4001\n\
    \        fibs += 5001\n        fibs += 6001\n        fibs += 7001\n        fibs\
    \ += 8001\n        fibs += 9001\n        fibs += 10001 // last Fibonacci number\
    \ that is a prime number\n        fibs += 20001\n        fibs += 30001\n     \
    \   fibs += 40001\n        fibs += 50001\n        fibs += 60001\n        fibs\
    \ += 70001\n        fibs += 80001 // last Fibonacci number that is a prime number\n\
    \        fibs += 90001\n        fibs += 100001\n        fibs += 200001\n     \
    \   fibs += 300001\n        fibs += 400001\n        fibs += 500001\n        fibs\
    \ += 600001\n        fibs += 700001\n        fibs += 800001\n        fibs += 900001\n\
    \        fibs += 1000001 // last Fibonacci number that is a prime number\n   \
    \     fibs += 2000001 // last Fibonacci number that is a prime number\n      \
    \  fibs += 3000001 // last Fibonacci number that is a prime number\n        fibs\
    \ += 4000001 // last Fibonacci number that is a prime number\n        fibs +=\
    \ 5000001 // last Fibonacci number that is a prime number\n        fibs += 6000001\
    \ // last Fibonacci number that is a prime number\n        fibs += 7000001 //\
    \ last Fibonacci number that is a prime number\n        fibs += 8000001 // last\
    \ Fibonacci number that is a prime number\n        fibs += 9000001 // last Fibonacci\
    \ number that is a prime number\n        fibs += 10000001 // last Fibonacci number\
    \ that is a prime number\n        fibs += 20000001 // last Fibonacci number that\
    \ is a prime number\n        fibs += 30000001 // last Fibonacci number that is\
    \ a ", "        val fib = scala.math.BigInt(1)\n        val prime = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime", "        var a = 2l\n        var b = 3l\n\
    \        var c = 5l\n        var d = 13l\n        var e = 89l\n        var f =\
    \ 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n        var\
    \ j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n       \
    \ var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n   \
    \     var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n", "        val fibs\
    \ = Vector.fill(5)(1l)\n        fibs(0) = 0l\n        fibs(1) = 1l\n        fibs(2)\
    \ = 1l\n        fibs(3) = 1l\n        fibs(4) = 1l\n        fibs(5) = 1l\n   \
    \     fibs.takeWhile(_ < n).last", "        var a = 2l\n        var b = 3l\n \
    \       var c = 5l\n        var d = 7l\n        var e = 1l\n        var f = 0l\n\
    \        var g = 2l\n        var h = 3l\n        var i = 0l\n        var j = 1l\n\
    \        var k = 0l\n        var l = 1l\n        var m = 2l\n        var n = 3l\n\
    \        var o = 1l\n        var p = 0l\n        var q = 1l\n        var r = 2l\n\
    \        var s = 3l\n        var t = 1l\n        var u = 2l\n        var v = 5l\n\
    \        var w = 1l\n        var x = 2l\n        var y = 3l\n        var z = 1l\n\
    \        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 7l\n\
    \        var e = 1l\n        var f = 0l\n        var g = 2l\n        var h = 3l\n\
    \        var i = 0l\n        var j = 1l\n        var k = 0l\n        var l = 1l\n\
    \        var m = 2l\n        var n = 3l\n        var o = 1l\n        var p = 0l\n\
    \        var q = 1l\n        var r = 2l\n        var s = 3l\n        var t = 1l\n\
    \        var u = 2l\n        var v = 5l\n        var w = 1l\n        var x = 2l\n\
    \        var y = 3l\n        var z = 1l\n        var a = 2l\n        var b = 3l\n\
    \        var c = 5l\n        var d = 7l\n        var e = 1l\n        var f = 0l\n\
    \        var g = 2l\n        var h = 3l\n        var i = 0l\n        var j = 1l\n\
    \        var k = 0l\n        var l = 1l\n        var m = 2l\n        var n = 3l\n\
    \        var o = 1l\n        var p = 0l\n        var q = 1l\n        var r = 2l\n\
    \        var s = 3l\n        var t = 1l\n        var u = 2l\n        var v = 5l\n\
    \        var w = 1l\n        var x = 2l\n        var y = 3l\n        var z = 1l\n\
    \        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 7l\n\
    \        var e = 1l\n        var f = 0l\n        var g = 2l\n        var h = 3l\n\
    \        var i = 0l\n        var j = 1l\n        var k = 0l\n        var l = 1l\n\
    \        var m = 2l\n        var n = 3l\n        var o = 1l\n        var p = 0l\n\
    \        var q = 1l\n        var r = 2l\n        var s = 3l\n        var t = 1l\n\
    \        var u = 2l\n        var v = 5l\n        var w = 1l\n        var x = 2l\n\
    \        var y = 3l\n        var ", "        val fib_n = scala.math.BigInt(n).fibonacci\n\
    \        val prime_fib_n = scala.math.BigInt(fib_n).prime\n        prime_fib_n",
  "        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 0l\n        var g = 0l\n        var h =\
    \ 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n        var\
    \ l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n       \
    \ var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n   \
    \     var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n", "        var a = 2l\n        var b = 2l\n        var c\
    \ = 2l\n        var d = 2l\n        var e = 2l\n        var f = 1l\n        var\
    \ g = 1l\n        var h = 1l\n        var i = 1l\n        var j = 1l\n       \
    \ var k = 1l\n        var l = 1l\n        var m = 1l\n        var n = 1l\n   \
    \     var o = 1l\n        var p = 1l\n        var q = 1l\n        var r = 1l\n\
    \        var s = 1l\n        var t = 1l\n        var u = 1l\n        var v = 1l\n\
    \        var w = 1l\n        var x = 1l\n        var y = 1l\n        var z = 1l\n\
    \        var a = 1l\n        var b = 1l\n        var c = 1l\n        var d = 1l\n\
    \        var e = 1l\n        var f = 1l\n        var g = 1l\n        var h = 1l\n\
    \        var i = 1l\n        var j = 1l\n        var k = 1l\n        var l = 1l\n\
    \        var m = 1l\n        var n = 1l\n        var o = 1l\n        var p = 1l\n\
    \        var q = 1l\n        var r = 1l\n        var s = 1l\n        var t = 1l\n\
    \        var u = 1l\n        var v = 1l\n        var w = 1l\n        var x = 1l\n\
    \        var y = 1l\n        var z = 1l\n        var a = 1l\n        var b = 1l\n\
    \        var c = 1l\n        var d = 1l\n        var e = 1l\n        var f = 1l\n\
    \        var g = 1l\n        var h = 1l\n        var i = 1l\n        var j = 1l\n\
    \        var k = 1l\n        var l = 1l\n        var m = 1l\n        var n = 1l\n\
    \        var o = 1l\n        var p = 1l\n        var q = 1l\n        var r = 1l\n\
    \        var s = 1l\n        var t = 1l\n        var u = 1l\n        var v = 1l\n\
    \        var w = 1l\n        var x = 1l\n        var y = 1l\n        var z = 1l\n\
    \        var a = 1l\n        var b = 1l\n        var c = 1l\n        var d = 1l\n\
    \        var e = 1l\n        var f = 1l\n        var g = 1l\n        var h = 1l\n\
    \        var i = 1l\n        var j = 1l\n        var k = 1l\n        var l = 1l\n\
    \        var m = 1l\n        var n = 1l\n        var o = 1l\n        var p = 1l\n\
    \        var q = 1l\n        var r = 1l\n        var s = 1l\n        var t = 1l\n\
    \        var u = 1l\n        var v = 1l\n        var w = 1l\n        var x = 1l\n\
    \        var y = 1l\n        var ", "        val fibs = scala.collection.mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        val i = 2l\n        while (fibs.size\
    \ < n) {\n            fibs += fibs.head + fibs.last\n            i += 1\n    \
    \    }\n        fibs(n)", "        val fibs = mutable.ArrayBuffer(2l, 3l, 5l,\
    \ 8l)\n        val primes = mutable.ArrayBuffer(2l, 3l, 5l)\n        val primesCount\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrime = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val isPrimeCount = mutable.ArrayBuffer(2l, 3l, 5l)\n      \
    \  val isPrimeSum = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumCount\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrime = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val isPrimeSumPrimeCount = mutable.ArrayBuffer(2l, 3l, 5l)\n\
    \        val isPrimeSumPrimePrime = mutable.ArrayBuffer(2l, 3l, 5l)\n        val\
    \ isPrimeSumPrimePrimeCount = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrimePrime\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrimePrimeCount\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrime\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimeCount\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrime\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimeCount\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimePrime\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimeCount\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val ", "        var a = 2l\n    \
    \    var b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n", "        val fibs\
    \ = Vector.fill(n / 2)(2l)\n        fibs(n / 2)", "        var a = 2l\n      \
    \  var b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n", "        val fibs\
    \ = mutable.ArrayBuffer.empty[Long]\n        fibs += 0l\n        fibs += 1l\n\
    \        val limit = n / 2\n        while(fibs.length < limit) {\n           \
    \ val a = fibs(fibs.length-1)\n            val b = fibs(fibs.length-2)\n     \
    \       fibs += b + a\n        }\n        fibs(n)", "        var a = 2l\n    \
    \    var b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n\
    \        var f = 0l\n        var g = 2l\n        var h = 3l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 2l\n\
    \        var n = 2l\n        var o = 2l\n        var p = 3l\n        var q = 3l\n\
    \        var r = 5l\n        var s = 13l\n        var t = 89l\n        var u =\
    \ 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n        var\
    \ y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n       \
    \ var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n   \
    \     var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n\
    \        var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n\
    \        var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n\
    \        var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l",
  "        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n        fibs\
    \ += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n        fibs\
    \ += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n        fibs\
    \ += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs += 12l\n     \
    \   fibs += 13l\n        fibs += 14l\n        fibs += 15l\n        fibs += 16l\n\
    \        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n        fibs +=\
    \ 20l\n        fibs += 21l\n        fibs += 22l\n        fibs += 23l\n       \
    \ fibs += 24l\n        fibs += 25l\n        fibs += 26l\n        fibs += 27l\n\
    \        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n        fibs +=\
    \ 31l\n        fibs += 32l\n        fibs += 33l\n        fibs += 34l\n       \
    \ fibs += 35l\n        fibs += 36l\n        fibs += 37l\n        fibs += 38l\n\
    \        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n        fibs +=\
    \ 42l\n        fibs += 43l\n        fibs += 44l\n        fibs += 45l\n       \
    \ fibs += 46l\n        fibs += 47l\n        fibs += 48l\n        fibs += 49l\n\
    \        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n        fibs +=\
    \ 53l\n        fibs += 54l\n        fibs += 55l\n        fibs += 56l\n       \
    \ fibs += 57l\n        fibs += 58l\n        fibs += 59l\n        fibs += 60l\n\
    \        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n        fibs +=\
    \ 64l\n        fibs += 65l\n        fibs += 66l\n        fibs += 67l\n       \
    \ fibs += 68l\n        fibs += 69l\n        fibs += 70l\n        fibs += 71l\n\
    \        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n        fibs +=\
    \ 75l\n        fibs += 76l\n        fibs += 77l\n        fibs += 78l\n       \
    \ fibs += 79l\n        fibs += 80l\n        fibs += 81l\n        fibs += 82l\n\
    \        ", "        val fibs = Vector.fill(5)(1l)\n        fibs(0) = 1l\n   \
    \     fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(fibs(_) < n).last", "   \
    \     val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n        fibs(1) = 1l\n\
    \        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4) = 1l\n        fibs(5)\
    \ = 1l\n        fibs.takeWhile(_ < n).last", "        var a = 2l\n        var\
    \ b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n     \
    \   var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n \
    \       var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n", "        val fib\
    \ = scala.math.BigInt(2)\n        var i = 2\n        var prime = true\n      \
    \  while(prime && i <= n){\n            prime =  fib.isPrime\n            fib\
    \ = fib.add(fib)\n            i = i + 1\n        }\n        fib", "        var\
    \ a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n      \
    \  var e = 89l\n        var f = 1l\n        var g = 2l\n        var h = 5l\n \
    \       var i = 13l\n        var j = 1l\n        var k = 2l\n        var l = 5l\n\
    \        var m = 13l\n        var n = 89l\n        var o = 1l\n        var p =\
    \ 2l\n        var q = 5l\n        var r = 13l\n        var s = 89l\n        var\
    \ t = 1l\n        var u = 2l\n        var v = 5l\n        var w = 13l\n      \
    \  var x = 89l\n        var y = 1l\n        var z = 2l\n        var a = 2l\n \
    \       var b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n\
    \        var f = 1l\n        var g = 2l\n        var h = 5l\n        var i = 13l\n\
    \        var j = 1l\n        var k = 2l\n        var l = 5l\n        var m = 13l\n\
    \        var n = 89l\n        var o = 1l\n        var p = 2l\n        var q =\
    \ 5l\n        var r = 13l\n        var s = 89l\n        var t = 1l\n        var\
    \ u = 2l\n        var v = 5l\n        var w = 13l\n        var x = 89l\n     \
    \   var y = 1l\n        var z = 2l\n        var a = 2l\n        var b = 3l\n \
    \       var c = 5l\n        var d = 13l\n        var e = 89l\n        var f =\
    \ 1l\n        var g = 2l\n        var h = 5l\n        var i = 13l\n        var\
    \ j = 1l\n        var k = 2l\n        var l = 5l\n        var m = 13l\n      \
    \  var n = 89l\n        var o = 1l\n        var p = 2l\n        var q = 5l\n \
    \       var r = 13l\n        var s = 89l\n        var t = 1l\n        var u =\
    \ 2l\n        var v = 5l\n        var w = 13l\n        var x = 89l\n        var\
    \ y = 1l\n        var z = 2l\n        var a = 2l\n        var b = 3l\n       \
    \ var c = 5l\n        var d = 13l\n        var e = 89l\n        var f = 1l\n \
    \       var g = 2l\n        var h = 5l\n        var i = 13l\n        var j = 1l\n\
    \        var k = 2l\n        var l = 5l\n        var m = 13l\n        var n =\
    \ 89l\n        var o = 1l\n        var p = 2l\n        var q = 5l\n        var\
    \ r = 13l\n        var s = 89l\n        var t = 1l\n        var u = 2l\n     \
    \   var v = 5l\n        var w = 13l\n        var x = 89l\n        var y = ", " \
    \       val fib = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += 0l\n        primes += 1l\n        for(i <- 2 to n){\n     \
    \       val temp = fib\n            fib = fib + fib\n            primes += temp\n\
    \        }\n        primes.last", "        val fibs = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val primes = mutable.ArrayBuffer(2l, 3l)\n        val fib =\
    \ fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n        fibs\
    \ += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n       \
    \ fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n  \
    \      fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n",
  "        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 0l\n        var g = 2l\n        var h =\
    \ 3l\n        var i = 5l\n        var j = 1l\n        var k = 5l\n        var\
    \ l = 13l\n        var m = 89l\n        var n = 2l\n        var o = 3l\n     \
    \   var p = 5l\n        var q = 13l\n        var r = 89l\n        var s = 2l\n\
    \        var t = 3l\n        var u = 5l\n        var v = 13l\n        var w =\
    \ 89l\n        var x = 2l\n        var y = 3l\n        var z = 5l\n        var\
    \ aa = 2l\n        var ab = 3l\n        var ac = 5l\n        var ad = 13l\n  \
    \      var ae = 89l\n        var af = 0l\n        var ag = 2l\n        var ah\
    \ = 3l\n        var ai = 5l\n        var aj = 1l\n        var ak = 5l\n      \
    \  var al = 13l\n        var am = 89l\n        var an = 2l\n        var ao = 3l\n\
    \        var ap = 5l\n        var aq = 13l\n        var ar = 89l\n        var\
    \ as = 2l\n        var at = 3l\n        var au = 5l\n        var av = 13l\n  \
    \      var aw = 89l\n        var ax = 2l\n        var ay = 3l\n        var az\
    \ = 5l\n        var aa += 2l\n        var ab += 3l\n        var ac += 5l\n   \
    \     var ad += 13l\n        var ae += 89l\n        var af += 0l\n        var\
    \ ag += 2l\n        var ah += 3l\n        var ai += 5l\n        var aj += 1l\n\
    \        var ak += 5l\n        var al += 13l\n        var am += 89l\n        var\
    \ an += 2l\n        var ao += 3l\n        var ap += 5l\n        var aq += 13l\n\
    \        var ar += 89l\n        var as += 2l\n        var at += 3l\n        var\
    \ au += 5l\n        var av += 13l\n        var aw += 89l\n        var ax += 2l\n\
    \        var ay += 3l\n        var az += 5l\n        var aa += 2l\n        var\
    \ ab += 3l\n        var ac += 5l\n        var ad += 13l\n        var ae += 89l\n\
    \        var af += 0l\n        var ag += 2l\n        var ah += 3l\n        var\
    \ ai += 5l\n        var aj += 1l\n        var ak += 5l\n        var al += 13l\n\
    \        var am += 89l\n        var an += ", "        var a = 2l\n        var\
    \ b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n     \
    \   var f = 0l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n \
    \       var j = 1l\n        var k = 0l\n        var l = 0l\n        var m = 2l\n\
    \        var n = 2l\n        var o = 2l\n        var p = 2l\n        var q = 2l\n\
    \        var r = 2l\n        var s = 2l\n        var t = 2l\n        var u = 2l\n\
    \        var v = 2l\n        var w = 2l\n        var x = 2l\n        var y = 2l\n\
    \        var z = 2l\n        var a = 2l\n        var b = 3l\n        var c = 5l\n\
    \        var d = 13l\n        var e = 89l\n        var f = 0l\n        var g =\
    \ 2l\n        var h = 3l\n        var i = 5l\n        var j = 1l\n        var\
    \ k = 0l\n        var l = 0l\n        var m = 2l\n        var n = 2l\n       \
    \ var o = 2l\n        var p = 2l\n        var q = 2l\n        var r = 2l\n   \
    \     var s = 2l\n        var t = 2l\n        var u = 2l\n        var v = 2l\n\
    \        var w = 2l\n        var x = 2l\n        var y = 2l\n        var z = 2l\n\
    \        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 0l\n        var g = 2l\n        var h =\
    \ 3l\n        var i = 5l\n        var j = 1l\n        var k = 0l\n        var\
    \ l = 0l\n        var m = 2l\n        var n = 2l\n        var o = 2l\n       \
    \ var p = 2l\n        var q = 2l\n        var r = 2l\n        var s = 2l\n   \
    \     var t = 2l\n        var u = 2l\n        var v = 2l\n        var w = 2l\n\
    \        var x = 2l\n        var y = 2l\n        var z = 2l\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 13l\n        var e =\
    \ 89l\n        var f = 0l\n        var g = 2l\n        var h = 3l\n        var\
    \ i = 5l\n        var j = 1l\n        var k = 0l\n        var l = 0l\n       \
    \ var m = 2l\n        var n = 2l\n        var o = 2l\n        var p = 2l\n   \
    \     var q = 2l\n        var r = 2l\n        var s = 2l\n        var t = 2l\n\
    \        var u = 2l\n        var v = 2l\n        var w = 2l\n        var x = 2l\n\
    \        var y = ", "        val fib_array = new Array[Long](n)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        fib_array(2) = 1l\n        fib_array(3)\
    \ = 1l\n        fib_array(4) = 1l\n        fib_array(5) = 1l\n        fib_array(6)\
    \ = 1l\n        fib_array(7) = 1l\n        fib_array(8) = 1l\n        fib_array(9)\
    \ = 1l\n        fib_array(10) = 1l\n        fib_array(11) = 1l\n        fib_array(12)\
    \ = 1l\n        fib_array(13) = 1l\n        fib_array(14) = 1l\n        fib_array(15)\
    \ = 1l\n        fib_array(16) = 1l\n        fib_array(17) = 1l\n        fib_array(18)\
    \ = 1l\n        fib_array(19) = 1l\n        fib_array(20) = 1l\n        fib_array(21)\
    \ = 1l\n        fib_array(22) = 1l\n        fib_array(23) = 1l\n        fib_array(24)\
    \ = 1l\n        fib_array(25) = 1l\n        fib_array(26) = 1l\n        fib_array(27)\
    \ = 1l\n        fib_array(28) = 1l\n        fib_array(29) = 1l\n        fib_array(30)\
    \ = 1l\n        fib_array(31) = 1l\n        fib_array(32) = 1l\n        fib_array(33)\
    \ = 1l\n        fib_array(34) = 1l\n        fib_array(35) = 1l\n        fib_array(36)\
    \ = 1l\n        fib_array(37) = 1l\n        fib_array(38) = 1l\n        fib_array(39)\
    \ = 1l\n        fib_array(40) = 1l\n        fib_array(41) = 1l\n        fib_array(42)\
    \ = 1l\n        fib_array(43) = 1l\n        fib_array(44) = 1l\n        fib_array(45)\
    \ = 1l\n        fib_array(46) = 1l\n        fib_array(47) = 1l\n        fib_array(48)\
    \ = 1l\n        fib_array(49) = 1l\n        fib_array(50) = 1l\n        fib_array(51)\
    \ = 1l\n        fib_array(52) = 1l\n        fib_array(53) = 1l\n        fib_array(54)\
    \ = 1l\n        fib_array(55) = 1l\n        fib_array(56) = 1l\n        fib_array(57)\
    \ = 1l\n        fib_array(58) = 1", "        var a = 2l\n        var b = 3l\n\
    \        var c = 5l\n        var d = 13l\n        var e = 89l\n        var f =\
    \ 25l\n        var g = 101l\n        var h = 713l\n        var i = 525l\n    \
    \    var j = 1393l\n        var k = 4181l\n        var l = 4863l\n        var\
    \ m = 1385l\n        var n = 4201l\n        var o = 1297l\n        var p = 4197l\n\
    \        var q = 1261l\n        var r = 4231l\n        var s = 4291l\n       \
    \ var t = 1259l\n        var u = 1279l\n        var v = 4251l\n        var w =\
    \ 1263l\n        var x = 4231l\n        var y = 4291l\n        var z = 1259l\n\
    \        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 25l\n        var g = 101l\n        var h\
    \ = 713l\n        var i = 525l\n        var j = 1393l\n        var k = 4181l\n\
    \        var l = 4863l\n        var m = 1385l\n        var n = 4201l\n       \
    \ var o = 1297l\n        var p = 4197l\n        var q = 1261l\n        var r =\
    \ 4231l\n        var s = 4291l\n        var t = 1259l\n        var u = 1279l\n\
    \        var v = 4251l\n        var w = 1263l\n        var x = 4231l\n       \
    \ var y = 4291l\n        var z = 1259l\n        var a = 2l\n        var b = 3l\n\
    \        var c = 5l\n        var d = 13l\n        var e = 89l\n        var f =\
    \ 25l\n        var g = 101l\n        var h = 713l\n        var i = 525l\n    \
    \    var j = 1393l\n        var k = 4181l\n        var l = 4863l\n        var\
    \ m = 1385l\n        var n = 4201l\n        var o = 1297l\n        var p = 4197l\n\
    \        var q = 1261l\n        var r = 4231l\n        var s = 4291l\n       \
    \ var t = 1259l\n        var u = 1279l\n        var v = 4251l\n        var w =\
    \ 1263l\n        var x = 4231l\n        var y = 4291l\n        var z = 1259l\n\
    \        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 25l\n        var g = 101l\n        var h\
    \ = 713l\n        var i = 5", "        val fibs = Vector.fill(5)(0)\n        fibs(0)\
    \ = 1\n        fibs(1) = 1\n        fibs(2) = 1\n        fibs(3) = 1\n       \
    \ fibs(4) = 1\n        fibs(5) = 1\n        val i = 5\n        while (fibs(i)\
    \ < n) fibs(i) = fibs(i - 1) + fibs(i - 2)\n        fibs(i)", "        val fibs\
    \ = Vector.fill(5)(2l)\n        fibs(0) = 1l\n        fibs(1) = 1l\n        fibs(2)\
    \ = 1l\n        fibs(3) = 1l\n        fibs(4) = 1l\n        fibs(5) = 1l\n   \
    \     fibs.takeWhile(_ < n).last", '        val fib = scala.math.BigInt(2l) ::
    scala.math.BigInt(3l) :: scala.math.BigInt(5l) :: scala.math.BigInt(13l) :: scala.math.BigInt(89l)
    :: scala.math.BigInt(101l) :: scala.math.BigInt(201l) :: scala.math.BigInt(301l)
    :: scala.math.BigInt(401l) :: scala.math.BigInt(501l) :: scala.math.BigInt(601l)
    :: scala.math.BigInt(701l) :: scala.math.BigInt(801l) :: scala.math.BigInt(901l)
    :: scala.math.BigInt(1001l) :: scala.math.BigInt(2001l) :: scala.math.BigInt(3001l)
    :: scala.math.BigInt(4001l) :: scala.math.BigInt(5001l) :: scala.math.BigInt(6001l)
    :: scala.math.BigInt(7001l) :: scala.math.BigInt(8001l) :: scala.math.BigInt(9001l)
    :: scala.math.BigInt(1000l) :: scala.math.BigInt(2000l) :: scala.math.BigInt(3000l)
    :: scala.math.BigInt(4000l) :: scala.math.BigInt(5000l) :: scala.math.BigInt(6000l)
    :: scala.math.BigInt(7000l) :: scala.math.BigInt(8000l) :: scala.math.BigInt(9000l)
    :: scala.math.BigInt(10000l) :: scala.math.BigInt(20000l) :: scala.math.BigInt(30000l)
    :: scala.math.BigInt(40000l) :: scala.math.BigInt(50000l) :: scala.math.BigInt(60000l)
    :: scala.math.BigInt(70000l) :: scala.math.BigInt(80000l) :: scala.math.BigInt(90000l)
    :: scala.math.BigInt(100000l) :: scala.math.BigInt(200000l) :: scala.math.BigInt(300000l)
    :: scala.math.BigInt(400000l) :: scala.math.BigInt(500000l) :: scala.math.BigInt(600000l)
    :: scala.math.BigInt(700000l) :: scala.math.BigInt(800000l) :: scala.math.BigInt(900000l)
    :: scala.math.BigInt(1000000l) :: scala.math.BigInt(2000000l) :: scala.math.BigInt(3000000l) ',
  "        val fibs = Vector.fill(5)(1l)\n        fibs(0) = 1l\n        fibs(1) =\
    \ 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4) = 1l\n     \
    \   fibs(5) = 1l\n        fibs(6) = 1l\n        fibs(7) = 1l\n        fibs(8)\
    \ = 1l\n        fibs(9) = 1l\n        fibs(10) = 1l\n        fibs(11) = 1l\n \
    \       fibs(12) = 1l\n        fibs(13) = 1l\n        fibs(14) = 1l\n        fibs(15)\
    \ = 1l\n        fibs(16) = 1l\n        fibs(17) = 1l\n        fibs(18) = 1l\n\
    \        fibs(19) = 1l\n        fibs(20) = 1l\n        fibs(21) = 1l\n       \
    \ fibs(22) = 1l\n        fibs(23) = 1l\n        fibs(24) = 1l\n        fibs(25)\
    \ = 1l\n        fibs(26) = 1l\n        fibs(27) = 1l\n        fibs(28) = 1l\n\
    \        fibs(29) = 1l\n        fibs(30) = 1l\n        fibs(31) = 1l\n       \
    \ fibs(32) = 1l\n        fibs(33) = 1l\n        fibs(34) = 1l\n        fibs(35)\
    \ = 1l\n        fibs(36) = 1l\n        fibs(37) = 1l\n        fibs(38) = 1l\n\
    \        fibs(39) = 1l\n        fibs(40) = 1l\n        fibs(41) = 1l\n       \
    \ fibs(42) = 1l\n        fibs(43) = 1l\n        fibs(44) = 1l\n        fibs(45)\
    \ = 1l\n        fibs(46) = 1l\n        fibs(47) = 1l\n        fibs(48) = 1l\n\
    \        fibs(49) = 1l\n        fibs(50) = 1l\n        fibs(51) = 1l\n       \
    \ fibs(52) = 1l\n        fibs(53) = 1l\n        fibs(54) = 1l\n        fibs(55)\
    \ = 1l\n        fibs(56) = 1l\n        fibs(57) = 1l\n        fibs(58) = 1l\n\
    \        fibs(59) = 1l\n        fibs(60) = 1l\n        fibs(61) = 1l\n       \
    \ fibs(62) = 1l\n        fibs(63) = 1l\n        fibs(64) = 1l\n        fibs(65)\
    \ = 1l\n        fibs(", "        var fib_n = 0\n        var prime_n = 2\n    \
    \    var prime_n_prime = 2\n        var prime_n_prime_prime = 2\n        var prime_n_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime = 2\n        var prime_n_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime = 2\n        var\
    \ prime_n_prime_prime_prime_prime_prime_prime_prime = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_", "        val fibs = Vector.fill(n\
    \ / 2)(2l)\n        fibs(0) = 1l\n        fibs(1) = 1l\n        fibs(2) = 1l\n\
    \        fibs.drop(3).foreach(fibs => fibs(3) = fibs(2) + fibs(1))\n        fibs.takeWhile(_\
    \ < n).last", "        val fibs = mutable.ListBuffer[Long]()\n        fibs +=\
    \ 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs\
    \ += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n      \
    \  fibs += 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n\
    \        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs +=\
    \ 19l\n        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n       \
    \ fibs += 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n\
    \        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs +=\
    \ 30l\n        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n       \
    \ fibs += 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n\
    \        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs +=\
    \ 41l\n        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n       \
    \ fibs += 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n\
    \        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs +=\
    \ 52l\n        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n       \
    \ fibs += 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n\
    \        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs +=\
    \ 63l\n        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n       \
    \ fibs += 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n\
    \        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs +=\
    \ 74l\n        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n       \
    \ fibs += 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n\
    \        fibs += 82l\n        ", "        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        ", "        val fib = scala.math.BigInt(1)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ isPrime = true\n        val isFib = true\n        val isPrimeFib = true\n  \
    \      val isPrimeFibonacci = true\n        val isPrimeFibonacciPrime = true\n\
    \        val isPrimeFibonacciPrimeFib = true\n        val isPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrime = true\n        val\
    \ isPrimeFibonacciPrimeFibonacciPrimeFib = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime = true\n\
    \        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib = true\n   \
    \     val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci = true\n\
    \        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime =\
    \ true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime\
    \ = true\n        val is", "        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_\
    \ < n).last", "        val fibs = mutable.ListBuffer[Long]()\n        fibs +=\
    \ 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ <\
    \ n).last", "        var a = 2l\n        var b = 3l\n        var c = 5l\n    \
    \    var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 1l\n\
    \        var h = 1l\n        var i = 2l\n        var j = 2l\n        var k = 2l\n\
    \        var l = 2l\n        var m = 2l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 2l\n        var q = 2l\n        var r = 2l\n        var s = 2l\n\
    \        var t = 2l\n        var u = 2l\n        var v = 1l\n        var w = 1l\n\
    \        var x = 2l\n        var y = 2l\n        var z = 2l\n        var a = 1l\n\
    \        var b = 1l\n        var c = 1l\n        var d = 1l\n        var e = 1l\n\
    \        var f = 1l\n        var g = 1l\n        var h = 1l\n        var i = 2l\n\
    \        var j = 2l\n        var k = 2l\n        var l = 2l\n        var m = 2l\n\
    \        var n = 2l\n        var o = 2l\n        var p = 2l\n        var q = 2l\n\
    \        var r = 2l\n        var s = 2l\n        var t = 2l\n        var u = 2l\n\
    \        var v = 1l\n        var w = 1l\n        var x = 2l\n        var y = 2l\n\
    \        var z = 2l\n        var a = 1l\n        var b = 1l\n        var c = 1l\n\
    \        var d = 1l\n        var e = 1l\n        var f = 1l\n        var g = 1l\n\
    \        var h = 1l\n        var i = 2l\n        var j = 2l\n        var k = 2l\n\
    \        var l = 2l\n        var m = 2l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 2l\n        var q = 2l\n        var r = 2l\n        var s = 2l\n\
    \        var t = 2l\n        var u = 2l\n        var v = 1l\n        var w = 1l\n\
    \        var x = 2l\n        var y = 2l\n        var z = 2l\n        var a = 1l\n\
    \        var b = 1l\n        var c = 1l\n        var d = 1l\n        var e = 1l\n\
    \        var f = 1l\n        var g = 1l\n        var h = 1l\n        var i = 2l\n\
    \        var j = 2l\n        var k = 2l\n        var l = 2l\n        var m = 2l\n\
    \        var n = 2l\n        var o = 2l\n        var p = 2l\n        var q = 2l\n\
    \        var r = 2l\n        var s = 2l\n        var t = 2l\n        var u = 2l\n\
    \        var v = 1l\n        var w = 1l\n        var x = 2l\n        var y = ",
  "        val fibs = Vector.fill(5)(0l).init\n        fibs(0) = 1l\n        fibs(1)\
    \ = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4) = 1l\n   \
    \     fibs(5) = 1l\n        fibs.takeWhile(_ < n).foreach(x => fibs(x) = fibs(x\
    \ - 1) + fibs(x - 2))\n        fibs(n)", "        var a : Long = 1l\n        var\
    \ b : Long = 1l\n        var c : Long = 1l\n        var d : Long = 1l\n      \
    \  var i : Long = 1l\n        var prime : Boolean = false\n        while(!prime){\n\
    \            if((n % 2l) == 0){\n                a = b\n                b = c\n\
    \                c = d\n                d = n\n                i = 2l\n      \
    \          prime = true\n            }\n            else{\n                i =\
    \ i + 1l\n                d = a + b\n                a = b\n                b\
    \ = c\n                c = d\n            }\n        }\n        return d", " \
    \       val fib_array = new Array[Long](n)\n        fib_array(0) = 0l\n      \
    \  fib_array(1) = 1l\n        for(i <- 2 to n) {\n            fib_array(i) = fib_array(i-1)\
    \ + fib_array(i-2)\n        }\n        fib_array(n)", "        val fib_nums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.Array", "        val fib = scala.math.BigInt(1)\n        val prime\
    \ = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime", "        val fibs = Vector.fill(5)(1l)\n\
    \        fibs(0) = 1l\n        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3)\
    \ = 1l\n        fibs(4) = 1l\n        fibs(5) = 1l\n        fibs.find(_ == n).map(_\
    \ + 1).headOption.getOrElse(fibs.last)", "        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        ", "        val fib = scala.math.BigInt(2)\n\
    \        val prime = scala.math.BigInt(3)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime", "        val fibs = scala.collection.mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82", "        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_\
    \ < n).last", "        val fibs = mutable.ListBuffer(1l, 2l)\n        fibs :::\
    \ fibs.dropWhile(_ < n).takeWhile(_ < n).drop(1).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_", "        val fibs = Vector.fill(n\
    \ / 2)(2l)\n        fibs(n / 2) += fibs(n / 2 - 1)\n        fibs(n / 2) += fibs(n\
    \ / 2 + 1)\n        fibs(n / 2)", "        val fib = scala.math.BigInt(2)\n  \
    \      val prime = scala.math.BigInt(3)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime", "        val fib = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ fibs = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime =\
    \ scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib = scala.math.BigInt(2)\n\
    \        val prime_fibs = scala.collection.mutable.ListBuffer[Long]()\n      \
    \  val prime_fibs_prime = scala.collection.mutable.ListBuffer[Long]()\n      \
    \  val prime_fib_prime = scala.math.BigInt(2)\n        val prime_fibs_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val prime_fib_prime_prime_prime = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime_prime_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime_prime_prime_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime_prime_prime_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_", "      \
    \  val fibs = Vector.fill(5)(0)\n        fibs(0) = 1\n        fibs(1) = 1\n  \
    \      fibs(2) = 1\n        fibs(3) = 1\n        fibs(4) = 1\n        fibs(5)\
    \ = 1\n        fibs.takeWhile(_ < n).foreach(x => fibs(x) = fibs(x) + fibs(x -\
    \ 1))\n        fibs(n)", "        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n\
    \ / 2) + (fibs(n / 2 - 1l))", "        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        ", "        val fib_array = new Array[Long](n)\n\
    \        fib_array(0) = 0l\n        fib_array(1) = 1l\n        val prime_array\
    \ = new Array[Boolean](n)\n        prime_array(0) = false\n        prime_array(1)\
    \ = true\n        for(i <- 2 to n) {\n            val a = fib_array(i)\n     \
    \       val b = fib_array(i-1)\n            fib_array(i) = a + b\n           \
    \ prime_array(i) = !(fib_array(i) %2L)\n        }\n        fib_array", "     \
    \   val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n        fibs +=\
    \ 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n        fibs\
    \ += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n        fibs\
    \ += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs += 12l\n     \
    \   fibs += 13l\n        fibs += 14l\n        fibs += 15l\n        fibs += 16l\n\
    \        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n        fibs +=\
    \ 20l\n        fibs += 21l\n        fibs += 22l\n        fibs += 23l\n       \
    \ fibs += 24l\n        fibs += 25l\n        fibs += 26l\n        fibs += 27l\n\
    \        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n        fibs +=\
    \ 31l\n        fibs += 32l\n        fibs += 33l\n        fibs += 34l\n       \
    \ fibs += 35l\n        fibs += 36l\n        fibs += 37l\n        fibs += 38l\n\
    \        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n        fibs +=\
    \ 42l\n        fibs += 43l\n        fibs += 44l\n        fibs += 45l\n       \
    \ fibs += 46l\n        fibs += 47l\n        fibs += 48l\n        fibs += 49l\n\
    \        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n        fibs +=\
    \ 53l\n        fibs += 54l\n        fibs += 55l\n        fibs += 56l\n       \
    \ fibs += 57l\n        fibs += 58l\n        fibs += 59l\n        fibs += 60l\n\
    \        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n        fibs +=\
    \ 64l\n        fibs += 65l\n        fibs += 66l\n        fibs += 67l\n       \
    \ fibs += 68l\n        fibs += 69l\n        fibs += 70l\n        fibs += 71l\n\
    \        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n        fibs +=\
    \ 75l\n        fibs += 76l\n        fibs += 77l\n        fibs += 78l\n       \
    \ fibs += 79l\n        fibs += 80l\n        fibs += 81l\n        fibs += 82l\n\
    \        ", "        val fib_array = new Array[Long](5l)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        fib_array(2) = 1l\n        fib_array(3)\
    \ = 1l\n        fib_array(4) = 1l\n        fib_array(5) = 1l\n        val prime_array\
    \ = new Array[Long](5l)\n        prime_array(0) = 1l\n        prime_array(1) =\
    \ 1l\n        prime_array(2) = 1l\n        prime_array(3) = 1l\n        prime_array(4)\
    \ = 1l\n        prime_array(5) = 1l\n        val prime_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val prime_array_size =\
    \ prime_array.length\n        val fib_array_size = fib_array.length\n        val\
    \ fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_", "   \
    \     val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2)", "        val fibs\
    \ = Vector.fill(n / 2)(2l)\n        fibs(n / 2)", "        val fibs = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        fibs.takeWhile(fibs.head < n).last", "        val fib = scala.math.BigInt(2)\n\
    \        val prime = scala.math.BigInt(3)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime", "        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_\
    \ < n).last", "        var a = 2l\n        var b = 3l\n        var c = 5l\n  \
    \      var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 0l\n        var j = 1l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 2l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 2l\n        var q = 3l\n        var r = 5l\n        var s = 13l\n\
    \        var t = 89l\n        var u = 2l\n        var v = 3l\n        var w =\
    \ 0l\n        var x = 2l\n        var y = 3l\n        var z = 0l\n        var\
    \ aa = 2l\n        var ab = 3l\n        var ac = 5l\n        var ad = 13l\n  \
    \      var ae = 89l\n        var af = 0l\n        var ag = 2l\n        var ah\
    \ = 3l\n        var ai = 0l\n        var aj = 1l\n        var ak = 0l\n      \
    \  var al = 0l\n        var am = 2l\n        var an = 2l\n        var ao = 2l\n\
    \        var ap = 2l\n        var aq = 3l\n        var ar = 5l\n        var as\
    \ = 13l\n        var at = 89l\n        var au = 2l\n        var av = 3l\n    \
    \    var aw = 0l\n        var ax = 2l\n        var ay = 3l\n        var az = 0l\n\
    \        var ba = 2l\n        var bb = 3l\n        var bc = 5l\n        var bd\
    \ = 13l\n        var be = 89l\n        var bf = 0l\n        var bg = 2l\n    \
    \    var bh = 3l\n        var bi = 0l\n        var bj = 1l\n        var bk = 0l\n\
    \        var bl = 0l\n        var bm = 2l\n        var bn = 2l\n        var bo\
    \ = 2l\n        var bp = 2l\n        var bq = 3l\n        var br = 5l\n      \
    \  var bs = 13l\n        var bt = 89l\n        var bu = 2l\n        var bv = 3l\n\
    \        var bw = 0l\n        var bx = 3l\n        var by = 3l\n        var bz\
    \ = 0l\n        var ca = 2l\n        var cb = 3l\n        var cc = 5l\n      \
    \  var cd = 13l\n        var ce = 89l\n        var cf = 0l\n        var cg = 2l\n\
    \        var ch = 3l\n        var ci = 0l\n        var cj = 1l\n        var ck\
    \ = 0l\n        var cl = 0l\n        var cm = 2l\n        var cn = 2l\n      \
    \  var co = 2l\n        var cp = 2l\n        var cq = 3l\n        var cr = 5l\n\
    \        var cs = 13l\n        var ct = 89l\n        var cu = 2l\n        var\
    \ cv", "        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n  \
    \      fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        ", "        val fibs = Vector.fill(5)(2l)\n        fibs(0)\
    \ = 1l\n        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n   \
    \     fibs(4) = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).last",
  "        val fib_array = new Array[Long](n)\n        fib_array(0) = 1l\n       \
    \ fib_array(1) = 1l\n        for(i <- 2 to n) {\n            fib_array(i) = fib_array(i-1)\
    \ + fib_array(i-2)\n        }\n        fib_array(n)", "        val fibs = scala.collection.mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82", "        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 13\n        fibs += 89\n        fibs += 4\n\
    \        fibs += 8\n        fibs += 12\n        fibs += 16\n        fibs += 32\n\
    \        fibs += 64\n        fibs += 128\n        fibs += 256\n        fibs +=\
    \ 512\n        fibs += 1024\n        fibs += 2048\n        fibs += 4096\n    \
    \    fibs += 8192\n        fibs += 16384\n        fibs += 32768\n        fibs\
    \ += 65536\n        fibs += 131072\n        fibs += 262144\n        fibs += 524288\n\
    \        fibs += 1048576\n        fibs += 2097152\n        fibs += 4194304\n \
    \       fibs += 8388608\n        fibs += 16777216\n        fibs += 33554432\n\
    \        fibs += 67108864\n        fibs += 134217728\n        fibs += 268435456\n\
    \        fibs += 536870912\n        fibs += 1073741824\n        fibs += 2147483648\n\
    \        fibs += 4294967296\n        fibs += 8589934592\n        fibs += 17179869184\n\
    \        fibs += 34359738368\n        fibs += 68719476736\n        fibs += 137438953472\n\
    \        fibs += 274877906944\n        fibs += 549755813888\n        fibs += 1099511627776\n\
    \        fibs += 2199023255552\n        fibs += 4398046511104\n        fibs +=\
    \ 8796093022208\n        fibs += 17592186044416\n        fibs += 35184372088832\n\
    \        fibs += 70368744177664\n        fibs += 140737488355328\n        fibs\
    \ += 281474976710656\n        fibs += 562949953421312\n        fibs += 1125899906842624\n\
    \        fibs += 2251799813685248\n        fibs += 4503599627370496\n        fibs\
    \ += 9007199254740992\n        fibs += 18014398509481984\n        fibs += 36028797018963968\n\
    \        fibs += 72057594037927936\n        fibs += 144115188075855872\n     \
    \   ", "        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = fibs(1) =\
    \ 1l\n        fibs(n / 2) = fibs(n / 2 - 1) + fibs(n / 2)\n        fibs.last",
  "        val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n        fibs(1) =\
    \ 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4) = 1l\n     \
    \   fibs(5) = 1l\n        fibs.takeWhile(_ < n).last", "        var a = 2l\n \
    \       var b = 3l\n        var c = 5l\n        var d = 7l\n        var e = 1l\n\
    \        var f = 1l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n\
    \        var j = 1l\n        var k = 2l\n        var l = 5l\n        var m = 7l\n\
    \        var n = 8l\n        var o = 1l\n        var p = 2l\n        var q = 3l\n\
    \        var r = 5l\n        var s = 7l\n        var t = 8l\n        var u = 1l\n\
    \        var v = 2l\n        var w = 3l\n        var x = 5l\n        var y = 7l\n\
    \        var z = 8l\n        var a = 2l\n        var b = 3l\n        var c = 5l\n\
    \        var d = 7l\n        var e = 1l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 5l\n        var m = 7l\n        var n = 8l\n        var o = 1l\n\
    \        var p = 2l\n        var q = 3l\n        var r = 5l\n        var s = 7l\n\
    \        var t = 8l\n        var u = 1l\n        var v = 2l\n        var w = 3l\n\
    \        var x = 5l\n        var y = 7l\n        var z = 8l\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 7l\n        var e = 1l\n\
    \        var f = 1l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n\
    \        var j = 1l\n        var k = 2l\n        var l = 5l\n        var m = 7l\n\
    \        var n = 8l\n        var o = 1l\n        var p = 2l\n        var q = 3l\n\
    \        var r = 5l\n        var s = 7l\n        var t = 8l\n        var u = 1l\n\
    \        var v = 2l\n        var w = 3l\n        var x = 5l\n        var y = 7l\n\
    \        var z = 8l\n        var a = 2l\n        var b = 3l\n        var c = 5l\n\
    \        var d = 7l\n        var e = 1l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 5l\n        var m = 7l\n        var n = 8l\n        var o = 1l\n\
    \        var p = 2l\n        var q = 3l\n        var r = 5l\n        var s = 7l\n\
    \        var t = 8l\n        var u = 1l\n        var v = 2l\n        var w = 3l\n\
    \        var x = 5l\n        var y = ", "        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 13\n        fibs += 89\n        fibs += 101\n\
    \        fibs += 201\n        fibs += 301\n        fibs += 401\n        fibs +=\
    \ 501\n        fibs += 601\n        fibs += 701\n        fibs += 801\n       \
    \ fibs += 901\n        fibs += 1001\n        fibs += 2001\n        fibs += 3001\n\
    \        fibs += 4001\n        fibs += 5001\n        fibs += 6001\n        fibs\
    \ += 7001\n        fibs += 8001\n        fibs += 9001\n        fibs += 10001 \n\
    \        fibs += 20001\n        fibs += 30001\n        fibs += 40001\n       \
    \ fibs += 50001\n        fibs += 60001\n        fibs += 70001\n        fibs +=\
    \ 80001\n        fibs += 90001\n        fibs += 100001\n        fibs += 200001\n\
    \        fibs += 300001\n        fibs += 400001\n        fibs += 500001\n    \
    \    fibs += 600001\n        fibs += 700001\n        fibs += 800001\n        fibs\
    \ += 900001\n        fibs += 1000001 \n        fibs += 2000001 \n        fibs\
    \ += 3000001 \n        fibs += 4000001 \n        fibs += 5000001 \n        fibs\
    \ += 6000001 \n        fibs += 7000001 \n        fibs += 8000001 \n        fibs\
    \ += 9000001 \n        fibs += 10000001\n        fibs += 20000001\n        fibs\
    \ += 30000001\n        fibs += 40000001\n        fibs += 50000001\n        fibs\
    \ += 60000001\n        fibs += 70000001\n        fibs += 80000001\n        fibs\
    \ += 90000001\n        fibs += 100000001 \n        fibs += 200000001\n       \
    \ fibs += 300000001\n        fibs += 400000001\n        fibs += 500000001\n  \
    \      fibs += 600000001\n        fibs += 700000001\n        fibs += 800000001\n\
    \        fibs += 900000001\n        fibs += 1000000001\n        fibs += 2000000001\n\
    \        fibs += 3000000001\n        fibs += 4000000001\n        fibs += 5000000001\n\
    \        fibs += 6000000001\n        fibs += 7000000001\n        fibs += 8000000001\n\
    \        fibs += 9", "        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n\
    \ / 2)", "        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs.zip(fibs.tail).foreach\
    \ { case (a, b) => if (b > a) fibs(b - 2l) = a * a + b * b}\n        fibs(n)",
  "        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0l\n      \
    \  fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n  \
    \      fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        ", "        val fib = mutable.ListBuffer[Long]()\n    \
    \    fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        ", "        val fib = scala.math.BigInt(2)\n\
    \        val prime = scala.math.BigInt(3)\n        val result = scala.math.BigInt(0)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime", "      \
    \  val fib = scala.math.BigInt(1)\n        val prime = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ fibs = scala.collection.mutable.ListBuffer[Long]()\n        fibs += fib\n  \
    \      primes += prime\n        while(fibs.size < n) {\n            val newFib\
    \ = fib.plus(prime)\n            fibs += newFib\n            primes += newFib\n\
    \        }\n        fibs(n)", "        val fibs = Vector.fill(5)(2l)\n       \
    \ fibs(0) = 1l\n        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) =\
    \ 1l\n        fibs(4) = 1l\n        fibs(5) = 1l\n        fibs(6) = 1l\n     \
    \   fibs(7) = 1l\n        fibs(8) = 1l\n        fibs(9) = 1l\n        fibs(10)\
    \ = 1l\n        fibs(11) = 1l\n        fibs(12) = 1l\n        fibs(13) = 1l\n\
    \        fibs(14) = 1l\n        fibs(15) = 1l\n        fibs(16) = 1l\n       \
    \ fibs(17) = 1l\n        fibs(18) = 1l\n        fibs(19) = 1l\n        fibs(20)\
    \ = 1l\n        fibs(21) = 1l\n        fibs(22) = 1l\n        fibs(23) = 1l\n\
    \        fibs(24) = 1l\n        fibs(25) = 1l\n        fibs(26) = 1l\n       \
    \ fibs(27) = 1l\n        fibs(28) = 1l\n        fibs(29) = 1l\n        fibs(30)\
    \ = 1l\n        fibs(31) = 1l\n        fibs(32) = 1l\n        fibs(33) = 1l\n\
    \        fibs(34) = 1l\n        fibs(35) = 1l\n        fibs(36) = 1l\n       \
    \ fibs(37) = 1l\n        fibs(38) = 1l\n        fibs(39) = 1l\n        fibs(40)\
    \ = 1l\n        fibs(41) = 1l\n        fibs(42) = 1l\n        fibs(43) = 1l\n\
    \        fibs(44) = 1l\n        fibs(45) = 1l\n        fibs(46) = 1l\n       \
    \ fibs(47) = 1l\n        fibs(48) = 1l\n        fibs(49) = 1l\n        fibs(50)\
    \ = 1l\n        fibs(51) = 1l\n        fibs(52) = 1l\n        fibs(53) = 1l\n\
    \        fibs(54) = 1l\n        fibs(55) = 1l\n        fibs(56) = 1l\n       \
    \ fibs(57) = 1l\n        fibs(58) = 1l\n        fibs(59) = 1l\n        fibs(60)\
    \ = 1l\n        fibs(61) = 1l\n        fibs(62) = 1l\n        fibs(63) = 1l\n\
    \        fibs(64) = 1l\n        fibs(65) = 1l\n        fibs(", "        val fibs\
    \ = mutable.ListBuffer[Long]()\n        fibs += 0l\n        fibs += 1l\n     \
    \   fibs += 2l\n        fibs += 3l\n        fibs += 4l\n        fibs += 5l\n \
    \       fibs += 6l\n        fibs += 7l\n        fibs += 8l\n        fibs += 9l\n\
    \        fibs += 10l\n        fibs += 11l\n        fibs += 12l\n        fibs +=\
    \ 13l\n        fibs += 14l\n        fibs += 15l\n        fibs += 16l\n       \
    \ fibs += 17l\n        fibs += 18l\n        fibs += 19l\n        fibs += 20l\n\
    \        fibs += 21l\n        fibs += 22l\n        fibs += 23l\n        fibs +=\
    \ 24l\n        fibs += 25l\n        fibs += 26l\n        fibs += 27l\n       \
    \ fibs += 28l\n        fibs += 29l\n        fibs += 30l\n        fibs += 31l\n\
    \        fibs += 32l\n        fibs += 33l\n        fibs += 34l\n        fibs +=\
    \ 35l\n        fibs += 36l\n        fibs += 37l\n        fibs += 38l\n       \
    \ fibs += 39l\n        fibs += 40l\n        fibs += 41l\n        fibs += 42l\n\
    \        fibs += 43l\n        fibs += 44l\n        fibs += 45l\n        fibs +=\
    \ 46l\n        fibs += 47l\n        fibs += 48l\n        fibs += 49l\n       \
    \ fibs += 50l\n        fibs += 51l\n        fibs += 52l\n        fibs += 53l\n\
    \        fibs += 54l\n        fibs += 55l\n        fibs += 56l\n        fibs +=\
    \ 57l\n        fibs += 58l\n        fibs += 59l\n        fibs += 60l\n       \
    \ fibs += 61l\n        fibs += 62l\n        fibs += 63l\n        fibs += 64l\n\
    \        fibs += 65l\n        fibs += 66l\n        fibs += 67l\n        fibs +=\
    \ 68l\n        fibs += 69l\n        fibs += 70l\n        fibs += 71l\n       \
    \ fibs += 72l\n        fibs += 73l\n        fibs += 74l\n        fibs += 75l\n\
    \        fibs += 76l\n        fibs += 77l\n        fibs += 78l\n        fibs +=\
    \ 79l\n        fibs += 80l\n        fibs += 81l\n        fibs += 82l\n        ",
  "        val fibs = Vector.fill(n / 2)(2l).reverse ++ Vector.fill(n / 2)(3l).reverse\n\
    \        val primes = Vector.fill(n / 2)(2l).reverse ++ Vector.fill(n / 2)(3l).reverse\
    \ ++ Vector.fill(n / 2)(5l).reverse\n        val fibIndex = fibs.indexOf(n)\n\
    \        val primeIndex = primes.indexOf(n)\n        fibs(fibIndex + primeIndex)\
    \ % n", "        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n \
    \       fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ < n).last",
  "        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n        fibs\
    \ += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n        fibs\
    \ += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n        fibs\
    \ += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs += 12l\n     \
    \   fibs += 13l\n        fibs += 14l\n        fibs += 15l\n        fibs += 16l\n\
    \        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n        fibs +=\
    \ 20l\n        fibs += 21l\n        fibs += 22l\n        fibs += 23l\n       \
    \ fibs += 24l\n        fibs += 25l\n        fibs += 26l\n        fibs += 27l\n\
    \        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n        fibs +=\
    \ 31l\n        fibs += 32l\n        fibs += 33l\n        fibs += 34l\n       \
    \ fibs += 35l\n        fibs += 36l\n        fibs += 37l\n        fibs += 38l\n\
    \        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n        fibs +=\
    \ 42l\n        fibs += 43l\n        fibs += 44l\n        fibs += 45l\n       \
    \ fibs += 46l\n        fibs += 47l\n        fibs += 48l\n        fibs += 49l\n\
    \        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n        fibs +=\
    \ 53l\n        fibs += 54l\n        fibs += 55l\n        fibs += 56l\n       \
    \ fibs += 57l\n        fibs += 58l\n        fibs += 59l\n        fibs += 60l\n\
    \        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n        fibs +=\
    \ 64l\n        fibs += 65l\n        fibs += 66l\n        fibs += 67l\n       \
    \ fibs += 68l\n        fibs += 69l\n        fibs += 70l\n        fibs += 71l\n\
    \        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n        fibs +=\
    \ 75l\n        fibs += 76l\n        fibs += 77l\n        fibs += 78l\n       \
    \ fibs += 79l\n        fibs += 80l\n        fibs += 81l\n        fibs += 82l\n\
    \        ", "        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        ", "        val fib = scala.math.BigInt(2)\n        val\
    \ prime = scala.math.BigInt(3)\n        val primes = scala.collection.mutable.ArrayBuffer(3,\
    \ 5)\n        val fibs = scala.collection.mutable.ArrayBuffer(fib, fib + fib)\n\
    \        val fibs_prime = scala.collection.mutable.ArrayBuffer(fib, prime)\n \
    \       val fibs_primes = scala.collection.mutable.ArrayBuffer(fib, prime)\n \
    \       val fibs_primes_prime = scala.collection.mutable.ArrayBuffer(fib, prime)\n\
    \        val fibs_primes_primes = scala.collection.mutable.ArrayBuffer(fib, prime)\n\
    \        val fibs_primes_primes_prime = scala.collection.mutable.ArrayBuffer(fib,\
    \ prime)\n        val fibs_primes_primes_primes = scala.collection.mutable.ArrayBuffer(fib,\
    \ prime)\n        val fibs_primes_primes_primes_prime = scala.collection.mutable.ArrayBuffer(fib,\
    \ prime)\n        val fibs_primes_primes_primes_primes = scala.collection.mutable.ArrayBuffer(fib,\
    \ prime)\n        val fibs_primes_primes_primes_primes_prime = scala.collection.mutable.ArrayBuffer(fib,\
    \ prime)\n        val fibs_primes_primes_primes_primes_primes = scala.collection.mutable.ArrayBuffer(fib,\
    \ prime)\n        val fibs_primes_primes_primes_primes_primes_prime = scala.collection.mutable.ArrayBuffer(fib,\
    \ prime)\n        val fibs_primes_primes_primes_primes_primes_primes = scala.collection.mutable.ArrayBuffer(fib,\
    \ prime)\n        val fibs_primes_primes_primes_primes_primes_primes_prime = scala.collection.mutable.ArrayBuffer(fib,\
    \ prime)\n        val fibs_primes_primes_primes_primes_primes_primes_primes =\
    \ scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_primes_prime\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_primes_primes\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_primes_primes_prime\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime", "        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        val fib = (fibs take n).sum\n\
    \        fib match {\n            case 0 => fib\n            case _ => primeFib(fib\
    \ - 1) + 1\n        }", "        val fib_array = new Array[Long](5)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        fib_array(2) = 1l\n        fib_array(3)\
    \ = 1l\n        fib_array(4) = 1l\n        fib_array(5) = 1l\n        val fib_array_length\
    \ = fib_array.length\n        val fib_array_index_length = fib_array_length -\
    \ 1\n        val fib_array_index_index_length = fib_array_index_length - 1\n \
    \       val fib_array_index_index_index_length = fib_array_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_length = fib_array_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_length = fib_array_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_length = fib_array_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_length - 1\n        val fib_array_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_length - 1\n        val\
    \ fib_array_index_index_index_index_index_index_index_index_index_length = fib_array_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_",
  "        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 0l\n        var g = 0l\n        var h =\
    \ 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n        var\
    \ l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n       \
    \ var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n   \
    \     var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n", "        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n\
    \ / 2)", "        var a = 2l\n        var b = 3l\n        var c = 5l\n       \
    \ var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 1l\n \
    \       var h = 1l\n        var i = 1l\n        var j = 1l\n        var k = 1l\n\
    \        var l = 1l\n        var m = 2l\n        var n = 3l\n        var o = 3l\n\
    \        var p = 5l\n        var q = 13l\n        var r = 89l\n        var s =\
    \ 1l\n        var t = 1l\n        var u = 1l\n        var v = 1l\n        var\
    \ w = 1l\n        var x = 2l\n        var y = 3l\n        var z = 3l\n       \
    \ var aa = 2l\n        var ab = 3l\n        var ac = 5l\n        var ad = 13l\n\
    \        var ae = 89l\n        var af = 1l\n        var ag = 1l\n        var ah\
    \ = 1l\n        var ai = 1l\n        var aj = 1l\n        var ak = 1l\n      \
    \  var al = 1l\n        var am = 2l\n        var an = 3l\n        var ao = 3l\n\
    \        var ap = 5l\n        var aq = 13l\n        var ar = 89l\n        var\
    \ as = 1l\n        var at = 1l\n        var au = 1l\n        var av = 1l\n   \
    \     var aw = 1l\n        var ax = 2l\n        var ay = 3l\n        var az =\
    \ 3l\n        var ba = 2l\n        var bb = 3l\n        var bc = 5l\n        var\
    \ bd = 13l\n        var be = 89l\n        var bf = 1l\n        var bg = 1l\n \
    \       var bh = 1l\n        var bi = 1l\n        var bj = 1l\n        var bk\
    \ = 1l\n        var bl = 1l\n        var bm = 2l\n        var bn = 3l\n      \
    \  var bo = 3l\n        var bp = 5l\n        var bq = 13l\n        var br = 89l\n\
    \        var bs = 1l\n        var bt1 = 3l\n        var bt2 = 3l\n        var\
    \ bt3 = 5l\n        var bt4 = 13l\n        var bt5 = 89l\n        var bt6 = 1l\n\
    \        var bt7 = 1l\n        var bt8 = 1l\n        var bt9 = 1l\n        var\
    \ bt10 = 1l\n        var bt11 = 1l\n        var bt12 = 1l\n        var bt13 =\
    \ 1l\n        var bt14 = 1l\n        var bt15 = 1l\n        var bt16 = 1l\n  \
    \      var bt17 = 1l\n        var bt18 = 1l\n        var bt19 = 1l\n        var\
    \ bt20 = 1l\n        var bt21 = 1l\n        var bt22 = 1l\n        var bt23 =\
    \ 1l\n        var bt24 = 1l\n        var ", "        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(fibs.head\
    \ < n).last", "        var a = 2l\n        var b = 3l\n        var c = 5l\n  \
    \      var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 3l\n        var m = 5l\n        var n = 13l\n        var o =\
    \ 1l\n        var p = 2l\n        var q = 3l\n        var r = 5l\n        var\
    \ s = 13l\n        var t = 1l\n        var u = 2l\n        var v = 5l\n      \
    \  var w = 13l\n        var x = 1l\n        var y = 2l\n        var z = 3l\n \
    \       var aa = 2l\n        var ab = 3l\n        var ac = 5l\n        var ad\
    \ = 13l\n        var ae = 89l\n        var af = 1l\n        var ag = 2l\n    \
    \    var ah = 3l\n        var ai = 5l\n        var aj = 1l\n        var ak = 2l\n\
    \        var al = 3l\n        var am = 5l\n        var an = 13l\n        var ao\
    \ = 1l\n        var ap = 2l\n        var aq = 3l\n        var ar = 5l\n      \
    \  var as = 13l\n        var at = 1l\n        var au = 2l\n        var av = 5l\n\
    \        var aw = 13l\n        var ax = 1l\n        var ay = 2l\n        var az\
    \ = 3l\n        var ba = 2l\n        var bb = 3l\n        var bc = 5l\n      \
    \  var bd = 13l\n        var be = 89l\n        var bf = 1l\n        var bg = 2l\n\
    \        var bh = 3l\n        var bi = 5l\n        var bj = 1l\n        var bk\
    \ = 2l\n        var bl = 3l\n        var bm = 5l\n        var bn = 13l\n     \
    \   var bo = 1l\n        var bp = 2l\n        var bq = 3l\n        var br = 5l\n\
    \        var bs = 13l\n        var bt = 1l\n        var bu = 2l\n        var bv\
    \ = 5l\n        var bw = 13l\n        var bx = 1l\n        var by = 2l\n     \
    \   var bz = 3l\n        var ca = 2l\n        var cb = 3l\n        var cc = 5l\n\
    \        var cd = 13l\n        var ce = 89l\n        var cf = 1l\n        var\
    \ cg = 2l\n        var ch = 3l\n        var ci = 5l\n        var cj = 1l\n   \
    \     var ck = 2l\n        var cl = 3l\n        var cm = 5l\n        var cn =\
    \ 13l\n        var co = 1l\n        var cp = 2l\n        var cq = 3l\n       \
    \ var cr = 5l\n        var cs = 13l\n        var ct = 1l", "        val fib_array\
    \ = new Array[Long](5) // fibonacci array\n        fib_array(0) = 1l\n       \
    \ fib_array(1) = 1l\n        fib_array(2) = 1l\n        fib_array(3) = 1l\n  \
    \      fib_array(4) = 1l\n        fib_array(5) = 1l\n        val prime_array =\
    \ new Array[Boolean](5) // prime array\n        prime_array(0) = false\n     \
    \   prime_array(1) = false\n        prime_array(2) = false\n        prime_array(3)\
    \ = false\n        prime_array(4) = false\n        prime_array(5) = false\n  \
    \      val counter = n // counter for fibonacci array\n        while(counter >\
    \ 0) {\n            val temp = fib_array(counter)\n            fib_array(counter)\
    \ = fib_array(counter-1) + fib_array(counter-2)\n            fib_array(counter)\
    \ = temp\n            prime_array(counter) = fib_array(counter) == n\n       \
    \     counter -= 1\n        }\n        fib_array(counter)", "        val fibonacci\
    \ = mutable.ListBuffer[Long]()\n        fibonacci += 0l\n        fibonacci +=\
    \ 1l\n        fibonacci += 2l\n        fibonacci += 3l\n        fibonacci += 5l\n\
    \        fibonacci += 8l\n        fibonacci += 13l\n        fibonacci += 21l\n\
    \        fibonacci += 34l\n        fibonacci += 55l\n        fibonacci += 89l\n\
    \        fibonacci += 144l\n        fibonacci += 233l\n        fibonacci += 377l\n\
    \        fibonacci += 610l\n        fibonacci += 987l\n        fibonacci += 1597l\n\
    \        fibonacci += 2584l\n        fibonacci += 4181l\n        fibonacci +=\
    \ 6765l\n        fibonacci += 10946l\n        fibonacci += 17711l\n        fibonacci\
    \ += 28657l\n        fibonacci += 46368l\n        fibonacci += 75025l\n      \
    \  fibonacci += 121393l\n        fibonacci += 196418l\n        fibonacci += 317811l\n\
    \        fibonacci += 514229l\n        fibonacci += 832040l\n        fibonacci\
    \ += 1346269l\n        fibonacci += 2178309l\n        fibonacci += 3524578l\n\
    \        fibonacci += 5702887l\n        fibonacci += 9227465l\n        fibonacci\
    \ += 14930352l\n        fibonacci += 24157817l\n        fibonacci += 39088169l\n\
    \        fibonacci += 63245986l\n        fibonacci += 102334155l\n        fibonacci\
    \ += 165580141l\n        fibonacci += 267914296l\n        fibonacci += 433494437l\n\
    \        fibonacci += 701408733l\n        fibonacci += 1134903170l\n        fibonacci\
    \ += 1836311903l\n        fibonacci += 2971215073l\n        fi", "        val\
    \ fibs = Vector.fill(5)(0l).init\n        fibs(0) = 1l\n        fibs(1) = 1l\n\
    \        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4) = 1l\n        fibs(5)\
    \ = 1l\n        fibs.takeWhile(_ < n).foreach(x => fibs(x) = fibs(x - 1) + fibs(x\
    \ - 2))\n        fibs(n)", "        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs take\
    \ n foreach { x => \n            if (fibs contains x) return x\n            fibs\
    \ += x\n        }", "        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 1)\n        fibs(n / 2) += fibs(n / 2 - 2)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 3)\n        fibs(n / 2) += fibs(n / 2 - 4)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 5)\n        fibs(n / 2) += fibs(n / 2 - 6)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 7)\n        fibs(n / 2) += fibs(n / 2 - 8)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 9)\n        fibs(n / 2) += fibs(n / 2 - 10)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 11)\n        fibs(n / 2) += fibs(n / 2 - 12)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 13)\n        fibs(n / 2) += fibs(n / 2 - 14)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 15)\n        fibs(n / 2) += fibs(n / 2 - 16)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 17)\n        fibs(n / 2) += fibs(n / 2 - 18)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 19)\n        fibs(n / 2) += fibs(n / 2 - 20)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 21)\n        fibs(n / 2) += fibs(n / 2 - 22)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 23)\n        fibs(n / 2) += fibs(n / 2 - 24)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 25)\n        fibs(n / 2) += fibs(n / 2 - 26)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 27)\n        fibs(n / 2) += fibs(n / 2 - 28)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 29)\n        fibs(n / 2) += fibs(n / 2 - 30)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 31)\n        fibs(n / 2) += fibs(n / 2 - 32)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 33)\n        fibs(n / 2) += fibs(n / 2 - 34)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 35", "        val fib = scala.math.BigInt(2)\n        val\
    \ primes = scala.collection.mutable.ListBuffer[Long]()\n        val prime = scala.math.BigInt(2)\n\
    \        primes += prime\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2", "       \
    \ val fib_array = new Array[Long](2l, n)\n        fib_array(0) = 1l\n        fib_array(1)\
    \ = 1l\n        val prime_array = new Array[Boolean](2l)\n        var prime_flag\
    \ = true\n        for(i <- 2l to n){\n            val fib_num = fib_array(i -\
    \ 1)\n            val prime_num = fib_array(i - 2)\n            if(fib_num + prime_num\
    \ == i){\n                prime_flag = false\n            }\n            fib_array(i)\
    \ = fib_num + prime_num\n            prime_array(i) = prime_flag\n        }\n\
    \        fib_array(n)", "        val fibs = mutable.ListBuffer[Long]()\n     \
    \   fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n \
    \       fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        ", "        val fibs = scala.collection.mutable.ListBuffer[Long]()\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 13\n        fibs += 89\n        fibs += 4\n\
    \        fibs += 8\n        fibs += 12\n        fibs += 16\n        fibs += 32\n\
    \        fibs += 64\n        fibs += 128\n        fibs += 256\n        fibs +=\
    \ 512\n        fibs += 1024\n        fibs += 2048\n        fibs += 4096\n    \
    \    fibs += 8192\n        fibs += 16384\n        fibs += 32768\n        fibs\
    \ += 65536\n        fibs += 131072\n        fibs += 262144\n        fibs += 524288\n\
    \        fibs += 1048576\n        fibs += 2097152\n        fibs += 4194304\n \
    \       fibs += 8388608\n        fibs += 16777216\n        fibs += 33554432\n\
    \        fibs += 67108864\n        fibs += 134217728\n        fibs += 268435456\n\
    \        fibs += 536870912\n        fibs += 1073741824\n        fibs += 2147483648\n\
    \        fibs += 4294967296\n        fibs += 8589934592\n        fibs += 17179869184\n\
    \        fibs += 34359738368\n        fibs += 68719476736\n        fibs += 137438953472\n\
    \        fibs += 274877906944\n        fibs += 549755813888\n        fibs += 1099511627776\n\
    \        fibs += 2199023255552\n        fibs += 4398046511104\n        fibs +=\
    \ 8796093022208\n        fibs += 17592186044416\n        fibs += 35184372088832\n\
    \        fibs += 70368744177664\n        fibs += 140737488355328\n        fibs\
    \ += 281474976710656\n        fibs += 562949953421312\n        fibs += 1125899906842624\n\
    \        fibs += 2251799813685248\n        fibs += 4503599627370496\n        fibs\
    \ += 9007199254740992\n        fibs += 18014398509481984\n        fibs += 36028797018963968\n\
    \        fibs += 72057594037927936\n        fibs += 144115188075855", "      \
    \  val fib = scala.collection.mutable.ListBuffer[Long]()\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(", "        val fibs = mutable.ArrayBuffer(2l,\
    \ 3l, 5l, 8l)\n        fibs.takeWhile(_ < n).last", "        val fibonacci = mutable.ListBuffer[Long]()\n\
    \        fibonacci += 0l\n        fibonacci += 1l\n        fibonacci += 2l\n \
    \       fibonacci += 3l\n        fibonacci += 5l\n        fibonacci += 13l\n \
    \       fibonacci += 89l\n        fibonacci.takeWhile(x => x < n).last", "   \
    \     val fib = scala.math.BigInt(2)\n        val prime = scala.math.BigInt(3)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ fibs = scala.collection.mutable.ListBuffer[Long]()\n        fibs += fib\n  \
    \      primes += prime\n        primes += prime\n        while(fibs.size < n){\n\
    \            val fib = fibs.last\n            val prime = primes.last\n      \
    \      fibs += fib\n            primes += prime\n        }\n        fibs.last",
  "        val fibs = Vector.fill(n / 2)(2l).reverse ++ Vector.fill((n / 2)(2l))(2l).reverse\n\
    \        fibs(n) match {\n            case 0 => n\n            case 1 => n\n \
    \           case _ => primeFib(fibs(n-1) + fibs(n-2))\n        }", "        val\
    \ fib = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val prime = scala.math.BigInt(3)\n        val limit = scala.math.BigInt(n).divide(prime)\n\
    \        val fibs = scala.collection.mutable.ListBuffer[Long]()\n        fibs\
    \ += fib\n        primes += prime\n        prime += 2\n        prime += 2\n  \
    \      prime += 2\n        prime += 2\n        prime += 2\n        prime += 2\n\
    \        prime += 2\n        prime += 2\n        prime += 2\n        prime +=\
    \ 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += ", "        var a = 2l\n        var b = 3l\n        var\
    \ c = 5l\n        var d = 13l\n        var e = 89l\n        var f = 0l\n     \
    \   var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n \
    \       var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n\
    \        var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n\
    \        var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n\
    \        var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n\
    \        var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n\
    \        var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n", "        val fib = scala.math.BigInt(1)\n\
    \        val prime = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += 2\n        primes += 3\n        primes += 5\n        primes\
    \ += 13\n        primes += 89\n        while (fib <= n) {\n            val temp\
    \ = fib % prime\n            if (temp == 0) primes += temp\n            fib =\
    \ fib + (prime - 1)\n        }\n        primes.last", "        val fibs = Vector.fill(5)(2l).takeWhile(_\
    \ < n).reverse\n        val primes = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val fibs2 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ primes2 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val fibs3 = Vector.fill(5)(2l).takeWhile(_\
    \ < n).reverse\n        val primes3 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val fibs4 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ primes4 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val fibs5 = Vector.fill(5)(2l).takeWhile(_\
    \ < n).reverse\n        val primes5 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val fibs6 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ primes6 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val fibs7 = Vector.fill(5)(2l).takeWhile(_\
    \ < n).reverse\n        val primes7 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val fibs8 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ primes8 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val fibs9 = Vector.fill(5)(2l).takeWhile(_\
    \ < n).reverse\n        val primes9 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val fibs10 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ primes10 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val fibs11 =\
    \ Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val primes11 = Vector.fill(5)(2l).takeWhile(_\
    \ < n).reverse\n        val fibs12 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val primes12 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ fibs13 = Vector.fill(5)(", "        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_\
    \ < n).last", "        val fibs = mutable.ListBuffer[Long]()\n        fibs +=\
    \ 0l\n        fibs += 1l\n        val fib = (fibs.last, fibs.last)\n        fibs\
    \ += fib\n        fibs.drop(1).find(_ == fib).map(_ + 1).getOrElse(n)", "    \
    \    var a : Long = 1l\n        var b : Long = 1l\n        var c : Long = 1l\n\
    \        var d : Long = 1l\n        var e : Long = 1l\n        var f : Long =\
    \ 1l\n        var g : Long = 1l\n        var h : Long = 1l\n        var i : Long\
    \ = 1l\n        var j : Long = 1l\n        var k : Long = 1l\n        var l :\
    \ Long = 1l\n        var m : Long = 1l\n        var n : Long = 1l\n        var\
    \ o : Long = 1l\n        var p : Long = 1l\n        var q : Long = 1l\n      \
    \  var r : Long = 1l\n        var s : Long = 1l\n        var t : Long = 1l\n \
    \       var u : Long = 1l\n        var v : Long = 1l\n        var w : Long = 1l\n\
    \        var x : Long = 1l\n        var y : Long = 1l\n        var z : Long =\
    \ 1l\n        var a : Long = 1l\n        var b : Long = 1l\n        var c : Long\
    \ = 1l\n        var d : Long = 1l\n        var e : Long = 1l\n        var f :\
    \ Long = 1l\n        var g : Long = 1l\n        var h : Long = 1l\n        var\
    \ i : Long = 1l\n        var j : Long = 1l\n        var k : Long = 1l\n      \
    \  var l : Long = 1l\n        var m : Long = 1l\n        var n : Long = 1l\n \
    \       var o : Long = 1l\n        var p : Long = 1l\n        var q : Long = 1l\n\
    \        var r : Long = 1l\n        var s : Long = 1l\n        var t : Long =\
    \ 1l\n        var u : Long = 1l\n        var v : Long = 1l\n        var w : Long\
    \ = 1l\n        var x : Long = 1l\n        var y : Long = 1l\n        var z :\
    \ Long = 1l\n        var a : Long = 1l\n        var b : Long = 1l\n        var\
    \ c : Long = 1l\n        var d : Long = 1l\n        var e : Long = 1l\n      \
    \  var f : Long = 1l\n        var g : Long = 1l\n        var h : Long = 1l\n \
    \       var i : Long = 1l\n        var j : Long = 1l\n        var k : Long = 1l\n\
    \        var l : Long = 1l\n        var m : Long = 1l\n        var n : Long =\
    \ 1l\n        var o : Long = 1l\n        var p : Long = 1l\n        var q : Long\
    \ = 1l\n        var r : Long = 1l\n        var s : Long = 1l\n        var t :\
    \ Long = 1l\n        var u : Long = 1l\n        var v : Long = 1l\n        var ",
  "        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n        fibs\
    \ += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n        fibs\
    \ += 13l\n        fibs += 89l\n        fibs += 101l\n        fibs += 201l\n  \
    \      fibs += 301l\n        fibs += 401l\n        fibs += 501l\n        fibs\
    \ += 601l\n        fibs += 701l\n        fibs += 801l\n        fibs += 901l\n\
    \        fibs += 1001l\n        fibs += 2001l\n        fibs += 3001l\n       \
    \ fibs += 4001l\n        fibs += 5001l\n        fibs += 6001l\n        fibs +=\
    \ 7001l\n        fibs += 8001l\n        fibs += 9001l\n        fibs += 1000l\n\
    \        fibs += 2000l\n        fibs += 3000l\n        fibs += 4000l\n       \
    \ fibs += 5000l\n        fibs += 6000l\n        fibs += 7000l\n        fibs +=\
    \ 8000l\n        fibs += 9000l\n        fibs += 10000l\n        fibs += 20000l\n\
    \        fibs += 30000l\n        fibs += 40000l\n        fibs += 50000l\n    \
    \    fibs += 60000l\n        fibs += 70000l\n        fibs += 80000l\n        fibs\
    \ += 90000l\n        fibs += 100000l\n        fibs += 200000l\n        fibs +=\
    \ 300000l\n        fibs += 400000l\n        fibs += 500000l\n        fibs += 600000l\n\
    \        fibs += 700000l\n        fibs += 800000l\n        fibs += 900000l\n \
    \       fibs += 1000000l\n        fibs += 2000000l\n        fibs += 3000000l\n\
    \        fibs += 4000000l\n        fibs += 5000000l\n        fibs += 6000000l\n\
    \        fibs += 7000000l\n        fibs += 8000000l\n        fibs += 9000000l\n\
    \        fibs += 10000000l\n        fibs += 20000000l\n        fibs += 30000000l\n\
    \        fibs += 40000000l\n        fibs += 50000000l\n        fibs += 60000000l\n\
    \        fibs += 70000000l\n        fibs += 80000000l\n        fibs += 90000000l\n\
    \        fibs += 100000000l\n        fibs += 200000000l\n        fibs += 300000000l\n\
    \        fibs += 400000000l\n        fibs += 5", "        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_\
    \ < n).last", "        val fibs = mutable.ListBuffer[Long]()\n        fibs +=\
    \ 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ <\
    \ n).last", "        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ <\
    \ n).last", "        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ < n).last",
  "        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n        fibs\
    \ += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n        fibs\
    \ += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n        fibs\
    \ += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs += 12l\n     \
    \   fibs += 13l\n        fibs += 14l\n        fibs += 15l\n        fibs += 16l\n\
    \        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n        fibs +=\
    \ 20l\n        fibs += 21l\n        fibs += 22l\n        fibs += 23l\n       \
    \ fibs += 24l\n        fibs += 25l\n        fibs += 26l\n        fibs += 27l\n\
    \        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n        fibs +=\
    \ 31l\n        fibs += 32l\n        fibs += 33l\n        fibs += 34l\n       \
    \ fibs += 35l\n        fibs += 36l\n        fibs += 37l\n        fibs += 38l\n\
    \        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n        fibs +=\
    \ 42l\n        fibs += 43l\n        fibs += 44l\n        fibs += 45l\n       \
    \ fibs += 46l\n        fibs += 47l\n        fibs += 48l\n        fibs += 49l\n\
    \        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n        fibs +=\
    \ 53l\n        fibs += 54l\n        fibs += 55l\n        fibs += 56l\n       \
    \ fibs += 57l\n        fibs += 58l\n        fibs += 59l\n        fibs += 60l\n\
    \        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n        fibs +=\
    \ 64l\n        fibs += 65l\n        fibs += 66l\n        fibs += 67l\n       \
    \ fibs += 68l\n        fibs += 69l\n        fibs += 70l\n        fibs += 71l\n\
    \        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n        fibs +=\
    \ 75l\n        fibs += 76l\n        fibs += 77l\n        fibs += 78l\n       \
    \ fibs += 79l\n        fibs += 80l\n        fibs += 81l\n        fibs += 82l\n\
    \        ", "        var a = 2l\n        var b = 3l\n        var c = 5l\n    \
    \    var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 1l\n\
    \        var h = 1l\n        var i = 2l\n        var j = 2l\n        var k = 2l\n\
    \        var l = 2l\n        var m = 2l\n        var n = 3l\n        var o = 3l\n\
    \        var p = 5l\n        var q = 13l\n        var r = 89l\n        var s =\
    \ 2l\n        var t = 2l\n        var u = 2l\n        var v = 3l\n        var\
    \ w = 5l\n        var x = 13l\n        var y = 89l\n        var z = 1l\n     \
    \   var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 1l\n        var g = 1l\n        var h =\
    \ 1l\n        var i = 2l\n        var j = 2l\n        var k = 2l\n        var\
    \ l = 2l\n        var m = 2l\n        var n = 3l\n        var o = 3l\n       \
    \ var p = 5l\n        var q = 13l\n        var r = 89l\n        var s = 2l\n \
    \       var t = 2l\n        var u = 2l\n        var v = 3l\n        var w = 5l\n\
    \        var x = 13l\n        var y = 89l\n        var z = 1l\n        var a =\
    \ 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n        var\
    \ e = 89l\n        var f = 1l\n        var g = 1l\n        var h = 1l\n      \
    \  var i = 2l\n        var j = 2l\n        var k = 2l\n        var l = 2l\n  \
    \      var m = 2l\n        var n = 3l\n        var o = 3l\n        var p = 5l\n\
    \        var q = 13l\n        var r = 89l\n        var s = 2l\n        var t =\
    \ 2l\n        var u = 2l\n        var v = 3l\n        var w = 5l\n        var\
    \ x = 13l\n        var y = 89l\n        var z = 1l\n        var a = 2l\n     \
    \   var b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n\
    \        var f = 1l\n        var g = 1l\n        var h = 1l\n        var i = 2l\n\
    \        var j = 2l\n        var k = 2l\n        var l = 2l\n        var m = 2l\n\
    \        var n = 3l\n        var o = 3l\n        var p = 5l\n        var q = 13l\n\
    \        var r = 89l\n        var s = 2l\n        var t = 2l\n        var u =\
    \ 2l\n        var v = 3l\n        var w = 5l\n        var x = 13l\n        var\
    \ y = ", "        val fibs = Vector.fill(5)(0)\n        fibs(0) = 1\n        fibs(1)\
    \ = 1\n        fibs(2) = 1\n        fibs(3) = 1\n        fibs(4) = 1\n       \
    \ fibs(5) = 1\n        fibs.takeWhile(_ < n).foreach(fibs => fibs(5) = fibs(5)\
    \ + fibs(4))\n        fibs(5)", "        var a = 2l\n        var b = 3l\n    \
    \    var c = 5l\n        var d = 13l\n        var e = 89l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n\
    \        var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n\
    \        var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n\
    \        var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n\
    \        var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n\
    \        var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n", "        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_\
    \ < n).last", "        val fibs = Vector.fill(n / 2l)(2l)\n        fibs(0l) +=\
    \ 2l\n        fibs(1l) += 2l\n        fibs(2l) += 2l\n        fibs(3l) += 2l\n\
    \        fibs(4l) += 2l\n        fibs(5l) += 2l\n        fibs(6l) += 2l\n    \
    \    fibs(7l) += 2l\n        fibs(8l) += 2l\n        fibs(9l) += 2l\n        fibs(10l)\
    \ += 2l\n        fibs(11l) += 2l\n        fibs(12l) += 2l\n        fibs(13l) +=\
    \ 2l\n        fibs(14l) += 2l\n        fibs(15l) += 2l\n        fibs(16l) += 2l\n\
    \        fibs(17l) += 2l\n        fibs(18l) += 2l\n        fibs(19l) += 2l\n \
    \       fibs(20l) += 2l\n        fibs(21l) += 2l\n        fibs(22l) += 2l\n  \
    \      fibs(23l) += 2l\n        fibs(24l) += 2l\n        fibs(25l) += 2l\n   \
    \     fibs(26l) += 2l\n        fibs(27l) += 2l\n        fibs(28l) += 2l\n    \
    \    fibs(29l) += 2l\n        fibs(30l) += 2l\n        fibs(31l) += 2l\n     \
    \   fibs(32l) += 2l\n        fibs(33l) += 2l\n        fibs(34l) += 2l\n      \
    \  fibs(35l) += 2l\n        fibs(36l) += 2l\n        fibs(37l) += 2l\n       \
    \ fibs(38l) += 2l\n        fibs(39l) += 2l\n        fibs(40l) += 2l\n        fibs(41l)\
    \ += 2l\n        fibs(42l) += 2l\n        fibs(43l) += 2l\n        fibs(44l) +=\
    \ 2l\n        fibs(45l) += 2l\n        fibs(46l) += 2l\n        fibs(47l) += 2l\n\
    \        fibs(48l) += 2l\n        fibs(49l) += ", "        val fibs = Vector.fill(n\
    \ / 2)(2l)\n        fibs(0) = 1l\n        fibs(1) = 1l\n        fibs(2) = 1l\n\
    \        fibs(n) match {\n            case 0 => 1l\n            case 1 => 1l\n\
    \            case _ => {\n                val i = 2\n                while (i\
    \ < fibs.size) {\n                    fibs(i) match {\n                      \
    \  case 0 => fibs(i - 1)\n                        case 1 => fibs(i - 2)\n    \
    \                    case _ => {\n                            val j = 3\n    \
    \                        while (j < fibs.size) {\n                           \
    \     fibs(j) match {\n                                    case 0 => fibs(j -\
    \ 1)\n                                    case 1 => fibs(j - 2)\n            \
    \                        case _ => {\n                                       \
    \ val k = 5\n                                        while (k < fibs.size) {\n\
    \                                            fibs(k) match {\n               \
    \                                 case 0 => fibs(k - 1)\n                    \
    \                            case 1 => fibs(k - 2)\n                         \
    \                       case _ => {\n                                        \
    \            val l = 13\n                                                    while\
    \ (l < fibs.size) {\n                                                        fibs(l)\
    \ match {\n                                                            case 0\
    \ => fibs(l - 1)\n                                                           \
    \ case 1 => fibs(l - 2)\n                                                    \
    \        case _ => fibs(l)\n                                                 \
    \       }\n                                                        l += 1\n  \
    \                                                  }\n                       \
    \                         }\n                                            }\n \
    \                                           k += 1\n                         \
    \               }\n                                    }\n                   \
    \             }\n                                j += 1\n                    \
    \        }\n                        }\n                    }\n               \
    \     i += 1\n                }\n                fibs(n)\n            }\n    \
    \    }", "        val fibs = Vector.fill(5)(0)\n        fibs(0) = 1\n        fibs(1)\
    \ = 1\n        fibs(2) = 1\n        fibs(3) = 1\n        fibs(4) = 1\n       \
    \ fibs(5) = 1\n        fibs(6) = 1\n        fibs(7) = 1\n        fibs(8) = 1\n\
    \        fibs(9) = 1\n        fibs(10) = 1\n        fibs(11) = 1\n        fibs(12)\
    \ = 1\n        fibs(13) = 1\n        fibs(14) = 1\n        fibs(15) = 1\n    \
    \    fibs(16) = 1\n        fibs(17) = 1\n        fibs(18) = 1\n        fibs(19)\
    \ = 1\n        fibs(20) = 1\n        fibs(21) = 1\n        fibs(22) = 1\n    \
    \    fibs(23) = 1\n        fibs(24) = 1\n        fibs(25) = 1\n        fibs(26)\
    \ = 1\n        fibs(27) = 1\n        fibs(28) = 1\n        fibs(29) = 1\n    \
    \    fibs(30) = 1\n        fibs(31) = 1\n        fibs(32) = 1\n        fibs(33)\
    \ = 1\n        fibs(34) = 1\n        fibs(35) = 1\n        fibs(36) = 1\n    \
    \    fibs(37) = 1\n        fibs(38) = 1\n        fibs(39) = 1\n        fibs(40)\
    \ = 1\n        fibs(41) = 1\n        fibs(42) = 1\n        fibs(43) = 1\n    \
    \    fibs(44) = 1\n        fibs(45) = 1\n        fibs(46) = 1\n        fibs(47)\
    \ = 1\n        fibs(48) = 1\n        fibs(49) = 1\n        fibs(50) = 1\n    \
    \    fibs(51) = 1\n        fibs(52) = 1\n        fibs(53) = 1\n        fibs(54)\
    \ = 1\n        fibs(55) = 1\n        fibs(56) = 1\n        fibs(57) = 1\n    \
    \    fibs(58) = 1\n        fibs(59) = 1\n        fibs(60) = 1\n        fibs(61)\
    \ = 1\n        fibs(62) = 1\n        fibs(63) = 1\n        fibs(64) = 1\n    \
    \    fibs(65) = 1\n        fibs(66) = 1\n        fibs(67) = 1\n        fibs(68)\
    \ = 1\n        fibs(69) = 1\n        fibs(70) = 1\n        fibs(71) = 1\n    \
    \    fibs(72) = 1\n        fibs(73) = 1\n        fibs(74) = 1\n        fibs(75)\
    \ = 1\n        ", "        val fibs = mutable.ListBuffer[Long]()\n        fibs\
    \ += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs\
    \ += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n      \
    \  fibs += 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n\
    \        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs +=\
    \ 19l\n        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n       \
    \ fibs += 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n\
    \        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs +=\
    \ 30l\n        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n       \
    \ fibs += 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n\
    \        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs +=\
    \ 41l\n        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n       \
    \ fibs += 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n\
    \        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs +=\
    \ 52l\n        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n       \
    \ fibs += 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n\
    \        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs +=\
    \ 63l\n        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n       \
    \ fibs += 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n\
    \        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs +=\
    \ 74l\n        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n       \
    \ fibs += 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n\
    \        fibs += 82l\n        ", "        val fib_array = new Array[Long](n)\n\
    \        fib_array(0) = 1l\n        fib_array(1) = 1l\n        val prime_array\
    \ = new Array[Boolean](n)\n        prime_array(0) = false\n        prime_array(1)\
    \ = false\n        var i = 2\n        while (i < n) {\n            if (fib_array(i)\
    \ == fib_array(i-1) + fib_array(i-2))\n                prime_array(i) = true\n\
    \            else\n                prime_array(i) = false\n            i += 1\n\
    \        }\n        fib_array", "        var a = 2l\n        var b = 3l\n    \
    \    var c = 5l\n        var d = 7l\n        var e = 1l\n        var f = 1l\n\
    \        var g = 1l\n        var h = 1l\n        var i = 1l\n        var j = 1l\n\
    \        var k = 1l\n        var l = 1l\n        var m = 1l\n        var n = 2l\n\
    \        var o = 2l\n        var p = 3l\n        var q = 3l\n        var r = 4l\n\
    \        var s = 5l\n        var t = 6l\n        var u = 7l\n        var v = 8l\n\
    \        var w = 9l\n        var x = 10l\n        var y = 11l\n        var z =\
    \ 12l\n        var a = 2l\n        var b = 3l\n        var c = 5l\n        var\
    \ d = 7l\n        var e = 1l\n        var f = 1l\n        var g = 1l\n       \
    \ var h = 1l\n        var i = 1l\n        var j = 1l\n        var k = 1l\n   \
    \     var l = 1l\n        var m = 1l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 3l\n        var q = 3l\n        var r = 4l\n        var s = 5l\n\
    \        var t = 6l\n        var u = 7l\n        var v = 8l\n        var w = 9l\n\
    \        var x = 10l\n        var y = 11l\n        var z = 12l\n        var a\
    \ = 2l\n        var b = 3l\n        var c = 5l\n        var d = 7l\n        var\
    \ e = 1l\n        var f = 1l\n        var g = 1l\n        var h = 1l\n       \
    \ var i = 1l\n        var j = 1l\n        var k = 1l\n        var l = 1l\n   \
    \     var m = 1l\n        var n = 2l\n        var o = 2l\n        var p = 3l\n\
    \        var q = 3l\n        var r = 4l\n        var s = 5l\n        var t = 6l\n\
    \        var u = 7l\n        var v = 8l\n        var w = 9l\n        var x = 10l\n\
    \        var y = 11l\n        var z = 12l\n        var a = 2l\n        var b =\
    \ 3l\n        var c = 5l\n        var d = 7l\n        var e = 1l\n        var\
    \ f = 1l\n        var g = 1l\n        var h = 1l\n        var i = 1l\n       \
    \ var j = 1l\n        var k = 1l\n        var l = 1l\n        var m = 1l\n   \
    \     var n = 2l\n        var o = 2l\n        var p = 3l\n        var q = 3l\n\
    \        var r = 4l\n        var s = 5l\n        var t = 6l\n        var u = 7l\n\
    \        var v = 8l\n        var w = 9l\n        var x = 10l\n        var y = ",
  "        val fibs = Vector.fill(5)(1l)\n        fibs(0) = 1l\n        fibs(1) =\
    \ 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4) = 1l\n     \
    \   fibs(5) = 1l\n        fibs(6) = 1l\n        fibs(7) = 1l\n        fibs(8)\
    \ = 1l\n        fibs(9) = 1l\n        fibs(10) = 1l\n        fibs(11) = 1l\n \
    \       fibs(12) = 1l\n        fibs(13) = 1l\n        fibs(14) = 1l\n        fibs(15)\
    \ = 1l\n        fibs(16) = 1l\n        fibs(17) = 1l\n        fibs(18) = 1l\n\
    \        fibs(19) = 1l\n        fibs(20) = 1l\n        fibs(21) = 1l\n       \
    \ fibs(22) = 1l\n        fibs(23) = 1l\n        fibs(24) = 1l\n        fibs(25)\
    \ = 1l\n        fibs(26) = 1l\n        fibs(27) = 1l\n        fibs(28) = 1l\n\
    \        fibs(29) = 1l\n        fibs(30) = 1l\n        fibs(31) = 1l\n       \
    \ fibs(32) = 1l\n        fibs(33) = 1l\n        fibs(34) = 1l\n        fibs(35)\
    \ = 1l\n        fibs(36) = 1l\n        fibs(37) = 1l\n        fibs(38) = 1l\n\
    \        fibs(39) = 1l\n        fibs(40) = 1l\n        fibs(41) = 1l\n       \
    \ fibs(42) = 1l\n        fibs(43) = 1l\n        fibs(44) = 1l\n        fibs(45)\
    \ = 1l\n        fibs(46) = 1l\n        fibs(47) = 1l\n        fibs(48) = 1l\n\
    \        fibs(49) = 1l\n        fibs(50) = 1l\n        fibs(51) = 1l\n       \
    \ fibs(52) = 1l\n        fibs(53) = 1l\n        fibs(54) = 1l\n        fibs(55)\
    \ = 1l\n        fibs(56) = 1l\n        fibs(57) = 1l\n        fibs(58) = 1l\n\
    \        fibs(59) = 1l\n        fibs(60) = 1l\n        fibs(61) = 1l\n       \
    \ fibs(62) = 1l\n        fibs(63) = 1l\n        fibs(64) = 1l\n        fibs(65)\
    \ = 1l\n        fibs(", "        val fibs = Vector.fill(n / 2)(2l).filter(_ <\
    \ n).takeWhile(_ <= n).map(_ + _)\n        fibs.last", "        val fibs = mutable.ListBuffer(1l,\
    \ 2l)\n        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fib", "       \
    \ val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n        fibs += 1l\n\
    \        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n        fibs += 5l\n\
    \        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n        fibs += 9l\n\
    \        fibs += 10l\n        fibs += 11l\n        fibs += 12l\n        fibs +=\
    \ 13l\n        fibs += 14l\n        fibs += 15l\n        fibs += 16l\n       \
    \ fibs += 17l\n        fibs += 18l\n        fibs += 19l\n        fibs += 20l\n\
    \        fibs += 21l\n        fibs += 22l\n        fibs += 23l\n        fibs +=\
    \ 24l\n        fibs += 25l\n        fibs += 26l\n        fibs += 27l\n       \
    \ fibs += 28l\n        fibs += 29l\n        fibs += 30l\n        fibs += 31l\n\
    \        fibs += 32l\n        fibs += 33l\n        fibs += 34l\n        fibs +=\
    \ 35l\n        fibs += 36l\n        fibs += 37l\n        fibs += 38l\n       \
    \ fibs += 39l\n        fibs += 40l\n        fibs += 41l\n        fibs += 42l\n\
    \        fibs += 43l\n        fibs += 44l\n        fibs += 45l\n        fibs +=\
    \ 46l\n        fibs += 47l\n        fibs += 48l\n        fibs += 49l\n       \
    \ fibs += 50l\n        fibs += 51l\n        fibs += 52l\n        fibs += 53l\n\
    \        fibs += 54l\n        fibs += 55l\n        fibs += 56l\n        fibs +=\
    \ 57l\n        fibs += 58l\n        fibs += 59l\n        fibs += 60l\n       \
    \ fibs += 61l\n        fibs += 62l\n        fibs += 63l\n        fibs += 64l\n\
    \        fibs += 65l\n        fibs += 66l\n        fibs += 67l\n        fibs +=\
    \ 68l\n        fibs += 69l\n        fibs += 70l\n        fibs += 71l\n       \
    \ fibs += 72l\n        fibs += 73l\n        fibs += 74l\n        fibs += 75l\n\
    \        fibs += 76l\n        fibs += 77l\n        fibs += 78l\n        fibs +=\
    \ 79l\n        fibs += 80l\n        fibs += 81l\n        fibs += 82l\n        ",
  "        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0l\n      \
    \  fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n  \
    \      fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ < n).last",
  "        var a : Long = 1l\n        var b : Long = 2l\n        var c : Long = 3l\n\
    \        var d : Long = 5l\n        var e : Long = 13l\n        var f : Long =\
    \ 89l\n        var g : Long = 97l\n        var h : Long = 23l\n        var i :\
    \ Long = 29l\n        var j : Long = 31l\n        var k : Long = 43l\n       \
    \ var l : Long = 57l\n        var m : Long = 67l\n        var n : Long = 79l\n\
    \        var o : Long = 89l\n        var p : Long = 97l\n        var q : Long\
    \ = 23l\n        var r : Long = 29l\n        var s : Long = 31l\n        var t\
    \ : Long = 43l\n        var u : Long = 57l\n        var v : Long = 67l\n     \
    \   var w : Long = 79l\n        var x : Long = 89l\n        var y : Long = 97l\n\
    \        var z : Long = 23l\n        var a : Long = 1l\n        var b : Long =\
    \ 2l\n        var c : Long = 3l\n        var d : Long = 5l\n        var e : Long\
    \ = 13l\n        var f : Long = 89l\n        var g : Long = 97l\n        var h\
    \ : Long = 23l\n        var i : Long = 29l\n        var j : Long = 31l\n     \
    \   var k : Long = 43l\n        var l : Long = 57l\n        var m : Long = 67l\n\
    \        var n : Long = 79l\n        var o : Long = 89l\n        var p : Long\
    \ = 97l\n        var q : Long = 23l\n        var r : Long = 29l\n        var s\
    \ : Long = 31l\n        var t : Long = 43l\n        var u : Long = 57l\n     \
    \   var v : Long = 67l\n        var w : Long = 79l\n        var x : Long = 89l\n\
    \        var y : Long = 97l\n        var z : Long = 23l\n        var a : Long\
    \ = 1l\n        var b : Long = 2l\n        var c : Long = 3l\n        var d :\
    \ Long = 5l\n        var e : Long = 13l\n        var f : Long = 89l\n        var\
    \ g : Long = 97l\n        var h : Long = 23l\n        var i : Long = 29l\n   \
    \     var j : Long = 31l\n        var k : Long = 43l\n        var l : Long = 57l\n\
    \        var m : Long = 67l\n        var n : Long = 79l\n        var o ", "  \
    \      val fib_array = new Array[Long](5)\n        fib_array(0) = 1\n        fib_array(1)\
    \ = 1\n        fib_array(2) = 1\n        fib_array(3) = 1\n        fib_array(4)\
    \ = 1\n        val i = 5\n        while(i <= n) {\n            fib_array(i) =\
    \ fib_array(i-1) + fib_array(i-2)\n            i = i + 1\n        }\n        fib_array(5)\
    \ = n\n        fib_array(4)", "        val fibs = mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        ", "        val fibs = Vector.fill(5)(2l)\n\
    \        fibs(0) = 1l\n        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3)\
    \ = 1l\n        fibs(4) = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ <\
    \ n).last", "        val fib_n = scala.math.BigInt(n).fibonacci\n        val prime_n\
    \ = scala.math.BigInt(n).prime\n        val prime_fib_n = fib_n.multiply(prime_n)\n\
    \        prime_fib_n", "        val fib = scala.math.BigInt(2)\n        val primes\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        primes += 2l\n      \
    \  primes += 3l\n        primes += 5l\n        primes += 13l\n        primes +=\
    \ 89l\n        primes += 101l\n        primes += 201l\n        primes += 301l\n\
    \        primes += 401l\n        primes += 501l\n        primes += 601l\n    \
    \    primes += 701l\n        primes += 801l\n        primes += 901l\n        primes\
    \ += 1001l\n        primes += 2001l\n        primes += 3001l\n        primes +=\
    \ 4001l\n        primes += 5001l\n        primes += 6001l\n        primes += 7001l\n\
    \        primes += 8001l\n        primes += 9001l\n        primes += 1000l\n \
    \       primes += 2000l\n        primes += 3000l\n        primes += 4000l\n  \
    \      primes += 5000l\n        primes += 6000l\n        primes += 7000l\n   \
    \     primes += 8000l\n        primes += 9000l\n        primes += 10000l\n   \
    \     primes += 20000l\n        primes += 30000l\n        primes += 40000l\n \
    \       primes += 50000l\n        primes += 60000l\n        primes += 70000l\n\
    \        primes += 80000l\n        primes += 90000l\n        primes += 100000l\n\
    \        primes += 200000l\n        primes += 300000l\n        primes += 400000l\n\
    \        primes += 500000l\n        primes += 600000l\n        primes += 700000l\n\
    \        primes += 800000l\n        primes += 900000l\n        primes += 1000000l\n\
    \        primes += 2000000l\n        primes += 3000000l\n        primes += 4000000l\n\
    \        primes += 5000000l\n        primes += 6000000l\n        primes += 7000000l\n\
    \        primes += 8000000l\n        primes += 9000000l\n        primes += 10000000l\n\
    \        primes += 20000000l\n        primes += 30000000l\n        primes += 40000000l\n\
    \        primes += 50000000l\n        primes += 60000000l\n        primes += 70000000l\n\
    \        primes += 80000000l\n        primes += 90000000l\n        primes += 100000000l\n\
    \        primes += 200000000l\n        primes += 300000000l\n        primes +=\
    \ 400000000l\n        prime", "        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        val fib = (fibs(0l) + fibs(1l))/2\n\
    \        while (fib < n) {\n            fibs += fib\n            fib = (fibs(0l)\
    \ + fibs(1l))/2\n        }\n        fibs(n)", "        var a = 2l\n        var\
    \ b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n     \
    \   var f = 1l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n \
    \       var j = 13l\n        var k = 89l\n        var l = 1l\n        var m =\
    \ 2l\n        var n = 5l\n        var o = 3l\n        var p = 13l\n        var\
    \ q = 89l\n        var r = 1l\n        var s = 2l\n        var t = 5l\n      \
    \  var u = 3l\n        var v = 13l\n        var w = 89l\n        var x = 1l\n\
    \        var y = 2l\n        var z = 3l\n        var aa = 2l\n        var ab =\
    \ 3l\n        var ac = 5l\n        var ad = 13l\n        var ae = 89l\n      \
    \  var af = 1l\n        var ag = 2l\n        var ah = 3l\n        var ai = 5l\n\
    \        var aj = 13l\n        var ak = 89l\n        var al = 1l\n        var\
    \ am = 2l\n        var an = 5l\n        var ao = 3l\n        var ap = 13l\n  \
    \      var aq = 89l\n        var ar = 1l\n        var as = 2l\n        var at\
    \ = 5l\n        var au = 3l\n        var av = 13l\n        var aw = 89l\n    \
    \    var ax = 1l\n        var ay = 2l\n        var az = 3l\n        var ba = 2l\n\
    \        var bb = 3l\n        var bc = 5l\n        var bd = 13l\n        var be\
    \ = 89l\n        var bf = 1l\n        var bg = 2l\n        var bh = 3l\n     \
    \   var bi = 5l\n        var bj = 13l\n        var bk = 89l\n        var bl =\
    \ 1l\n        var bm = 2l\n        var bn = 5l\n        var bo = 3l\n        var\
    \ bp = 13l\n        var bq = 89l\n        var br = 1l\n        var bs = 2l\n \
    \       var bt = 5l\n        var bu = 3l\n        var bv = 13l\n        var bw\
    \ = 89l\n        var bx = 1l\n        var by = 2l\n        var bz = 3l\n     \
    \   var ca = 2l\n        var cb = 3l\n        var cc = 5l\n        var cd = 13l\n\
    \        var ce = 89l\n        var cf = 1l\n        var cg = 2l\n        var ch\
    \ = 3l\n        var ci = 5l\n        var cj = 13l\n        var ck = 89l\n    \
    \    var cl = 1l\n        var cm = 2l\n        var cn = 5l\n        var co = 3l\n\
    \        var cp = 13l\n        var cq = 89l\n        var cr = 1l\n        var\
    \ cs = 2l\n", "        val fib = scala.math.BigInt(1)\n        val prime = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime", "        val fibs = Vector.fill(n / 2)(2l)\n\
    \        fibs(0) = 1l\n        fibs(1) = 1l\n        fibs(2l) = fibs(1l) + fibs(0l)\n\
    \        fibs.drop(3).takeWhile(_ < n).last", "        val fib_cache = new mutable.HashMap[Long,\
    \ Long]\n        fib_cache.put(n, 1l)\n        fib_cache.put(n + 1, 2l)\n    \
    \    fib_cache.put(n + 2, 3l)\n        fib_cache.put(n + 3, 5l)\n        fib_cache.put(n\
    \ + 4, 13l)\n        fib_cache.put(n + 5, 89l)\n        fib_cache.put(n + 6, 101l)\n\
    \        fib_cache.put(n + 7, 121l)\n        fib_cache.put(n + 8, 141l)\n    \
    \    fib_cache.put(n + 9, 161l)\n        fib_cache.put(n + 10, 181l)\n       \
    \ fib_cache.put(n + 11, 21l)\n        fib_cache.put(n + 12, 23l)\n        fib_cache.put(n\
    \ + 13, 29l)\n        fib_cache.put(n + 14, 31l)\n        fib_cache.put(n + 15,\
    \ 37l)\n        fib_cache.put(n + 16, 41l)\n        fib_cache.put(n + 17, 43l)\n\
    \        fib_cache.put(n + 18, 47l)\n        fib_cache.put(n + 19, 53l)\n    \
    \    fib_cache.put(n + 20, 59l)\n        fib_cache.put(n + 21, 61l)\n        fib_cache.put(n\
    \ + 22, 67l)\n        fib_cache.put(n + 23, 71l)\n        fib_cache.put(n + 24,\
    \ 73l)\n        fib_cache.put(n + 25, 79l)\n        fib_cache.put(n + 26, 83l)\n\
    \        fib_cache.put(n + 27, 89l)\n        fib_cache.put(n + 28, 97l)\n    \
    \    fib_cache.put(n + 29, 101l)\n        fib_cache.put(n + 30, 103l)\n      \
    \  fib_cache.put(n + 31, 107l)\n        fib_cache.put(n + 32, 113l)\n        fib_cache.put(n\
    \ + 33, 119l)\n        fib_cache.put(n + 34, 121l)\n        fib_cache.put(n +\
    \ 35, 131l)\n        fib_cache.put(n + 36, 137l)\n        fib_cache.put(n + 37,\
    \ 142l)\n        fib_cache.put(n + 38, 147l)\n        fib_cache.put(n + 39, 151l)\n\
    \        fib_cache.put(n + 40, 157l)\n        fib_cache.put(n + 41, 163l)\n  \
    \      fib_cache.put(n + 42, 167l)\n        fib_cache.put(n + 43, 173l)\n    \
    \    fib_cache.put", "        var a : Long = 1l\n        var b : Long = 1l\n \
    \       var c : Long = 1l\n        var d : Long = 1l\n        var e : Long = 1l\n\
    \        var f : Long = 1l\n        var g : Long = 1l\n        var h : Long =\
    \ 1l\n        var i : Long = 1l\n        var j : Long = 1l\n        var k : Long\
    \ = 1l\n        var l : Long = 1l\n        var m : Long = 1l\n        var n :\
    \ Long = 1l\n        var o : Long = 1l\n        var p : Long = 1l\n        var\
    \ q : Long = 1l\n        var r : Long = 1l\n        var s : Long = 1l\n      \
    \  var t : Long = 1l\n        var u : Long = 1l\n        var v : Long = 1l\n \
    \       var w : Long = 1l\n        var x : Long = 1l\n        var y : Long = 1l\n\
    \        var z : Long = 1l\n        var a : Long = 1l\n        var b : Long =\
    \ 1l\n        var c : Long = 1l\n        var d : Long = 1l\n        var e : Long\
    \ = 1l\n        var f : Long = 1l\n        var g : Long = 1l\n        var h :\
    \ Long = 1l\n        var i : Long = 1l\n        var j : Long = 1l\n        var\
    \ k : Long = 1l\n        var l : Long = 1l\n        var m : Long = 1l\n      \
    \  var n : Long = 1l\n        var o : Long = 1l\n        var p : Long = 1l\n \
    \       var q : Long = 1l\n        var r : Long = 1l\n        var s : Long = 1l\n\
    \        var t : Long = 1l\n        var u : Long = 1l\n        var v : Long =\
    \ 1l\n        var w : Long = 1l\n        var x : Long = 1l\n        var y : Long\
    \ = 1l\n        var z : Long = 1l\n        var a : Long = 1l\n        var b :\
    \ Long = 1l\n        var c : Long = 1l\n        var d : Long = 1l\n        var\
    \ e : Long = 1l\n        var f : Long = 1l\n        var g : Long = 1l\n      \
    \  var h : Long = 1l\n        var i : Long = 1l\n        var j : Long = 1l\n \
    \       var k : Long = 1l\n        var l : Long = 1l\n        var m : Long = 1l\n\
    \        var n : Long = 1l\n        var o : Long = 1l\n        var p : Long =\
    \ 1l\n        var q : Long = 1l\n        var r : Long = 1l\n        var s : Long\
    \ = 1l\n        var t : Long = 1l\n        var u : Long = 1l\n        var v :\
    \ Long = 1l\n        var ", "        val fib_array = new Array[Long](5)\n    \
    \    fib_array(0) = 1l\n        fib_array(1) = 1l\n        fib_array(2) = 1l\n\
    \        fib_array(3) = 1l\n        fib_array(4) = 1l\n        fib_array(5) =\
    \ 1l\n        val i = 5\n        while(i <= n){\n            fib_array(i) = fib_array(i-1)\
    \ + fib_array(i-2)\n            i = i + 1\n        }\n        fib_array(n)", " \
    \       var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 0l\n        var g = 0l\n        var h =\
    \ 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n        var\
    \ l = 0l\n        var m = 2l\n        var n = 3l\n        var o = 5l\n       \
    \ var p = 13l\n        var q = 89l\n        var r = 2l\n        var s = 3l\n \
    \       var t = 5l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 2l\n\
    \        var n = 3l\n        var o = 5l\n        var p = 13l\n        var q =\
    \ 89l\n        var r = 2l\n        var s = 3l\n        var t = 5l\n        var\
    \ u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n       \
    \ var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n   \
    \     var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 2l\n        var n = 3l\n\
    \        var o = 5l\n        var p = 13l\n        var q = 89l\n        var r =\
    \ 2l\n        var s = 3l\n        var t = 5l\n        var u = 0l\n        var\
    \ v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n       \
    \ var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n   \
    \     var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 2l\n        var n = 3l\n        var o = 5l\n\
    \        var p = 13l\n        var q = 89l\n        var r = 2l\n        var s =\
    \ 3l\n        var t = 5l\n        var u = 0l\n        var v = 0l\n        var\
    \ w = 0l\n        var x = 0l\n        var y = 0l\n        var ", "        var\
    \ a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n      \
    \  var e = 89l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n \
    \       var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n\
    \        var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n\
    \        var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n\
    \        var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n\
    \        var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n",
  "        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 25l\n        var g = 101l\n        var h\
    \ = 413l\n        var i = 233l\n        var j = 867l\n        var k = 521l\n \
    \       var l = 729l\n        var m = 1279l\n        var n = 671l\n        var\
    \ o = 2517l\n        var p = 1025l\n        var q = 413l\n        var r = 233l\n\
    \        var s = 867l\n        var t = 521l\n        var u = 729l\n        var\
    \ v = 1279l\n        var w = 671l\n        var x = 2517l\n        var y = 1025l\n\
    \        var z = 413l\n        var a = 2l\n        var b = 3l\n        var c =\
    \ 5l\n        var d = 13l\n        var e = 89l\n        var f = 25l\n        var\
    \ g = 101l\n        var h = 413l\n        var i = 233l\n        var j = 867l\n\
    \        var k = 521l\n        var l = 729l\n        var m = 1279l\n        var\
    \ n = 671l\n        var o = 2517l\n        var p = 1025l\n        var q = 413l\n\
    \        var r = 233l\n        var s = 867l\n        var t = 521l\n        var\
    \ u = 729l\n        var v = 1279l\n        var w = 671l\n        var x = 2517l\n\
    \        var y = 1025l\n        var z = 413l\n        var a = 2l\n        var\
    \ b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n     \
    \   var f = 25l\n        var g = 101l\n        var h = 413l\n        var i = 233l\n\
    \        var j = 867l\n        var k = 521l\n        var l = 729l\n        var\
    \ m = 1279l\n        var n = 671l\n        var o = 2517l\n        var p = 1025l\n\
    \        var q = 413l\n        var r = 233l\n        var s = 867l\n        var\
    \ t = 521l\n        var u = 729l\n        var v = 1279l\n        var w = 671l\n\
    \        var x = 2517l\n        var y = 1025l\n        var z = 413l\n        var\
    \ a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n      \
    \  var e = 89l\n        var f = 25l\n        var g = 101l\n        var h = 413l\n\
    \        var i = 233l\n        var j = 867l\n        var k = 521l\n        var\
    \ l = 729l\n        var m = 1279l\n        var ", "        val fibs = Vector.fill(5)(2l)\n\
    \        fibs(0) = 1l\n        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3)\
    \ = 1l\n        fibs(4) = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ <\
    \ n).last", "        val fib_array = new Array[Long](n)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        val prime_array = new Array[Boolean](n)\n\
    \        prime_array(0) = false\n        prime_array(1) = false\n        for(i\
    \ <- 2 to n) {\n            val fib_value = fib_array(i)\n            val prime_check\
    \ = prime_array(i)\n            if(fib_value + fib_array(i-1) == fib_value &&\
    \ prime_check == false) {\n                fib_array(i) = fib_value + fib_array(i-1)\n\
    \                prime_array(i) = true\n            }\n        }\n        fib_array(n)",
  "        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = 1l\n        fibs(1)\
    \ = 1l\n        fibs(2) = 1l\n        fibs.takeWhile(_ < n).foreach(x => fibs(x)\
    \ = fibs(x - 1) + fibs(x - 2))\n        fibs(n)", "        var a = 2l\n      \
    \  var b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n\
    \        var f = 0l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n\
    \        var j = 1l\n        var k = 5l\n        var l = 13l\n        var m =\
    \ 89l\n        var n = 2l\n        var o = 3l\n        var p = 5l\n        var\
    \ q = 13l\n        var r = 89l\n        var s = 2l\n        var t = 3l\n     \
    \   var u = 5l\n        var v = 13l\n        var w = 89l\n        var x = 2l\n\
    \        var y = 3l\n        var z = 5l\n        var a = 2l\n        var b = 3l\n\
    \        var c = 5l\n        var d = 13l\n        var e = 89l\n        var f =\
    \ 0l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n        var\
    \ j = 1l\n        var k = 5l\n        var l = 13l\n        var m = 89l\n     \
    \   var n = 2l\n        var o = 3l\n        var p = 5l\n        var q = 13l\n\
    \        var r = 89l\n        var s = 2l\n        var t = 3l\n        var u =\
    \ 5l\n        var v = 13l\n        var w = 89l\n        var x = 2l\n        var\
    \ y = 3l\n        var z = 5l\n        var a = 2l\n        var b = 3l\n       \
    \ var c = 5l\n        var d = 13l\n        var e = 89l\n        var f = 0l\n \
    \       var g = 2l\n        var h = 3l\n        var i = 5l\n        var j = 1l\n\
    \        var k = 5l\n        var l = 13l\n        var m = 89l\n        var n =\
    \ 2l\n        var o = 3l\n        var p = 5l\n        var q = 13l\n        var\
    \ r = 89l\n        var s = 2l\n        var t = 3l\n        var u = 5l\n      \
    \  var v = 13l\n        var w = 89l\n        var x = 2l\n        var y = 3l\n\
    \        var z = 5l\n        var a = 2l\n        var b = 3l\n        var c = 5l\n\
    \        var d = 13l\n        var e = 89l\n        var f = 0l\n        var g =\
    \ 2l\n        var h = 3l\n        var i = 5l\n        var j = 1l\n        var\
    \ k = 5l\n        var l = 13l\n        var m = 89l\n        var n = 2l\n     \
    \   var o = 3l\n        var p = 5l\n        var q = 13l\n        var r = 89l\n\
    \        var s = 2l\n        var t = 3l\n        var u = 5l\n        var v = 13l\n\
    \        var w = 89l\n        var x = 2l\n        var y", "        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 13l\n        var e =\
    \ 89l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n        var\
    \ i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n       \
    \ var m = 2l\n        var n = 2l\n        var o = 2l\n        var p = 3l\n   \
    \     var q = 3l\n        var r = 5l\n        var s = 13l\n        var t = 89l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n\
    \        var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 2l\n        var n = 2l\n\
    \        var o = 2l\n        var p = 3l\n        var q = 3l\n        var r = 5l\n\
    \        var s = 13l\n        var t = 89l\n        var u = 0l\n        var v =\
    \ 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n        var\
    \ z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n       \
    \ var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n   \
    \     var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 2l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 3l\n        var q = 3l\n        var r = 5l\n        var s = 13l\n\
    \        var t = 89l\n        var u = 0l\n        var v = 0l\n        var w =\
    \ 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n        var\
    \ a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n       \
    \ var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n   \
    \     var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 2l\n        var n = 2l\n        var o = 2l\n        var p = 3l\n\
    \        var q = 3l\n        var r = 5l\n        var s = 13l\n        var t =\
    \ 89l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n        var\
    \ x = 0l\n        var y = 0l\n        var ", "        var a = 2l\n        var\
    \ b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n     \
    \   var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n \
    \       var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n", "        val fibs\
    \ = mutable.ArrayBuffer(1l, 2l)\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fib", "        var a = 2l\n        var b = 3l\n        var c = 5l\n \
    \       var d = 13l\n        var e = 89l\n        var f = 0l\n        var g =\
    \ 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n        var\
    \ k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n       \
    \ var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n   \
    \     var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n\
    \        var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n\
    \        var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n\
    \        var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n\
    \        var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n\
    \        var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n", "        val fibs = Vector.fill(n\
    \ / 2l)(2l)\n        fibs(n / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs.last",
  "        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 1l\n        var g = 2l\n        var h =\
    \ 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n        var\
    \ l = 5l\n        var m = 13l\n        var n = 89l\n        var o = 1l\n     \
    \   var p = 2l\n        var q = 3l\n        var r = 5l\n        var s = 13l\n\
    \        var t = 89l\n        var u = 1l\n        var v = 2l\n        var w =\
    \ 3l\n        var x = 5l\n        var y = 13l\n        var z = 89l\n        var\
    \ a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n      \
    \  var e = 89l\n        var f = 1l\n        var g = 2l\n        var h = 3l\n \
    \       var i = 5l\n        var j = 1l\n        var k = 2l\n        var l = 5l\n\
    \        var m = 13l\n        var n = 89l\n        var o = 1l\n        var p =\
    \ 2l\n        var q = 3l\n        var r = 5l\n        var s = 13l\n        var\
    \ t = 89l\n        var u = 1l\n        var v = 2l\n        var w = 3l\n      \
    \  var x = 5l\n        var y = 13l\n        var z = 89l\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 13l\n        var e =\
    \ 89l\n        var f = 1l\n        var g = 2l\n        var h = 3l\n        var\
    \ i = 5l\n        var j = 1l\n        var k = 2l\n        var l = 5l\n       \
    \ var m = 13l\n        var n = 89l\n        var o = 1l\n        var p = 2l\n \
    \       var q = 3l\n        var r = 5l\n        var s = 13l\n        var t = 89l\n\
    \        var u = 1l\n        var v = 2l\n        var w = 3l\n        var x = 5l\n\
    \        var y = 13l\n        var z = 89l\n        var a = 2l\n        var b =\
    \ 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n        var\
    \ f = 1l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n       \
    \ var j = 1l\n        var k = 2l\n        var l = 5l\n        var m = 13l\n  \
    \      var n = 89l\n        var o = 1l\n        var p = 2l\n        var q = 3l\n\
    \        var r = 5l\n        var s = 13l\n        var t = 89l\n        var u =\
    \ 1l\n        var v = 2l\n        var w = 3l\n        var x = 5l\n        var\
    \ y = ", "        val fibs = Vector.fill(n / 2l)(2l)\n        fibs(n / 2l) -=\
    \ 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l)\
    \ -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n /\
    \ 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l"]
stop_tokens:
- "\n    }\n"

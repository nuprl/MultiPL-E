language: scala
name: HumanEval_83_starts_one_ends
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        for\
    \ (i <- 1 to n) ones += i\n        ones.count(_ == 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdy3qr2ut.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpdy3qr2ut.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) ones +=\
    \ i\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m       \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount =\
    \ mutable.ListBuffer[Long]()\n        val countsCount = mutable.ListBuffer[Long]()\n\
    \        val onesCountCount = mutable.ListBuffer[Long]()\n        val zerosCountCount\
    \ = mutable.ListBuffer[Long]()\n        val countsCountCount = mutable.ListBuffer[Long]()\n\
    \        val onesCountCountCount = mutable.ListBuffer[Long]()\n        val zerosCountCountCount\
    \ = mutable.ListBuffer[Long]()\n        val countsCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val onesCountCountCountCount = mutable.ListBuffer[Long]()\n        val\
    \ zerosCountCountCountCount = mutable.ListBuffer[Long]()\n        val countsCountCountCountCount\
    \ = mutable.ListBuffer[Long]()\n        val onesCountCountCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val zerosCountCountCountCountCount = mutable.ListBuffer[Long]()\n   \
    \     val countsCountCountCountCountCount = mutable.ListBuffer[Long]()\n     \
    \   val onesCountCountCountCountCount = mutable.ListBuffer[Long]()\n        val\
    \ zerosCountCountCountCountCount = mutable.ListBuffer[Long]()\n        val countsCountCountCountCountCount\
    \ = mutable.ListBuffer[Long]()\n        val onesCountCountCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val zerosCountCountCountCountCount = mutable.ListBuffer[Long]()\n   \
    \     val countsCountCountCountCountCount = mutable.ListBuffer[Long]()\n     \
    \   val onesCountCountCountCountCount = mutable.ListBuffer[Long]()\n        val\
    \ zerosCountCountCountCountCount = mutable.ListBuffer[Long]()\n        val countsCountCountCountCountCount\
    \ = mutable.ListBuffer[Long]()\n        val onesCountCountCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val zerosCountCountCountCountCount = mutable.ListBuffer[Long]()\n   \
    \     val countsCountCountCountCountCount = mutable.ListBuffer[Long]()\n     \
    \   val onesCountCountCountCountCount = mutable.ListBuffer[Long]()\n        val\
    \ zerosCountCountCountCountCount = \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp_8ggrwzw.scala:38:44 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        \e[33mval\e[0m \e[36mzerosCountCountCountCountCount\e\
    [0m = \n\e[31m\e[31m   |\e[0m                                            ^\e[0m\n\
    \e[31m   |\e[0m                                       expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_8ggrwzw.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCountCountCountCountCount\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCountCountCountCountCount is already defined as \e[33mvalue\e\
    [0m \e[35monesCountCountCountCountCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_8ggrwzw.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mzerosCountCountCountCountCount\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCountCountCountCountCount is already defined as \e[33mvalue\e\
    [0m \e[35mzerosCountCountCountCountCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_8ggrwzw.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mcountsCountCountCountCountCount\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcountsCountCountCountCountCount is already defined as \e[33mvalue\e\
    [0m \e[35mcountsCountCountCountCountCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ d"
  stdout: ''
  timestamp: 1659798551
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var i = n\n        while(i\
    \ >= 10) {\n            i /= 10\n            count += 1\n        }\n        while(i\
    \ >= 1) {\n            i /= 10\n            count += 1\n        }\n        return\
    \ count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpm8478853.scala:21)\n\tat Problem.main(tmpm8478853.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpm7jochjy.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpm7jochjy.scala:10:12 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpm7jochjy.scala:11:12 ---------------------------\e[0m\e[0m\n\e\
    [31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpm7jochjy.scala:12:12 ---------------------------\e[0m\e[0m\n\e\
    [31m12 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpm7jochjy.scala:13:12 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     "
  stdout: ''
  timestamp: 1659798550
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount\
    \ = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n      \
    \  val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n\
    \        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n\
    \        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n\
    \        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n\
    \        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n\
    \        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n\
    \        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n\
    \        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n\
    \        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n\
    \        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n\
    \        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n\
    \        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n\
    \        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n\
    \        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n\
    \        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n\
    \        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n\
    \        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt9nch94n.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m         \
    \          ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:8:24\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m    \
    \                    ^^^^^^^\e[0m\n\e[31m  |\e[0m                        Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:9:25\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m   \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                         Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:10:25\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount3\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount4\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val start = scala.math.pow(10, n).toLong\n        val end = start + scala.math.pow(10,\
    \ n).toLong - 1\n        while(start <= end) {\n            val mid = start +\
    \ (end - start) / 2\n            if(mid % 10 == 1) {\n                ones +=\
    \ mid\n            } else {\n                zeros += mid\n            }\n   \
    \         counts(mid) += 1\n            start = mid + 1\n        }\n        ones.size\
    \ + zeros.size + 1\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3o9l7hb5.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3o9l7hb5.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3o9l7hb5.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp3o9l7hb5.scala:20:18 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            start = mid + \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val start\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659798547
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        var current\
    \ = 1\n        while(current <= n){\n            val next = (current * 10).toLong\n\
    \            if(next == 1){\n                count += 1\n            }\n     \
    \       current = next\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjb8_o1t0.scala:15:22\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m            current = next\n\e\
    [31m\e[31m   |\e[0m                      ^^^^\e[0m\n\e[31m   |\e[0m          \
    \            Found:    (next : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    for (i <- 1 to n) {\n            if (i % 10 == 1) {\n                ones\
    \ += i\n            } else {\n                zeros += i\n            }\n    \
    \    }\n        ones.foreach { i =>\n            counts(i) ++ zeros.size\n   \
    \     }\n        ones.size + zeros.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr8ul2g20.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpr8ul2g20.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpr8ul2g20.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpr8ul2g20.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer(0)\n    \
    \    val maxDigit = math.min(math.ceil(n/10), n).toInt\n        val digits = math.ceil(n/maxDigit).toInt\n\
    \        val digit = math.min(n, maxDigit).toInt\n        while(digit > 0) {\n\
    \            val digits = math.ceil(digit/maxDigit).toInt\n            val digit\
    \ = math.min(digit, n).toInt\n            while(digits > 0) {\n              \
    \  val digit = math.min(digit, n).toInt\n                val digits = math.ceil(digit/maxDigit).toInt\n\
    \                val digit = math.min(digit, n).toInt\n                val digits\
    \ = math.ceil(digit/maxDigit).toInt\n                val digit = math.min(digit,\
    \ n).toInt\n                val digits = math.ceil(digit/maxDigit).toInt\n   \
    \             val digit = math.min(digit, n).toInt\n                val digits\
    \ = math.ceil(digit/maxDigit).toInt\n                val digit = math.min(digit,\
    \ n).toInt\n                val digits = math.ceil(digit/maxDigit).toInt\n   \
    \             val digit = math.min(digit, n).toInt\n                val digits\
    \ = math.ceil(digit/maxDigit).toInt\n                val digit = math.min(digit,\
    \ n).toInt\n                val digits = math.ceil(digit/maxDigit).toInt\n   \
    \             val digit = math.min(digit, n).toInt\n                val digits\
    \ = math.ceil(digit/maxDigit).toInt\n                val digit = math.min(digit,\
    \ n).toInt\n                val digits = math.ceil(digit/maxDigit).toInt\n   \
    \             val digit = math.min(digit, n).toInt\n                val digits\
    \ = math.ceil(digit/maxDigit).toInt\n                val digit = math.min(digit,\
    \ n).toInt\n                val digits = math.ceil(digit/maxDigit).toInt\n   \
    \             val digit = math.min(digit, n).toInt\n                val digits\
    \ = math.ceil(digit/maxDigit).toInt\n                val digit = math.min(digit,\
    \ n).toInt\n                val digits = math.ceil(digit/maxDigit).toInt\n   \
    \             val digit = math.min(digit, n).toInt\n                val digits\
    \ = math.ceil(digit/maxDigit).toInt\n                val digit = math.min(digit,\
    \ n).toInt\n                val digits = math.ceil(digit/maxDigit).toInt\n   \
    \             val digit = math.min(digit, n).toInt\n                val digits\
    \ = math.ceil(digit/maxDigit).toInt\n                val digit = math.min(digit,\
    \ n).toInt\n                val digits = math.ceil(digit/maxDigit).toInt\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) ==\
    \ (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpsr3qkxf5.scala:61:0 ----------------------------\e\
    [0m\e[0m\n\e[31m61 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsr3qkxf5.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \             ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsr3qkxf5.scala:8:20\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mzeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \               ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsr3qkxf5.scala:9:21\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                 ^^^^^^^\e[0m\n\e[31m  |\e[0m                     Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpsr3qkxf5.scala:15:33\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e\
    [0m \e[36mdigit\e[0m = math.min(digit, n).toInt\n\e[31m\e[31m   |\e[0m       \
    \                          ^\e[0m\n\e[31m   |\e[0m                           \
    \      Recursive \e[33mvalue\e[0m \e[35mdigit\e[0m needs type\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpsr3qkxf5.scala:19:20 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                \e[33mval\e[0m \e[36mdigit\e[0m = math.min(digit,\
    \ n).toInt\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mdigit is already defined as \e[33mvalue\e[0m \e[35mdigit\e\
    [0m\n\e[31m   |\e[0m\n\e[31m"
  stdout: ''
  timestamp: 1659798547
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer.empty[Long]\n      \
    \  val zeros = mutable.ListBuffer.empty[Long]\n        val onesCount = mutable.ListBuffer.empty[Long]\n\
    \        val zerosCount = mutable.ListBuffer.empty[Long]\n        val onesCount2\
    \ = mutable.ListBuffer.empty[Long]\n        val zerosCount2 = mutable.ListBuffer.empty[Long]\n\
    \        val onesCount3 = mutable.ListBuffer.empty[Long]\n        val zerosCount3\
    \ = mutable.ListBuffer.empty[Long]\n        val onesCount4 = mutable.ListBuffer.empty[Long]\n\
    \        val zerosCount4 = mutable.ListBuffer.empty[Long]\n        val onesCount5\
    \ = mutable.ListBuffer.empty[Long]\n        val zerosCount5 = mutable.ListBuffer.empty[Long]\n\
    \        val onesCount6 = mutable.ListBuffer.empty[Long]\n        val zerosCount6\
    \ = mutable.ListBuffer.empty[Long]\n        val onesCount7 = mutable.ListBuffer.empty[Long]\n\
    \        val zerosCount7 = mutable.ListBuffer.empty[Long]\n        val onesCount8\
    \ = mutable.ListBuffer.empty[Long]\n        val zerosCount8 = mutable.ListBuffer.empty[Long]\n\
    \        val onesCount9 = mutable.ListBuffer.empty[Long]\n        val zerosCount9\
    \ = mutable.ListBuffer.empty[Long]\n        val onesCount10 = mutable.ListBuffer.empty[Long]\n\
    \        val zerosCount10 = mutable.ListBuffer.empty[Long]\n        val onesCount11\
    \ = mutable.ListBuffer.empty[Long]\n        val zerosCount11 = mutable.ListBuffer.empty[Long]\n\
    \        val onesCount12 = mutable.ListBuffer.empty[Long]\n        val zerosCount12\
    \ = mutable.ListBuffer.empty[Long]\n        val onesCount13 = mutable.ListBuffer.empty[Long]\n\
    \        val zerosCount13 = mutable.ListBuffer.empty[Long]\n        val onesCount14\
    \ = mutable.ListBuffer.empty[Long]\n        val zerosCount14 = mutable.ListBuffer.empty[Long]\n\
    \        val onesCount15 = mutable.ListBuffer.empty[Long]\n        val zerosCount15\
    \ = mutable.ListBuffer.empty[Long]\n        val onesCount16 = mutable.ListBuffer.empty[Long]\n\
    \        val zerosCount16 = mutable.ListBuffer.empty[Long]\n        val onesCount17\
    \ = mutable.ListBuffer.empty[Long]\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2mrpw8a6.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2mrpw8a6.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m \
    \ |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp2mrpw8a6.scala:9:24 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp2mrpw8a6.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp2mrpw8a6.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp2mrpw8a6.scala:12:26 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n     \
    \   val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n\
    \        val digits = n.toString.reverse.grouped(2).map(_.toInt)\n        val\
    \ digit = digits.head\n        val digits = digits.tail\n        val starts =\
    \ digits.takeWhile(digit => digit == 1).length\n        val ends = digits.dropWhile(digit\
    \ => digit == 1).length\n        counts.put(digit, starts + ends)\n        counts.put(digits,\
    \ starts + ends)\n        counts.put(ones, starts)\n        counts.put(zeros,\
    \ ends)\n        counts.put(n, 0)\n        counts.toMap\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkexqetrf.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = digits.tail\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mdigits\
    \ is already defined as \e[33mvalue\e[0m \e[35mdigits\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkexqetrf.scala:7:21\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.HashMap[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e\
    [31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                \
    \     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkexqetrf.scala:8:19\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \             ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkexqetrf.scala:9:20\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mzeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \               ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkexqetrf.scala:11:27\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mdigit\e[0m = digits.head\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m value head is not a member of Iterator[Int] - did you mean\
    \ digits.find?\n5 errors found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n       \
    \ val zerosCount = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCountss = mutable.Set[Long]()\n\
    \        val zerosCountss = mutable.Set[Long]()\n        val onesCountsss = mutable.Set[Long]()\n\
    \        val zerosCountsss = mutable.Set[Long]()\n        val onesCountssss =\
    \ mutable.Set[Long]()\n        val zerosCountssss = mutable.Set[Long]()\n    \
    \    val onesCountsssss = mutable.Set[Long]()\n        val zerosCountsssss = mutable.Set[Long]()\n\
    \        val onesCountssssss = mutable.Set[Long]()\n        val zerosCountssssss\
    \ = mutable.Set[Long]()\n        val onesCountsssssss = mutable.Set[Long]()\n\
    \        val zerosCountsssssss = mutable.Set[Long]()\n        val onesCountssssssss\
    \ = mutable.Set[Long]()\n        val zerosCountsssssss = mutable.Set[Long]()\n\
    \        val onesCountssssssss = mutable.Set[Long]()\n        val zerosCountsssssss\
    \ = mutable.Set[Long]()\n        val onesCountssssssss = mutable.Set[Long]()\n\
    \        val zerosCountsssssss = mutable.Set[Long]()\n        val onesCountssssssss\
    \ = mutable.Set[Long]()\n        val zerosCountssssssss = mutable.Set[Long]()\n\
    \        val onesCountsssssssss = mutable.Set[Long]()\n        val zerosCountssssssss\
    \ = mutable.Set[Long]()\n        val onesCountsssssssss = mutable.Set[Long]()\n\
    \        val zerosCountssssssss = mutable.Set[Long]()\n        val onesCountsssssssss\
    \ = mutable.Set[Long]()\n        val zerosCountssssssss = mutable.Set[Long]()\n\
    \        val onesCountsssss\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqw0uq_dj.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqw0uq_dj.scala:26:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m\
    \ \e[36mzerosCountsssssss\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mzerosCountsssssss is already defined as \e[33mvalue\e[0m \e[35mzerosCountsssssss\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqw0uq_dj.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36monesCountssssssss\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCountssssssss is already defined as \e[33mvalue\e[0m \e\
    [35monesCountssssssss\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpqw0uq_dj.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mzerosCountsssssss\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCountsssssss is already defined as \e[33mvalue\e[0m \e\
    [35mzerosCountsssssss\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpqw0uq_dj.scala:29:12 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36monesCountssssssss\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCountssssssss is already defined as \e[33mvalue\e[0m \e\
    [35monesCountssssssss\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must al"
  stdout: ''
  timestamp: 1659798550
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n\
    \        while(n > 0) {\n            val digit = n % 10\n            n /= 10\n\
    \            if(digit == 1) ones += digit\n            else if(digit == 0) zeros\
    \ += digit\n            else {\n                val index = ones.indexOf(digit)\n\
    \                if(index >= 0) counts(index) += 1\n                else {\n \
    \                   val index = zeros.indexOf(digit)\n                    if(index\
    \ >= 0) counts(index) += 1\n                }\n            }\n        }\n    \
    \    counts.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3rqg2vu.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpp3rqg2vu.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpp3rqg2vu.scala:9:21 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpp3rqg2vu.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of\
    \ Long - did you mean n.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer(0)\n    \
    \    val remainder = n % 10\n        val lastDigit = n % 100\n        val lastDigitCount\
    \ = if (lastDigit == 0) 1 else 0\n        val lastDigitCount = if (lastDigit ==\
    \ 0) 1 else 0\n        val lastDigitCount = if (lastDigit == 0) 1 else 0\n   \
    \     val lastDigitCount = if (lastDigit == 0) 1 else 0\n        val lastDigitCount\
    \ = if (lastDigit == 0) 1 else 0\n        val lastDigitCount = if (lastDigit ==\
    \ 0) 1 else 0\n        val lastDigitCount = if (lastDigit == 0) 1 else 0\n   \
    \     val lastDigitCount = if (lastDigit == 0) 1 else 0\n        val lastDigitCount\
    \ = if (lastDigit == 0) 1 else 0\n        val lastDigitCount = if (lastDigit ==\
    \ 0) 1 else 0\n        val lastDigitCount = if (lastDigit == 0) 1 else 0\n   \
    \     val lastDigitCount = if (lastDigit == 0) 1 else 0\n        val lastDigitCount\
    \ = if (lastDigit == 0) 1 else 0\n        val lastDigitCount = if (lastDigit ==\
    \ 0) 1 else 0\n        val lastDigitCount = if (lastDigit == 0) 1 else 0\n   \
    \     val lastDigitCount = if (lastDigit == 0) 1 else 0\n        val lastDigitCount\
    \ = if (lastDigit == 0) 1 else 0\n        val lastDigitCount = if (lastDigit ==\
    \ 0) 1 else 0\n        val lastDigitCount = if (lastDigit == 0) 1 else 0\n   \
    \     val lastDigitCount = if (lastDigit == 0) 1 else 0\n        val lastDigitCount\
    \ = if (lastDigit == 0) 1 else 0\n        val lastDigitCount = if (lastDigit ==\
    \ 0) 1 else 0\n        val lastDigitCount = if (lastDigit == 0) 1 else 0\n   \
    \     val lastDigitCount = if (lastDigit == 0) 1 else 0\n        val lastDigitCount\
    \ = if (lastDigit == 0) 1 else 0\n        val lastDigitCount = if (lastDigit ==\
    \ 0) 1 else 0\n        val lastDigitCount = if (lastDigit == 0) 1 else 0\n   \
    \     val lastDigitCount = if (lastDigit == 0) 1 else 0\n        val lastDigitCount\
    \ = if (lastDigit == 0) 1 else 0\n        val lastDigitCount = if (lastDigit ==\
    \ 0) 1 else 0\n        val lastDigitCount = if (lastDigit == 0) 1 else 0\n   \
    \     val lastDigitCount = if (lastDigit == 0) 1 else 0\n        val lastDigitCount\
    \ = if (lastDigit == 0) 1 else 0\n        val lastDigitCount = \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n  \
    \  assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n\
    \    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) ==\
    \ (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3fp9qiuq.scala:45:28 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mval\e[0m \e[36mlastDigitCount\e[0m = \n\
    \e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m     \
    \                       expression expected but \e[31m'}'\e[0m found\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3fp9qiuq.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mlastDigitCount\e[0m = \e\
    [33mif\e[0m (lastDigit == \e[31m0\e[0m) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlastDigitCount is already defined as \e[33mvalue\e[0m \e[35mlastDigitCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3fp9qiuq.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mlastDigitCount\e[0m = \e[33mif\e[0m\
    \ (lastDigit == \e[31m0\e[0m) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mlastDigitCount is already defined as \e[33mvalue\e[0m \e[35mlastDigitCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3fp9qiuq.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mlastDigitCount\e[0m = \e[33mif\e[0m\
    \ (lastDigit == \e[31m0\e[0m) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mlastDigitCount is already defined as \e[33mvalue\e[0m \e[35mlastDigitCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3fp9qiuq.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   val onesCount = mutable.ArrayBuffer(0)\n        val zerosCount = mutable.ArrayBuffer(0)\n\
    \        val onesCount2 = mutable.ArrayBuffer(0)\n        val zerosCount2 = mutable.ArrayBuffer(0)\n\
    \        val onesCount3 = mutable.ArrayBuffer(0)\n        val zerosCount3 = mutable.ArrayBuffer(0)\n\
    \        val onesCount4 = mutable.ArrayBuffer(0)\n        val zerosCount4 = mutable.ArrayBuffer(0)\n\
    \        val onesCount5 = mutable.ArrayBuffer(0)\n        val zerosCount5 = mutable.ArrayBuffer(0)\n\
    \        val onesCount6 = mutable.ArrayBuffer(0)\n        val zerosCount6 = mutable.ArrayBuffer(0)\n\
    \        val onesCount7 = mutable.ArrayBuffer(0)\n        val zerosCount7 = mutable.ArrayBuffer(0)\n\
    \        val onesCount8 = mutable.ArrayBuffer(0)\n        val zerosCount8 = mutable.ArrayBuffer(0)\n\
    \        val onesCount9 = mutable.ArrayBuffer(0)\n        val zerosCount9 = mutable.ArrayBuffer(0)\n\
    \        val onesCount10 = mutable.ArrayBuffer(0)\n        val zerosCount10 =\
    \ mutable.ArrayBuffer(0)\n        val onesCount11 = mutable.ArrayBuffer(0)\n \
    \       val zerosCount11 = mutable.ArrayBuffer(0)\n        val onesCount12 = mutable.ArrayBuffer(0)\n\
    \        val zerosCount12 = mutable.ArrayBuffer(0)\n        val onesCount13 =\
    \ mutable.ArrayBuffer(0)\n        val zerosCount13 = mutable.ArrayBuffer(0)\n\
    \        val onesCount14 = mutable.ArrayBuffer(0)\n        val zerosCount14 =\
    \ mutable.ArrayBuffer(0)\n        val onesCount15 = mutable.ArrayBuffer(0)\n \
    \       val zerosCount15 = mutable.ArrayBuffer(0)\n        val onesCount16 = mutable.ArrayBuffer(0)\n\
    \        val zerosCount16 = mutable.ArrayBuffer(0)\n        val onesCount17 =\
    \ mutable.ArrayBuffer(0)\n        val zerosCount17 = mutable.ArrayBuffer(0)\n\
    \        val onesCount18 = mutable.ArrayBuffer(0)\n        val zerosCount18 =\
    \ mutable.ArrayBuffer(0)\n        val onesCount19 = mutable.ArrayBuffer(0)\n \
    \       val zerosCount19 = mutable.ArrayBuffer(0)\n        val onesCount20 = mutable.ArrayBuffer(0)\n\
    \        val zerosCount20 = mutable.ArrayBuffer(0)\n        val onesCount21 =\
    \ mutable.\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp86z9bj1u.scala:51:4 ----------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp86z9bj1u.scala:7:19 -------------------------\e[0m\e[0m\n\e[31m7\
    \ |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e\
    [0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \               Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp86z9bj1u.scala:8:20 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\
    \e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e[0m         \
    \           Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp86z9bj1u.scala:9:20 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\
    \e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e[0m         \
    \           Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp86z9bj1u.scala:10:24 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ArrayBuffer(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp86z9bj1u.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when comp"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   var i = 0\n        while (i < n) {\n            if (ones.contains(i)) {\n\
    \                count += 1\n            }\n            if (zeros.contains(i))\
    \ {\n                count += 1\n            }\n            i += 1\n        }\n\
    \        count.length\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwwdi9o6z.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpwwdi9o6z.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpwwdi9o6z.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798548
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   val onesCount = mutable.ArrayBuffer(0)\n        val zerosCount = mutable.ArrayBuffer(0)\n\
    \        val onesZeros = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val onesOnes = mutable.ArrayBuffer(0)\n        val zerosZeros = mutable.ArrayBuffer(0)\n\
    \        val onesZeroOnes = mutable.ArrayBuffer(0)\n        val zerosOneOnes =\
    \ mutable.ArrayBuffer(0)\n        val onesOneOnes = mutable.ArrayBuffer(0)\n \
    \       val zerosZeroOnes = mutable.ArrayBuffer(0)\n        val onesZeroZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosOneZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val onesOneZeroOnes = mutable.ArrayBuffer(0)\n        val zerosZeroOneOnes\
    \ = mutable.ArrayBuffer(0)\n        val onesZeroOneOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOneZeroOnes = mutable.ArrayBuffer(0)\n        val onesOneZeroOneOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosZeroOneZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val onesOneZeroZeroOneOnes = mutable.ArrayBuffer(0)\n        val zerosOneZeroZeroOneOnes\
    \ = mutable.ArrayBuffer(0)\n        val onesOneZeroOneZeroOneOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosZeroOneZeroOneOneOnes = mutable.ArrayBuffer(0)\n        val\
    \ onesOneZeroZeroOneZeroOneOnes = mutable.ArrayBuffer(0)\n        val zerosOneZeroZeroOneZeroOneOnes\
    \ = mutable.ArrayBuffer(0)\n        val onesOneZeroOneZeroOneZeroOneOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosZeroOneZeroOneZeroOneOneOnes = mutable.ArrayBuffer(0)\n    \
    \    val onesOneZeroOneZeroOneZeroOneOnes = mutable.ArrayBuffer(0)\n        val\
    \ zerosOneZeroZeroOneZeroOneOneOnes = mutable.ArrayBuffer(0)\n        val onesOneZeroOneZeroOneZeroOneZeroOneOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosZeroOneZeroOneZeroOneZeroOneOneOnes\
    \ = mutable.ArrayBuffer(0)\n        val onesOneZeroOneZeroOneZeroOneZeroOneOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosOneZeroZeroOneZeroOneZeroOneOneOnes\
    \ = mutable.ArrayBuffer(0)\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpnxt25ge1.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mzerosOneZeroOnes\e[0m =\
    \ mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosOneZeroOnes is already defined as \e[33mvalue\e[0m \e\
    [35mzerosOneZeroOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpnxt25ge1.scala:36:12 ---------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m        \e[33mval\e[0m \e[36monesOneZeroOneZeroOneZeroOneOnes\e\
    [0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesOneZeroOneZeroOneZeroOneOnes is already defined as \e\
    [33mvalue\e[0m \e[35monesOneZeroOneZeroOneZeroOneOnes\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpnxt25ge1.scala:40:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesOneZeroOneZeroOneZeroOneZeroOneOnes\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesOneZeroOneZeroOneZeroOneZeroOneOnes is already defined\
    \ as \e[33mvalue\e[0m \e[35monesOneZeroOneZeroOneZeroOneZeroOneOnes\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpnxt25ge1.scala:7:19 -------------------------\e[0m\e[0m\n\e[31m7 |\e\
    [0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m)\n\
    \e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \         Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpnxt25ge1.scala:8:20 -----------------------"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastOne\
    \ = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour\
    \ = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven\
    \ = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen\
    \ = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen\
    \ = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var\
    \ lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n\
    \        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne\
    \ = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n      \
    \  var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix\
    \ = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n    \
    \    var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne\
    \ = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n      \
    \  var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix\
    \ = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n    \
    \    var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne\
    \ = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n      \
    \  var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix\
    \ = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n    \
    \    var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne\
    \ = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var\
    \ lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix =\
    \ 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var\
    \ lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n\
    \        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour\
    \ = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var\
    \ lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptku37em0.scala:77:5\
    \ ---------------------\e[0m\e[0m\n\e[31m77 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        while(n\
    \ > 0){\n            val next = (n % 10) + 1\n            if(next == 1){\n   \
    \             count += 1\n            }\n            n /= 10\n        }\n    \
    \    last\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyy5hpqu2.scala:14:14 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of\
    \ Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var\
    \ count = 0\n        while(n > 0){\n            ones += n\n            n -= 1\n\
    \        }\n        ones.length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp25yx40s6.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp25yx40s6.scala:11:14 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros\
    \ = mutable.ListBuffer(0)\n        var count = 0\n        while(n > 0){\n    \
    \        val digit = n % 10\n            if(digit == 1){\n                ones\
    \ += digit\n            }\n            else{\n                zeros += digit\n\
    \            }\n            n /= 10\n        }\n        ones.length match {\n\
    \            case 0 => count\n            case 1 => count + ones.length\n    \
    \        case _ => count + ones.length + zeros.length\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n  \
    \  assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n\
    \    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) ==\
    \ (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp34ci9isy.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp34ci9isy.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp34ci9isy.scala:18:14 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m    \
    \        ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long\
    \ - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var\
    \ count = 0\n        for(i <- 1 to n){\n            if(i%10 == 1){\n         \
    \       ones += i\n                count += 1\n            }\n        }\n    \
    \    ones.length\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp51lo08u_.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp51lo08u_.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val digits = n.toString.reverse.grouped(10).toList\n        for (i <- 0 until\
    \ digits.size) {\n            val digit = digits(i)\n            if (digit.head\
    \ == 1) {\n                ones ++= digit.tail\n            } else {\n       \
    \         zeros ++= digit.tail\n            }\n        }\n        ones.toSeq.count(i\
    \ => i == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_p4o0hfy.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_p4o0hfy.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_p4o0hfy.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798556
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   val onesCount = mutable.ArrayBuffer(0)\n        val zerosCount = mutable.ArrayBuffer(0)\n\
    \        val onesZeros = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val onesOnes = mutable.ArrayBuffer(0)\n        val zerosZeros = mutable.ArrayBuffer(0)\n\
    \        val zerosZeros = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val onesZeros = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosZeros = mutable.ArrayBuffer(0)\n        val zerosZeros = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val onesOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOnes = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmprlp9ewl_.scala:54:4 ----------------------------\e\
    [0m\e[0m\n\e[31m54 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmprlp9ewl_.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mzerosZeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosZeros is already defined as \e[33mvalue\e[0m \e[35mzerosZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmprlp9ewl_.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mzerosOnes\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosOnes is already defined as \e[33mvalue\e[0m \e[35mzerosOnes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmprlp9ewl_.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36monesZeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeros is already defined as \e[33mvalue\e[0m \e[35monesZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmprlp9ewl_.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mzerosOnes\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosOnes is already defined as \e[33mvalue\e[0m \e[35mzerosOnes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /"
  stdout: ''
  timestamp: 1659798559
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.Map[Long, Long]()\n\
    \        val digits = n.toString.reverse.grouped(2).map(_.toInt)\n        digits.foreach\
    \ { digit =>\n            val start = digit._1\n            val end = digit._2\n\
    \            if (start == 1 && end == 1) ones += digit._1\n            if (start\
    \ == 1 && end == 0) zeros += digit._1\n            if (start == 0 && end == 1)\
    \ ones += digit._1\n            if (start == 0 && end == 0) zeros += digit._1\n\
    \            if (start == 1) counts(digit._1) += 1\n            if (end == 1)\
    \ counts(digit._2) += 1\n        }\n        ones.toList.size + (zeros.toList.size\
    \ - ones.toList.size)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0fz1s8ae.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp0fz1s8ae.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp0fz1s8ae.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp0fz1s8ae.scala:12:30 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mstart\e[0m = digit._1\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                      value _1 is not a member of Int\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp0fz1s8ae.scala:13:28 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36mend\e[0m = digit._2\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \          value _2 is not a member of Int\n5 errors found\n"
  stdout: ''
  timestamp: 1659798561
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer(0)\n    \
    \    val onesCount = ones.takeWhile(_ < n).length\n        val zerosCount = zeros.takeWhile(_\
    \ < n).length\n        val count = (onesCount + zerosCount) / 2\n        val onesZeros\
    \ = ones.takeWhile(_ < n).takeWhile(_ != 0)\n        val zerosOnes = zeros.takeWhile(_\
    \ < n).takeWhile(_ != 0)\n        val onesZeroCount = onesZeros.length\n     \
    \   val zerosOneCount = zerosOnes.length\n        val onesZeroZeroCount = onesZeroCount\
    \ - zerosOneCount\n        val zerosOneOneCount = zerosOneCount - onesZeroCount\n\
    \        val onesZeroOneCount = onesZeroCount - zerosOneCount\n        val zerosOneZeroCount\
    \ = zerosOneCount - onesZeroCount\n        val onesZeroZeroZeroCount = onesZeroZeroCount\
    \ - zerosOneOneCount\n        val zerosOneOneOneCount = zerosOneOneCount - onesZeroOneCount\n\
    \        val onesZeroOneOneCount = onesZeroOneCount - zerosOneOneCount\n     \
    \   val zerosOneZeroOneCount = zerosOneCount - onesZeroOneCount\n        val onesZeroZeroOneCount\
    \ = onesZeroZeroCount - zerosOneZeroCount\n        val zerosOneOneZeroCount =\
    \ zerosOneOneCount - onesZeroZeroCount\n        val onesZeroOneZeroCount = onesZeroOneCount\
    \ - zerosOneZeroCount\n        val zerosOneZeroOneCount = zerosOneCount - onesZeroOneCount\n\
    \        val onesZeroZeroZeroCount = onesZeroZeroCount - zerosOneOneZeroCount\n\
    \        val zerosOneOneOneCount = zerosOneOneCount - onesZeroOneOneCount\n  \
    \      val onesZeroOneOneCount = onesZeroOneCount - zerosOneOneCount\n       \
    \ val zerosOneZeroOneCount = zerosOneCount - onesZeroOneCount\n        val onesZeroZeroOneCount\
    \ = onesZeroZeroCount - zerosOneOneZeroCount\n        val zerosOneOneZeroCount\
    \ = zerosOneOneCount - onesZeroZeroOneCount\n        val onesZeroOneZeroCount\
    \ = onesZeroOneCount - zerosOneZeroOneCount\n        val zerosOneZeroOneCount\
    \ = zerosOneCount - onesZeroOneZeroCount\n        val onesZeroZeroOneCount = onesZeroZeroCount\
    \ - zerosOneOneZeroCount\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp8xopfw_6.scala:38:11 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp8xopfw_6.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mzerosOneZeroOneCount\e[0m\
    \ = zerosOneCount - onesZeroOneCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosOneZeroOneCount is already defined as \e[33mvalue\e[0m\
    \ \e[35mzerosOneZeroOneCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp8xopfw_6.scala:29:12 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36monesZeroZeroZeroCount\e\
    [0m = onesZeroZeroCount - zerosOneOneZeroCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeroZeroZeroCount is already defined as \e[33mvalue\e\
    [0m \e[35monesZeroZeroZeroCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8xopfw_6.scala:30:12 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mzerosOneOneOneCount\e[0m\
    \ = zerosOneOneCount - onesZeroOneOneCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosOneOneOneCount is already defined as \e[33mvalue\e[0m\
    \ \e[35mzerosOneOneOneCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp8xopfw_6.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36monesZeroOneOneCount\e[0m\
    \ = onesZeroOneCount - zerosOneOneCount\n\e"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    for(i <- 1 to n){\n            val x = i.toLong\n            if(x == 1){\n\
    \                ones += x\n            }\n            if(x == 0){\n         \
    \       zeros += x\n            }\n            counts(x) = counts.getOrElse(x,\
    \ 0) + 1\n        }\n        val onesCount = ones.toSeq.size\n        val zerosCount\
    \ = zeros.toSeq.size\n        val totalCount = onesCount + zerosCount\n      \
    \  val onesCount = ones.toSeq.size\n        val zerosCount = zeros.toSeq.size\n\
    \        val totalCount = onesCount + zerosCount\n        val onesCount = ones.toSeq.size\n\
    \        val zerosCount = zeros.toSeq.size\n        val totalCount = onesCount\
    \ + zerosCount\n        val onesCount = ones.toSeq.size\n        val zerosCount\
    \ = zeros.toSeq.size\n        val totalCount = onesCount + zerosCount\n      \
    \  val onesCount = ones.toSeq.size\n        val zerosCount = zeros.toSeq.size\n\
    \        val totalCount = onesCount + zerosCount\n        val onesCount = ones.toSeq.size\n\
    \        val zerosCount = zeros.toSeq.size\n        val totalCount = onesCount\
    \ + zerosCount\n        val onesCount = ones.toSeq.size\n        val zerosCount\
    \ = zeros.toSeq.size\n        val totalCount = onesCount + zerosCount\n      \
    \  val onesCount = ones.toSeq.size\n        val zerosCount = zeros.toSeq.size\n\
    \        val totalCount = onesCount + zerosCount\n        val onesCount = ones.toSeq.size\n\
    \        val zerosCount = zeros.toSeq.size\n        val totalCount = onesCount\
    \ + zerosCount\n        val onesCount = ones.toSeq.size\n        val zerosCount\
    \ = zeros.toSeq.size\n        val totalCount = onesCount + zerosCount\n      \
    \  val onesCount = ones.toSeq.size\n        val zerosCount = zeros.toSeq.size\n\
    \        val totalCount = onesCount + zerosCount\n        val onesCount = ones.toSeq.size\n\
    \        val zerosCount = zeros.toSeq.size\n        val totalCount = onesCount\
    \ + zerosCount\n        val onesCount = ones.toSeq.size\n        val zerosCount\
    \ = zeros.toSeq.size\n        val totalCount = onesCount + zerosCount\n      \
    \  val onesCount = ones.toSeq.size\n        val zerosCount = \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n  \
    \  assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n\
    \    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) ==\
    \ (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpmyh58ss0.scala:60:24 ---------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = \n\e[31m\e\
    [31m   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m                 \
    \       expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpmyh58ss0.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = ones.toSeq.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpmyh58ss0.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = zeros.toSeq.size\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mzerosCount\
    \ is already defined as \e[33mvalue\e[0m \e[35mzerosCount\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmyh58ss0.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mtotalCount\e[0m = onesCount + zerosCount\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtotalCount is\
    \ already defined as \e[33mvalue\e[0m \e[35mtotalCount\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmyh58ss0.scala:26:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCount\e[0m = ones.toSeq.size\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded method"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros\
    \ = mutable.ListBuffer(0)\n        var count = 0\n        while (n > 0) {\n  \
    \          val digit = n % 10\n            if (digit == 1) {\n               \
    \ ones += digit\n            } else {\n                zeros += digit\n      \
    \      }\n            n /= 10\n            count += 1\n        }\n        ones.toList.size\
    \ + (zeros.toList.size - ones.toList.size)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptrh6dksx.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmptrh6dksx.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmptrh6dksx.scala:17:14 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m    \
    \        ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long\
    \ - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   val onesCount = mutable.ArrayBuffer(0)\n        val zerosCount = mutable.ArrayBuffer(0)\n\
    \        val onesZeros = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val onesOnes = mutable.ArrayBuffer(0)\n        val zerosZeros = mutable.ArrayBuffer(0)\n\
    \        val onesZeroOnes = mutable.ArrayBuffer(0)\n        val zerosOneOnes =\
    \ mutable.ArrayBuffer(0)\n        val onesOneOnes = mutable.ArrayBuffer(0)\n \
    \       val zerosZeroOnes = mutable.ArrayBuffer(0)\n        val onesZeroZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosOneZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val onesOneZeroOnes = mutable.ArrayBuffer(0)\n        val zerosZeroOneOnes\
    \ = mutable.ArrayBuffer(0)\n        val onesZeroOneOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOneZeroOnes = mutable.ArrayBuffer(0)\n        val onesOneZeroZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosZeroOneZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val onesOneZeroZeroOnes = mutable.ArrayBuffer(0)\n        val zerosOneZeroZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val onesOneZeroZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosOneZeroZeroOnes = mutable.ArrayBuffer(0)\n        val onesOneZeroZeroZeros\
    \ = mutable.ArrayBuffer(0)\n        val zerosOneZeroZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val onesOneZeroZeroOnes = mutable.ArrayBuffer(0)\n        val zerosOneZeroZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val onesOneZeroZeroZeros = mutable.ArrayBuffer(0)\n\
    \        val zerosOneZeroZeroOnes = mutable.ArrayBuffer(0)\n        val onesOneZeroZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosOneZeroZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val onesOneZeroZeroZeros = mutable.ArrayBuffer(0)\n        val zerosOneZeroZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val onesOneZeroZeroZeros = mutable.ArrayBuffer(0)\n\
    \        val zerosOneZeroZeroOnes = mutable.ArrayBuffer(0)\n        val onesOneZeroZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosOneZeroZeroOnes = mut\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n\
    \    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) ==\
    \ (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpl2op00za.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mzerosOneZeroOnes\e[0m =\
    \ mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosOneZeroOnes is already defined as \e[33mvalue\e[0m \e\
    [35mzerosOneZeroOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpl2op00za.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36monesOneZeroZeroOnes\e[0m\
    \ = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesOneZeroZeroOnes is already defined as \e[33mvalue\e[0m\
    \ \e[35monesOneZeroZeroOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpl2op00za.scala:30:12 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36monesOneZeroZeroOnes\e[0m\
    \ = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesOneZeroZeroOnes is already defined as \e[33mvalue\e[0m\
    \ \e[35monesOneZeroZeroOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpl2op00za.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mzerosOneZeroZeroOnes\e[0m\
    \ = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosOneZeroZeroOnes is already defined as \e[33mvalue\e[0m\
    \ \e[35mzerosOneZeroZeroOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpl2op00za.scala:33:12 -------------------------"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n\
    \        val onesZeros = mutable.Set[Long]()\n        val zerosOnes = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val zeroOnes = mutable.Set[Long]()\n\
    \        val onesZeroOnes = mutable.Set[Long]()\n        val zerosOnesOnes = mutable.Set[Long]()\n\
    \        val onesOnesOnes = mutable.Set[Long]()\n        val zerosOnesZeroOnes\
    \ = mutable.Set[Long]()\n        val onesOnesZeroOnes = mutable.Set[Long]()\n\
    \        val zerosOnesOnesOnes = mutable.Set[Long]()\n        val onesOnesOnesOnes\
    \ = mutable.Set[Long]()\n        val zerosOnesZeroOnesOnes = mutable.Set[Long]()\n\
    \        val onesOnesZeroOnesOnes = mutable.Set[Long]()\n        val zerosOnesOnesZeroOnesOnes\
    \ = mutable.Set[Long]()\n        val onesOnesOnesZeroOnesOnes = mutable.Set[Long]()\n\
    \        val zerosOnesZeroOnesZeroOnesOnes = mutable.Set[Long]()\n        val\
    \ onesOnesZeroOnesZeroOnesOnes = mutable.Set[Long]()\n        val zerosOnesOnesOnesOnesOnes\
    \ = mutable.Set[Long]()\n        val onesOnesOnesOnesOnesOnes = mutable.Set[Long]()\n\
    \        val zerosOnesZeroOnesZeroOnesZeroOnesOnes = mutable.Set[Long]()\n   \
    \     val onesOnesZeroOnesZeroOnesZeroOnesOnes = mutable.Set[Long]()\n       \
    \ val zerosOnesOnesOnesOnesOnesOnesOnes = mutable.Set[Long]()\n        val onesOnesOnesOnesOnesOnesOnesOnes\
    \ = mutable.Set[Long]()\n        val zerosOnesZeroOnesZeroOnesZeroOnesZeroOnesOne\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpsf7xlkml.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsf7xlkml.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m         \
    \          ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsf7xlkml.scala:8:20\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mzeros\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m        \
    \            ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsf7xlkml.scala:9:21\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m\
    \  |\e[0m                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                   \
    \  Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsf7xlkml.scala:10:24\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsf7xlkml.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mzerosCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling w"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val zerosCount = mutable.ListBuffer[Long]()\n        var i = 0\n    \
    \    while (i < n) {\n            if (i % 10 == 1) {\n                ones +=\
    \ i\n                onesCount += 1\n            } else if (i % 10 == 0) {\n \
    \               zeros += i\n                zerosCount += 1\n            }\n \
    \           i += 1\n        }\n        ones.toList.size * (ones.toList.size -\
    \ onesCount.toList.size)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsue11sg5.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpsue11sg5.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpsue11sg5.scala:9:24 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpsue11sg5.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798558
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount =\
    \ mutable.ListBuffer[Long]()\n        val countsCount = mutable.ListBuffer[Long]()\n\
    \        val onesCountCount = mutable.ListBuffer[Long]()\n        val zerosCountCount\
    \ = mutable.ListBuffer[Long]()\n        val countsCountCount = mutable.ListBuffer[Long]()\n\
    \        val onesCountCountCount = mutable.ListBuffer[Long]()\n        val zerosCountCountCount\
    \ = mutable.ListBuffer[Long]()\n        val countsCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val onesCountCountCountCount = mutable.ListBuffer[Long]()\n        val\
    \ zerosCountCountCountCount = mutable.ListBuffer[Long]()\n        val countsCountCountCountCount\
    \ = mutable.ListBuffer[Long]()\n        val onesCountCountCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val zerosCountCountCountCountCount = mutable.ListBuffer[Long]()\n   \
    \     val countsCountCountCountCountCount = mutable.ListBuffer[Long]()\n     \
    \   val onesCountCountCountCountCount = mutable.ListBuffer[Long]()\n        val\
    \ zerosCountCountCountCountCountCount = mutable.ListBuffer[Long]()\n        val\
    \ countsCountCountCountCountCountCount = mutable.ListBuffer[Long]()\n        val\
    \ onesCountCountCountCountCountCount = mutable.ListBuffer[Long]()\n        val\
    \ zerosCountCountCountCountCountCountCount = mutable.ListBuffer[Long]()\n    \
    \    val countsCountCountCountCountCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val onesCountCountCountCountCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val zerosCountCountCountCountCountCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val countsCountCountCountCountCountCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val onesCountCountCountCountCountCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val zerosCountCountCountCountCountCountCountCountCount = mutable.ListBuffer[Long]()\n\
    \        val countsCountCountCountCountCountCountCountCount = mutable.ListBuffer[Long]()\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpagz5ppq8.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36monesCountCountCountCountCount\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCountCountCountCountCount is already defined as \e[33mvalue\e\
    [0m \e[35monesCountCountCountCountCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpagz5ppq8.scala:36:12 ---------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m        \e[33mval\e[0m \e[36mcountsCountCountCountCountCountCountCountCount\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcountsCountCountCountCountCountCountCountCount is already\
    \ defined as \e[33mvalue\e[0m \e[35mcountsCountCountCountCountCountCountCountCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpagz5ppq8.scala:7:19 -------------------------\e[0m\e[0m\n\
    \e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m  \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpagz5ppq8.scala:8:20 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e[0m         \
    \           Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpagz5ppq8.scala:9:21 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Lis"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer(0)\n    \
    \    val countsZeros = mutable.ArrayBuffer(0)\n        val countsOnes = mutable.ArrayBuffer(0)\n\
    \        val countsOnesZeros = mutable.ArrayBuffer(0)\n        val countsOnesZeros\
    \ = mutable.ArrayBuffer(0)\n        val countsOnesZeros = mutable.ArrayBuffer(0)\n\
    \        val countsOnesZeros = mutable.ArrayBuffer(0)\n        val countsOnesZeros\
    \ = mutable.ArrayBuffer(0)\n        val countsOnesZeros = mutable.ArrayBuffer(0)\n\
    \        val countsOnesZeros = mutable.ArrayBuffer(0)\n        val countsOnesZeros\
    \ = mutable.ArrayBuffer(0)\n        val countsOnesZeros = mutable.ArrayBuffer(0)\n\
    \        val countsOnesZeros = mutable.ArrayBuffer(0)\n        val countsOnesZeros\
    \ = mutable.ArrayBuffer(0)\n        val countsOnesZeros = mutable.ArrayBuffer(0)\n\
    \        val countsOnesZeros = mutable.ArrayBuffer(0)\n        val countsOnesZeros\
    \ = mutable.ArrayBuffer(0)\n        val countsOnesZeros = mutable.ArrayBuffer(0)\n\
    \        val countsOnesZeros = mutable.ArrayBuffer(0)\n        val countsOnesZeros\
    \ = mutable.ArrayBuffer(0)\n        val countsOnesZeros = mutable.ArrayBuffer(0)\n\
    \        val countsOnesZeros = mutable.ArrayBuffer(0)\n        val countsOnesZeros\
    \ = mutable.ArrayBuffer(0)\n        val countsOnesZeros = mutable.ArrayBuffer(0)\n\
    \        val countsOnesZeros = mutable.ArrayBuffer(0)\n        val countsOnesZeros\
    \ = mutable.ArrayBuffer(0)\n        val countsOnesZeros = mutable.ArrayBuffer(0)\n\
    \        val countsOnesZeros = mutable.ArrayBuffer(0)\n        val countsOnesZeros\
    \ = mutable.ArrayBuffer(0)\n        val countsOnesZeros = mutable.ArrayBuffer(0)\n\
    \        val countsOnesZeros = mutable.ArrayBuffer(0)\n        val countsOnesZeros\
    \ = mutable.ArrayBuffer(0)\n        val countsOnesZeros = mutable.ArrayBuffer(0)\n\
    \        val countsOnesZeros = mutable.ArrayBuffer(0)\n        val countsOnesZeros\
    \ = mutable.ArrayBuffer(0)\n        val countsOnesZeros = mutable.\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n\
    \    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) ==\
    \ (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_0ep02pq.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp_0ep02pq.scala:13:12 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36mcountsOnesZeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcountsOnesZeros is already defined as \e[33mvalue\e[0m \e\
    [35mcountsOnesZeros\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp_0ep02pq.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mcountsOnesZeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcountsOnesZeros is already defined as \e[33mvalue\e[0m \e\
    [35mcountsOnesZeros\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp_0ep02pq.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mcountsOnesZeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcountsOnesZeros is already defined as \e[33mvalue\e[0m \e\
    [35mcountsOnesZeros\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp_0ep02pq.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mcountsOnesZeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcountsOnesZeros is already defined as \e[33mvalue\e[0m \e\
    [35mcountsOnesZeros\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must "
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n \
    \       val ones = mutable.HashSet.empty[Long]\n        val zeros = mutable.HashSet.empty[Long]\n\
    \        val onesCount = mutable.HashSet.empty[Long]\n        val zerosCount =\
    \ mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n\
    \        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts\
    \ = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n\
    \        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts\
    \ = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n\
    \        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts\
    \ = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n\
    \        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts\
    \ = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n\
    \        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts\
    \ = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n\
    \        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts\
    \ = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n\
    \        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts\
    \ = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n\
    \        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts\
    \ = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n\
    \        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts\
    \ = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n\
    \        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts\
    \ = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.Hash\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n\
    \    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) ==\
    \ (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjub3o53q.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjub3o53q.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjub3o53q.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjub3o53q.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjub3o53q.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.HashSet.empty"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        while(n\
    \ > 0){\n            val next = (n % 10).toInt\n            if(next == 1){\n \
    \               count += 1\n            }\n            n /= 10\n        }\n  \
    \      last\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpn5jbvgjd.scala:14:14 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of\
    \ Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastOne\
    \ = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour\
    \ = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven\
    \ = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen\
    \ = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen\
    \ = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var\
    \ lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n\
    \        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne\
    \ = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n      \
    \  var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix\
    \ = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n    \
    \    var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne\
    \ = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n      \
    \  var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix\
    \ = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n    \
    \    var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne\
    \ = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n      \
    \  var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix\
    \ = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n    \
    \    var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne\
    \ = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var\
    \ lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix =\
    \ 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var\
    \ lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n\
    \        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour\
    \ = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var\
    \ lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptku37em0.scala:77:5\
    \ ---------------------\e[0m\e[0m\n\e[31m77 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 1\n        while(n\
    \ > 0){\n            val next = (last * 10) + n\n            val nextIsOne = next\
    \ == 1\n            val lastIsOne = last == 1\n            if(nextIsOne && lastIsOne){\n\
    \                count += 1\n            }\n            last = next\n        \
    \    n -= 1\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1hk8e0kp.scala:16:19\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            last = next\n\e[31m\e\
    [31m   |\e[0m                   ^^^^\e[0m\n\e[31m   |\e[0m                   Found:\
    \    (next : Long)\n\e[31m   |\e[0m                   Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1hk8e0kp.scala:17:14 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798563
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n \
    \       val ones = mutable.ArrayBuffer.empty[Long]\n        val ends = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val endsCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val endsCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val endsCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val endsCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val endsCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val endsCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val endsCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val endsCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val endsCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val endsCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val endsCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val endsCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val endsCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val endsCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val endsCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val endsCounts\
    \ = mutable.\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmph7p71cj5.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmph7p71cj5.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmph7p71cj5.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mendsCounts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mendsCounts is already defined as \e[33mvalue\e[0m \e[35mendsCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmph7p71cj5.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmph7p71cj5.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mendsCounts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mendsCounts is already defined as \e[33mvalue\e[0m \e[35mendsCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ d"
  stdout: ''
  timestamp: 1659798561
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.Map[Long, Long]()\n\
    \        val digits = n.toString.reverse.grouped(2).map(_.toInt)\n        digits.foreach(x\
    \ => if (x == 1) ones += x else zeros += x)\n        ones.foreach(x => counts(x+1)\
    \ = counts(x) + 1)\n        zeros.foreach(x => counts(x+1) = counts(x) + 1)\n\
    \        counts.values.sum\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps9hlrq4o.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmps9hlrq4o.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmps9hlrq4o.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798558
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount\
    \ = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n      \
    \  val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n\
    \        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n\
    \        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n\
    \        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n\
    \        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n\
    \        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n\
    \        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n\
    \        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n\
    \        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n\
    \        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n\
    \        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n\
    \        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n\
    \        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n\
    \        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n\
    \        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n\
    \        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n\
    \        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt9nch94n.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m         \
    \          ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:8:24\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m    \
    \                    ^^^^^^^\e[0m\n\e[31m  |\e[0m                        Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:9:25\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m   \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                         Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:10:25\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount3\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount4\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   val onesCount = mutable.ArrayBuffer(0)\n        val zerosCount = mutable.ArrayBuffer(0)\n\
    \        val onesZeros = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n\
    \        val onesOnes = mutable.ArrayBuffer(0)\n        val zerosZeros = mutable.ArrayBuffer(0)\n\
    \        val onesZeroOnes = mutable.ArrayBuffer(0)\n        val zerosOneZeros\
    \ = mutable.ArrayBuffer(0)\n        val onesOneZeros = mutable.ArrayBuffer(0)\n\
    \        val zerosZeroOnes = mutable.ArrayBuffer(0)\n        val onesZeroOneZeros\
    \ = mutable.ArrayBuffer(0)\n        val zerosOneOneZeros = mutable.ArrayBuffer(0)\n\
    \        val onesOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosZeroOneOneZeros\
    \ = mutable.ArrayBuffer(0)\n        val onesOneOneOneZeros = mutable.ArrayBuffer(0)\n\
    \        val zerosOneZeroOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneZeroOneOneZeros\
    \ = mutable.ArrayBuffer(0)\n        val zerosZeroOneZeroOneOneZeros = mutable.ArrayBuffer(0)\n\
    \        val onesOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosOneOneZeroOneOneZeros\
    \ = mutable.ArrayBuffer(0)\n        val onesOneZeroOneOneOneZeros = mutable.ArrayBuffer(0)\n\
    \        val zerosZeroOneOneZeroOneOneZeros = mutable.ArrayBuffer(0)\n       \
    \ val onesOneOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosOneZeroOneZeroOneOneZeros\
    \ = mutable.ArrayBuffer(0)\n        val onesOneOneOneOneOneZeros = mutable.ArrayBuffer(0)\n\
    \        val zerosZeroOneOneOneZeroOneZeros = mutable.ArrayBuffer(0)\n       \
    \ val onesOneOneOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosOneOneZeroOneOneOneZeros\
    \ = mutable.ArrayBuffer(0)\n        val onesOneZeroOneOneOneOneZeros = mutable.ArrayBuffer(0)\n\
    \        val zerosZeroOneOneZeroOneOneZeros = mutable.ArrayBuffer(0)\n       \
    \ val onesOneOneOneOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosOneZeroOneZeroOneOneOneZeros\
    \ = mutable.ArrayBuffer(0)\n        val onesOneOneOneOne\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpv6i76_j6.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpv6i76_j6.scala:34:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesOneOneOneOneOneZeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesOneOneOneOneOneZeros is already defined as \e[33mvalue\e\
    [0m \e[35monesOneOneOneOneOneZeros\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpv6i76_j6.scala:39:12 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mval\e[0m \e[36mzerosZeroOneOneZeroOneOneZeros\e\
    [0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosZeroOneOneZeroOneOneZeros is already defined as \e[33mvalue\e\
    [0m \e[35mzerosZeroOneOneZeroOneOneZeros\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv6i76_j6.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpv6i76_j6.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpv6i76_j6.scala:9:20 -------------"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var\
    \ count = 0\n        for (i <- 1 to n) {\n            if (i.toString.toLong ==\
    \ 1) {\n                count += 1\n            } else {\n                ones\
    \ += i.toString.toLong\n            }\n        }\n        ones.length\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n\
    \    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) ==\
    \ (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2ofg0405.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp2ofg0405.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        var count\
    \ = 0\n        while(n > 0){\n            ones += n\n            count += 1\n\
    \            n -= 1\n        }\n        ones.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp08u2c76s.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp08u2c76s.scala:12:14 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of Long\
    \ - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val twos = mutable.ListBuffer[Long]()\n\
    \        val threes = mutable.ListBuffer[Long]()\n        val fours = mutable.ListBuffer[Long]()\n\
    \        val fives = mutable.ListBuffer[Long]()\n        val sixes = mutable.ListBuffer[Long]()\n\
    \        val sevens = mutable.ListBuffer[Long]()\n        val eights = mutable.ListBuffer[Long]()\n\
    \        val nines = mutable.ListBuffer[Long]()\n        val tens = mutable.ListBuffer[Long]()\n\
    \        val hundreds = mutable.ListBuffer[Long]()\n        val thousands = mutable.ListBuffer[Long]()\n\
    \        val millions = mutable.ListBuffer[Long]()\n        val billions = mutable.ListBuffer[Long]()\n\
    \        val trillions = mutable.ListBuffer[Long]()\n        val quadrillions\
    \ = mutable.ListBuffer[Long]()\n        val quintillions = mutable.ListBuffer[Long]()\n\
    \        val sextillions = mutable.ListBuffer[Long]()\n        val septillions\
    \ = mutable.ListBuffer[Long]()\n        val octillions = mutable.ListBuffer[Long]()\n\
    \        val nonillions = mutable.ListBuffer[Long]()\n        val decillions =\
    \ mutable.ListBuffer[Long]()\n        val undecillions = mutable.ListBuffer[Long]()\n\
    \        val duodecillions = mutable.ListBuffer[Long]()\n        val tredecillions\
    \ = mutable.ListBuffer[Long]()\n        val quattuordecillions = mutable.ListBuffer[Long]()\n\
    \        val quindecillions = mutable.ListBuffer[Long]()\n        val sexdecillions\
    \ = mutable.ListBuffer[Long]()\n        val septendecillions = mutable.ListBuffer[Long]()\n\
    \        val octodecillions = mutable.ListBuffer[Long]()\n        val novemdecillions\
    \ = mutable.ListBuffer[Long]()\n        val vigintillions = mutable.ListBuffer[Long]()\n\
    \        val thousandsOfNines = mutable.ListBuffer\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzsua2bc3.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpzsua2bc3.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpzsua2bc3.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mtwos\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpzsua2bc3.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mthrees\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpzsua2bc3.scala:11:20 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfours\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpzsua2bc3.scala:12:20 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfives\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n"
  stdout: ''
  timestamp: 1659798561
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 1\n        while(n\
    \ > 1) {\n            val next = (last * 10 + last).toInt\n            val nextLast\
    \ = (next * 10 + next).toInt\n            if(next == 1 && nextLast == 1) {\n \
    \               count += 1\n            }\n            last = next\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdqxtjxwo.scala:20)\n\tat Problem.main(tmpdqxtjxwo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798562
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var i = n\n        while (i\
    \ >= 1) {\n            i = i / 10\n            count += 1\n        }\n       \
    \ return count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw6_54xv3.scala:17)\n\tat Problem.main(tmpw6_54xv3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n \
    \       for (i <- 1 to n) {\n            val str = i.toString\n            if\
    \ (str.startsWith(\"1\") || str.endsWith(\"1\")) {\n                counts.put(i,\
    \ counts.getOrElse(i, 0) + 1L)\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpan1ac3ss.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpan1ac3ss.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpm7jochjy.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpm7jochjy.scala:10:12 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpm7jochjy.scala:11:12 ---------------------------\e[0m\e[0m\n\e\
    [31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpm7jochjy.scala:12:12 ---------------------------\e[0m\e[0m\n\e\
    [31m12 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpm7jochjy.scala:13:12 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     "
  stdout: ''
  timestamp: 1659798550
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var\
    \ count = 0\n        var last = 0\n        while (n > 0) {\n            ones +=\
    \ last\n            last += 1\n            n -= 1\n        }\n        ones +=\
    \ last\n        ones = ones.reverse\n        ones.foreach(x => if (x == 1) count\
    \ = count + 1)\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfz002h1y.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpfz002h1y.scala:13:14 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpfz002h1y.scala:16:13\
    \ -----------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        ones = ones.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \ Reassignment to val ones\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798566
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount\
    \ = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n       \
    \ val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mut\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_14316ba.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp_14316ba.scala:10:12 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_14316ba.scala:11:12 ---------------------------\e[0m\e[0m\n\e\
    [31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_14316ba.scala:12:12 ---------------------------\e[0m\e[0m\n\e\
    [31m12 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_14316ba.scala:13:12 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0monesCou"
  stdout: ''
  timestamp: 1659798570
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n\
    \        val starts = mutable.ArrayBuffer.empty[Long]\n        val ends = mutable.ArrayBuffer.empty[Long]\n\
    \        val nums = mutable.ArrayBuffer.empty[Long]\n        val numsSet = mutable.HashSet[Long]()\n\
    \        val numsSet2 = mutable.HashSet[Long]()\n        val numsSet3 = mutable.HashSet[Long]()\n\
    \        val numsSet4 = mutable.HashSet[Long]()\n        val numsSet5 = mutable.HashSet[Long]()\n\
    \        val numsSet6 = mutable.HashSet[Long]()\n        val numsSet7 = mutable.HashSet[Long]()\n\
    \        val numsSet8 = mutable.HashSet[Long]()\n        val numsSet9 = mutable.HashSet[Long]()\n\
    \        val numsSet10 = mutable.HashSet[Long]()\n        val numsSet11 = mutable.HashSet[Long]()\n\
    \        val numsSet12 = mutable.HashSet[Long]()\n        val numsSet13 = mutable.HashSet[Long]()\n\
    \        val numsSet14 = mutable.HashSet[Long]()\n        val numsSet15 = mutable.HashSet[Long]()\n\
    \        val numsSet16 = mutable.HashSet[Long]()\n        val numsSet17 = mutable.HashSet[Long]()\n\
    \        val numsSet18 = mutable.HashSet[Long]()\n        val numsSet19 = mutable.HashSet[Long]()\n\
    \        val numsSet20 = mutable.HashSet[Long]()\n        val numsSet21 = mutable.HashSet[Long]()\n\
    \        val numsSet22 = mutable.HashSet[Long]()\n        val numsSet23 = mutable.HashSet[Long]()\n\
    \        val numsSet24 = mutable.HashSet[Long]()\n        val numsSet25 = mutable.HashSet[Long]()\n\
    \        val numsSet26 = mutable.HashSet[Long]()\n        val numsSet27 = mutable.HashSet[Long]()\n\
    \        val numsSet28 = mutable.HashSet[Long]()\n        val nums\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n\
    \    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) ==\
    \ (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9ypdddxa.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9ypdddxa.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \             ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9ypdddxa.scala:8:20\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mzeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \               ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9ypdddxa.scala:9:21\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                     Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9ypdddxa.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mstarts\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9ypdddxa.scala:11:19\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mends\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling w"
  stdout: ''
  timestamp: 1659798569
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val starts = mutable.Map[Long, Long]()\n        val ends = mutable.Map[Long,\
    \ Long]()\n        val zeros = mutable.Set[Long]()\n        val ones = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n\
    \        val countsCount = mutable.Map[Long, Long]()\n        val startsCount\
    \ = mutable.Map[Long, Long]()\n        val endsCount = mutable.Map[Long, Long]()\n\
    \        val zeroCount = mutable.Set[Long]()\n        val oneCount = mutable.Set[Long]()\n\
    \        val onesCountCount = mutable.Set[Long]()\n        val zerosCountCount\
    \ = mutable.Set[Long]()\n        val countsCountCount = mutable.Map[Long, Long]()\n\
    \        val startsCountCount = mutable.Map[Long, Long]()\n        val endsCountCount\
    \ = mutable.Map[Long, Long]()\n        val zeroCountCount = mutable.Set[Long]()\n\
    \        val oneCountCount = mutable.Set[Long]()\n        val onesCountCountCount\
    \ = mutable.Set[Long]()\n        val zerosCountCountCount = mutable.Set[Long]()\n\
    \        val countsCountCountCount = mutable.Map[Long, Long]()\n        val startsCountCountCount\
    \ = mutable.Map[Long, Long]()\n        val endsCountCountCount = mutable.Map[Long,\
    \ Long]()\n        val zeroCountCountCount = mutable.Set[Long]()\n        val\
    \ oneCountCountCount = mutable.Set[Long]()\n        val onesCountCountCountCount\
    \ = mutable.Set[Long]()\n        val zerosCountCountCountCount = mutable.Set[Long]()\n\
    \        val countsCountCountCountCount = mutable.Map[Long, Long]()\n        val\
    \ startsCountCountCountCount = mutable.Map[Long, Long]()\n        val endsCountCountCountCount\
    \ = mutable.Map[Long, Long]()\n        val zeroCountCountCountCount = mutable.Set[Long]()\n\
    \        val oneCountCountCountCount = mutable.Set[Long]()\n        val onesCountCountCountCount\
    \ = mutable.Set[Long]()\n        val zeros\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmph4jpvzjn.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph4jpvzjn.scala:12:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m\
    \ \e[36mzeros\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mzeros is already defined\
    \ as \e[33mvalue\e[0m \e[35mzeros\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmph4jpvzjn.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mones is already defined as \e[33mvalue\e[0m \e[35mones\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmph4jpvzjn.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36monesCountCountCountCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCountCountCountCount is already defined as \e[33mvalue\e\
    [0m \e[35monesCountCountCountCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph4jpvzjn.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmph4jpvzjn.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e["
  stdout: ''
  timestamp: 1659798570
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount\
    \ = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n      \
    \  val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n\
    \        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n\
    \        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n\
    \        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n\
    \        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n\
    \        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n\
    \        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n\
    \        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n\
    \        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n\
    \        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n\
    \        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n\
    \        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n\
    \        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n\
    \        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n\
    \        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n\
    \        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n\
    \        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt9nch94n.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m         \
    \          ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:8:24\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m    \
    \                    ^^^^^^^\e[0m\n\e[31m  |\e[0m                        Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:9:25\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m   \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                         Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:10:25\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount3\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount4\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        var count\
    \ = 0\n        while(n > 0){\n            ones += n\n            n -= 1\n    \
    \    }\n        while(ones.size > 0){\n            count += ones.size - 1\n  \
    \          ones.remove(0)\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp61mxbxj9.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp61mxbxj9.scala:11:14 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of Long\
    \ - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer.empty[Long]\n      \
    \  for (i <- 1 to n) if (i.toString.toLong == 1) ones += i\n        ones.count(_\
    \ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4g82ziem.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp4g82ziem.scala:8:23 ---------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) \e[33mif\e\
    [0m (i.toString.toLong == \e[31m1\e[0m) ones += i\n\e[31m\e[31m  |\e[0m      \
    \                 ^\e[0m\n\e[31m  |\e[0m                       Found:    (n :\
    \ Long)\n\e[31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n       \
    \ val zerosCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n\
    \        val zerosCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n\
    \        val zerosCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n\
    \        val zerosCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n\
    \        val zerosCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n\
    \        val zerosCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n\
    \        val zerosCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n\
    \        val zerosCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n\
    \        val zerosCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n\
    \        val zerosCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n\
    \        val zerosCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n\
    \        val zerosCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n\
    \        val zerosCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n\
    \        val zerosCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n\
    \        val zerosCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n\
    \        val zerosCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n\
    \        val zerosCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n\
    \        val zerosCount18 = \n    }\n    def main(args: Array[String]) = {\n \
    \   assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpgvk350n3.scala:44:26 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36mzerosCount18\e[0m = \n\e\
    [31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m         \
    \                 expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgvk350n3.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgvk350n3.scala:9:24 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e"
  stdout: ''
  timestamp: 1659798573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n     \
    \   val ones = mutable.ArrayBuffer(Long(1))\n        val zeros = mutable.ArrayBuffer(Long(0))\n\
    \        val onesCount = ones.takeWhile(_ < n).length\n        val zerosCount\
    \ = zeros.takeWhile(_ < n).length\n        val onesZeros = ones.takeWhile(_ <\
    \ n).takeWhile(_ != 0).length\n        val zerosOnes = zeros.takeWhile(_ < n).takeWhile(_\
    \ != 0).takeWhile(_ != 1).length\n        val onesOnes = ones.takeWhile(_ < n).takeWhile(_\
    \ != 0).takeWhile(_ != 1).takeWhile(_ != 1).length\n        val onesZeroOnes =\
    \ ones.takeWhile(_ < n).takeWhile(_ != 0).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_\
    \ != 1).length\n        val zerosOnesOnes = zeros.takeWhile(_ < n).takeWhile(_\
    \ != 0).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_ != 1).length\n\
    \        val zerosOnesZeros = zeros.takeWhile(_ < n).takeWhile(_ != 0).takeWhile(_\
    \ != 1).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_ != 0).length\n       \
    \ val zerosOnesOnesZeros = zeros.takeWhile(_ < n).takeWhile(_ != 0).takeWhile(_\
    \ != 1).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_ != 0).length\n\
    \        val zerosOnesOnesOnes = zeros.takeWhile(_ < n).takeWhile(_ != 0).takeWhile(_\
    \ != 1).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_ != 1).length\n\
    \        val zerosOnesOnesOnesZeros = zeros.takeWhile(_ < n).takeWhile(_ != 0).takeWhile(_\
    \ != 1).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_\
    \ != 0).length\n        val zerosOnesOnesOnesOnesZeros = zeros.takeWhile(_ < n).takeWhile(_\
    \ != 0).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_ != 1).takeWhile(_\
    \ != 1).takeWhile(_ != 1).takeWhile(_ != 0).length\n        val zerosOnesOnesOnesOnesOnesZeros\
    \ = zeros.takeWhile(_ < n).takeWhile(_ != 0).takeWhile(_ != 1).takeWhile\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) ==\
    \ (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz9dzctlj.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpz9dzctlj.scala:8:19 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(Long(\e\
    [31m1\e[0m))\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpz9dzctlj.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(Long(\e\
    [31m0\e[0m))\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpz9dzctlj.scala:23:5 ---------------------\e[0m\e\
    [0m\n\e[31m23 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m \
    \    Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        var next\
    \ = 1\n        while(n != 0) {\n            val temp = n % 10\n            if(temp\
    \ == 1) {\n                count += 1\n                last = next\n         \
    \       next = 1\n            } else {\n                next *= 10\n         \
    \   }\n            n /= 10\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqqfzsl39.scala:19:14 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of\
    \ Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659798572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        for(i <- 1 to n){\n       \
    \     if((i.toString.toLong % 10) == 1){\n                count += 1\n       \
    \     }\n        }\n        count\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplq9qwhlp.scala:8:22\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n       \
    \ val zerosCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n\
    \        val zerosCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n\
    \        val zerosCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n\
    \        val zerosCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n\
    \        val zerosCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n\
    \        val zerosCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n\
    \        val zerosCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n\
    \        val zerosCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n\
    \        val zerosCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n\
    \        val zerosCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n\
    \        val zerosCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n\
    \        val zerosCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n\
    \        val zerosCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n\
    \        val zerosCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n\
    \        val zerosCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n\
    \        val zerosCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n\
    \        val zerosCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n\
    \        val zerosCount18 = \n    }\n    def main(args: Array[String]) = {\n \
    \   assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpgvk350n3.scala:44:26 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36mzerosCount18\e[0m = \n\e\
    [31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m         \
    \                 expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgvk350n3.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgvk350n3.scala:9:24 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e"
  stdout: ''
  timestamp: 1659798573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val count = new mutable.HashMap[Long, Long]()\n  \
    \      val ones = BigInt(1)\n        val zeros = BigInt(0)\n        val onesCount\
    \ = BigInt(0)\n        val zerosCount = BigInt(0)\n        val onesZeros = BigInt(0)\n\
    \        val zerosOnes = BigInt(0)\n        val onesOnes = BigInt(0)\n       \
    \ val onesZeroOnes = BigInt(0)\n        val zerosZeroOnes = BigInt(0)\n      \
    \  val onesZeroOnesOnes = BigInt(0)\n        val zerosZeroOnesZeros = BigInt(0)\n\
    \        val onesZeroOnesOnesZeros = BigInt(0)\n        val zerosZeroOnesZeroOnes\
    \ = BigInt(0)\n        val onesZeroOnesOnesZeroOnes = BigInt(0)\n        val zerosZeroOnesZeroOnesOnes\
    \ = BigInt(0)\n        val onesZeroOnesOnesZeroOnesOnes = BigInt(0)\n        val\
    \ zerosZeroOnesZeroOnesZeroOnes = BigInt(0)\n        val onesZeroOnesOnesZeroOnesZeroOnes\
    \ = BigInt(0)\n        val zerosZeroOnesZeroOnesZeroOnesOnes = BigInt(0)\n   \
    \     val onesZeroOnesOnesZeroOnesZeroOnesOnes = BigInt(0)\n        val zerosZeroOnesZeroOnesZeroOnesZeroOnes\
    \ = BigInt(0)\n        val onesZeroOnesOnesZeroOnesZeroOnesZeroOnes = BigInt(0)\n\
    \        val zerosZeroOnesZeroOnesZeroOnesZeroOnesOnes = BigInt(0)\n        val\
    \ onesZeroOnesOnesZeroOnesZeroOnesZeroOnesOnes = BigInt(0)\n        val zerosZeroOnesZeroOnesZeroOnesZeroOnesZeroOnes\
    \ = BigInt(0)\n        val onesZeroOnesOnesZeroOnesZeroOnesZeroOnesZeroOnes =\
    \ BigInt(0)\n        val zerosZeroOnesZeroOnesZeroOnesZeroOnesZeroOnesOnes = BigInt(0)\n\
    \        val onesZeroOnesOnesZeroOnesZeroOnesZeroOnesZeroOnesOnes = BigInt(0)\n\
    \        val zerosZeroOnesZeroOnesZeroOnesZeroOnesZeroOnesZeroOnes = BigInt(0)\n\
    \        val onesZeroOnesOnesZeroOnesZeroOnesZeroOnesZeroOnesZeroOnes = BigInt(0)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpok7ssj9t.scala:38:11 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpok7ssj9t.scala:7:24 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m\
    \                        ^^^^^^^\e[0m\n\e[31m  |\e[0m                        Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpok7ssj9t.scala:39:5\
    \ ---------------------\e[0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n\
    \        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeros\
    \ = mutable.Map[Long, Long]()\n        val zerosCountOneOnes = mutable.Map[Long,\
    \ Long]()\n        val onesCountZeroOnes = mutable.Map[Long, Long]()\n       \
    \ val zerosCountOneOneZeros = mutable.Map[Long, Long]()\n        val onesCountZeroOneOnes\
    \ = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneZeros = mutable.Map[Long,\
    \ Long]()\n        val onesCountZeroOneOneOnes = mutable.Map[Long, Long]()\n \
    \       val zerosCountOneOneOneOneZeros = mutable.Map[Long, Long]()\n        val\
    \ onesCountZeroOneOneOneOnes = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneZeros\
    \ = mutable.Map[Long, Long]()\n        val onesCountZeroOneOneOneOnes = mutable.Map[Long,\
    \ Long]()\n        val zerosCountOneOneOneOneZeros = mutable.Map[Long, Long]()\n\
    \        val onesCountZeroOneOneOneOneOnes = mutable.Map[Long, Long]()\n     \
    \   val zerosCountOneOneOneOneOneZeros = mutable.Map[Long, Long]()\n        val\
    \ onesCountZeroOneOneOneOneOnes = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneZeros\
    \ = mutable.Map[Long, Long]()\n        val onesCountZeroOneOneOneOneOneOnes =\
    \ mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneOneZeros = mutable.Map[Long,\
    \ Long]()\n        val onesCountZeroOneOneOneOneOneOnes = mutable.Map[Long, Long]()\n\
    \        val zerosCountOneOneOneOneOneOneZeros = mutable.Map[Long, Long]()\n \
    \       val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpq9igtw3y.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq9igtw3y.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mzerosCountOneOneOneOneZeros\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCountOneOneOneOneZeros is already defined as \e[33mvalue\e\
    [0m \e[35mzerosCountOneOneOneOneZeros\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq9igtw3y.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36monesCountZeroOneOneOneOnes\e\
    [0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0monesCountZeroOneOneOneOnes is already defined as \e[33mvalue\e[0m \e\
    [35monesCountZeroOneOneOneOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq9igtw3y.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mzerosCountOneOneOneOneZeros\e\
    [0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mzerosCountOneOneOneOneZeros is already defined as \e[33mvalue\e[0m \e\
    [35mzerosCountOneOneOneOneZeros\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq9igtw3y.scala:30:12 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36monesCountZeroOneOneOneOneOnes\e\
    [0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \       "
  stdout: ''
  timestamp: 1659798573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n     \
    \   for (i <- 1 to n) {\n            val x = i.toString.toInt\n            if\
    \ (x == 1) {\n                counts.put(x, counts.getOrElse(x, 0) + 1L)\n   \
    \         }\n        }\n        counts.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp19210hee.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp19210hee.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var\
    \ count = 0\n        for(i <- 1 to n){\n            if(i%10 == 1){\n         \
    \       ones += i\n                count += 1\n            }\n        }\n    \
    \    ones.size\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpro70zto4.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpro70zto4.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        for(i <- 1 to n){\n       \
    \     if((i / 10) % 2 == 0){\n                count += 1\n            }\n    \
    \    }\n        return count\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_4xrwbko.scala:8:22\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        for (i <- 1 to n) {\n          \
    \  if (i % 10 == 1) {\n                ones += i\n            } else {\n     \
    \           zeros += i\n            }\n        }\n        ones.count(_ == 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpidb_h2nm.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpidb_h2nm.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpidb_h2nm.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros\
    \ = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n \
    \       while(n > 0){\n            val digit = n % 10\n            n /= 10\n \
    \           if(digit == 1){\n                ones += digit\n            }else{\n\
    \                zeros += digit\n            }\n        }\n        while(ones.size\
    \ > 0){\n            val digit = ones.head % 10\n            ones.head /= 10\n\
    \            counts += digit\n        }\n        while(zeros.size > 0){\n    \
    \        val digit = zeros.head % 10\n            zeros.head /= 10\n         \
    \   counts += digit\n        }\n        counts.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2o04o7_i.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2o04o7_i.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2o04o7_i.scala:9:21 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp2o04o7_i.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of\
    \ Long - did you mean n.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659798573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var\
    \ count = 0\n        for (i <- 1 to n) {\n            if (i.toString.startsWith(\"\
    1\") || i.toString.endsWith(\"1\")) {\n                ones += i\n           \
    \     count += 1\n            }\n        }\n        ones.length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n  \
    \  assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n\
    \    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) ==\
    \ (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpruy5pf39.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpruy5pf39.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n\
    \        val onesZeros = mutable.Set[Long]()\n        val zerosOnes = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n\
    \        val zerosZeros = mutable.Set[Long]()\n        val zerosOnes = mutable.Set[Long]()\n\
    \        val onesZeros = mutable.Set[Long]()\n        val onesOnes = mutable.Set[Long]()\n\
    \        val onesZeros = mutable.Set[Long]()\n        val onesOnes = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val onesOnes = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val onesOnes = \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpsyr1_wd9.scala:44:22 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36monesOnes\e[0m = \n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpsyr1_wd9.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mzerosZeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosZeros is already defined as \e[33mvalue\e[0m \e[35mzerosZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpsyr1_wd9.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mzerosOnes\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mzerosOnes is already defined as \e[33mvalue\e[0m \e[35mzerosOnes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpsyr1_wd9.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36monesZeros\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0monesZeros is already defined as \e[33mvalue\e[0m \e[35monesZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpsyr1_wd9.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36monesOnes\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0monesOnes is already defined as \e[33mvalue\e[0m \e[35monesOnes\e\
    [0m\n\e[31m   |\e[0m\n\e["
  stdout: ''
  timestamp: 1659798573
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        var next\
    \ = 1\n        while (next <= n) {\n            if (next == 1) {\n           \
    \     count += 1\n            } else {\n                if (last == 1) {\n   \
    \                 count += 1\n                } else {\n                    count\
    \ = 0\n                }\n            }\n            last = next\n           \
    \ next += 1\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7scoypmp.scala:27)\n\tat Problem.main(tmp7scoypmp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798573
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var start = 1\n        var\
    \ end = n\n        while (start <= end) {\n            if (start % 10 == 1) {\n\
    \                count += 1\n            }\n            start += 1\n        }\n\
    \        return count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqv04f6s3.scala:20)\n\tat Problem.main(tmpqv04f6s3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   while(n > 0){\n            val tmp = n % 10\n            if(tmp == 1){\n \
    \               ones += tmp\n            }\n            else if(tmp == 0){\n \
    \               zeros += tmp\n            }\n            else{\n             \
    \   count += tmp\n            }\n            n /= 10\n        }\n        val onesCount\
    \ = ones.toList.size\n        val zerosCount = zeros.toList.size\n        val\
    \ count = count.toList.size\n        onesCount + zerosCount + count\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n\
    \    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) ==\
    \ (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpnihjn5a0.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = count.toList.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mcount is already defined as \e[33mvalue\e[0m \e[35mcount\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnihjn5a0.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \             ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnihjn5a0.scala:8:20\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mzeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \               ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnihjn5a0.scala:9:20\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mcount\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \               ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpnihjn5a0.scala:21:14\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            n /= \e[31m10\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean n.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1659798574
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var i = 2\n        while(i\
    \ <= n){\n            if((n % i) == 1){\n                count += 1\n        \
    \    }\n            i += 1\n        }\n        return count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt5dm8jd1.scala:18)\n\tat Problem.main(tmpt5dm8jd1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798574
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastOne\
    \ = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour\
    \ = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven\
    \ = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen\
    \ = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen\
    \ = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var\
    \ lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n\
    \        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne\
    \ = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n      \
    \  var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix\
    \ = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n    \
    \    var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne\
    \ = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n      \
    \  var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix\
    \ = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n    \
    \    var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne\
    \ = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n      \
    \  var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix\
    \ = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n    \
    \    var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne\
    \ = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var\
    \ lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix =\
    \ 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var\
    \ lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n\
    \        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour\
    \ = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var\
    \ lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptku37em0.scala:77:5\
    \ ---------------------\e[0m\e[0m\n\e[31m77 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer.empty[Long]\n      \
    \  for (i <- 0 until n) if (i.toString.toLong == 1) ones += i\n        ones.count(_\
    \ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8sjw83qc.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp8sjw83qc.scala:8:26 ---------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) \e[33mif\e\
    [0m (i.toString.toLong == \e[31m1\e[0m) ones += i\n\e[31m\e[31m  |\e[0m      \
    \                    ^\e[0m\n\e[31m  |\e[0m                          Found:  \
    \  (n : Long)\n\e[31m  |\e[0m                          Required: Int\n\e[31m \
    \ |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659798578
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        for(i\
    \ <- 1 to n) {\n            val current = i\n            if(current == 1) {\n\
    \                count += 1\n            }\n            if(current == last) {\n\
    \                count += 1\n            }\n            last = current\n     \
    \   }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2yntkabt.scala:9:22\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m  |\e[0m           \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798580
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer(0)\n    \
    \    val starts = mutable.ArrayBuffer(0)\n        val ends = mutable.ArrayBuffer(0)\n\
    \        val onesCount = mutable.ArrayBuffer(0)\n        val zerosCount = mutable.ArrayBuffer(0)\n\
    \        val countsCount = mutable.ArrayBuffer(0)\n        val startsCount = mutable.ArrayBuffer(0)\n\
    \        val endsCount = mutable.ArrayBuffer(0)\n        val onesCountCount =\
    \ mutable.ArrayBuffer(0)\n        val zerosCountCount = mutable.ArrayBuffer(0)\n\
    \        val countsCountCount = mutable.ArrayBuffer(0)\n        val startsCountCount\
    \ = mutable.ArrayBuffer(0)\n        val endsCountCount = mutable.ArrayBuffer(0)\n\
    \        val onesCountCountCount = mutable.ArrayBuffer(0)\n        val zerosCountCountCount\
    \ = mutable.ArrayBuffer(0)\n        val countsCountCountCount = mutable.ArrayBuffer(0)\n\
    \        val startsCountCountCount = mutable.ArrayBuffer(0)\n        val endsCountCountCount\
    \ = mutable.ArrayBuffer(0)\n        val onesCountCountCountCount = mutable.ArrayBuffer(0)\n\
    \        val zerosCountCountCountCount = mutable.ArrayBuffer(0)\n        val countsCountCountCountCount\
    \ = mutable.ArrayBuffer(0)\n        val startsCountCountCountCount = mutable.ArrayBuffer(0)\n\
    \        val endsCountCountCountCount = mutable.ArrayBuffer(0)\n        val onesCountCountCountCountCount\
    \ = mutable.ArrayBuffer(0)\n        val zerosCountCountCountCountCount = mutable.ArrayBuffer(0)\n\
    \        val countsCountCountCountCountCount = mutable.ArrayBuffer(0)\n      \
    \  val startsCountCountCountCountCount = mutable.ArrayBuffer(0)\n        val endsCountCountCountCountCount\
    \ = mutable.ArrayBuffer(0)\n        val onesCountCountCountCountCountCount = mutable.ArrayBuffer(0)\n\
    \        val zerosCountCountCountCountCountCount = mutable.ArrayBuffer(0)\n  \
    \      val countsCountCountCountCountCountCount = mutable.ArrayBuffer(0)\n   \
    \     val startsCountCountCountCountCountCount = mutable.ArrayBuffer(0)\n    \
    \    val endsCountCountCountCountCountCount = mutable.ArrayBuffer(0)\n       \
    \ val onesCountCountCountCountCountCountCount = mutable.ArrayBuffer(0)\n     \
    \   val zerosCountCountCountCountCountCountCount = mutable.ArrayBuffer(0)\n  \
    \      val countsCountCountCountCountCountCountCount = mutable.ArrayBuffer(0)\n\
    \        val startsCountCountCountCountCountCountCount = mutable.\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n\
    \    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) ==\
    \ (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpv647fnv0.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpv647fnv0.scala:7:19 -------------------------\e[0m\e[0m\n\e[31m7\
    \ |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e\
    [0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \               Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpv647fnv0.scala:8:20 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\
    \e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e[0m         \
    \           Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpv647fnv0.scala:9:21 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\
    \e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m  |\e[0m        \
    \             Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpv647fnv0.scala:10:21 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mstarts\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpv647fnv0.scala:11:19 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m        \e[33mval\e[0m \e[36mends\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e["
  stdout: ''
  timestamp: 1659798581
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.ListBuffer[Long]()\n\
    \        val digits = n.toString.reverse.grouped(2).toList\n        val digit\
    \ = digits(0)\n        val digits = digit.tail\n        val digit = digits(0)\n\
    \        val digits = digit.tail\n        val digit = digits(0)\n        val digits\
    \ = digit.tail\n        val digit = digits(0)\n        val digits = digit.tail\n\
    \        val digit = digits(0)\n        val digits = digit.tail\n        val digit\
    \ = digits(0)\n        val digits = digit.tail\n        val digit = digits(0)\n\
    \        val digits = digit.tail\n        val digit = digits(0)\n        val digits\
    \ = digit.tail\n        val digit = digits(0)\n        val digits = digit.tail\n\
    \        val digit = digits(0)\n        val digits = digit.tail\n        val digit\
    \ = digits(0)\n        val digits = digit.tail\n        val digit = digits(0)\n\
    \        val digits = digit.tail\n        val digit = digits(0)\n        val digits\
    \ = digit.tail\n        val digit = digits(0)\n        val digits = digit.tail\n\
    \        val digit = digits(0)\n        val digits = digit.tail\n        val digit\
    \ = digits(0)\n        val digits = digit.tail\n        val digit = digits(0)\n\
    \        val digits = digit.tail\n        val digit = digits(0)\n        val digits\
    \ = digit.tail\n        val digit = digits(0)\n        val digits = digit.tail\n\
    \        val digit = digits(0)\n        val digits = digit.tail\n        val digit\
    \ = digits(0)\n        val digits = digit.tail\n        val digit = digits(0)\n\
    \        val digits = digit.tail\n        val digit = digits(0)\n        val digits\
    \ = digit.tail\n        val digit = digits(0)\n        val digits = digit.tail\n\
    \        val digit = digits(0)\n        val digits = digit.tail\n        val digit\
    \ = digits(0)\n        val digits = digit.tail\n        val digit = digits(0)\n\
    \        val digits = digit.tail\n        val digit = digits(0)\n        val digits\
    \ = digit.tail\n        val digit = digits(0)\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmplx234381.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = digit.tail\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mdigits\
    \ is already defined as \e[33mvalue\e[0m \e[35mdigits\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmplx234381.scala:13:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36mdigit\e[0m = digits(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mdigit is already defined as \e[33mvalue\e[0m \e[35mdigit\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmplx234381.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = digit.tail\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mdigits is already\
    \ defined as \e[33mvalue\e[0m \e[35mdigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmplx234381.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mdigit\e[0m = digits(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mdigit is already defined as \e[33mvalue\e[0m \e[35mdigit\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmplx234381.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = digit.tail\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mdigits is already\
    \ defined as \e[33mvalue\e[0m \e[35mdigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e["
  stdout: ''
  timestamp: 1659798583
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   val starts = mutable.ArrayBuffer(0)\n        val ends = mutable.ArrayBuffer(0)\n\
    \        val onesCount = mutable.ArrayBuffer(0)\n        val zerosCount = mutable.ArrayBuffer(0)\n\
    \        val counts = mutable.ArrayBuffer(0)\n        val startsCount = mutable.ArrayBuffer(0)\n\
    \        val endsCount = mutable.ArrayBuffer(0)\n        val onesCounts = mutable.ArrayBuffer(0)\n\
    \        val zerosCounts = mutable.ArrayBuffer(0)\n        val countss = mutable.ArrayBuffer(0)\n\
    \        val startsCounts = mutable.ArrayBuffer(0)\n        val endsCounts = mutable.ArrayBuffer(0)\n\
    \        val onesCountss = mutable.ArrayBuffer(0)\n        val zerosCountss =\
    \ mutable.ArrayBuffer(0)\n        val countsss = mutable.ArrayBuffer(0)\n    \
    \    val startsCountss = mutable.ArrayBuffer(0)\n        val endsCountss = mutable.ArrayBuffer(0)\n\
    \        val onesCountsss = mutable.ArrayBuffer(0)\n        val zerosCountsss\
    \ = mutable.ArrayBuffer(0)\n        val countssss = mutable.ArrayBuffer(0)\n \
    \       val startsCountsss = mutable.ArrayBuffer(0)\n        val endsCountsss\
    \ = mutable.ArrayBuffer(0)\n        val onesCountssss = mutable.ArrayBuffer(0)\n\
    \        val zerosCountssss = mutable.ArrayBuffer(0)\n        val countsssss =\
    \ mutable.ArrayBuffer(0)\n        val startsCountssss = mutable.ArrayBuffer(0)\n\
    \        val endsCountssss = mutable.ArrayBuffer(0)\n        val onesCountsssss\
    \ = mutable.ArrayBuffer(0)\n        val zerosCountsssss = mutable.ArrayBuffer(0)\n\
    \        val countssssss = mutable.ArrayBuffer(0)\n        val startsCountsssss\
    \ = mutable.ArrayBuffer(0)\n        val endsCountsssss = mutable.ArrayBuffer(0)\n\
    \        val onesCountssssss = mutable.ArrayBuffer(0)\n        val zerosCountssssss\
    \ = mutable.ArrayBuffer(0)\n        val countssssss = mutable.ArrayBuffer(0)\n\
    \        val startsCountssssss = mutable.ArrayBuffer(0)\n        val endsCountssssss\
    \ = mutable.ArrayBuffer(0)\n        val onesCountsssssss = mutable.ArrayBuffer(0)\n\
    \        val zerosCountsssssss = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptpb1mlxc.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36mcountssssss\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcountssssss is already defined as \e[33mvalue\e[0m \e[35mcountssssss\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmptpb1mlxc.scala:7:19 -------------------------\e[0m\e[0m\n\
    \e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmptpb1mlxc.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmptpb1mlxc.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmptpb1mlxc.scala:10:21 ------------------------\e[0m\e\
    [0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mstarts\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmptpb1mlxc.scala:11:19 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m   "
  stdout: ''
  timestamp: 1659798582
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val count = new mutable.HashMap[Long, Long]()\n  \
    \      for (i <- 1 to n) {\n            val s = i.toString.toInt\n           \
    \ if (s == 1) {\n                count.put(i, count.getOrElse(i, 0) + 1L)\n  \
    \          }\n        }\n        count.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprh1s26nq.scala:7:24 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m\
    \                        ^^^^^^^\e[0m\n\e[31m  |\e[0m                        Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprh1s26nq.scala:8:23\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798582
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros\
    \ = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n \
    \       while(n > 1) {\n            val temp = n % 10\n            n /= 10\n \
    \           val index = ones.indexOf(temp)\n            if(index == -1) {\n  \
    \              ones += temp\n                counts += ones.size\n           \
    \ }\n            else {\n                val index = zeros.indexOf(temp)\n   \
    \             if(index == -1) {\n                    zeros += temp\n         \
    \           counts += zeros.size\n                }\n            }\n        }\n\
    \        counts.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2545ws59.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2545ws59.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2545ws59.scala:9:21 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp2545ws59.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of\
    \ Long - did you mean n.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659798583
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n       \
    \ val zerosCount = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n\
    \        val zerosCounts = mutable.Set[Long]()\n        val ones\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n  \
    \  assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n\
    \    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) ==\
    \ (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4_bs__3h.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4_bs__3h.scala:13:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCounts\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0monesCounts\
    \ is already defined as \e[33mvalue\e[0m \e[35monesCounts\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4_bs__3h.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mzerosCounts\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mzerosCounts\
    \ is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4_bs__3h.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCounts\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0monesCounts\
    \ is already defined as \e[33mvalue\e[0m \e[35monesCounts\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4_bs__3h.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mzerosCounts\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mzerosCounts\
    \ is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4_bs__3"
  stdout: ''
  timestamp: 1659798583
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val zerosCount = mutable.ListBuffer[Long]()\n        val onesCounts =\
    \ mutable.ListBuffer[Long]()\n        val zerosCounts = mutable.ListBuffer[Long]()\n\
    \        val onesCounts = mutable.ListBuffer[Long]()\n        val zerosCounts\
    \ = mutable.ListBuffer[Long]()\n        val onesCounts = mutable.ListBuffer[Long]()\n\
    \        val zerosCounts = mutable.ListBuffer[Long]()\n        val onesCounts\
    \ = mutable.ListBuffer[Long]()\n        val zerosCounts = mutable.ListBuffer[Long]()\n\
    \        val onesCounts = mutable.ListBuffer[Long]()\n        val zerosCounts\
    \ = mutable.ListBuffer[Long]()\n        val onesCounts = mutable.ListBuffer[Long]()\n\
    \        val zerosCounts = mutable.ListBuffer[Long]()\n        val onesCounts\
    \ = mutable.ListBuffer[Long]()\n        val zerosCounts = mutable.ListBuffer[Long]()\n\
    \        val onesCounts = mutable.ListBuffer[Long]()\n        val zerosCounts\
    \ = mutable.ListBuffer[Long]()\n        val onesCounts = mutable.ListBuffer[Long]()\n\
    \        val zerosCounts = mutable.ListBuffer[Long]()\n        val onesCounts\
    \ = mutable.ListBuffer[Long]()\n        val zerosCounts = mutable.ListBuffer[Long]()\n\
    \        val onesCounts = mutable.ListBuffer[Long]()\n        val zerosCounts\
    \ = mutable.ListBuffer[Long]()\n        val onesCounts = mutable.ListBuffer[Long]()\n\
    \        val zerosCounts = mutable.ListBuffer[Long]()\n        val onesCounts\
    \ = mutable.ListBuffer[Long]()\n        val zerosCounts = mutable.ListBuffer[Long]()\n\
    \        val onesCounts = mutable.ListBuffer[Long]()\n        val zerosCounts\
    \ = mutable.ListBuffer[Long]()\n        val onesCounts = mutable.ListBuffer[Long]()\n\
    \        val zerosCounts = mutable.ListBuffer[Long]()\n        val onesCounts\
    \ = mutable.ListBuffer[Long]()\n        val zerosCounts = mutable.ListBuffer\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpr6w2qxaa.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr6w2qxaa.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr6w2qxaa.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr6w2qxaa.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr6w2qxaa.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.ListBuffer[\e\
    [35mLong\e"
  stdout: ''
  timestamp: 1659798583
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val digits = mutable.ListBuffer[Long]()\n\
    \        var i = 0\n        while (i < n) {\n            digits += i.toLong\n\
    \            i += 1\n        }\n        digits.reverse.foreach(i => if (i == 1)\
    \ ones += 1 else if (i == 0) zeros += 1)\n        ones.toSet.size + (zeros.toSet.size\
    \ - ones.toSet.size) * n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7me956ae.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp7me956ae.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp7me956ae.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798580
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n     \
    \   val ones = mutable.Array[Long]()\n        val zeros = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmmzdqyw2.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Array[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmmzdqyw2.scala:13:12 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.Array[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCount is already defined as \e[33mvalue\e[0m \e[35mzerosCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmmzdqyw2.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Array[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmmzdqyw2.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.Array[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCount is already defined as \e[33mvalue\e[0m \e[35mzerosCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmmzdqyw2.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Array[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659798584
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        var count = 0\n        while(n > 1) {\n  \
    \          val x = n % 10\n            if(x == 1) {\n                ones += x\n\
    \                count += 1\n            } else {\n                zeros += x\n\
    \            }\n            n /= 10\n        }\n        count += ones.size - zeros.size\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_jttx9e1.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp_jttx9e1.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp_jttx9e1.scala:18:14 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m    \
    \        ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long\
    \ - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659798584
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        val ones = scala.collection.mutable.ListBuffer(1)\n\
    \        val zeros = scala.collection.mutable.ListBuffer(0)\n        val onesAndZeros\
    \ = scala.collection.mutable.ListBuffer((1,0))\n        val onesAndOnes = scala.collection.mutable.ListBuffer((1,1))\n\
    \        val onesAndZerosAndOnes = scala.collection.mutable.ListBuffer((1,0))\n\
    \        val onesAndZerosAndZeros = scala.collection.mutable.ListBuffer((1,0))\n\
    \        val onesAndOnesAndZeros = scala.collection.mutable.ListBuffer((1,1))\n\
    \        val onesAndOnesAndOnes = scala.collection.mutable.ListBuffer((1,1))\n\
    \        val onesAndZerosAndOnesAndOnes = scala.collection.mutable.ListBuffer((1,0))\n\
    \        val onesAndZerosAndOnesAndZeros = scala.collection.mutable.ListBuffer((1,0))\n\
    \        val onesAndOnesAndOnesAndZeros = scala.collection.mutable.ListBuffer((1,1))\n\
    \        val onesAndOnesAndOnesAndOnes = scala.collection.mutable.ListBuffer((1,1))\n\
    \        val onesAndZerosAndOnesAndOnesAndOnes = scala.collection.mutable.ListBuffer((1,0))\n\
    \        val onesAndZerosAndOnesAndOnesAndZeros = scala.collection.mutable.ListBuffer((1,0))\n\
    \        val onesAndOnesAndOnesAndOnesAndZeros = scala.collection.mutable.ListBuffer((1,1))\n\
    \        val onesAndOnesAndOnesAndOnesAndOnes = scala.collection.mutable.ListBuffer((1,1))\n\
    \        val onesAndZerosAndOnesAndOnesAndOnesAndOnes = scala.collection.mutable.ListBuffer((1,0))\n\
    \        val onesAndZerosAndOnesAndOnesAndOnesAndZeros = scala.collection.mutable.ListBuffer((1,0))\n\
    \        val onesAndOnesAndOnesAndOnesAndOnesAndZeros = scala.collection.mutable.ListBuffer((1,1))\n\
    \        val onesAndOnesAndOnesAndOnesAndOnesAndOnes = scala.collection.mutable.ListBuffer((1,1))\n\
    \        val onesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnes = scala.collection.mutable.ListBuffer((1,0))\n\
    \        val onesAndZerosAndOnesAndOnesAndOnesAndOnesAndZeros = scala.collection.mutable.ListBuffer((1,0))\n\
    \        val onesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnes = scala.collection.mutable.ListBuffer((1,1))\n\
    \        val onesAndOnesAndOnesAndOnesAndOnesAndOnesAndZeros = \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n  \
    \  assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n\
    \    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) ==\
    \ (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpagqzq_ue.scala:31:61 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36monesAndOnesAndOnesAndOnesAndOnesAndOnesAndZeros\e\
    [0m = \n\e[31m\e[31m   |\e[0m                                                \
    \             ^\e[0m\n\e[31m   |\e[0m                                       expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpagqzq_ue.scala:32:5 ---------------------\e[0m\e[0m\n\e[31m32\
    \ |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:  \
    \  Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798583
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        for(i <- 1 to n){\n       \
    \     if(i%10 == 1){\n                count += 1\n            }\n        }\n \
    \       count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp535uww3x.scala:8:22\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798584
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n \
    \       val ones = mutable.ArrayBuffer.empty[Long]\n        val zeros = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val zerosCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.Array\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptgq44edp.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptgq44edp.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptgq44edp.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptgq44edp.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptgq44edp.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36monesCo"
  stdout: ''
  timestamp: 1659798583
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastOne\
    \ = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour\
    \ = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven\
    \ = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen\
    \ = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen\
    \ = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var\
    \ lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n\
    \        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne\
    \ = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n      \
    \  var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix\
    \ = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n    \
    \    var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne\
    \ = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n      \
    \  var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix\
    \ = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n    \
    \    var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne\
    \ = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n      \
    \  var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix\
    \ = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n    \
    \    var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne\
    \ = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var\
    \ lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix =\
    \ 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var\
    \ lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n\
    \        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour\
    \ = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var\
    \ lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptku37em0.scala:77:5\
    \ ---------------------\e[0m\e[0m\n\e[31m77 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount\
    \ = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n      \
    \  val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n\
    \        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n\
    \        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n\
    \        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n\
    \        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n\
    \        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n\
    \        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n\
    \        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n\
    \        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n\
    \        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n\
    \        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n\
    \        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n\
    \        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n\
    \        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n\
    \        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n\
    \        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n\
    \        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt9nch94n.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m         \
    \          ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:8:24\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m    \
    \                    ^^^^^^^\e[0m\n\e[31m  |\e[0m                        Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:9:25\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m   \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                         Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:10:25\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount3\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount4\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfzqz5sdl.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = m"
  stdout: ''
  timestamp: 1659798584
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        val ones = mutable.ArrayBuffer(1)\n\
    \        val zeros = mutable.ArrayBuffer(0)\n        val onesCount = ones.count(_\
    \ == 1)\n        val zerosCount = zeros.count(_ == 0)\n        val onesZeros =\
    \ ones.count(_ == 0)\n        val zerosOnes = zeros.count(_ == 1)\n        val\
    \ onesOnes = ones.count(_ == 1)\n        val zerosZeros = zeros.count(_ == 0)\n\
    \        val onesZeroZeros = ones.count(_ == 0)\n        val zerosOneZeros = zeros.count(_\
    \ == 1)\n        val onesOneZeros = ones.count(_ == 0)\n        val zerosOneOnes\
    \ = zeros.count(_ == 1)\n        val onesOneOnes = ones.count(_ == 1)\n      \
    \  val zerosOneZeroZeros = zeros.count(_ == 0)\n        val onesOneZeroZeros =\
    \ ones.count(_ == 0)\n        val zerosOneOneZeros = zeros.count(_ == 1)\n   \
    \     val onesOneOneZeros = ones.count(_ == 0)\n        val zerosOneOneOnes =\
    \ zeros.count(_ == 1)\n        val onesOneOneOnes = ones.count(_ == 1)\n     \
    \   val zerosOneOneZeroZeros = zeros.count(_ == 0)\n        val onesOneOneZeroZeros\
    \ = ones.count(_ == 0)\n        val zerosOneOneOneZeros = zeros.count(_ == 1)\n\
    \        val onesOneOneOneZeros = ones.count(_ == 0)\n        val zerosOneOneOneOnes\
    \ = zeros.count(_ == 1)\n        val onesOneOneOneOnes = ones.count(_ == 0)\n\
    \        val zerosOneOneOneZeroZeros = zeros.count(_ == 0)\n        val onesOneOneOneZeroZeros\
    \ = ones.count(_ == 0)\n        val zerosOneOneOneOneZeros = zeros.count(_ ==\
    \ 1)\n        val onesOneOneOneOneZeros = ones.count(_ == 0)\n        val zerosOneOneOneOneOnes\
    \ = zeros.count(_ == 1)\n        val onesOneOneOneOneOnes = ones.count(_ == 0)\n\
    \        val zerosOneOneOneOneZeroZeros = zeros.count(_ == 0)\n        val onesOneOneOneOneZeroZeros\
    \ = ones.count(_ == 0)\n        val zerosOneOneOneOneOneZeros = zeros.count(_\
    \ == 1)\n        val onesOneOneOneOneOneZeros = ones.count(_ == 0)\n        val\
    \ zerosOneOneOneOneOneOnes = zeros.count(_ == 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0f9z_dy5.scala:8:19 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp0f9z_dy5.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp0f9z_dy5.scala:44:5 ---------------------\e[0m\e\
    [0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m \
    \    Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n     \
    \   for (i <- 1 to n) {\n            val str = i.toString\n            val start\
    \ = str.charAt(0) == '1'\n            val end = str.charAt(str.length - 1) ==\
    \ '1'\n            if (start && end) {\n                counts.put(i.toLong, 1)\n\
    \            }\n        }\n        counts.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0rtoiif_.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp0rtoiif_.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val zerosCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCountZeros\
    \ = mutable.ArrayBuffer.empty[Long]\n        val zerosCountZeros = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCountOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosCountOnes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCountZeroOnes = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCountZeroOnes = mutable.ArrayBuffer.empty[Long]\n        val\
    \ onesCountOneOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosCountOneOnes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCountZeroZeros = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCountZeroZeros = mutable.ArrayBuffer.empty[Long]\n        val\
    \ onesCountOneZeros = mutable.ArrayBuffer.empty[Long]\n        val zerosCountOneZeros\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCountZeroOnes = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCountZeroOnes = mutable.ArrayBuffer.empty[Long]\n        val\
    \ onesCountOneOne = mutable.ArrayBuffer.empty[Long]\n        val zerosCountOneOne\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCountZeroZero = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCountZeroZero = mutable.ArrayBuffer.empty[Long]\n        val\
    \ onesCountOneZero = mutable.ArrayBuffer.empty[Long]\n        val zerosCountOneZero\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCountZeroOne = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCountZeroOne = mutable.ArrayBuffer.empty[Long]\n        val\
    \ onesCountOneOne = mutable.ArrayBuffer.empty[Long]\n        val zerosCountOneOne\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCountZeroZero = mutable.ArrayBuffer.empty[Long]\n\
    \        val zerosCountZeroZero = mutable.ArrayBuffer.empty[Long\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n  \
    \  assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n\
    \    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) ==\
    \ (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4oi92fk1.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4oi92fk1.scala:26:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCountZeroOnes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCountZeroOnes is already defined as \e[33mvalue\e[0m \e\
    [35monesCountZeroOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp4oi92fk1.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mzerosCountZeroOnes\e[0m\
    \ = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCountZeroOnes is already defined as \e[33mvalue\e[0m\
    \ \e[35mzerosCountZeroOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp4oi92fk1.scala:36:12 ---------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m        \e[33mval\e[0m \e[36monesCountOneOne\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCountOneOne is already defined as \e[33mvalue\e[0m \e\
    [35monesCountOneOne\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp4oi92fk1.scala:37:12 ---------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m        \e[33mval\e[0m \e[36mzerosCountOneOne\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCountOneOne is already defined as \e[33mvalue\e[0m \e"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.withDefaultValue(0)\n        val onesCount\
    \ = onesCount.withDefaultValue(0)\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.withDefaultValue(0)\n        val onesCount\
    \ = onesCount.withDefaultValue(0)\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.withDefaultValue(0)\n        val onesCount\
    \ = onesCount.withDefaultValue(0)\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.withDefaultValue(0)\n        val onesCount\
    \ = onesCount.withDefaultValue(0)\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.withDefaultValue(0)\n        val onesCount\
    \ = onesCount.withDefaultValue(0)\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.withDefaultValue(0)\n        val onesCount\
    \ = onesCount.withDefaultValue(0)\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.withDefaultValue(0)\n        val onesCount\
    \ = onesCount.withDefaultValue(0)\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.withDefaultValue(0)\n        val onesCount\
    \ = onesCount.withDefaultValue(0)\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.withDefaultValue(0)\n        val onesCount\
    \ = onesCount.withDefaultValue(0)\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.withDefaultValue(0)\n        val onesCount\
    \ = onesCount.withDefaultValue(0)\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.withDefaultValue(0)\n        val onesCount\
    \ = onesCount.withDefaultValue(0)\n        val onesCount = onesCount.withDefaultValue(0)\n\
    \        val onesCount = onesCount.\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpoaq5lqud.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpoaq5lqud.scala:9:12 ----------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = onesCount.withDefaultValue(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpoaq5lqud.scala:10:12 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = onesCount.withDefaultValue(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpoaq5lqud.scala:11:12 ---------------------------\e[0m\e[0m\n\e\
    [31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = onesCount.withDefaultValue(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpoaq5lqud.scala:12:12 ---------------------------\e[0m\e[0m\n\e\
    [31m12 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = onesCount.withDefaultValue(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel "
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   val remainder = n % 10\n        val digits = n / 10\n        val lastDigit\
    \ = digits % 10\n        val lastDigitIsOne = lastDigit == 1\n        val lastDigitIsZero\
    \ = lastDigit == 0\n        val lastDigitIsOneOrZero = lastDigitIsOne || lastDigitIsZero\n\
    \        val lastDigitIsOneOrZeroAndRemainder = lastDigitIsOneOrZero && remainder\
    \ == 0\n        val lastDigitIsOneOrZeroAndRemainderIsZero = lastDigitIsOneOrZero\
    \ && remainder == 0\n        val lastDigitIsOneOrZeroAndRemainderIsOne = lastDigitIsOneOrZero\
    \ && remainder == 1\n        val lastDigitIsOneOrZeroAndRemainderIsOneAndLastDigitIsOne\
    \ = lastDigitIsOneOrZero && remainder == 1 && lastDigitIsOne\n        val lastDigitIsOneOrZeroAndRemainderIsOneAndLastDigitIsZero\
    \ = lastDigitIsOneOrZero && remainder == 1 && lastDigitIsZero\n        val lastDigitIsOneOrZeroAndRemainderIsOneAndLastDigitIsOneOrZero\
    \ = lastDigitIsOneOrZero && remainder == 1 && lastDigitIsOne || lastDigitIsZero\n\
    \        val lastDigitIsOneOrZeroAndRemainderIsOneAndLastDigitIsOneOrZeroAndRemainder\
    \ = lastDigitIsOneOrZero && remainder == 1 && lastDigitIsOne || lastDigitIsZero\
    \ && remainder == 0\n        val lastDigitIsOneOrZeroAndRemainderIsOneAndLastDigitIsOneOrZeroAndRemainderIsZero\
    \ = lastDigitIsOneOrZero && remainder == 1 && lastDigitIsOne || lastDigitIsZero\
    \ && remainder == 0 && lastDigitIsZero\n        val lastDigitIsOneOrZeroAndRemainderIsOneAndLastDigitIsOneOrZeroAndRemainderIsOne\
    \ = lastDigitIsOneOrZero && remainder == 1 && lastDigitIsOne || lastDigitIsZero\
    \ && remainder == 1 && lastDigitIsOne\n        val lastDigitIsOneOrZeroAndRemainderIsOneAndLastDigitIsOneOrZeroAndRemainderIsOneAndLastDigitIsOne\
    \ = lastDigitIsOneOrZero && remainder \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmhcxg54j.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpmhcxg54j.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpmhcxg54j.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpmhcxg54j.scala:25:133 -------------------\e[0m\e\
    [0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mlastDigitIsOneOrZeroAndRemainderIsOneAndLastDigitIsOneOrZeroAndRemainderIsOneAndLastDigitIsOne\e\
    [0m = lastDigitIsOneOrZero && remainder \n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                           ^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                                          Found:    (remainder : Long)\n\e[31m\
    \   |\e[0m                                            Required: Boolean\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmhcxg54j.scala:26:5 ---------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation av"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Int]\n  \
    \      val ones = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n) {\n\
    \            val one = i.toString.toLong\n            if (ones.contains(one))\
    \ {\n                counts(one) += 1\n            }\n            else {\n   \
    \             ones += one\n                counts(one) = 1\n            }\n  \
    \      }\n        counts.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpezy_i43u.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpezy_i43u.scala:8:19 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpezy_i43u.scala:9:23 ---------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m                    \
    \   Found:    (n : Long)\n\e[31m  |\e[0m                       Required: Int\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val count = mutable.Map[Long, Long]()\n     \
    \   val onesCount = mutable.Map[Long, Long]()\n        val zerosCount = mutable.Map[Long,\
    \ Long]()\n        val onesZeros = mutable.Map[Long, Long]()\n        val zerosOnes\
    \ = mutable.Map[Long, Long]()\n        val onesOnes = mutable.Map[Long, Long]()\n\
    \        val zerosZeros = mutable.Map[Long, Long]()\n        val zerosZeros =\
    \ mutable.Map[Long, Long]()\n        val onesZeros = mutable.Map[Long, Long]()\n\
    \        val zerosOnes = mutable.Map[Long, Long]()\n        val zerosZeros = mutable.Map[Long,\
    \ Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n        val onesOnes\
    \ = mutable.Map[Long, Long]()\n        val onesZeros = mutable.Map[Long, Long]()\n\
    \        val zerosOnes = mutable.Map[Long, Long]()\n        val zerosZeros = mutable.Map[Long,\
    \ Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n        val zerosZeros\
    \ = mutable.Map[Long, Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n\
    \        val onesOnes = mutable.Map[Long, Long]()\n        val onesZeros = mutable.Map[Long,\
    \ Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n        val zerosZeros\
    \ = mutable.Map[Long, Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n\
    \        val onesOnes = mutable.Map[Long, Long]()\n        val onesZeros = mutable.Map[Long,\
    \ Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n        val zerosZeros\
    \ = mutable.Map[Long, Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n\
    \        val onesOnes = mutable.Map[Long, Long]()\n        val onesZeros = mutable.Map[Long,\
    \ Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n        val zerosZeros\
    \ = mutable.Map[Long, Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n\
    \        val ones\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpai0rpn2_.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpai0rpn2_.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mzerosZeros\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mzerosZeros is already defined as \e[33mvalue\e[0m \e[35mzerosZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpai0rpn2_.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36monesZeros\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeros is already defined as \e[33mvalue\e[0m \e[35monesZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpai0rpn2_.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mzerosOnes\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosOnes is already defined as \e[33mvalue\e[0m \e[35mzerosOnes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpai0rpn2_.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mzerosZeros\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosZeros is already defined as \e[33mvalue\e[0m \e[35mzerosZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of to"
  stdout: ''
  timestamp: 1659798586
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        for\
    \ (i <- 1 to n) {\n            if (i.toString.toLong == 1) {\n               \
    \ ones += i\n            }\n        }\n        ones.count(_ == 1)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n\
    \    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) ==\
    \ (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcd87j79s.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpcd87j79s.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798591
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        for\
    \ (i <- 1 to n) ones += i\n        ones.count(_ == 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdy3qr2ut.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpdy3qr2ut.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) ones +=\
    \ i\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m       \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    for (i <- 1 to n) {\n            val digit = i / 10\n            if (digit\
    \ == 1) {\n                ones += i\n            } else {\n                zeros\
    \ += i\n            }\n        }\n        for (i <- ones.toList ++ zeros.toList)\
    \ {\n            counts(i) += 1\n        }\n        counts.values.sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n\
    \    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) ==\
    \ (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjd_ibhmm.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjd_ibhmm.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjd_ibhmm.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjd_ibhmm.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659798592
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer.empty[Long]\n     \
    \   val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount2 =\
    \ mutable.ArrayBuffer.empty[Long]\n        val onesCount3 = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount4 = mutable.ArrayBuffer.empty[Long]\n        val onesCount5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCount6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount7 = mutable.ArrayBuffer.empty[Long]\n        val onesCount8\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCount9 = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount10 = mutable.ArrayBuffer.empty[Long]\n        val onesCount11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCount12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount13 = mutable.ArrayBuffer.empty[Long]\n        val onesCount14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCount15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount16 = mutable.ArrayBuffer.empty[Long]\n        val onesCount17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCount18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount19 = mutable.ArrayBuffer.empty[Long]\n        val onesCount20\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCount21 = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount22 = mutable.ArrayBuffer.empty[Long]\n        val onesCount23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCount24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount25 = mutable.ArrayBuffer.empty[Long]\n        val onesCount26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCount27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount28 = mutable.ArrayBuffer.empty[Long]\n        val onesCount29\
    \ = mutable.ArrayBuffer.empty[Long]\n        val onesCount30 = mutable.ArrayBuffer.empty[Long]\n\
    \        val onesCount31 = mutable.ArrayBuffer.empty[Long]\n        val onesCount32\
    \ = mutable.ArrayBuffer.empty[Long]\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5kk_fjmp.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp5kk_fjmp.scala:8:24 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp5kk_fjmp.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5kk_fjmp.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp5kk_fjmp.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp5kk_fjmp.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m"
  stdout: ''
  timestamp: 1659798590
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesZeros = mutable.Set[Long]()\n   \
    \     val zerosZeros = mutable.Set[Long]()\n        val onesZeroCount = mutable.Set[Long]()\n\
    \        val zerosZeroCount = mutable.Set[Long]()\n        val onesZeroCounts\
    \ = mutable.Map[Long, Long]()\n        val zerosZeroCounts = mutable.Map[Long,\
    \ Long]()\n        val onesZeroZeros = mutable.Set[Long]()\n        val zerosZeroZeros\
    \ = mutable.Set[Long]()\n        val onesZeroZeroCount = mutable.Set[Long]()\n\
    \        val zerosZeroZeroCount = mutable.Set[Long]()\n        val onesZeroZeroCounts\
    \ = mutable.Map[Long, Long]()\n        val zerosZeroZeroCounts = mutable.Map[Long,\
    \ Long]()\n        val onesZeroZeroZeros = mutable.Set[Long]()\n        val zerosZeroZeroZeros\
    \ = mutable.Set[Long]()\n        val onesZeroZeroZeroCount = mutable.Set[Long]()\n\
    \        val zerosZeroZeroZeroCount = mutable.Set[Long]()\n        val onesZeroZeroZeroCounts\
    \ = mutable.Map[Long, Long]()\n        val zerosZeroZeroZeroCounts = mutable.Map[Long,\
    \ Long]()\n        val onesZeroZeroZeroZeros = mutable.Set[Long]()\n        val\
    \ zerosZeroZeroZeroZeros = mutable.Set[Long]()\n        val onesZeroZeroZeroCount\
    \ = mutable.Set[Long]()\n        val zerosZeroZeroZeroCount = mutable.Set[Long]()\n\
    \        val onesZeroZeroZeroCounts = mutable.Map[Long, Long]()\n        val zerosZeroZeroZeroCounts\
    \ = mutable.Map[Long, Long]()\n        val onesZeroZeroZeroZeros = mutable.Set[Long]()\n\
    \        val zerosZeroZeroZeroZeros = mutable.Set[Long]()\n        val onesZeroZeroZeroCount\
    \ = mutable.Set[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7p3zqk79.scala:34:12 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \e[36monesZeroZeroZeroCount\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeroZeroZeroCount is already defined as \e[33mvalue\e\
    [0m \e[35monesZeroZeroZeroCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7p3zqk79.scala:35:12 ---------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m        \e[33mval\e[0m \e[36mzerosZeroZeroZeroCount\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosZeroZeroZeroCount is already defined as \e[33mvalue\e\
    [0m \e[35mzerosZeroZeroZeroCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7p3zqk79.scala:36:12 ---------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m        \e[33mval\e[0m \e[36monesZeroZeroZeroCounts\e\
    [0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0monesZeroZeroZeroCounts is already defined as \e[33mvalue\e[0m \e[35monesZeroZeroZeroCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7p3zqk79.scala:37:12 ---------------------------\e[0m\e[0m\n\e\
    [31m37 |\e[0m        \e[33mval\e[0m \e[36mzerosZeroZeroZeroCounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosZeroZeroZeroCounts is already defined as \e[33mvalue\e\
    [0m \e[35mzerosZeroZeroZeroCounts\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- ["
  stdout: ''
  timestamp: 1659798593
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n\
    \        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountOnes\
    \ = mutable.Map[Long, Long]()\n        val zerosCountZeros = mutable.Map[Long,\
    \ Long]()\n        val onesCountZeroOnes = mutable.Map[Long, Long]()\n       \
    \ val zerosCountOneZero = mutable.Map[Long, Long]()\n        val onesCountOneZero\
    \ = mutable.Map[Long, Long]()\n        val zerosCountZeroOne = mutable.Map[Long,\
    \ Long]()\n        val onesCountZeroOne = mutable.Map[Long, Long]()\n        val\
    \ zerosCountOneOne = mutable.Map[Long, Long]()\n        val onesCountOneOne =\
    \ mutable.Map[Long, Long]()\n        val zerosCountZeroOneOne = mutable.Map[Long,\
    \ Long]()\n        val onesCountZeroOneOne = mutable.Map[Long, Long]()\n     \
    \   val zerosCountOneOneOne = mutable.Map[Long, Long]()\n        val onesCountOneOneOne\
    \ = mutable.Map[Long, Long]()\n        val zerosCountZeroOneOneOne = mutable.Map[Long,\
    \ Long]()\n        val onesCountZeroOneOneOne = mutable.Map[Long, Long]()\n  \
    \      val zerosCountOneOneOneOne = mutable.Map[Long, Long]()\n        val onesCountOneOneOneOne\
    \ = mutable.Map[Long, Long]()\n        val zerosCountZeroOneOneOneOne = mutable.Map[Long,\
    \ Long]()\n        val onesCountZeroOneOneOneOne = mutable.Map[Long, Long]()\n\
    \        val zerosCountOneOneOneOneOne = mutable.Map[Long, Long]()\n        val\
    \ onesCountOneOneOneOneOne = mutable.Map[Long, Long]()\n        val zerosCountZeroOneOneOneOneOne\
    \ = mutable.Map[Long, Long]()\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwymolgz_.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwymolgz_.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwymolgz_.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwymolgz_.scala:10:24 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwymolgz_.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwymolgz_.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.Map[\e\
    [35mLong"
  stdout: ''
  timestamp: 1659798593
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   while(n > 0){\n            val digit = n % 10\n            n /= 10\n     \
    \       if(digit == 1){\n                ones += digit\n            }\n      \
    \      if(digit == 0){\n                zeros += digit\n            }\n      \
    \  }\n        while(ones.size < n){\n            ones += 0\n        }\n      \
    \  while(zeros.size < n){\n            zeros += 0\n        }\n        while(ones.size\
    \ > 0){\n            count += ones.takeWhile(x => x == 1)\n            ones.dropWhile(x\
    \ => x == 1)\n        }\n        while(zeros.size > 0){\n            count +=\
    \ zeros.takeWhile(x => x == 0)\n            zeros.dropWhile(x => x == 0)\n   \
    \     }\n        count.sum\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk3a6sma6.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpk3a6sma6.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpk3a6sma6.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpk3a6sma6.scala:12:14 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m    \
    \        ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long\
    \ - did you mean n.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659798594
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer(0)\n    \
    \    val onesCount = mutable.ArrayBuffer(0)\n        val zerosCount = mutable.ArrayBuffer(0)\n\
    \        val onesCounts = mutable.ArrayBuffer(0)\n        val zerosCounts = mutable.ArrayBuffer(0)\n\
    \        val onesCountZeros = mutable.ArrayBuffer(0)\n        val zerosCountZeros\
    \ = mutable.ArrayBuffer(0)\n        val onesCountOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosCountOnes = mutable.ArrayBuffer(0)\n        val onesCountZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosCountZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val onesCountOneOnes = mutable.ArrayBuffer(0)\n        val zerosCountOneOnes\
    \ = mutable.ArrayBuffer(0)\n        val onesCountZeroZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosCountZeroZeroOnes = mutable.ArrayBuffer(0)\n        val onesCountOneZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosCountOneZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val onesCountZeroOneOnes = mutable.ArrayBuffer(0)\n        val zerosCountZeroOneOnes\
    \ = mutable.ArrayBuffer(0)\n        val onesCountOneOneOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosCountOneOneOnes = mutable.ArrayBuffer(0)\n        val onesCountZeroZeroZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosCountZeroZeroZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val onesCountOneZeroZeroOnes = mutable.ArrayBuffer(0)\n        val zerosCountOneZeroZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val onesCountZeroOneZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val zerosCountZeroOneZeroOnes = mutable.ArrayBuffer(0)\n        val onesCountOneOneZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosCountOneOneZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val onesCountZeroZeroOneZeroOnes = mutable.ArrayBuffer(0)\n        val\
    \ zerosCountZeroZeroOneZeroOnes = mutable.ArrayBuffer(0)\n        val onesCountOneZeroZeroOneZeroOnes\
    \ = mutable.ArrayBuffer(0)\n        val zerosCountOneZeroZeroOneZeroOnes = mutable.ArrayBuffer(0)\n\
    \        val onesCountZeroOneZeroOneZeroOnes = mutable.ArrayBuffer(0)\n      \
    \  val zerosCountZeroOneZeroOne\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpii7qjt94.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpii7qjt94.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \             ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpii7qjt94.scala:8:20\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mzeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \               ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpii7qjt94.scala:9:21\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m    \
    \                 ^^^^^^^\e[0m\n\e[31m  |\e[0m                     Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpii7qjt94.scala:10:24\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpii7qjt94.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mzerosCount\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling w"
  stdout: ''
  timestamp: 1659798594
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val count = mutable.ListBuffer[Long]()\n\
    \        val digits = n.toString.reverse.grouped(10).reverse\n        digits.foreach(x\
    \ => if (x.head == 1) ones += x.tail else zeros += x.tail)\n        ones.foreach(x\
    \ => count += x)\n        zeros.foreach(x => count += x)\n        count.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpicb4vpyr.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpicb4vpyr.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpicb4vpyr.scala:9:20 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpicb4vpyr.scala:10:52 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdigits\e[0m = n.toString.reverse.grouped(\e\
    [31m10\e[0m).reverse\n\e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue reverse is not a member of Iterator[String] - did you\
    \ mean Iterator[String].reversed?\n4 errors found\n"
  stdout: ''
  timestamp: 1659798595
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val digits = n.toString.reverse.grouped(2).map(_.reverse)\n        for (d\
    \ <- digits) {\n            if (d.head == 1) {\n                ones += d.last\n\
    \            } else {\n                zeros += d.last\n            }\n      \
    \  }\n        ones.foreach(counts += (_ -> ones.size))\n        zeros.foreach(counts\
    \ += (_ -> zeros.size))\n        ones.size + zeros.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphbu3ussj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphbu3ussj.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphbu3ussj.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798592
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n\
    \        while(n > 1) {\n            val digit = n % 10\n            val digitCount\
    \ = digits.count(_ == digit)\n            val digitZeroCount = digits.count(_\
    \ == 0)\n            val digitOneCount = digits.count(_ == 1)\n            val\
    \ digitCount = digitZeroCount + digitOneCount\n            counts += digitCount\n\
    \            n /= 10\n        }\n        counts.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoukrwfp6.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpoukrwfp6.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpoukrwfp6.scala:9:21 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpoukrwfp6.scala:15:16 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36mdigitCount\e[0m = digitZeroCount\
    \ + digitOneCount\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mdigitCount is already defined as \e[33mvalue\e[0m \e[35mdigitCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpoukrwfp6.scala:12:29 ------------------------\e[0m\e[0m\n\
    \e[31m12 |\e[0m            \e[33mval\e[0m \e[36mdigitCount\e[0m = digits.count(_\
    \ == digit)\n\e[31m\e[31m   |\e[0m                             ^^^^^^\e[0m\n\e\
    [31m   |\e[0m                             Not found: digits\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpoukrwfp6.scala:13:33 -----------"
  stdout: ''
  timestamp: 1659798594
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer.empty[Long]\n     \
    \   val zeros = mutable.ArrayBuffer.empty[Long]\n        val counter = mutable.HashMap.empty[Long,\
    \ Long]\n        val max = (n / 10).floor\n        val min = (n / 10).ceil\n \
    \       val digits = n.toString.reverse.grouped(10).toList\n        val onesCount\
    \ = ones.count(i => digits.contains(i))\n        val zerosCount = zeros.count(i\
    \ => digits.contains(i))\n        val counterCount = counter.count(i => digits.contains(i))\n\
    \        val maxCount = max.toString.reverse.grouped(10).count(i => digits.contains(i))\n\
    \        val minCount = min.toString.reverse.grouped(10).count(i => digits.contains(i))\n\
    \        val digitsCount = digits.count(i => digits.contains(i))\n        val\
    \ onesCount2 = ones.count(i => digits.contains(i) && digits.contains(i-1) && digits.contains(i-2))\n\
    \        val zerosCount2 = zeros.count(i => digits.contains(i) && digits.contains(i-1)\
    \ && digits.contains(i-2))\n        val counterCount2 = counter.count(i => digits.contains(i)\
    \ && digits.contains(i-1) && digits.contains(i-2))\n        val maxCount2 = max.toString.reverse.grouped(10).count(i\
    \ => digits.contains(i) && digits.contains(i-1) && digits.contains(i-2))\n   \
    \     val minCount2 = min.toString.reverse.grouped(10).count(i => digits.contains(i)\
    \ && digits.contains(i-1) && digits.contains(i-2))\n        val digitsCount2 =\
    \ digits.count(i => digits.contains(i) && digits.contains(i-1) && digits.contains(i-2))\n\
    \        val onesCount3 = ones.count(i => digits.contains(i) && digits.contains(i-1)\
    \ && digits.contains(i-2) && digits.contains(i-3))\n        val zerosCount3 =\
    \ zeros.count(i => digits.contains(i) && digits.contains(i-1) && digits.contains(i-2)\
    \ && digits.contains(i-3))\n        val counterCount3 = counter.count(i => digits.contains(i)\
    \ && digits.contains(i-1) && digits.contains(i-2) && digits.contains(i-3))\n \
    \       val maxCount3 = max.toString.reverse.grouped(10).count(i => digits.contains(i)\
    \ && digits.contains(i-1) && digits.contains(i-2) && digits.contains(i-3))\n \
    \       val minCount3 = min.toString.reverse.grouped(10).count(i => digits.contains(i)\
    \ && digits.contains(i-1) && digits.contains(i-2) && digits.contains(i-3))\n \
    \       val digitsCount3 = digits.count(i => digits.contains(\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n  \
    \  assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n\
    \    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) ==\
    \ (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3bhzjksg.scala:30:61 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mdigitsCount3\e[0m = digits.count(\e\
    [36mi\e[0m => digits.contains(\n\e[31m\e[31m   |\e[0m                        \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \                       expression expected but \e[31m'}'\e[0m found\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3bhzjksg.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp3bhzjksg.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m \
    \ |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3bhzjksg.scala:9:22 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounter\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp3bhzjksg.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmax\e[0m = (n / \e[31m10\e\
    [0m).floor\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m      value floor is not a member of Long.\n\e[31m   |\e[0m      An\
    \ extension method was tried, but could not be fully constructed:\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m          floatWrapper(n./(\e[31m10\e[0m))\n"
  stdout: ''
  timestamp: 1659798597
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    for(i <- 1 to n){\n            val digit = i / 10\n            if(digit ==\
    \ 1){\n                ones += i\n            }else{\n                zeros +=\
    \ i\n            }\n            counts(digit) += 1\n        }\n        ones.size\
    \ + zeros.size + 1\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd4b9huu0.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpd4b9huu0.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpd4b9huu0.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpd4b9huu0.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659798594
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   val onesCount = mutable.ArrayBuffer(0)\n        val zerosCount = mutable.ArrayBuffer(0)\n\
    \        val onesCount2 = mutable.ArrayBuffer(0)\n        val zerosCount2 = mutable.ArrayBuffer(0)\n\
    \        val onesCount3 = mutable.ArrayBuffer(0)\n        val zerosCount3 = mutable.ArrayBuffer(0)\n\
    \        val onesCount4 = mutable.ArrayBuffer(0)\n        val zerosCount4 = mutable.ArrayBuffer(0)\n\
    \        val onesCount5 = mutable.ArrayBuffer(0)\n        val zerosCount5 = mutable.ArrayBuffer(0)\n\
    \        val onesCount6 = mutable.ArrayBuffer(0)\n        val zerosCount6 = mutable.ArrayBuffer(0)\n\
    \        val onesCount7 = mutable.ArrayBuffer(0)\n        val zerosCount7 = mutable.ArrayBuffer(0)\n\
    \        val onesCount8 = mutable.ArrayBuffer(0)\n        val zerosCount8 = mutable.ArrayBuffer(0)\n\
    \        val onesCount9 = mutable.ArrayBuffer(0)\n        val zerosCount9 = mutable.ArrayBuffer(0)\n\
    \        val onesCount10 = mutable.ArrayBuffer(0)\n        val zerosCount10 =\
    \ mutable.ArrayBuffer(0)\n        val onesCount11 = mutable.ArrayBuffer(0)\n \
    \       val zerosCount11 = mutable.ArrayBuffer(0)\n        val onesCount12 = mutable.ArrayBuffer(0)\n\
    \        val zerosCount12 = mutable.ArrayBuffer(0)\n        val onesCount13 =\
    \ mutable.ArrayBuffer(0)\n        val zerosCount13 = mutable.ArrayBuffer(0)\n\
    \        val onesCount14 = mutable.ArrayBuffer(0)\n        val zerosCount14 =\
    \ mutable.ArrayBuffer(0)\n        val onesCount15 = mutable.ArrayBuffer(0)\n \
    \       val zerosCount15 = mutable.ArrayBuffer(0)\n        val onesCount16 = mutable.ArrayBuffer(0)\n\
    \        val zerosCount16 = mutable.ArrayBuffer(0)\n        val onesCount17 =\
    \ mutable.ArrayBuffer(0)\n        val zerosCount17 = mutable.ArrayBuffer(0)\n\
    \        val onesCount18 = mutable.ArrayBuffer(0)\n        val zerosCount18 =\
    \ mutable.ArrayBuffer(0)\n        val onesCount19 = mutable.ArrayBuffer(0)\n \
    \       val zerosCount19 = mutable.ArrayBuffer(0)\n        val onesCount20 = mutable.ArrayBuffer(0)\n\
    \        val zerosCount20 = mutable.ArrayBuffer(0)\n        val onesCount21 =\
    \ mutable.\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp86z9bj1u.scala:51:4 ----------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp86z9bj1u.scala:7:19 -------------------------\e[0m\e[0m\n\e[31m7\
    \ |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e\
    [0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \               Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp86z9bj1u.scala:8:20 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\
    \e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e[0m         \
    \           Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp86z9bj1u.scala:9:20 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\
    \e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e[0m         \
    \           Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp86z9bj1u.scala:10:24 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ArrayBuffer(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp86z9bj1u.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when comp"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n \
    \       for(i <- 1 to n){\n            val x = i.toString.toInt\n            val\
    \ y = x.toString.toInt\n            val z = x.toString.toInt\n            val\
    \ w = x.toString.toInt\n            val a = x.toString.toInt\n            val\
    \ b = x.toString.toInt\n            val c = x.toString.toInt\n            val\
    \ d = x.toString.toInt\n            val e = x.toString.toInt\n            val\
    \ f = x.toString.toInt\n            val g = x.toString.toInt\n            val\
    \ h = x.toString.toInt\n            val i = x.toString.toInt\n            val\
    \ j = x.toString.toInt\n            val k = x.toString.toInt\n            val\
    \ l = x.toString.toInt\n            val m = x.toString.toInt\n            val\
    \ n = x.toString.toInt\n            val o = x.toString.toInt\n            val\
    \ p = x.toString.toInt\n            val q = x.toString.toInt\n            val\
    \ r = x.toString.toInt\n            val s = x.toString.toInt\n            val\
    \ t = x.toString.toInt\n            val u = x.toString.toInt\n            val\
    \ v = x.toString.toInt\n            val w = x.toString.toInt\n            val\
    \ x = x.toString.toInt\n            val y = x.toString.toInt\n            val\
    \ z = x.toString.toInt\n            val w = x.toString.toInt\n            val\
    \ a = x.toString.toInt\n            val b = x.toString.toInt\n            val\
    \ c = x.toString.toInt\n            val d = x.toString.toInt\n            val\
    \ e = x.toString.toInt\n            val f = x.toString.toInt\n            val\
    \ g = x.toString.toInt\n            val h = x.toString.toInt\n            val\
    \ i = x.toString.toInt\n            val j = x.toString.toInt\n            val\
    \ k = x.toString.toInt\n            val l = x.toString.toInt\n            val\
    \ m = x.toString.toInt\n            val n = x.toString.toInt\n            val\
    \ o = x.toString.toInt\n            val p = x.toString.toInt\n            val\
    \ q = x.toString.toInt\n            val r = x.toString.toInt\n            val\
    \ s = x.toString.toInt\n            val t = x.toString.toInt\n            val\
    \ u = x.toString.toInt\n            val v = x.toString.toInt\n            val\
    \ w = x.toString.toInt\n            val x = \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpirb3fdy6.scala:63:19 ---------------------------\e\
    [0m\e[0m\n\e[31m63 |\e[0m            \e[33mval\e[0m \e[36mx\e[0m = \n\e[31m\e\
    [31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m                   expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmpirb3fdy6.scala:74:0 ----------------------------\e[0m\e[0m\n\e[31m74\
    \ |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpirb3fdy6.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpirb3fdy6.scala:8:22 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpirb3fdy6.scala:73:1\
    \ ---------------------\e[0m\e[0m\n\e[31m73 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e\
    [0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m   |\e[0m Required: Long\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[33m\e[33m-- Warning: /tmp/tmpirb3fdy6.scala:65:4 ----------------------------------------\e\
    [0m\e[0m\n\e[33m65 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m\
    \   |\e[0m    Line is indented too far to the left, or a `}` is missing\n1 warning\
    \ found\n5 errors found\n"
  stdout: ''
  timestamp: 1659798597
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.Map[Long, Long]()\n\
    \        for(i <- 1 to n){\n            val digit = i / Math.pow(10, n.toInt)\n\
    \            if(digit == 1){\n                ones += i\n            }else{\n\
    \                zeros += i\n            }\n            counts(digit) += 1\n \
    \       }\n        ones.toList.size + (zeros.toList.size - ones.toList.size)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcgu7bmd4.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpcgu7bmd4.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpcgu7bmd4.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpcgu7bmd4.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659798596
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   var i = 0\n        while(i < n) {\n            val x = ones(0)\n         \
    \   val y = zeros(0)\n            val z = ones(0)\n            val a = ones(0)\n\
    \            val b = zeros(0)\n            val c = ones(0)\n            val d\
    \ = zeros(0)\n            val e = ones(0)\n            val f = zeros(0)\n    \
    \        val g = ones(0)\n            val h = zeros(0)\n            val i = ones(0)\n\
    \            val j = zeros(0)\n            val k = ones(0)\n            val l\
    \ = zeros(0)\n            val m = ones(0)\n            val n = zeros(0)\n    \
    \        val o = ones(0)\n            val p = zeros(0)\n            val q = ones(0)\n\
    \            val r = zeros(0)\n            val s = ones(0)\n            val t\
    \ = zeros(0)\n            val u = ones(0)\n            val v = zeros(0)\n    \
    \        val w = ones(0)\n            val x = ones(0)\n            val y = zeros(0)\n\
    \            val z = ones(0)\n            val a = ones(0)\n            val b =\
    \ zeros(0)\n            val c = ones(0)\n            val d = zeros(0)\n      \
    \      val e = ones(0)\n            val f = zeros(0)\n            val g = ones(0)\n\
    \            val h = zeros(0)\n            val i = ones(0)\n            val j\
    \ = zeros(0)\n            val k = ones(0)\n            val l = zeros(0)\n    \
    \        val m = ones(0)\n            val n = zeros(0)\n            val o = ones(0)\n\
    \            val p = zeros(0)\n            val q = ones(0)\n            val r\
    \ = zeros(0)\n            val s = ones(0)\n            val t = zeros(0)\n    \
    \        val u = ones(0)\n            val v = zeros(0)\n            val w = ones(0)\n\
    \            val x = ones(0)\n            val y = zeros(0)\n            val z\
    \ = ones(0)\n            val a = ones(0)\n            val b = zeros(0)\n     \
    \       val c = ones(0)\n            val d = zeros(0)\n            val e = ones(0)\n\
    \            val f = zeros(0)\n            val g = ones(0)\n            val h\
    \ = zeros(0)\n            val i = ones(0)\n            val j = zeros(0)\n    \
    \        val k = ones(0)\n            val l = zeros(0)\n            val m = ones(0)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdfo_n7_d.scala:90:0 ----------------------------\e\
    [0m\e[0m\n\e[31m90 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdfo_n7_d.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \             ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdfo_n7_d.scala:8:20\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mzeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \               ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdfo_n7_d.scala:9:20\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mcount\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \               ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdfo_n7_d.scala:38:16\
    \ ---------------------------\e[0m\e[0m\n\e[31m38 |\e[0m            \e[33mval\e\
    [0m \e[36mx\e[0m = ones(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mx is already defined as \e[33mvalue\e[0m \e[35mx\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpdfo_n7_d.scala:39:16 ---------------------------\e[0m\e[0m\n\e[31m39\
    \ |\e[0m            \e[33mval\e[0m \e[36my\e[0m = zeros(\e[31m0\e[0m)\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0my is already defined\
    \ as \e[33mvalue\e[0m \e[35my\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same grou"
  stdout: ''
  timestamp: 1659798596
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.ListBuffer[Long]()\n\
    \        val n = n.toInt\n        for(i <- 0 until n) {\n            val digit\
    \ = n.toString.charAt(i)\n            if(digit == '1') {\n                ones\
    \ += i\n            } else if(digit == '0') {\n                zeros += i\n  \
    \          } else {\n                counts += i\n            }\n        }\n \
    \       val onesCount = ones.size\n        val zerosCount = zeros.size\n     \
    \   val countsCount = counts.size\n        val onesZeros = onesCount + zerosCount\n\
    \        val onesCount = ones.size - onesZeros\n        val zerosCount = zeros.size\
    \ - onesZeros\n        val countsCount = counts.size - onesZeros\n        val\
    \ onesZeros = ones.size - onesCount\n        val onesCount = ones.size - onesZeros\n\
    \        val zerosCount = zeros.size - onesZeros\n        val countsCount = counts.size\
    \ - onesZeros\n        val onesZeros = ones.size - onesCount\n        val onesCount\
    \ = ones.size - onesZeros\n        val zerosCount = zeros.size - onesZeros\n \
    \       val countsCount = counts.size - onesZeros\n        val onesZeros = ones.size\
    \ - onesCount\n        val onesCount = ones.size - onesZeros\n        val zerosCount\
    \ = zeros.size - onesZeros\n        val countsCount = counts.size - onesZeros\n\
    \        val onesZeros = ones.size - onesCount\n        val onesCount = ones.size\
    \ - onesZeros\n        val zerosCount = zeros.size - onesZeros\n        val countsCount\
    \ = counts.size - onesZeros\n        val onesZeros = ones.size - onesCount\n \
    \       val onesCount = ones.size - onesZeros\n        val zerosCount = zeros.size\
    \ - onesZeros\n        val countsCount = counts.size - onesZeros\n        val\
    \ onesZeros = ones.size - onesCount\n        val onesCount = ones.size - onesZeros\n\
    \        val zerosCount = zeros.size - onesZeros\n        val countsCount = counts.size\
    \ - onesZeros\n        val onesZeros = ones.size - onesCount\n        val onesCount\
    \ = ones.size - onesZeros\n        val zerosCount = zeros.\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcl5r1rit.scala:55:4 ----------------------------\e\
    [0m\e[0m\n\e[31m55 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcl5r1rit.scala:25:12 ---------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = ones.size - onesZeros\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcl5r1rit.scala:26:12 ---------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = zeros.size - onesZeros\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mzerosCount is already defined as \e[33mvalue\e[0m \e[35mzerosCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcl5r1rit.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mcountsCount\e[0m = counts.size - onesZeros\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mcountsCount is already defined as \e[33mvalue\e[0m \e[35mcountsCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpcl5r1rit.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mval\e[0m \e[36monesZeros\e[0m = ones.size - onesCount\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0monesZeros is already defined as \e[33mvalue\e[0m \e[35monesZeros\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcl5r1rit.scala:29:12 --"
  stdout: ''
  timestamp: 1659798596
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n \
    \       val ones = mutable.HashSet.empty[Long]\n        val zeros = mutable.HashSet.empty[Long]\n\
    \        val onesCount = mutable.HashSet.empty[Long]\n        val zerosCount =\
    \ mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n\
    \        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCountZeros\
    \ = mutable.HashSet.empty[Long]\n        val zerosCountZeros = mutable.HashSet.empty[Long]\n\
    \        val onesCountOnes = mutable.HashSet.empty[Long]\n        val zerosCountOnes\
    \ = mutable.HashSet.empty[Long]\n        val onesCountZeroOnes = mutable.HashSet.empty[Long]\n\
    \        val zerosCountZeroOnes = mutable.HashSet.empty[Long]\n        val onesCountOneOnes\
    \ = mutable.HashSet.empty[Long]\n        val zerosCountOneOnes = mutable.HashSet.empty[Long]\n\
    \        val onesCountZeroZeros = mutable.HashSet.empty[Long]\n        val zerosCountZeroZeros\
    \ = mutable.HashSet.empty[Long]\n        val onesCountOneZero = mutable.HashSet.empty[Long]\n\
    \        val zerosCountOneZero = mutable.HashSet.empty[Long]\n        val onesCountZeroOne\
    \ = mutable.HashSet.empty[Long]\n        val zerosCountZeroOne = mutable.HashSet.empty[Long]\n\
    \        val onesCountOneOne = mutable.HashSet.empty[Long]\n        val zerosCountOneOne\
    \ = mutable.HashSet.empty[Long]\n        val onesCountZeroZeroOne = mutable.HashSet.empty[Long]\n\
    \        val zerosCountZeroZeroOne = mutable.HashSet.empty[Long]\n        val\
    \ onesCountOneZeroZero = mutable.HashSet.empty[Long]\n        val zerosCountOneZeroZero\
    \ = mutable.HashSet.empty[Long]\n        val onesCountOneOneZero = mutable.HashSet.empty[Long]\n\
    \        val zerosCountOneOneZero = mutable.HashSet.empty[Long]\n        val onesCountZeroZeroOne\
    \ = mutable.HashSet.empty[Long]\n        val zerosCountZeroZeroOne = mutable.HashSet.empty[Long]\n\
    \        val onesCountOneZeroZero = mutable.HashSet.empty[\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9gu3scaf.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp9gu3scaf.scala:36:12 ---------------------------\e[0m\e[0m\n\e[31m36\
    \ |\e[0m        \e[33mval\e[0m \e[36monesCountZeroZeroOne\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCountZeroZeroOne is already defined as \e[33mvalue\e[0m\
    \ \e[35monesCountZeroZeroOne\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp9gu3scaf.scala:37:12 ---------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m        \e[33mval\e[0m \e[36mzerosCountZeroZeroOne\e\
    [0m = mutable.HashSet.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCountZeroZeroOne is already defined as \e[33mvalue\e\
    [0m \e[35mzerosCountZeroZeroOne\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9gu3scaf.scala:38:12 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        \e[33mval\e[0m \e[36monesCountOneZeroZero\e[0m\
    \ = mutable.HashSet.empty[\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCountOneZeroZero is already defined as \e[33mvalue\e[0m\
    \ \e[35monesCountOneZeroZero\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp9gu3scaf.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explana"
  stdout: ''
  timestamp: 1659798596
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val nums = mutable.Seq.fill(n)(0)\n        val onesCount = mutable.Seq.fill(n)(0)\n\
    \        val zerosCount = mutable.Seq.fill(n)(0)\n        val onesZeros = mutable.Seq.fill(n)(0)\n\
    \        val zerosOnes = mutable.Seq.fill(n)(0)\n        val onesOnes = mutable.Seq.fill(n)(0)\n\
    \        val zerosZeros = mutable.Seq.fill(n)(0)\n        val zerosZeros = mutable.Seq.fill(n)(0)\n\
    \        val zerosOnes = mutable.Seq.fill(n)(0)\n        val onesZeros = mutable.Seq.fill(n)(0)\n\
    \        val onesOnes = mutable.Seq.fill(n)(0)\n        val onesZeros = mutable.Seq.fill(n)(0)\n\
    \        val zerosOnes = mutable.Seq.fill(n)(0)\n        val zerosZeros = mutable.Seq.fill(n)(0)\n\
    \        val zerosOnes = mutable.Seq.fill(n)(0)\n        val zerosZeros = mutable.Seq.fill(n)(0)\n\
    \        val zerosOnes = mutable.Seq.fill(n)(0)\n        val onesOnes = mutable.Seq.fill(n)(0)\n\
    \        val onesZeros = mutable.Seq.fill(n)(0)\n        val onesOnes = mutable.Seq.fill(n)(0)\n\
    \        val onesZeros = mutable.Seq.fill(n)(0)\n        val zerosOnes = mutable.Seq.fill(n)(0)\n\
    \        val zerosZeros = mutable.Seq.fill(n)(0)\n        val zerosOnes = mutable.Seq.fill(n)(0)\n\
    \        val zerosZeros = mutable.Seq.fill(n)(0)\n        val zerosOnes = mutable.Seq.fill(n)(0)\n\
    \        val onesOnes = mutable.Seq.fill(n)(0)\n        val onesZeros = mutable.Seq.fill(n)(0)\n\
    \        val onesOnes = mutable.Seq.fill(n)(0)\n        val onesZeros = mutable.Seq.fill(n)(0)\n\
    \        val onesOnes = mutable.Seq.fill(n)(0)\n        val onesZeros = mutable.Seq.fill(n)(0)\n\
    \        val onesOnes = mutable.Seq.fill(n)(0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpv0w9dnjp.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mzerosZeros\e[0m = mutable.Seq.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosZeros is already defined as \e[33mvalue\e[0m \e[35mzerosZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpv0w9dnjp.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mzerosOnes\e[0m = mutable.Seq.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosOnes is already defined as \e[33mvalue\e[0m \e[35mzerosOnes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpv0w9dnjp.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36monesZeros\e[0m = mutable.Seq.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeros is already defined as \e[33mvalue\e[0m \e[35monesZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpv0w9dnjp.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36monesOnes\e[0m = mutable.Seq.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesOnes is already defined as \e[33mvalue\e[0m \e[35monesOnes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpv0w9dnjp.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36monesZeros\e[0m = mutable.Seq.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659798596
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastOne\
    \ = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour\
    \ = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven\
    \ = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen\
    \ = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen\
    \ = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var\
    \ lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n\
    \        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne\
    \ = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n      \
    \  var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix\
    \ = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n    \
    \    var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne\
    \ = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n      \
    \  var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix\
    \ = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n    \
    \    var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne\
    \ = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n      \
    \  var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix\
    \ = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n    \
    \    var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne\
    \ = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var\
    \ lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix =\
    \ 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var\
    \ lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n\
    \        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour\
    \ = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var\
    \ lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptku37em0.scala:77:5\
    \ ---------------------\e[0m\e[0m\n\e[31m77 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n     \
    \   for (i <- 1 to n) {\n            val s = i.toString.length\n            if\
    \ (i % 10 == 1 && i % 100 != 11 && i % 100 != 71 && i % 100 != 73 && i % 100 !=\
    \ 79 && i % 100 != 83 && i % 100 != 89) {\n                counts(i) = counts.getOrElse(i,\
    \ 0) + 1\n            }\n        }\n        counts.values.sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n  \
    \  assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n\
    \    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) ==\
    \ (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9v46z15.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpm9v46z15.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798596
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    for (i <- 1 to n) {\n            val digit = i / Math.pow(10, n.toInt)\n\
    \            if (digit == 1) ones += i\n            else if (digit == 0) zeros\
    \ += i\n            else counts(digit) += 1\n        }\n        val oneCount =\
    \ ones.size\n        val zeroCount = zeros.size\n        val onesCount = ones.toSeq.distinct\n\
    \        val zerosCount = zeros.toSeq.distinct\n        val onesZeroCount = ones.toSeq.intersect(zeros.toSeq)\n\
    \        val onesZeroCount = onesZeroCount.size\n        val onesZeroCount = onesZeroCount.toSeq.distinct\n\
    \        val onesZeroCount = onesZeroCount.toSeq.distinct\n        val onesZeroCount\
    \ = onesZeroCount.toSeq.distinct\n        val onesZeroCount = onesZeroCount.toSeq.distinct\n\
    \        val onesZeroCount = onesZeroCount.toSeq.distinct\n        val onesZeroCount\
    \ = onesZeroCount.toSeq.distinct\n        val onesZeroCount = onesZeroCount.toSeq.distinct\n\
    \        val onesZeroCount = onesZeroCount.toSeq.distinct\n        val onesZeroCount\
    \ = onesZeroCount.toSeq.distinct\n        val onesZeroCount = onesZeroCount.toSeq.distinct\n\
    \        val onesZeroCount = onesZeroCount.toSeq.distinct\n        val onesZeroCount\
    \ = onesZeroCount.toSeq.distinct\n        val onesZeroCount = onesZeroCount.toSeq.distinct\n\
    \        val onesZeroCount = onesZeroCount.toSeq.distinct\n        val onesZeroCount\
    \ = onesZeroCount.toSeq.distinct\n        val onesZeroCount = onesZeroCount.toSeq.distinct\n\
    \        val onesZeroCount = onesZeroCount.toSeq.distinct\n        val onesZeroCount\
    \ = onesZeroCount.toSeq.distinct\n        val onesZeroCount = onesZeroCount.toSeq.distinct\n\
    \        val onesZeroCount = onesZeroCount.toSeq.distinct\n        val onesZeroCount\
    \ = onesZeroCount.toSeq.distinct\n        val onesZeroCount = onesZeroCount.toSeq.distinct\n\
    \        val onesZeroCount = ones\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx6g2skgg.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36monesZeroCount\e[0m = onesZeroCount.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0monesZeroCount is already defined as \e[33mvalue\e[0m \e[35monesZeroCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx6g2skgg.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36monesZeroCount\e[0m = onesZeroCount.toSeq.distinct\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeroCount is already defined as \e[33mvalue\e[0m \e[35monesZeroCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx6g2skgg.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36monesZeroCount\e[0m = onesZeroCount.toSeq.distinct\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeroCount is already defined as \e[33mvalue\e[0m \e[35monesZeroCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx6g2skgg.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36monesZeroCount\e[0m = onesZeroCount.toSeq.distinct\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeroCount is already defined as \e[33mvalue\e[0m \e[35monesZeroCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx6g2skgg.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36monesZeroCount\e[0m = onesZeroCount.toSeq.distin"
  stdout: ''
  timestamp: 1659798597
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n       \
    \ val zerosCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n\
    \        val zerosCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n\
    \        val zerosCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n\
    \        val zerosCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n\
    \        val zerosCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n\
    \        val zerosCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n\
    \        val zerosCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n\
    \        val zerosCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n\
    \        val zerosCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n\
    \        val zerosCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n\
    \        val zerosCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n\
    \        val zerosCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n\
    \        val zerosCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n\
    \        val zerosCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n\
    \        val zerosCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n\
    \        val zerosCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n\
    \        val zerosCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n\
    \        val zerosCount18 = \n    }\n    def main(args: Array[String]) = {\n \
    \   assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpgvk350n3.scala:44:26 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36mzerosCount18\e[0m = \n\e\
    [31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m         \
    \                 expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgvk350n3.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgvk350n3.scala:9:24 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e"
  stdout: ''
  timestamp: 1659798573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros\
    \ = mutable.ListBuffer(0)\n        val count = mutable.ListBuffer[Long]()\n  \
    \      val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n\
    \        while(n > 0){\n            val digit = n % 10\n            n /= 10\n\
    \            if(digit == 1){\n                ones += digit\n                onesCount\
    \ += digit\n            }\n            if(digit == 0){\n                zeros\
    \ += digit\n                zerosCount += digit\n            }\n        }\n  \
    \      onesCount.reverse.foreach(count += _)\n        zerosCount.reverse.foreach(count\
    \ += _)\n        count += ones.size - onesCount.size\n        count += zeros.size\
    \ - zerosCount.size\n        count\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo_hlqv_3.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpo_hlqv_3.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpo_hlqv_3.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpo_hlqv_3.scala:10:24 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpo_hlqv_3.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpo_hlqv_3.scala:14:14 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \          "
  stdout: ''
  timestamp: 1659798597
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   val nums = mutable.ArrayBuffer(n)\n        val numsLen = nums.length\n   \
    \     val numsLenMinusOne = numsLen - 1\n        val numsLenMinusOneMinusOne =\
    \ numsLen - 2\n        val numsLenMinusOneMinusOneMinusOne = numsLen - 3\n   \
    \     val numsLenMinusOneMinusOneMinusOneMinusOne = numsLen - 4\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLen - 5\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLen - 6\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLen - 7\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLen - 8\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLen - 9\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLen - 10\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLen - 11\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLen - 12\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLen - 13\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLen - 14\n        val numsLenMin\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfqeog_li.scala:27:4 ----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfqeog_li.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mnumsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\e\
    [0m = numsLen - \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnumsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpfqeog_li.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mnumsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\e\
    [0m = numsLen - \e[31m12\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnumsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpfqeog_li.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when com"
  stdout: ''
  timestamp: 1659798597
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Int]\n  \
    \      val ones = mutable.HashSet.empty[Long]\n        val onesCount = mutable.HashMap.empty[Long,\
    \ Int]\n        val zeros = mutable.HashSet.empty[Long]\n        val zerosCount\
    \ = mutable.HashMap.empty[Long, Int]\n        val onesCounts = mutable.HashMap.empty[Long,\
    \ Int]\n        val zerosCounts = mutable.HashMap.empty[Long, Int]\n        val\
    \ onesCounts = mutable.HashMap.empty[Long, Int]\n        val zerosCounts = mutable.HashMap.empty[Long,\
    \ Int]\n        val onesCounts = mutable.HashMap.empty[Long, Int]\n        val\
    \ zerosCounts = mutable.HashMap.empty[Long, Int]\n        val onesCounts = mutable.HashMap.empty[Long,\
    \ Int]\n        val zerosCounts = mutable.HashMap.empty[Long, Int]\n        val\
    \ onesCounts = mutable.HashMap.empty[Long, Int]\n        val zerosCounts = mutable.HashMap.empty[Long,\
    \ Int]\n        val onesCounts = mutable.HashMap.empty[Long, Int]\n        val\
    \ zerosCounts = mutable.HashMap.empty[Long, Int]\n        val onesCounts = mutable.HashMap.empty[Long,\
    \ Int]\n        val zerosCounts = mutable.HashMap.empty[Long, Int]\n        val\
    \ onesCounts = mutable.HashMap.empty[Long, Int]\n        val zerosCounts = mutable.HashMap.empty[Long,\
    \ Int]\n        val onesCounts = mutable.HashMap.empty[Long, Int]\n        val\
    \ zerosCounts = mutable.HashMap.empty[Long, Int]\n        val onesCounts = mutable.HashMap.empty[Long,\
    \ Int]\n        val zerosCounts = mutable.HashMap.empty[Long, Int]\n        val\
    \ onesCounts = mutable.HashMap.empty[Long, Int]\n        val zerosCounts = mutable.HashMap.empty[Long,\
    \ Int]\n        val onesCounts = mutable.HashMap.empty[Long, Int]\n        val\
    \ zerosCounts = mutable.HashMap.empty[Long, Int]\n        val onesCounts = mutable.HashMap.empty[Long,\
    \ Int]\n        val zerosCounts = mutable.HashMap.empty[Long, Int]\n        val\
    \ onesCounts = mutable.HashMap.empty\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkwz0_m68.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpkwz0_m68.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpkwz0_m68.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpkwz0_m68.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpkwz0_m68.scala:18:12 ---------------------------\e[0m\e[0m\n\e"
  stdout: ''
  timestamp: 1659798598
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var\
    \ count = 0\n        while(n > 0) {\n            ones += n\n            n -= 1\n\
    \        }\n        ones.foreach(n => {\n            if(n == 1)\n            \
    \    count += 1\n        })\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_q3231mu.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_q3231mu.scala:11:14 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798601
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        for(i\
    \ <- 0 until n){\n            val current = math.abs(i).toInt\n            if(current\
    \ == 1){\n                count += 1\n            }\n            else if(current\
    \ == 0){\n                if(last == 0){\n                    count += 1\n   \
    \             }\n                else {\n                    count = 0\n     \
    \           }\n            }\n            last = current\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcvo3zg9f.scala:9:25\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n){\n\e[31m\e[31m  |\e[0m                         ^\e[0m\n\e\
    [31m  |\e[0m                         Found:    (n : Long)\n\e[31m  |\e[0m    \
    \                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798604
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    for (i <- 1 to n) {\n            val digit = i / 10\n            if (i %\
    \ 10 == 1) {\n                ones += digit\n            } else {\n          \
    \      zeros += digit\n            }\n            counts(digit) += 1\n       \
    \ }\n        ones.size + zeros.size + 1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptv6azk0i.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmptv6azk0i.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmptv6azk0i.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmptv6azk0i.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659798603
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        var count\
    \ = 0\n        while(n > 0){\n            val next = n % 10\n            n /=\
    \ 10\n            if(next == 1){\n                count += 1\n               \
    \ ones += next\n            }\n        }\n        ones.length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n  \
    \  assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n\
    \    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) ==\
    \ (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzhf88lgo.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpzhf88lgo.scala:11:14 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m    \
    \        ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long\
    \ - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798603
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastOne\
    \ = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour\
    \ = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven\
    \ = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen\
    \ = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen\
    \ = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var\
    \ lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n\
    \        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne\
    \ = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n      \
    \  var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix\
    \ = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n    \
    \    var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne\
    \ = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n      \
    \  var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix\
    \ = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n    \
    \    var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne\
    \ = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n      \
    \  var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix\
    \ = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n    \
    \    var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne\
    \ = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var\
    \ lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix =\
    \ 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var\
    \ lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n\
    \        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour\
    \ = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var\
    \ lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptku37em0.scala:77:5\
    \ ---------------------\e[0m\e[0m\n\e[31m77 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val maxDigit = math.pow(10, math.ceil(math.log10(n)))\n        val digits\
    \ = math.ceil(n / maxDigit).toInt\n        for(i <- 0 until digits) {\n      \
    \      val digit = math.pow(10, i)\n            val digitValue = math.floor(n\
    \ / digit).toLong\n            if(digitValue == 1) {\n                ones +=\
    \ digitValue\n            } else if(digitValue == 0) {\n                zeros\
    \ += digitValue\n            } else {\n                counts(digitValue) += 1\n\
    \            }\n        }\n        val oneCount = ones.count(_ == 1)\n       \
    \ val zeroCount = zeros.count(_ == 0)\n        val count = oneCount + zeroCount\n\
    \        counts(maxDigit) += count\n        counts(maxDigit - 1) += count\n  \
    \      counts(maxDigit + 1) += count\n        counts(maxDigit + 2) += count\n\
    \        counts(maxDigit + 3) += count\n        counts(maxDigit + 4) += count\n\
    \        counts(maxDigit + 5) += count\n        counts(maxDigit + 6) += count\n\
    \        counts(maxDigit + 7) += count\n        counts(maxDigit + 8) += count\n\
    \        counts(maxDigit + 9) += count\n        counts(maxDigit + 10) += count\n\
    \        counts(maxDigit + 11) += count\n        counts(maxDigit + 12) += count\n\
    \        counts(maxDigit + 13) += count\n        counts(maxDigit + 14) += count\n\
    \        counts(maxDigit + 15) += count\n        counts(maxDigit + 16) += count\n\
    \        counts(maxDigit + 17) += count\n        counts(maxDigit + 18) += count\n\
    \        counts(maxDigit + 19) += count\n        counts(maxDigit + 20) += count\n\
    \        counts(maxDigit + 21) += count\n        counts(maxDigit + 22) += count\n\
    \        counts(maxDigit + 23) += count\n        counts(maxDigit + 24) += count\n\
    \        counts(maxDigit + 25) += count\n        counts(maxDigit + 26) += count\n\
    \        counts(maxDigit + 27) += count\n        counts(maxDigit + 28) += count\n\
    \        counts(maxDigit + 29) += count\n        counts(maxDigit + 30) += count\n\
    \        counts(maxDigit + 31) \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnjjtmg5s.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpnjjtmg5s.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpnjjtmg5s.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798602
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount\
    \ = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n       \
    \ val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n\
    \        val onesCount = mut\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_14316ba.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp_14316ba.scala:10:12 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_14316ba.scala:11:12 ---------------------------\e[0m\e[0m\n\e\
    [31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_14316ba.scala:12:12 ---------------------------\e[0m\e[0m\n\e\
    [31m12 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_14316ba.scala:13:12 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0monesCou"
  stdout: ''
  timestamp: 1659798570
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        for(i\
    \ <- 0 until n) {\n            val x = math.abs(i.toLong)\n            if(last\
    \ == 0 || x == 1) {\n                count += 1\n            }\n            last\
    \ = x\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgeks7l2m.scala:9:25\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n) {\n\e[31m\e[31m  |\e[0m                         ^\e[0m\n\e\
    [31m  |\e[0m                         Found:    (n : Long)\n\e[31m  |\e[0m    \
    \                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpgeks7l2m.scala:14:19 --------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m            last = x\n\e[31m\e[31m   |\e[0m                   ^\e[0m\n\
    \e[31m   |\e[0m                   Found:    (x : Long)\n\e[31m   |\e[0m      \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798605
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.ListBuffer[Long]()\n\
    \        val max = (n / 10).floor\n        val min = (n / 10).ceil\n        val\
    \ digits = math.pow(10, n)\n        val onesCount = math.ceil(digits * 1.0 / n)\n\
    \        val zerosCount = math.ceil(digits * 1.0 / n)\n        val onesZeros =\
    \ math.ceil(digits * 1.0 / n)\n        val onesZeroCount = math.ceil(digits *\
    \ 1.0 / n)\n        val onesZeroMin = math.ceil(digits * 1.0 / n)\n        val\
    \ onesZeroMax = math.ceil(digits * 1.0 / n)\n        val onesZeroMinCount = math.ceil(digits\
    \ * 1.0 / n)\n        val onesZeroMaxCount = math.ceil(digits * 1.0 / n)\n   \
    \     val onesZeroMinMax = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount\
    \ = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount = math.ceil(digits\
    \ * 1.0 / n)\n        val onesZeroMinMaxCount = math.ceil(digits * 1.0 / n)\n\
    \        val onesZeroMinMaxCount = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount\
    \ = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount = math.ceil(digits\
    \ * 1.0 / n)\n        val onesZeroMinMaxCount = math.ceil(digits * 1.0 / n)\n\
    \        val onesZeroMinMaxCount = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount\
    \ = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount = math.ceil(digits\
    \ * 1.0 / n)\n        val onesZeroMinMaxCount = math.ceil(digits * 1.0 / n)\n\
    \        val onesZeroMinMaxCount = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount\
    \ = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount = math.ceil(digits\
    \ * 1.0 / n)\n        val onesZeroMinMaxCount = math.ceil(digits * 1.0 / n)\n\
    \        val onesZeroMinMaxCount = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount\
    \ = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount = math.ceil(digits\
    \ * 1.0 / n)\n        val onesZeroMinMaxCount = math.ceil(digits * 1.0 / n)\n\
    \        val onesZeroMinMaxCount = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount\
    \ = math.ceil(digits * 1.0 / n)\n        val onesZeroMinMaxCount = math.\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) ==\
    \ (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp1q9zatns.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp1q9zatns.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mval\e[0m \e[36monesZeroMinMaxCount\e[0m = math.ceil(digits\
    \ * \e[31m1.0\e[0m / n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeroMinMaxCount is already defined as \e[33mvalue\e[0m\
    \ \e[35monesZeroMinMaxCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp1q9zatns.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36monesZeroMinMaxCount\e[0m\
    \ = math.ceil(digits * \e[31m1.0\e[0m / n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeroMinMaxCount is already defined as \e[33mvalue\e[0m\
    \ \e[35monesZeroMinMaxCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp1q9zatns.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36monesZeroMinMaxCount\e[0m\
    \ = math.ceil(digits * \e[31m1.0\e[0m / n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeroMinMaxCount is already defined as \e[33mvalue\e[0m\
    \ \e[35monesZeroMinMaxCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp1q9zatns.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36monesZeroMinMaxCount\e[0m\
    \ = math.ceil(digits * \e[31m1.0\e[0m / n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeroMinMaxCount is already defined as \e"
  stdout: ''
  timestamp: 1659798606
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val onesAndZeros = mutable.ListBuffer[Long]()\n\
    \        val onesAndZerosAndOnes = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZeros\
    \ = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZerosAndOnes\
    \ = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZerosAndOnesAndZeros\
    \ = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnes\
    \ = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndZeros\
    \ = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnes\
    \ = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndOnes\
    \ = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndOnesAndOnes\
    \ = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndOnesAndOnesAndZeros\
    \ = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndOnesAndOnesAndZerosAndOnes\
    \ = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndZerosAndOnes\
    \ = mutable.ListBuffer[Long]()\n        val onesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOne\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp1_v7zew3.scala:23:4 ----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1_v7zew3.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m  \
    \                 ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1_v7zew3.scala:8:20\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mzeros\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                   ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1_v7zew3.scala:9:27\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36monesAndZeros\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e\
    [0m                           ^^^^^^^\e[0m\n\e[31m  |\e[0m                   \
    \        Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp1_v7zew3.scala:10:34 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36monesAndZerosAndOnes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1_v7zew3.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesAndZerosAndOnesAndZeros\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \                               ^^^^^^^\e[0m\n\e[31m   |\e[0m               "
  stdout: ''
  timestamp: 1659798604
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros\
    \ = mutable.ListBuffer(0)\n        val count = mutable.ListBuffer[Long]()\n  \
    \      val starts = mutable.ListBuffer[Long]()\n        val ends = mutable.ListBuffer[Long]()\n\
    \        val zeroCount = mutable.ListBuffer[Long]()\n        val oneCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount =\
    \ mutable.ListBuffer[Long]()\n        val onesZeroCount = mutable.ListBuffer[Long]()\n\
    \        val zerosOneCount = mutable.ListBuffer[Long]()\n        val onesOneCount\
    \ = mutable.ListBuffer[Long]()\n        val zerosZeroCount = mutable.ListBuffer[Long]()\n\
    \        val onesZeroOneCount = mutable.ListBuffer[Long]()\n        val zerosOneOneCount\
    \ = mutable.ListBuffer[Long]()\n        val onesOneOneCount = mutable.ListBuffer[Long]()\n\
    \        val zerosZeroOneCount = mutable.ListBuffer[Long]()\n        val onesZeroZeroCount\
    \ = mutable.ListBuffer[Long]()\n        val zerosOneZeroCount = mutable.ListBuffer[Long]()\n\
    \        val onesOneZeroCount = mutable.ListBuffer[Long]()\n        val zerosOneOneCount\
    \ = mutable.ListBuffer[Long]()\n        val onesOneOneCount = mutable.ListBuffer[Long]()\n\
    \        val zerosZeroZeroCount = mutable.ListBuffer[Long]()\n        val onesZeroZeroOneCount\
    \ = mutable.ListBuffer[Long]()\n        val zerosOneZeroOneCount = mutable.ListBuffer[Long]()\n\
    \        val onesOneZeroOneCount = mutable.ListBuffer[Long]()\n        val zerosOneOneOneCount\
    \ = mutable.ListBuffer[Long]()\n        val onesOneOneOneCount = mutable.ListBuffer[Long]()\n\
    \        val zerosZeroZeroOneCount = mutable.ListBuffer[Long]()\n        val onesZeroZeroZeroCount\
    \ = mutable.ListBuffer[Long]()\n        val zerosOneZeroZeroCount = mutable.ListBuffer[Long]()\n\
    \        val onesOneZeroZeroCount = mutable.ListBuffer[Long]()\n        val zerosOneOneZeroCount\
    \ = mutable.ListBuffer[Long]()\n        val onesOneOneZeroCount = mutable.ListBuffer[Long]()\n\
    \        val zerosOneOneOne\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplgh5t5v9.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmplgh5t5v9.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m\
    \ \e[36mzerosOneOneCount\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mzerosOneOneCount is already defined as \e[33mvalue\e[0m \e[35mzerosOneOneCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmplgh5t5v9.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mval\e[0m \e[36monesOneOneCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesOneOneCount is already defined as \e[33mvalue\e[0m \e\
    [35monesOneOneCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmplgh5t5v9.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmplgh5t5v9.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmplgh5t5v9.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable"
  stdout: ''
  timestamp: 1659798604
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 1\n        while(n\
    \ > 1) {\n            val next = (last * 10 + n) % 1000000007\n            if(next\
    \ == 1) {\n                count += 1\n            }\n            last = next\n\
    \            n -= 1\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphmb4keuu.scala:14:19\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m            last = next\n\e[31m\e\
    [31m   |\e[0m                   ^^^^\e[0m\n\e[31m   |\e[0m                   Found:\
    \    (next : Long)\n\e[31m   |\e[0m                   Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphmb4keuu.scala:15:14 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798606
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   while(n > 0){\n            val digit = n % 10\n            if(digit == 1){\n\
    \                ones += digit\n            }else{\n                zeros += digit\n\
    \            }\n            n /= 10\n        }\n        while(ones.size > 0){\n\
    \            count += ones.size\n            ones -= 1\n        }\n        while(zeros.size\
    \ > 0){\n            count += zeros.size\n            zeros -= 1\n        }\n\
    \        count.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu7h7i1jx.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpu7h7i1jx.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpu7h7i1jx.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpu7h7i1jx.scala:17:14 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m    \
    \        ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long\
    \ - did you mean n.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659798605
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n\
    \        val starts = mutable.ArrayBuffer.empty[Long]\n        val ends = mutable.ArrayBuffer.empty[Long]\n\
    \        val nums = mutable.ArrayBuffer.empty[Long]\n        val numsCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val numsCount2 = mutable.ArrayBuffer.empty[Long]\n        val numsCount3\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numsCount4 = mutable.ArrayBuffer.empty[Long]\n\
    \        val numsCount5 = mutable.ArrayBuffer.empty[Long]\n        val numsCount6\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numsCount7 = mutable.ArrayBuffer.empty[Long]\n\
    \        val numsCount8 = mutable.ArrayBuffer.empty[Long]\n        val numsCount9\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numsCount10 = mutable.ArrayBuffer.empty[Long]\n\
    \        val numsCount11 = mutable.ArrayBuffer.empty[Long]\n        val numsCount12\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numsCount13 = mutable.ArrayBuffer.empty[Long]\n\
    \        val numsCount14 = mutable.ArrayBuffer.empty[Long]\n        val numsCount15\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numsCount16 = mutable.ArrayBuffer.empty[Long]\n\
    \        val numsCount17 = mutable.ArrayBuffer.empty[Long]\n        val numsCount18\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numsCount19 = mutable.ArrayBuffer.empty[Long]\n\
    \        val numsCount20 = mutable.ArrayBuffer.empty[Long]\n        val numsCount21\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numsCount22 = mutable.ArrayBuffer.empty[Long]\n\
    \        val numsCount23 = mutable.ArrayBuffer.empty[Long]\n        val numsCount24\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numsCount25 = mutable.ArrayBuffer.empty[Long]\n\
    \        val numsCount26 = mutable.ArrayBuffer.empty[Long]\n        val numsCount27\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numsCount28 = mutable.ArrayBuffer.empty[Long]\n\
    \        val numsCount\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqzu1vf9j.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqzu1vf9j.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \             ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqzu1vf9j.scala:8:20\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mzeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \               ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqzu1vf9j.scala:9:21\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                     Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqzu1vf9j.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mstarts\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqzu1vf9j.scala:11:19\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mends\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling w"
  stdout: ''
  timestamp: 1659798606
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount\
    \ = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n      \
    \  val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n\
    \        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n\
    \        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n\
    \        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n\
    \        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n\
    \        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n\
    \        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n\
    \        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n\
    \        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n\
    \        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n\
    \        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n\
    \        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n\
    \        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n\
    \        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n\
    \        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n\
    \        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n\
    \        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt9nch94n.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m         \
    \          ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:8:24\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m    \
    \                    ^^^^^^^\e[0m\n\e[31m  |\e[0m                        Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:9:25\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m   \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                         Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:10:25\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount3\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount4\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount\
    \ = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n      \
    \  val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n\
    \        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n\
    \        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n\
    \        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n\
    \        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n\
    \        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n\
    \        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n\
    \        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n\
    \        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n\
    \        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n\
    \        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n\
    \        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n\
    \        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n\
    \        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n\
    \        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n\
    \        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n\
    \        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt9nch94n.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m         \
    \          ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:8:24\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m    \
    \                    ^^^^^^^\e[0m\n\e[31m  |\e[0m                        Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:9:25\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m   \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                         Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:10:25\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount3\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount4\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        val ones = Vector.fill(n /\
    \ 10)(1)\n        val zeros = Vector.fill(n / 10)(0)\n        val onesCount =\
    \ ones.count(_ == 1)\n        val zerosCount = zeros.count(_ == 0)\n        if\
    \ (onesCount == 1 && zerosCount == 0) {\n            count = n\n        } else\
    \ if (onesCount == 1 && zerosCount > 0) {\n            count = n - onesCount\n\
    \        } else if (onesCount > 0 && zerosCount == 0) {\n            count = onesCount\
    \ + n\n        } else {\n            count = onesCount + zerosCount + n\n    \
    \    }\n        return count\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc7ldcyt0.scala:8:31\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mones\e\
    [0m = Vector.fill(n / \e[31m10\e[0m)(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \                          ^^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \        Found:    Long\n\e[31m  |\e[0m                               Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc7ldcyt0.scala:9:32\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mzeros\e\
    [0m = Vector.fill(n / \e[31m10\e[0m)(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \                           ^^^^^^\e[0m\n\e[31m  |\e[0m                      \
    \          Found:    Long\n\e[31m  |\e[0m                                Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc7ldcyt0.scala:13:20\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m            count = n\n\e[31m\e\
    [31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m                    Found:\
    \    (n : Long)\n\e[31m   |\e[0m                    Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc7ldcyt0.scala:15:20 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            count = n - onesCount\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \ Found:    Long\n\e[31m   |\e[0m                    Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc7ldcyt0.scala:17:20 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            count = onesCount + n\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \ Found:    Long\n\e[31m   |\e[0m                    Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31"
  stdout: ''
  timestamp: 1659798608
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        var count\
    \ = 0\n        while(n > 0){\n            ones += n\n            n -= 1\n    \
    \    }\n        while(ones.size > 0){\n            count += ones.size - 1\n  \
    \          ones = ones.tail\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp25qcal7b.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp25qcal7b.scala:11:14 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of Long\
    \ - did you mean n.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp25qcal7b.scala:15:17\
    \ -----------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            ones = ones.tail\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \      Reassignment to val ones\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798607
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        for(i <- 1 to n){\n       \
    \     if(i%10 == 1){\n                count += 1\n            }\n        }\n \
    \       count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp535uww3x.scala:8:22\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e\
    [0m                      Found:    (n : Long)\n\e[31m  |\e[0m                \
    \      Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798584
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n \
    \       for (i <- 1 to n) counts += (i.toLong -> 1)\n        val ones = counts.filter(_._1\
    \ == 1)\n        val zeros = counts.filter(_._1 == 0)\n        val onesAndZeros\
    \ = ones + zeros\n        onesAndZeros.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprqn1tkyd.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprqn1tkyd.scala:8:23 ---------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) counts\
    \ += (i.toLong -> \e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m                       ^\e\
    [0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m\
    \                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798608
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount\
    \ = mutable.Set[Long]()\n        val onesCount = ones.count(n / 10)\n        val\
    \ onesCount = ones.count(n / 100)\n        val onesCount = ones.count(n / 1000)\n\
    \        val onesCount = ones.count(n / 10000)\n        val onesCount = ones.count(n\
    \ / 100000)\n        val onesCount = ones.count(n / 1000000)\n        val onesCount\
    \ = ones.count(n / 10000000)\n        val onesCount = ones.count(n / 100000000)\n\
    \        val onesCount = ones.count(n / 1000000000)\n        val onesCount = ones.count(n\
    \ / 10000000000)\n        val onesCount = ones.count(n / 100000000000)\n     \
    \   val onesCount = ones.count(n / 1000000000000)\n        val onesCount = ones.count(n\
    \ / 1000000000000)\n        val onesCount = ones.count(n / 10000000000000)\n \
    \       val onesCount = ones.count(n / 10000000000000)\n        val onesCount\
    \ = ones.count(n / 100000000000000)\n        val onesCount = ones.count(n / 100000000000000)\n\
    \        val onesCount = ones.count(n / 1000000000000000)\n        val onesCount\
    \ = ones.count(n / 1000000000000000)\n        val onesCount = ones.count(n / 10000000000000000)\n\
    \        val onesCount = ones.count(n / 10000000000000000)\n        val onesCount\
    \ = ones.count(n / 10000000000000000)\n        val onesCount = ones.count(n /\
    \ 100000000000000000)\n        val onesCount = ones.count(n / 100000000000000000)\n\
    \        val onesCount = ones.count(n / 100000000000000000)\n        val onesCount\
    \ = ones.count(n / 1000000000000000000)\n        val onesCount = ones.count(n\
    \ / 1000000000000000000)\n        val onesCount = ones.count(n / 1000000000000000000)\n\
    \        val onesCount = ones.count(n / 1000000000000000000)\n        val onesCount\
    \ = ones.count(n / 10000000000000000000)\n        val onesCount = ones.count(n\
    \ / 10000000000000000000)\n        val onesCount = ones.count(n / 10000000000000000000)\n\
    \        val onesCount = ones.count(n / 100000000000000000000)\n        val onesCount\
    \ = ones.count(n / 100000000000000000000)\n        val onesCount = ones.count(n\
    \ / 100000000000000000000)\n        val onesCount = ones.count(n / 100000000000000000000)\n\
    \        val onesCount = ones.count(n \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4r9zoef7.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4r9zoef7.scala:9:12\
    \ ----------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCount\e[0m = ones.count(n / \e[31m10\e[0m)\n\e[31m\e[31m  |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0monesCount is already\
    \ defined as \e[33mvalue\e[0m \e[35monesCount\e[0m\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4r9zoef7.scala:10:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCount\e[0m = ones.count(n / \e[31m100\e[0m)\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0monesCount is\
    \ already defined as \e[33mvalue\e[0m \e[35monesCount\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4r9zoef7.scala:11:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCount\e[0m = ones.count(n / \e[31m1000\e[0m)\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0monesCount is\
    \ already defined as \e[33mvalue\e[0m \e[35monesCount\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4r9zoef7.scala:12:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCount\e[0m = ones.count(n / \e[31m10000\e[0m)\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0monesCount\
    \ is already defined as \e[33mvalue\e[0m \e[35monesCount\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4r9zoef7.scala:13:12\
    \ -----------"
  stdout: ''
  timestamp: 1659798607
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val count = mutable.Set[Long]()\n        val\
    \ remainder = n % 10\n        val remainderDigit = remainder % 10\n        val\
    \ remainderDigit2 = remainderDigit % 10\n        val remainderDigit3 = remainderDigit\
    \ % 10\n        val remainderDigit4 = remainderDigit % 10\n        val remainderDigit5\
    \ = remainderDigit % 10\n        val remainderDigit6 = remainderDigit % 10\n \
    \       val remainderDigit7 = remainderDigit % 10\n        val remainderDigit8\
    \ = remainderDigit % 10\n        val remainderDigit9 = remainderDigit % 10\n \
    \       val remainderDigit10 = remainderDigit % 10\n        val remainderDigit11\
    \ = remainderDigit % 10\n        val remainderDigit12 = remainderDigit % 10\n\
    \        val remainderDigit13 = remainderDigit % 10\n        val remainderDigit14\
    \ = remainderDigit % 10\n        val remainderDigit15 = remainderDigit % 10\n\
    \        val remainderDigit16 = remainderDigit % 10\n        val remainderDigit17\
    \ = remainderDigit % 10\n        val remainderDigit18 = remainderDigit % 10\n\
    \        val remainderDigit19 = remainderDigit % 10\n        val remainderDigit20\
    \ = remainderDigit % 10\n        val remainderDigit21 = remainderDigit % 10\n\
    \        val remainderDigit22 = remainderDigit % 10\n        val remainderDigit23\
    \ = remainderDigit % 10\n        val remainderDigit24 = remainderDigit % 10\n\
    \        val remainderDigit25 = remainderDigit % 10\n        val remainderDigit26\
    \ = remainderDigit % 10\n        val remainderDigit27 = remainderDigit % 10\n\
    \        val remainderDigit28 = remainderDigit % 10\n        val remainderDigit29\
    \ = remainderDigit % 10\n        val remainderDigit30 = remainderDigit % 10\n\
    \        val remainderDigit31 = remainderDigit % 10\n        val remainderDigit32\
    \ = remainderDigit % 10\n        val remainderDigit33 = remainderDigit % 10\n\
    \        val remainderDigit34 = remainderDigit % 10\n        val remainderDigit35\
    \ = remain\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2i2_mm7e.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp2i2_mm7e.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp2i2_mm7e.scala:9:20 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp2i2_mm7e.scala:45:31 ------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mval\e[0m \e[36mremainderDigit35\e[0m =\
    \ remain\n\e[31m\e[31m   |\e[0m                               ^^^^^^\e[0m\n\e\
    [31m   |\e[0m                               Not found: remain\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2i2_mm7e.scala:46:5 ---------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n5 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798607
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n \
    \       val ones = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n)\
    \ ones += i\n        for (i <- ones.take(n)) {\n            if (counts.get(i)\
    \ == null) counts(i) = 1\n            else counts(i) += 1\n        }\n       \
    \ counts.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2wv03q8_.scala:7:21 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2wv03q8_.scala:8:19 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp2wv03q8_.scala:9:23 ---------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) ones += i\n\
    \e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m            \
    \           Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798608
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ twos = mutable.ListBuffer[Long]()\n        val threes = mutable.ListBuffer[Long]()\n\
    \        val fours = mutable.ListBuffer[Long]()\n        val fives = mutable.ListBuffer[Long]()\n\
    \        val sixes = mutable.ListBuffer[Long]()\n        val sevens = mutable.ListBuffer[Long]()\n\
    \        val eights = mutable.ListBuffer[Long]()\n        val nines = mutable.ListBuffer[Long]()\n\
    \        val tens = mutable.ListBuffer[Long]()\n        val hundreds = mutable.ListBuffer[Long]()\n\
    \        val thousands = mutable.ListBuffer[Long]()\n        val millions = mutable.ListBuffer[Long]()\n\
    \        val billions = mutable.ListBuffer[Long]()\n        val trillions = mutable.ListBuffer[Long]()\n\
    \        val quadrillions = mutable.ListBuffer[Long]()\n        val quintillions\
    \ = mutable.ListBuffer[Long]()\n        val sextillions = mutable.ListBuffer[Long]()\n\
    \        val septillions = mutable.ListBuffer[Long]()\n        val octillions\
    \ = mutable.ListBuffer[Long]()\n        val nonillions = mutable.ListBuffer[Long]()\n\
    \        val decillions = mutable.ListBuffer[Long]()\n        val thousandsTens\
    \ = mutable.ListBuffer[Long]()\n        val millionsTens = mutable.ListBuffer[Long]()\n\
    \        val billionsTens = mutable.ListBuffer[Long]()\n        val trillionsTens\
    \ = mutable.ListBuffer[Long]()\n        val quadrillionsTens = mutable.ListBuffer[Long]()\n\
    \        val quintillionsTens = mutable.ListBuffer[Long]()\n        val sextillionsTens\
    \ = mutable.ListBuffer[Long]()\n        val septillionsTens = mutable.ListBuffer[Long]()\n\
    \        val octillionsTens = mutable.ListBuffer[Long]()\n        val nonillionsTens\
    \ = mutable.ListBuffer[Long]()\n        val decillionsTens = mutable.ListBuffer[Long]()\n\
    \        val thousand\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2z_hmn8v.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2z_hmn8v.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m  \
    \                 ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2z_hmn8v.scala:8:19\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mtwos\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m  \
    \                 ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2z_hmn8v.scala:9:21\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mthrees\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m  |\e[0m                     Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2z_hmn8v.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfours\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2z_hmn8v.scala:11:20\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfives\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-expl"
  stdout: ''
  timestamp: 1659798608
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n     \
    \   val ones = mutable.Array[Long](1)\n        val zeros = mutable.Array[Long](0)\n\
    \        val onesCount = mutable.Array[Long](1)\n        val zerosCount = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zerosCounts = mutable.Array[Long](0)\n\
    \        val onesCounts = mutable.Array[Long](1)\n        val zeros\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n\
    \    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) ==\
    \ (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7ddef_ew.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7ddef_ew.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCounts\e[0m = mutable.Array[\e[35mLong\e[0m](\e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp7ddef_ew.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.Array[\e[35mLong\e\
    [0m](\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7ddef_ew.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.Array[\e[35mLong\e\
    [0m](\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7ddef_ew.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.Array[\e\
    [35mLong\e[0m](\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel d"
  stdout: ''
  timestamp: 1659798608
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n \
    \       val ones = mutable.HashSet.empty[Long]\n        val zeros = mutable.HashSet.empty[Long]\n\
    \        val onesCount = mutable.HashSet.empty[Long]\n        val zerosCount =\
    \ mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n\
    \        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCountZeros\
    \ = mutable.HashSet.empty[Long]\n        val zerosCountZeros = mutable.HashSet.empty[Long]\n\
    \        val onesCountOnes = mutable.HashSet.empty[Long]\n        val zerosCountOnes\
    \ = mutable.HashSet.empty[Long]\n        val onesCountZeroOnes = mutable.HashSet.empty[Long]\n\
    \        val zerosCountZeroOnes = mutable.HashSet.empty[Long]\n        val onesCountOneOnes\
    \ = mutable.HashSet.empty[Long]\n        val zerosCountOneOnes = mutable.HashSet.empty[Long]\n\
    \        val onesCountZeroZeros = mutable.HashSet.empty[Long]\n        val zerosCountZeroZeros\
    \ = mutable.HashSet.empty[Long]\n        val onesCountOneZero = mutable.HashSet.empty[Long]\n\
    \        val zerosCountOneZero = mutable.HashSet.empty[Long]\n        val onesCountZeroOne\
    \ = mutable.HashSet.empty[Long]\n        val zerosCountZeroOne = mutable.HashSet.empty[Long]\n\
    \        val onesCountOneOne = mutable.HashSet.empty[Long]\n        val zerosCountOneOne\
    \ = mutable.HashSet.empty[Long]\n        val onesCountZeroZeroOne = mutable.HashSet.empty[Long]\n\
    \        val zerosCountZeroZeroOne = mutable.HashSet.empty[Long]\n        val\
    \ onesCountOneZeroOne = mutable.HashSet.empty[Long]\n        val zerosCountOneZeroOne\
    \ = mutable.HashSet.empty[Long]\n        val onesCountZeroOneOne = mutable.HashSet.empty[Long]\n\
    \        val zerosCountZeroOneOne = mutable.HashSet.empty[Long]\n        val onesCountOneOneOne\
    \ = mutable.HashSet.empty[Long]\n        val zerosCountOneOneOne = mutable.HashSet.empty[Long]\n\
    \        val onesCountZeroZeroZero = mutable.HashSet.empty[\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2i9ic6oi.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp2i9ic6oi.scala:7:21 -------------------------\e[0m\e[0m\n\e[31m7\
    \ |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2i9ic6oi.scala:8:19 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2i9ic6oi.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m \
    \ |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp2i9ic6oi.scala:10:24 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2i9ic6oi.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |"
  stdout: ''
  timestamp: 1659798609
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount\
    \ = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n      \
    \  val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n\
    \        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n\
    \        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n\
    \        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n\
    \        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n\
    \        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n\
    \        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n\
    \        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n\
    \        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n\
    \        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n\
    \        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n\
    \        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n\
    \        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n\
    \        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n\
    \        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n\
    \        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n\
    \        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt9nch94n.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:7:19\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m         \
    \          ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:8:24\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m    \
    \                    ^^^^^^^\e[0m\n\e[31m  |\e[0m                        Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:9:25\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m   \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                         Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:10:25\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount3\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt9nch94n.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36monesCount4\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros\
    \ = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n \
    \       val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n\
    \        val onesCounts = mutable.ListBuffer[Long]()\n        val zerosCounts\
    \ = mutable.ListBuffer[Long]()\n        val onesCountZeros = mutable.ListBuffer[Long]()\n\
    \        val zerosCountZeros = mutable.ListBuffer[Long]()\n        val onesCountOnes\
    \ = mutable.ListBuffer[Long]()\n        val zerosCountOnes = mutable.ListBuffer[Long]()\n\
    \        val onesCountZeroOnes = mutable.ListBuffer[Long]()\n        val zerosCountZeroOnes\
    \ = mutable.ListBuffer[Long]()\n        val onesCountOneOnes = mutable.ListBuffer[Long]()\n\
    \        val zerosCountOneOnes = mutable.ListBuffer[Long]()\n        val onesCountZeroZeros\
    \ = mutable.ListBuffer[Long]()\n        val zerosCountZeroZeros = mutable.ListBuffer[Long]()\n\
    \        val onesCountOneZeros = mutable.ListBuffer[Long]()\n        val zerosCountOneZeros\
    \ = mutable.ListBuffer[Long]()\n        val onesCountZeroOnes = mutable.ListBuffer[Long]()\n\
    \        val zerosCountZeroOnes = mutable.ListBuffer[Long]()\n        val onesCountOneOneOnes\
    \ = mutable.ListBuffer[Long]()\n        val zerosCountOneOneOnes = mutable.ListBuffer[Long]()\n\
    \        val onesCountZeroZeroZeros = mutable.ListBuffer[Long]()\n        val\
    \ zerosCountZeroZeroZeros = mutable.ListBuffer[Long]()\n        val onesCountOneZeroZeros\
    \ = mutable.ListBuffer[Long]()\n        val zerosCountOneZeroZeros = mutable.ListBuffer[Long]()\n\
    \        val onesCountZeroOneZeros = mutable.ListBuffer[Long]()\n        val zerosCountZeroOneZeros\
    \ = mutable.ListBuffer[Long]()\n        val onesCountOneOneOneZeros = mutable.ListBuffer[Long]()\n\
    \        val zerosCountOneOneOneZeros = mutable.ListBuffer[Long]()\n        val\
    \ onesCountZeroZeroOneZeros = mutable.ListBuffer[Long]()\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp89ci5rm8.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36monesCountZeroOnes\e[0m =\
    \ mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCountZeroOnes is already defined as \e[33mvalue\e[0m \e\
    [35monesCountZeroOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp89ci5rm8.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mzerosCountZeroOnes\e[0m\
    \ = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCountZeroOnes is already defined as \e[33mvalue\e[0m\
    \ \e[35mzerosCountZeroOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp89ci5rm8.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp89ci5rm8.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp89ci5rm8.scala:9:21 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanatio"
  stdout: ''
  timestamp: 1659798609
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val zerosCount = mutable.ListBuffer[Long]()\n        val onesZeros =\
    \ mutable.ListBuffer[Long]()\n        val zerosOnes = mutable.ListBuffer[Long]()\n\
    \        val onesOnes = mutable.ListBuffer[Long]()\n        val zerosZeros = mutable.ListBuffer[Long]()\n\
    \        val onesZeroOnes = mutable.ListBuffer[Long]()\n        val zerosOneOnes\
    \ = mutable.ListBuffer[Long]()\n        val onesOneOnes = mutable.ListBuffer[Long]()\n\
    \        val zerosZeroOnes = mutable.ListBuffer[Long]()\n        val onesZeroZeros\
    \ = mutable.ListBuffer[Long]()\n        val zerosOneZeros = mutable.ListBuffer[Long]()\n\
    \        val onesOneZeros = mutable.ListBuffer[Long]()\n        val zerosOneOneZeros\
    \ = mutable.ListBuffer[Long]()\n        val onesOneOneZeros = mutable.ListBuffer[Long]()\n\
    \        val zerosZeroOneZeros = mutable.ListBuffer[Long]()\n        val onesZeroZeroOnes\
    \ = mutable.ListBuffer[Long]()\n        val zerosOneZeroOnes = mutable.ListBuffer[Long]()\n\
    \        val onesOneZeroOnes = mutable.ListBuffer[Long]()\n        val zerosOneOneZeroOnes\
    \ = mutable.ListBuffer[Long]()\n        val onesOneOneZeroOnes = mutable.ListBuffer[Long]()\n\
    \        val zerosZeroOneOneZeros = mutable.ListBuffer[Long]()\n        val onesZeroZeroOneOnes\
    \ = mutable.ListBuffer[Long]()\n        val zerosOneZeroOneOnes = mutable.ListBuffer[Long]()\n\
    \        val onesOneZeroOneOnes = mutable.ListBuffer[Long]()\n        val zerosOneOneZeroOneOnes\
    \ = mutable.ListBuffer[Long]()\n        val onesOneOneZeroOneOnes = mutable.ListBuffer[Long]()\n\
    \        val zerosZeroOneOneOneZeros = mutable.ListBuffer[Long]()\n        val\
    \ onesZeroZeroOneOneOnes = mutable.ListBuffer[Long]()\n        val zerosOneZeroOneOneOnes\
    \ = mutable.ListBuffer[\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvlwu2pt1.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpvlwu2pt1.scala:7:19 -------------------------\e[0m\e[0m\n\e[31m7\
    \ |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m  \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpvlwu2pt1.scala:8:20 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e[0m         \
    \           Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpvlwu2pt1.scala:9:24 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpvlwu2pt1.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpvlwu2pt1.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesZeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer"
  stdout: ''
  timestamp: 1659798609
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastStart\
    \ = 0\n        var lastEnd = 0\n        while (n > 0) {\n            val cur =\
    \ n % 10\n            if (cur == 1) {\n                if (lastStart == 0) {\n\
    \                    lastStart = 1\n                    lastEnd = 1\n        \
    \        } else {\n                    lastEnd = 1\n                }\n      \
    \      } else {\n                if (lastStart == 0) {\n                    lastStart\
    \ = 1\n                } else {\n                    lastEnd = 1\n           \
    \     }\n            }\n            last = cur\n            n = n / 10\n     \
    \       count += 1\n        }\n        last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmph1ksac0i.scala:27:19\
    \ --------------------\e[0m\e[0m\n\e[31m27 |\e[0m            last = cur\n\e[31m\e\
    [31m   |\e[0m                   ^^^\e[0m\n\e[31m   |\e[0m                   Found:\
    \    (cur : Long)\n\e[31m   |\e[0m                   Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmph1ksac0i.scala:28:14 -----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m            n = n / \e[31m10\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val\
    \ n\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798612
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n\
    \        while(n > 1) {\n            val digit = n % 10\n            n /= 10\n\
    \            counts += digit\n            if(digit == 1) {\n                ones\
    \ += digit\n            } else {\n                zeros += digit\n           \
    \ }\n        }\n        ones.toList.size + (ones.toList.size - zeros.toList.size)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkncfjp7v.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpkncfjp7v.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpkncfjp7v.scala:9:21 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpkncfjp7v.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            n /= \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of\
    \ Long - did you mean n.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659798613
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 =\
    \ mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\
    \        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19\
    \ = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n\
    \        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22\
    \ = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n\
    \        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25\
    \ = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n\
    \        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28\
    \ = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n\
    \        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31\
    \ = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e"
  stdout: ''
  timestamp: 1659798551
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var\
    \ count = 0\n        while (n > 0) {\n            ones += n\n            n -=\
    \ 1\n        }\n        ones.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd7v29fwh.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpd7v29fwh.scala:11:14 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798614
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastStart\
    \ = 0\n        var lastEnd = 0\n        var lastStartOne = 0\n        var lastEndOne\
    \ = 0\n        var lastStartZero = 0\n        var lastEndZero = 0\n        var\
    \ lastStartZeroOne = 0\n        var lastEndZeroOne = 0\n        var lastStartOneZero\
    \ = 0\n        var lastEndOneZero = 0\n        var lastStartZeroZero = 0\n   \
    \     var lastEndZeroZero = 0\n        var lastStartOneOne = 0\n        var lastEndOneOne\
    \ = 0\n        var lastStartZeroOne = 0\n        var lastEndZeroOne = 0\n    \
    \    var lastStartOneZeroZero = 0\n        var lastEndOneZeroZero = 0\n      \
    \  var lastStartZeroZeroZero = 0\n        var lastEndZeroZeroZero = 0\n      \
    \  var lastStartOneOneOne = 0\n        var lastEndOneOneOne = 0\n        var lastStartZeroOneZero\
    \ = 0\n        var lastEndZeroOneZero = 0\n        var lastStartOneZeroOne = 0\n\
    \        var lastEndOneZeroOne = 0\n        var lastStartZeroZeroOne = 0\n   \
    \     var lastEndZeroZeroOne = 0\n        var lastStartOneOneOne = 0\n       \
    \ var lastEndOneOneOne = 0\n        var lastStartZeroZeroOne = 0\n        var\
    \ lastEndZeroZeroOne = 0\n        var lastStartOneOneOne = 0\n        var lastEndOneOneOne\
    \ = 0\n        var lastStartZeroZeroOne = 0\n        var lastEndZeroZeroOne =\
    \ 0\n        var lastStartOneOneOne = 0\n        var lastEndOneOneOne = 0\n  \
    \      var lastStartZeroZeroOne = 0\n        var lastEndZeroZeroOne = 0\n    \
    \    var lastStartOneOneOne = 0\n        var lastEndOneOneOne = 0\n        var\
    \ lastStartZeroZeroOne = 0\n        var lastEndZeroZeroOne = 0\n        var lastStartOneOneOne\
    \ = 0\n        var lastEndOneOneOne = 0\n        var lastStartZeroZeroOne = 0\n\
    \        var lastEndZeroZeroOne = 0\n        var lastStartOneOneOne = 0\n    \
    \    var lastEndOneOneOne = 0\n        var lastStartZeroZeroOne = 0\n        var\
    \ lastEndZeroZeroOne = 0\n        var lastStartOneOneOne = 0\n        var lastEndOneOneOne\
    \ = 0\n        var lastStartZeroZeroOne = 0\n        var lastEndZeroZeroOne =\
    \ 0\n        var lastStartOneOneOne = 0\n        var lastEndOneOneOne = 0\n  \
    \      var lastStartZeroZeroOne = 0\n        var lastEndZeroZeroOne = 0\n    \
    \    var lastStartOneOneOne = 0\n        var lastEndOneOneOne = 0\n        var\
    \ lastStartZeroZeroOne = 0\n        var lastEndZeroZeroOne = 0\n        var lastStartOneOneOne\
    \ = 0\n        var lastEndOneOneOne = 0\n        var \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpph9xu0js.scala:75:11 ---------------------------\e\
    [0m\e[0m\n\e[31m75 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpph9xu0js.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mvar\e[0m \e[36mlastStartZeroOne\e[0m =\
    \ \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mlastStartZeroOne is already defined as \e[33mvariable\e[0m \e[35mlastStartZeroOne\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpph9xu0js.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mvar\e[0m \e[36mlastEndZeroOne\e[0m = \e[31m0\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mlastEndZeroOne\
    \ is already defined as \e[33mvariable\e[0m \e[35mlastEndZeroOne\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpph9xu0js.scala:37:12 ---------------------------\e[0m\e[0m\n\e[31m37\
    \ |\e[0m        \e[33mvar\e[0m \e[36mlastStartOneOneOne\e[0m = \e[31m0\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mlastStartOneOneOne\
    \ is already defined as \e[33mvariable\e[0m \e[35mlastStartOneOneOne\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpph9xu0js.scala:38:12 ---------------------------\e[0m\e[0m\n\e[31m38\
    \ |\e[0m        \e[33mvar\e[0m \e[36mlastEndOneOneOne\e[0m = \e[31m0\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mlastEndOneOneOne\
    \ is already defined as \e[33mvariable\e[0m \e[35mlastEndOneOneOne\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of topleve"
  stdout: ''
  timestamp: 1659798615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 1\n        while(n\
    \ > 0){\n            val next = (last * 10 + n) % 100\n            if(next ==\
    \ 1){\n                count += 1\n            }\n            last = next\n  \
    \          n -= 1\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6t9zf4gs.scala:14:19\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m            last = next\n\e[31m\e\
    [31m   |\e[0m                   ^^^^\e[0m\n\e[31m   |\e[0m                   Found:\
    \    (next : Long)\n\e[31m   |\e[0m                   Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6t9zf4gs.scala:15:14 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n       \
    \ val zerosCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n\
    \        val zerosCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n\
    \        val zerosCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n\
    \        val zerosCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n\
    \        val zerosCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n\
    \        val zerosCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n\
    \        val zerosCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n\
    \        val zerosCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n\
    \        val zerosCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n\
    \        val zerosCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n\
    \        val zerosCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n\
    \        val zerosCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n\
    \        val zerosCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n\
    \        val zerosCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n\
    \        val zerosCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n\
    \        val zerosCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n\
    \        val zerosCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n\
    \        val zerosCount18 = \n    }\n    def main(args: Array[String]) = {\n \
    \   assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpgvk350n3.scala:44:26 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36mzerosCount18\e[0m = \n\e\
    [31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m         \
    \                 expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgvk350n3.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgvk350n3.scala:9:24 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvk350n3.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e"
  stdout: ''
  timestamp: 1659798573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros\
    \ = mutable.ListBuffer(0)\n        val count = mutable.ListBuffer[Long]()\n  \
    \      val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n\
    \        val onesCount2 = mutable.ListBuffer[Long]()\n        val zerosCount2\
    \ = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n\
    \        val zerosCount3 = mutable.ListBuffer[Long]()\n        val onesCount4\
    \ = mutable.ListBuffer[Long]()\n        val zerosCount4 = mutable.ListBuffer[Long]()\n\
    \        val onesCount5 = mutable.ListBuffer[Long]()\n        val zerosCount5\
    \ = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n\
    \        val zerosCount6 = mutable.ListBuffer[Long]()\n        val onesCount7\
    \ = mutable.ListBuffer[Long]()\n        val zerosCount7 = mutable.ListBuffer[Long]()\n\
    \        val onesCount8 = mutable.ListBuffer[Long]()\n        val zerosCount8\
    \ = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n\
    \        val zerosCount9 = mutable.ListBuffer[Long]()\n        val onesCount10\
    \ = mutable.ListBuffer[Long]()\n        val zerosCount10 = mutable.ListBuffer[Long]()\n\
    \        val onesCount11 = mutable.ListBuffer[Long]()\n        val zerosCount11\
    \ = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n\
    \        val zerosCount12 = mutable.ListBuffer[Long]()\n        val onesCount13\
    \ = mutable.ListBuffer[Long]()\n        val zerosCount13 = mutable.ListBuffer[Long]()\n\
    \        val onesCount14 = mutable.ListBuffer[Long]()\n        val zerosCount14\
    \ = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n\
    \        val zerosCount15 = mutable.ListBuffer[Long]()\n        val onesCount16\
    \ = mutable.ListBuffer[Long]()\n        val zerosCount16 = mutable.ListBuffer[Long]()\n\
    \        val onesCount17 = mutable.List\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnaeew824.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpnaeew824.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpnaeew824.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpnaeew824.scala:10:24 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpnaeew824.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpnaeew824.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBu"
  stdout: ''
  timestamp: 1659798615
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n \
    \       val ones = mutable.HashSet.empty[Long]\n        val zeros = mutable.HashSet.empty[Long]\n\
    \        val onesCount = mutable.HashSet.empty[Long]\n        val zerosCount =\
    \ mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n\
    \        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCountZeros\
    \ = mutable.HashSet.empty[Long]\n        val zerosCountZeros = mutable.HashSet.empty[Long]\n\
    \        val onesCountOnes = mutable.HashSet.empty[Long]\n        val zerosCountOnes\
    \ = mutable.HashSet.empty[Long]\n        val onesCountZeroOnes = mutable.HashSet.empty[Long]\n\
    \        val zerosCountZeroOnes = mutable.HashSet.empty[Long]\n        val onesCountOneOnes\
    \ = mutable.HashSet.empty[Long]\n        val zerosCountOneOnes = mutable.HashSet.empty[Long]\n\
    \        val onesCountZeroZeros = mutable.HashSet.empty[Long]\n        val zerosCountZeroZeros\
    \ = mutable.HashSet.empty[Long]\n        val onesCountOneZeros = mutable.HashSet.empty[Long]\n\
    \        val zerosCountOneZeros = mutable.HashSet.empty[Long]\n        val onesCountOneOneZeros\
    \ = mutable.HashSet.empty[Long]\n        val zerosCountOneOneZeros = mutable.HashSet.empty[Long]\n\
    \        val onesCountZeroOneOnes = mutable.HashSet.empty[Long]\n        val zerosCountZeroOneOnes\
    \ = mutable.HashSet.empty[Long]\n        val onesCountOneZeroOnes = mutable.HashSet.empty[Long]\n\
    \        val zerosCountOneZeroOnes = mutable.HashSet.empty[Long]\n        val\
    \ onesCountOneOneZeroOnes = mutable.HashSet.empty[Long]\n        val zerosCountOneOneZeroOnes\
    \ = mutable.HashSet.empty[Long]\n        val onesCountZeroZeroZeros = mutable.HashSet.empty[Long]\n\
    \        val zerosCountZeroZeroZeros = mutable.HashSet.empty[Long]\n        val\
    \ onesCountOneZeroZeros = mutable.HashSet.empty[Long]\n        val zerosCountOneZeroZeros\
    \ = mutable.HashSet.empty[Long]\n        val onesCountOneOneZeroZero\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n\
    \    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) ==\
    \ (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8r80qp9e.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8r80qp9e.scala:7:21\
    \ -------------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.HashMap.empty[\e[35mLong\e[0m, \e[35mLong\e[0m]\n\e\
    [31m\e[31m  |\e[0m                     ^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \           Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp8r80qp9e.scala:8:19 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.HashSet.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \               Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp8r80qp9e.scala:9:20 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.HashSet.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e[0m   \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp8r80qp9e.scala:10:24 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.HashSet.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp8r80qp9e.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longe"
  stdout: ''
  timestamp: 1659798616
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val zerosCount = mutable.ListBuffer[Long]()\n        var current = 0L\n\
    \        var count = 0L\n        while (current < n) {\n            current +=\
    \ 1\n            if (current % 10 == 1) {\n                ones += current\n \
    \               onesCount += count\n            }\n            if (current % 10\
    \ == 0) {\n                zeros += current\n                zerosCount += count\n\
    \            }\n            count += 1\n        }\n        val onesCount = onesCount.toList\n\
    \        val zerosCount = zerosCount.toList\n        val onesSum = ones.sum\n\
    \        val zerosSum = zeros.sum\n        val onesSumCount = onesCount.sum\n\
    \        val zerosSumCount = zerosCount.sum\n        val onesSumCount = onesSumCount.toList\n\
    \        val zerosSumCount = zerosSumCount.toList\n        val onesSum = onesSum.toList\n\
    \        val zerosSum = zerosSum.toList\n        val onesSumCount = onesSumCount.toList\n\
    \        val zerosSumCount = zerosSumCount.toList\n        val onesSumCount =\
    \ onesSumCount.toList\n        val zerosSumCount = zerosSumCount.toList\n    \
    \    val onesSum = onesSum.toList\n        val zerosSum = zerosSum.toList\n  \
    \      val onesSumCount = onesSumCount.toList\n        val zerosSumCount = zerosSumCount.toList\n\
    \        val onesSumCount = onesSumCount.toList\n        val zerosSumCount = zerosSumCount.toList\n\
    \        val onesSum = onesSum.toList\n        val zerosSum = zerosSum.toList\n\
    \        val onesSumCount = onesSumCount.toList\n        val zerosSumCount = zerosSumCount.toList\n\
    \        val onesSumCount = onesSumCount.toList\n        val zerosSumCount = zerosSumCount.toList\n\
    \        val onesSum = onesSum.toList\n        val zerosSum = zerosSum.toList\n\
    \        val onesSumCount = onesSumCount.toList\n        val zerosSumCount = zerosSumCount.toList\n\
    \        val onesSumCount = onesSumCount.toList\n        val zerosSumCount = zerosSumCount.toList\n\
    \        val onesSum = onesSum.toList\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi9uw4d71.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = onesCount.toList\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpi9uw4d71.scala:26:12 ---------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = zerosCount.toList\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mzerosCount\
    \ is already defined as \e[33mvalue\e[0m \e[35mzerosCount\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi9uw4d71.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesSumCount\e[0m = onesSumCount.toList\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0monesSumCount is\
    \ already defined as \e[33mvalue\e[0m \e[35monesSumCount\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi9uw4d71.scala:32:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mzerosSumCount\e[0m = zerosSumCount.toList\n\e[31m\e[31m   |\e[0m     \
    \   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mzerosSumCount\
    \ is already defined as \e[33mvalue\e[0m \e[35mzerosSumCount\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi9uw4d71.scala:33:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesSum\e[0m = onesSum.toList\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesSum is already defined as \e[33mva"
  stdout: ''
  timestamp: 1659798616
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfzqz5sdl.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = m"
  stdout: ''
  timestamp: 1659798584
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        val ones = mutable.ArrayBuffer(1)\n\
    \        val zeros = mutable.ArrayBuffer(0)\n        val onesAndZeros = mutable.ArrayBuffer(1,\
    \ 0)\n        val onesAndOnes = mutable.ArrayBuffer(1, 1)\n        val onesAndZerosAndOnes\
    \ = mutable.ArrayBuffer(1, 1, 0)\n        val onesAndOnesAndZeros = mutable.ArrayBuffer(1,\
    \ 1, 1)\n        val onesAndZerosAndOnesAndZeros = mutable.ArrayBuffer(1, 1, 1,\
    \ 0)\n        val onesAndOnesAndZerosAndOnes = mutable.ArrayBuffer(1, 1, 1, 1)\n\
    \        val onesAndZerosAndOnesAndOnesAndZeros = mutable.ArrayBuffer(1, 1, 1,\
    \ 1, 0)\n        val onesAndOnesAndZerosAndOnesAndOnes = mutable.ArrayBuffer(1,\
    \ 1, 1, 1, 1)\n        val onesAndZerosAndOnesAndOnesAndOnesAndZeros = mutable.ArrayBuffer(1,\
    \ 1, 1, 1, 1, 1)\n        val onesAndOnesAndZerosAndOnesAndOnesAndOnes = mutable.ArrayBuffer(1,\
    \ 1, 1, 1, 1, 1, 1)\n        val onesAndZerosAndOnesAndOnesAndOnesAndOnesAndZeros\
    \ = mutable.ArrayBuffer(1, 1, 1, 1, 1, 1, 1, 1)\n        val onesAndOnesAndZerosAndOnesAndOnesAndOnesAndOnes\
    \ = mutable.ArrayBuffer(1, 1, 1, 1, 1, 1, 1, 1)\n        val onesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndZeros\
    \ = mutable.ArrayBuffer(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\n        val onesAndOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnes\
    \ = mutable.ArrayBuffer(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\n        val onesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndZeros\
    \ = mutable.ArrayBuffer(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\n        val onesAndOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndOnes\
    \ = mutable.ArrayBuffer(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\n        val onesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndZeros\
    \ = mutable.ArrayBuffer(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\n        val\
    \ onesAndOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndZeros\
    \ = mutable.ArrayBuffer(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\n        val\
    \ onesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndZeros\
    \ = mutable.ArrayBuffer(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\n    \
    \    val onesAndOnesAndZerosAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOne\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpps9j2ciq.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpps9j2ciq.scala:8:19\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mones\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \             ^^^^^^^\e[0m\n\e[31m  |\e[0m                   Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpps9j2ciq.scala:9:20\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mzeros\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m  |\e[0m     \
    \               ^^^^^^^\e[0m\n\e[31m  |\e[0m                    Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpps9j2ciq.scala:10:27\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36monesAndZeros\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m, \e[31m0\e[0m)\n\e[31m\e\
    [31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpps9j2ciq.scala:11:26 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesAndOnes\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpps9j2ciq.scala:12:34 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36monesAndZerosAndOnes\e[0m\
    \ = mutable.ArrayBuffer(\e[31m1\e[0m, \e[31m1\e[0m, \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                  ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                  "
  stdout: ''
  timestamp: 1659798616
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 1\n        var current\
    \ = 1\n        while(current < n) {\n            current = last\n            while(current\
    \ < n && current % 10 == 1) {\n                current = current * 10 + 1\n  \
    \          }\n            count = count + 1\n            last = current\n    \
    \    }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwin9k1c3.scala:21)\n\tat Problem.main(tmpwin9k1c3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798616
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros\
    \ = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n     \
    \   var i = 0\n        while (i < n) {\n            if (ones.contains(i)) {\n\
    \                count += 1\n            }\n            if (zeros.contains(i))\
    \ {\n                count += 1\n            }\n            i += 1\n        }\n\
    \        count.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ors_5i_.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp0ors_5i_.scala:8:20 -------------------------\e[0m\e\
    [0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp0ors_5i_.scala:9:20 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798614
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ onesCount = mutable.ListBuffer[Long]()\n        val onesCount = onesCount.init\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        val onesCount = onesCount.update\n\
    \        val onesCount = onesCount.update\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmmvm2ng9.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = onesCount.init\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0monesCount\
    \ is already defined as \e[33mvalue\e[0m \e[35monesCount\e[0m\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmmvm2ng9.scala:10:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCount\e[0m = onesCount.update\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmmvm2ng9.scala:11:12 ---------------------------\e[0m\e[0m\n\e\
    [31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = onesCount.update\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpmmvm2ng9.scala:12:12 ---------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = onesCount.update\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0monesCount\
    \ is already defined as \e[33mvalue\e[0m \e[35monesCount\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmmvm2ng9.scala:13:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCount\e[0m = onesCount.update\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1659798616
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 0\n        for(i\
    \ <- 0 until n) {\n            val cur = i.toString.toInt\n            if(cur\
    \ == 1) {\n                count += 1\n                last = i\n            }\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7g3r_eu1.scala:9:25\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n) {\n\e[31m\e[31m  |\e[0m                         ^\e[0m\n\e\
    [31m  |\e[0m                         Found:    (n : Long)\n\e[31m  |\e[0m    \
    \                     Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 1\n        var lastOne\
    \ = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour\
    \ = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven\
    \ = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen\
    \ = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen\
    \ = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var\
    \ lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n\
    \        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne\
    \ = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n      \
    \  var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix\
    \ = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n    \
    \    var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne\
    \ = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n      \
    \  var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix\
    \ = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n    \
    \    var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne\
    \ = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n      \
    \  var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix\
    \ = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n    \
    \    var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne\
    \ = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var\
    \ lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix =\
    \ 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var\
    \ lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n\
    \        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour\
    \ = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var\
    \ lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpv8rizhyy.scala:77:5\
    \ ---------------------\e[0m\e[0m\n\e[31m77 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n    \
    \    val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts =\
    \ mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\
    \        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts =\
    \ mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n\
    \        val onesCounts = mutable.Map[Long, Long]()\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfzqz5sdl.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCounts is already defined as \e[33mvalue\e[0m \e[35monesCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mzerosCounts\e[0m = mutable.Map[\e[35mLong\e\
    [0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosCounts is already defined as \e[33mvalue\e[0m \e[35mzerosCounts\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfzqz5sdl.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36monesCounts\e[0m = m"
  stdout: ''
  timestamp: 1659798584
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ArrayBuffer.empty[Long]\n     \
    \   var count = 0\n        while(n > 0){\n            ones += n\n            n\
    \ -= 1\n        }\n        ones.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphimmr3qo.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmphimmr3qo.scala:11:14 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of Long\
    \ - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n     \
    \   val ones = mutable.Array[Long](1)\n        val zeros = mutable.Array[Long](0)\n\
    \        val onesCount = mutable.Array[Long](1)\n        val zerosCount = mutable.Array[Long](0)\n\
    \        var i = 0\n        while (i < n) {\n            val digit = i / Math.pow(10,\
    \ n-1)\n            val digitCount = digits.count(_ == digit)\n            if\
    \ (digitCount == 1) {\n                counts.put(digit, counts.getOrElse(digit,\
    \ 0) + 1L)\n                onesCount += digitCount\n            } else if (digitCount\
    \ == 0) {\n                counts.put(digit, counts.getOrElse(digit, 0) + 1L)\n\
    \                zerosCount += digitCount\n            } else {\n            \
    \    counts.put(digit, counts.getOrElse(digit, 0) + 1L)\n                onesCount\
    \ += digitCount\n                zerosCount += digitCount\n            }\n   \
    \         i += 1\n        }\n        val onesCount = onesCount.sum\n        val\
    \ zerosCount = zerosCount.sum\n        val onesCount = onesCount.toLong\n    \
    \    val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val zerosCount = zerosCount.toLong\n        val onesCount = onesCount.toLong\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp_n7jmdfx.scala:58:11 ---------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp_n7jmdfx.scala:29:12 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = onesCount.sum\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp_n7jmdfx.scala:30:12 ---------------------------\e[0m\e[0m\n\e[31m30\
    \ |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = zerosCount.sum\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mzerosCount\
    \ is already defined as \e[33mvalue\e[0m \e[35mzerosCount\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_n7jmdfx.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36monesCount\e[0m = onesCount.toLong\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesCount is already defined as \e[33mvalue\e[0m \e[35monesCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_n7jmdfx.scala:32:12 ---------------------------\e[0m\e[0m\n\e\
    [31m32 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = zerosCount.toLong\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mzerosCount is already defined as \e[33mvalue\e[0m \e[35mzerosCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming"
  stdout: ''
  timestamp: 1659798617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val\
    \ zeros = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n\
    \        val zerosCount = mutable.ListBuffer[Long]()\n        val onesCount2 =\
    \ mutable.ListBuffer[Long]()\n        val zerosCount2 = mutable.ListBuffer[Long]()\n\
    \        val onesCount3 = mutable.ListBuffer[Long]()\n        val zerosCount3\
    \ = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n\
    \        val zerosCount4 = mutable.ListBuffer[Long]()\n        val onesCount5\
    \ = mutable.ListBuffer[Long]()\n        val zerosCount5 = mutable.ListBuffer[Long]()\n\
    \        val onesCount6 = mutable.ListBuffer[Long]()\n        val zerosCount6\
    \ = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n\
    \        val zerosCount7 = mutable.ListBuffer[Long]()\n        val onesCount8\
    \ = mutable.ListBuffer[Long]()\n        val zerosCount8 = mutable.ListBuffer[Long]()\n\
    \        val onesCount9 = mutable.ListBuffer[Long]()\n        val zerosCount9\
    \ = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n\
    \        val zerosCount10 = mutable.ListBuffer[Long]()\n        val onesCount11\
    \ = mutable.ListBuffer[Long]()\n        val zerosCount11 = mutable.ListBuffer[Long]()\n\
    \        val onesCount12 = mutable.ListBuffer[Long]()\n        val zerosCount12\
    \ = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n\
    \        val zerosCount13 = mutable.ListBuffer[Long]()\n        val onesCount14\
    \ = mutable.ListBuffer[Long]()\n        val zerosCount14 = mutable.ListBuffer[Long]()\n\
    \        val onesCount15 = mutable.ListBuffer[Long]()\n        val zerosCount15\
    \ = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n\
    \        val zerosCount16 = mutable.ListBuffer[Long]()\n        val onesCount17\
    \ = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphihvr3si.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphihvr3si.scala:8:20 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mzeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                    Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphihvr3si.scala:9:24 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36monesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                        Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmphihvr3si.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mzerosCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphihvr3si.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36monesCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphihvr3si.scala:12:26 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mzerosC"
  stdout: ''
  timestamp: 1659798617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros\
    \ = mutable.ListBuffer(0)\n        val count = mutable.ListBuffer[Long]()\n  \
    \      val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n\
    \        val onesZeros = mutable.ListBuffer[Long]()\n        val zerosOnes = mutable.ListBuffer[Long]()\n\
    \        val onesOnes = mutable.ListBuffer[Long]()\n        val zerosZeros = mutable.ListBuffer[Long]()\n\
    \        val zerosZeros = mutable.ListBuffer[Long]()\n        val zerosOnes =\
    \ mutable.ListBuffer[Long]()\n        val onesZeros = mutable.ListBuffer[Long]()\n\
    \        val zerosZeros = mutable.ListBuffer[Long]()\n        val zerosOnes =\
    \ mutable.ListBuffer[Long]()\n        val onesOnes = mutable.ListBuffer[Long]()\n\
    \        val onesZeros = mutable.ListBuffer[Long]()\n        val zerosOnes = mutable.ListBuffer[Long]()\n\
    \        val zerosZeros = mutable.ListBuffer[Long]()\n        val zerosOnes =\
    \ mutable.ListBuffer[Long]()\n        val onesOnes = mutable.ListBuffer[Long]()\n\
    \        val onesZeros = mutable.ListBuffer[Long]()\n        val zerosOnes = mutable.ListBuffer[Long]()\n\
    \        val zerosZeros = mutable.ListBuffer[Long]()\n        val zerosOnes =\
    \ mutable.ListBuffer[Long]()\n        val onesOnes = mutable.ListBuffer[Long]()\n\
    \        val onesZeros = mutable.ListBuffer[Long]()\n        val zerosOnes = mutable.ListBuffer[Long]()\n\
    \        val zerosZeros = mutable.ListBuffer[Long]()\n        val zerosOnes =\
    \ mutable.ListBuffer[Long]()\n        val onesOnes = mutable.ListBuffer[Long]()\n\
    \        val onesZeros = mutable.ListBuffer[Long]()\n        val zerosOnes = mutable.ListBuffer[Long]()\n\
    \        val zerosZeros = mutable.ListBuffer[Long]()\n        val zerosOnes =\
    \ mutable.ListBuffer[Long]()\n        val onesOnes = mutable.ListBuffer[Long]()\n\
    \        val onesZeros = mutable.ListBuffer[Long]()\n        val zerosOnes = mut\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpteds5rv9.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mzerosZeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosZeros is already defined as \e[33mvalue\e[0m \e[35mzerosZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpteds5rv9.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mzerosOnes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosOnes is already defined as \e[33mvalue\e[0m \e[35mzerosOnes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpteds5rv9.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36monesZeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesZeros is already defined as \e[33mvalue\e[0m \e[35monesZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpteds5rv9.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mzerosZeros\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosZeros is already defined as \e[33mvalue\e[0m \e[35mzerosZeros\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpteds5rv9.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mzerosOnes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m"
  stdout: ''
  timestamp: 1659798617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        var count = 0\n        var last = 1\n        var lastOne\
    \ = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour\
    \ = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven\
    \ = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen\
    \ = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen\
    \ = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var\
    \ lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n\
    \        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne\
    \ = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n      \
    \  var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix\
    \ = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n    \
    \    var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne\
    \ = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n      \
    \  var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix\
    \ = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n    \
    \    var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne\
    \ = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n      \
    \  var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix\
    \ = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n    \
    \    var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne\
    \ = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var\
    \ lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix =\
    \ 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var\
    \ lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n\
    \        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour\
    \ = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var\
    \ lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l))\
    \ == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l))\
    \ == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpv8rizhyy.scala:77:5\
    \ ---------------------\e[0m\e[0m\n\e[31m77 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros\
    \ = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n       \
    \ val zerosCount = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n\
    \        val zerosOnes = mutable.Set[Long]()\n        val onesOnes = mutable.Set[Long]()\n\
    \        val zerosZeros = mutable.Set[Long]()\n        val onesZeroOnes = mutable.Set[Long]()\n\
    \        val zerosOneOnes = mutable.Set[Long]()\n        val onesOneOnes = mutable.Set[Long]()\n\
    \        val zerosZeroOnes = mutable.Set[Long]()\n        val onesZeroZeroOnes\
    \ = mutable.Set[Long]()\n        val zerosOneZeroOnes = mutable.Set[Long]()\n\
    \        val onesOneZeroOnes = mutable.Set[Long]()\n        val zerosZeroOneOnes\
    \ = mutable.Set[Long]()\n        val onesZeroZeroOneOnes = mutable.Set[Long]()\n\
    \        val zerosOneZeroZeroOnes = mutable.Set[Long]()\n        val onesOneZeroZeroOnes\
    \ = mutable.Set[Long]()\n        val zerosZeroOneZeroOnes = mutable.Set[Long]()\n\
    \        val onesZeroZeroZeroOnes = mutable.Set[Long]()\n        val zerosOneZeroZeroOnes\
    \ = mutable.Set[Long]()\n        val onesOneZeroZeroOnes = mutable.Set[Long]()\n\
    \        val zerosZeroOneZeroOnes = mutable.Set[Long]()\n        val onesZeroZeroZeroOnes\
    \ = mutable.Set[Long]()\n        val zerosOneZeroZeroOnes = mutable.Set[Long]()\n\
    \        val onesOneZeroZeroOnes = mutable.Set[Long]()\n        val zerosZeroOneZeroOnes\
    \ = mutable.Set[Long]()\n        val onesZeroZeroZeroOnes = mutable.Set[Long]()\n\
    \        val zerosOneZeroZeroOnes = mutable.Set[Long]()\n        val onesOneZeroZeroOnes\
    \ = mutable.Set[Long]()\n        val zerosZeroOneZeroOnes = mutable.Set[Long]()\n\
    \        val onesZeroZeroZeroOnes = mutable.Set[Long]()\n        val zerosOneZeroZeroOnes\
    \ = \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l))\
    \ == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l))\
    \ == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l))\
    \ == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpgerfwsyr.scala:40:34 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \e[36mzerosOneZeroZeroOnes\e[0m\
    \ = \n\e[31m\e[31m   |\e[0m                                  ^\e[0m\n\e[31m  \
    \ |\e[0m                                  expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpgerfwsyr.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36mzerosOneZeroZeroOnes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mzerosOneZeroZeroOnes is already defined as \e[33mvalue\e[0m \e[35mzerosOneZeroZeroOnes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgerfwsyr.scala:29:12 ---------------------------\e[0m\e[0m\n\e\
    [31m29 |\e[0m        \e[33mval\e[0m \e[36monesOneZeroZeroOnes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0monesOneZeroZeroOnes is already defined as \e[33mvalue\e[0m\
    \ \e[35monesOneZeroZeroOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpgerfwsyr.scala:30:12 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mzerosZeroOneZeroOnes\e[0m\
    \ = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mzerosZeroOneZeroOnes is already defined as \e[33mvalue\e[0m\
    \ \e[35mzerosZeroOneZeroOnes\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpgerfwsyr.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36monesZeroZeroZeroOnes\e[0m\
    \ = mutable.Set[\e[3"
  stdout: ''
  timestamp: 1659798617
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a positive integer n, return the count of the numbers of n-digit\n\
    \    // positive integers that start or end with 1.\n    def startsOneEnds(n :\
    \ Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        var count\
    \ = 0\n        while(n > 0){\n            ones += n\n            n -= 1\n    \
    \    }\n        ones.length\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n\
    \    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) ==\
    \ (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmyqxjqbt.scala:7:19 -------------------------\e\
    [0m\e[0m\n\e[31m7 |\e[0m        \e[33mval\e[0m \e[36mones\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpmyqxjqbt.scala:11:14 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of Long\
    \ - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659798617

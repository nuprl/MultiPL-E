language: scala
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\".toRegex)\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8do3wc_w.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp8do3wc_w.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n2 errors found\n"
  stdout: ''
  timestamp: 1659793335
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\".toRegex)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpilygj1j6.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpilygj1j6.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n2 errors found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.!?]\")\n        sentences.foreach(sentence =>\
    \ {\n            val words = sentence.split(\" \").filter(_.nonEmpty)\n      \
    \      words.foreach(word => {\n                if (word.startsWith(\"I\")) {\n\
    \                    boredoms += word\n                }\n            })\n   \
    \     })\n        boredoms.size\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvbaefezr.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw_6mfur6.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpciyc6gk_.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.!?]\".toRegex)\n        sentences.foreach(sentence\
    \ => {\n            val words = sentence.split(\" \".toRegex)\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7knlqqvh.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp7knlqqvh.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.!?]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7knlqqvh.scala:16:43\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m\
    \ \e[36mwords\e[0m = sentence.split(\e[31m\" \"\e[0m.toRegex)\n\e[31m\e[31m  \
    \ |\e[0m                                       ^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                 value toRegex is not a member of String\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659793335
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomWords = sentence.split(\"i\").map(_.toLowerCase)\n\
    \            boredomWords.foreach(word => {\n                boredoms += word\n\
    \            })\n        })\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvi1mkm2n.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"[.!?]\").foreach(s => {\n            if (s.startsWith(\"I\"))\
    \ {\n                boredoms += s\n            }\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdzy_08pc.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"I\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_7j1mofx.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart >= 0) {\n                boredoms += sentence\n    \
    \        }\n        }\n        boredoms.size match {\n            case 0 => 0\n\
    \            case 1 => 1\n            case _ => boredoms.size\n        }\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvvroj27y.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence =>\
    \ {\n            val words = sentence.split(\" \")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq5rltrqv.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\"\\\\.\")\n        for(word <- words) {\n         \
    \   if(word.startsWith(\"I\")) {\n                boredoms += word\n         \
    \   }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt_s1n8e.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     for(word <- S.split(\" \")){\n            if(word.startsWith(\"I\")){\n\
    \                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppkp18gio.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"I\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_7j1mofx.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\"\\\\.\")\n        for(w <- words) {\n            val\
    \ boredomWord = w.toLowerCase match {\n                case s if s.startsWith(\"\
    i\") => s\n                case s if s.startsWith(\"!\") => s\n              \
    \  case s if s.startsWith(\"?\") => s\n                case s => s\n         \
    \   }\n            boredoms.add(boredomWord)\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppt_358be.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu1w1eg9n.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomIndex = sentence.indexOf(\"i\")\n            if\
    \ (boredomIndex >= 0) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpomieddbm.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        sentences.foreach { sentence\
    \ =>\n            val words = sentence.split(\" \")\n            words.foreach\
    \ { word =>\n                if (word.startsWith(\"I\")) {\n                 \
    \   boredoms += word\n                }\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcoi7361g.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwzynw2m5.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu1w1eg9n.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += (word -> 1L)\n  \
    \          }\n        }\n        boredoms.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprew2gl3y.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        S.split(\"[.?!]\").foreach { s =>\n            if (s.startsWith(\"I\"\
    )) {\n                boredoms += s\n            }\n        }\n        boredoms.toList.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1g4mw0b9.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                val boredomEnd = sentence.indexOf(\"\
    i\", boredomStart + 1)\n                val boredomText = sentence.substring(boredomStart,\
    \ boredomEnd)\n                boredoms.put(boredomText, boredoms.getOrElse(boredomText,\
    \ 0l) + 1)\n            }\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr465y8vo.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach(s => {\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1zmw3uea.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk696g7b7.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"[.?!]\").foreach(boredoms += _)\n        boredoms.size\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"))\
    \ == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpixv2cdmu.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ S.split(\"\\\\.|\\\\?|\\\\!\").foreach(s => {\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps56ahbnf.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence =>\
    \ {\n            val words = sentence.split(\" \")\n            words.foreach(word\
    \ => {\n                if (word.equals(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h6alrgl.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgjvany7h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach(s => {\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1zmw3uea.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk696g7b7.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.!?]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4s_xzgtx.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu1w1eg9n.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\"\\\\.\")\n        for(word <- words) {\n         \
    \   if(word.startsWith(\"I\")) {\n                boredoms += word\n         \
    \   }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt_s1n8e.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\".toRegex)\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8v2jgkfl.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp8v2jgkfl.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n2 errors found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.count\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpslj4oa6x.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpciyc6gk_.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach(s => {\n            val boredom\
    \ = (s.startsWith(\"I\")).longValue\n            boredoms += (s -> boredom)\n\
    \        })\n        boredoms.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplaltfj3d.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplaltfj3d.scala:15:46\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m\
    \ \e[36mboredom\e[0m = (s.startsWith(\e[31m\"I\"\e[0m)).longValue\n\e[31m\e[31m\
    \   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                          value longValue is not a member of Boolean\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793339
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgjvany7h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     for(word <- S.split(\"\\\\.\")) {\n            if(word.startsWith(\"I\"\
    )) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnqx13o98.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\".toRegex).map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0bhr2w0x.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp0bhr2w0x.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex).map(_.toLowerCase)\n\e[31m\e[31m   |\e[0m        \
    \                        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \                 value toRegex is not a member of String\n2 errors found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgjvany7h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").toList.foreach(boredoms += _)\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoqhkcgyp.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomWords = sentence.split(\"\\\\s+\").filter(_.startsWith(\"\
    i\"))\n            boredomWords.foreach { boredomWord =>\n                boredoms\
    \ += (boredomWord -> 1L)\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe13lae2g.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\"\\\\W+\")\n        for(w <- words) {\n           \
    \ if(w.startsWith(\"I\")) {\n                boredoms += w\n            }\n  \
    \      }\n        boredoms.size\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj5tadiyq.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\".toRegex)\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8v2jgkfl.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp8v2jgkfl.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n2 errors found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomWords = sentence.split(\"\\\\s+\").filter(_.startsWith(\"\
    i\"))\n            boredomWords.foreach { boredomWord =>\n                boredoms\
    \ += (boredomWord -> 1L)\n            }\n        }\n        boredoms.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptyda_r0u.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomIndex = sentence.indexOf(\"i\")\n            if(boredomIndex\
    \ != -1){\n                boredoms += sentence\n            }\n        })\n \
    \       boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzkeglg04.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach(boredoms += _)\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2g990bgu.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence =>\
    \ {\n            val boredomWords = sentence.split(\"I\").length\n           \
    \ boredoms += boredomWords\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg1ecj2hn.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomIndex = sentence.indexOf(\"i\")\n            if(boredomIndex\
    \ >= 0) {\n                boredoms.add(sentence)\n            }\n        })\n\
    \        boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpli48txs1.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk696g7b7.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence =>\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        })\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptaqu0d26.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms.add(sentence.substring(0,boredomStart))\n\
    \            }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp70__82ai.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793339
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomIndex = sentence.indexOf(\"i\")\n    \
    \        if (boredomIndex > 0) {\n                boredoms += sentence\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvjqjt7hs.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793339
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpph94t7i3.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            val boredom:\
    \ String = s.substring(0, 3)\n            boredoms += (boredom -> 1L)\n      \
    \  }\n        boredoms.values.sum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppu82zi40.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgjvany7h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val words = S.split(\"\\\\W+\")\n        words.foreach(word => {\n  \
    \          val boredom = 0\n            if (word.startsWith(\"I\")) {\n      \
    \          boredom += 1\n            }\n            boredoms += (word -> boredom)\n\
    \        })\n        boredoms.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8gw07ghv.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8gw07ghv.scala:18:24\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m                boredom +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m              value += is not a member of Int - did you mean boredom.!=?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomWords = sentence.split(\"i\").map(_.toLowerCase)\n\
    \            boredomWords.foreach(word => {\n                boredoms += word\n\
    \            })\n        })\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4fiwu16n.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val sentences = S.split(\"[.?!]\".toRegex)\n        sentences.foreach\
    \ { sentence =>\n            val words = sentence.split(\"\\\\s\".toRegex)\n \
    \           words.foreach { word =>\n                if (word.startsWith(\"I\"\
    )) {\n                    boredoms += (word -> 1L)\n                }\n      \
    \      }\n        }\n        boredoms.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8v3bapaz.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8v3bapaz.scala:14:40\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36msentences\e[0m = S.split(\e[31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e\
    [0m                                ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                           value toRegex is not a member of String\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp8v3bapaz.scala:16:45 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[36mwords\e[0m = sentence.split(\e\
    [31m\"\\\\s\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                             \
    \    value toRegex is not a member of String\n3 errors found\n"
  stdout: ''
  timestamp: 1659793343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\"\\\\s+\")\n        for(w <- words) {\n           \
    \ if(w.startsWith(\"I\")) {\n                boredoms += w\n            }\n  \
    \      }\n        boredoms.size\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqgjeywa.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach(boredoms += _)\n        boredoms.size\
    \ match {\n            case 0 => 0\n            case 1 => 1\n            case\
    \ _ => boredoms.size\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk21c8un3.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\"\\\\.\")\n        for(word <- words) {\n         \
    \   if(word.startsWith(\"I\")) {\n                boredoms += word\n         \
    \   }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt_s1n8e.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach(s => {\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1zmw3uea.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpciyc6gk_.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpciyc6gk_.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\".toRegex)\n        sentences.foreach {\
    \ sentence =>\n            val boredomStart = sentence.indexOf(\"I\".toChar)\n\
    \            if (boredomStart != -1) {\n                boredoms += sentence\n\
    \            }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhq4h5x7.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpqhq4h5x7.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqhq4h5x7.scala:16:52\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m\
    \ \e[36mboredomStart\e[0m = sentence.indexOf(\e[31m\"I\"\e[0m.toChar)\n\e[31m\e\
    [31m   |\e[0m                                                ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                  value toChar is not a member\
    \ of String\n3 errors found\n"
  stdout: ''
  timestamp: 1659793343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\"\\\\W+\")\n        for(word <- words) {\n        \
    \    if(word.startsWith(\"I\")) {\n                boredoms += word\n        \
    \    }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6o9_qw55.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpph94t7i3.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793341
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence =>\
    \ {\n            val words = sentence.split(\" \")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq5rltrqv.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach(boredoms += _)\n        boredoms.count(_\
    \ == \"I\")\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4j4c6q05.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.toList.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzlf2nvwx.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.startsWith(\"I\")\n          \
    \  if (boredomStart) {\n                boredoms.add(sentence)\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuazgaqck.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach(word => {\n            if (word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        })\n       \
    \ boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvj1ym83c.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach(s => {\n            val boredom:\
    \ String = s.substring(0, s.indexOf(\"I\"))\n            boredoms += (boredom\
    \ -> 1L)\n        })\n        boredoms.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz2mzcf62.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5d02ta1d.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart >= 0) {\n                boredoms += sentence\n    \
    \        }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpslhx8okr.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) boredoms += sentence\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpon2es6zk.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomIndex = sentence.indexOf(\"i\")\n            if(boredomIndex\
    \ >= 0) {\n                boredoms.add(sentence)\n            }\n        })\n\
    \        boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpli48txs1.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomWords = sentence.split(\"\\\\s+\").filter(word\
    \ => word.startsWith(\"i\"))\n            boredomWords.foreach(word => boredoms\
    \ += (word -> 1L))\n        })\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkejutuz2.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.startsWith(\"I\")\n          \
    \  val boredomEnd = sentence.endsWith(\"I\")\n            if (boredomStart &&\
    \ boredomEnd) {\n                boredoms += sentence\n            }\n       \
    \ })\n        boredoms.size\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"\
    bIt\")) == (0l));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a\
    \ walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgcddd_jo.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu1w1eg9n.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomIndex = sentence.indexOf(\"i\")\n            if\
    \ (boredomIndex != -1) {\n                boredoms.add(sentence)\n           \
    \ }\n        })\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdo1lzhww.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach { sentence =>\n            val\
    \ boredom: String = sentence.takeWhile(_.isLetter).mkString.toLowerCase\n    \
    \        boredoms += (boredom -> 1L)\n        }\n        boredoms.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfum9cfyg.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\".toRegex)\n        sentences.foreach(sentence\
    \ => {\n            val words = sentence.split(\" \".toRegex)\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppv5exe0c.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmppv5exe0c.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppv5exe0c.scala:16:43\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m\
    \ \e[36mwords\e[0m = sentence.split(\e[31m\" \"\e[0m.toRegex)\n\e[31m\e[31m  \
    \ |\e[0m                                       ^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                 value toRegex is not a member of String\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659793344
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach { sentence =>\n            val boredomStart\
    \ = sentence.startsWith(\"I\")\n            if (boredomStart) {\n            \
    \    boredoms += sentence\n            }\n        }\n        boredoms.size\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgszm0i_9.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\"\\\\.\")\n        for(word <- words) {\n         \
    \   if(word.startsWith(\"I\")) {\n                boredoms += word\n         \
    \   }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt_s1n8e.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\".toRegex)\n        for (sentence <-\
    \ sentences) {\n            val boredomStart = sentence.indexOf(\"I\".toChar)\n\
    \            if (boredomStart != -1) {\n                boredoms += sentence\n\
    \            }\n        }\n        boredoms.toList.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0m7wacxc.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp0m7wacxc.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0m7wacxc.scala:16:52\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m\
    \ \e[36mboredomStart\e[0m = sentence.indexOf(\e[31m\"I\"\e[0m.toChar)\n\e[31m\e\
    [31m   |\e[0m                                                ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                  value toChar is not a member\
    \ of String\n3 errors found\n"
  stdout: ''
  timestamp: 1659793347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgxrk3g8q.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.!?]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            val boredomWords = sentence.split(\"\\\\s+\").filter(_.startsWith(\"\
    I\"))\n            boredomWords.foreach(word => boredoms += word)\n        })\n\
    \        boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6f65ibkr.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\".toRegex)\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8v2jgkfl.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp8v2jgkfl.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n2 errors found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\" \")\n        for (w <- words) {\n            if\
    \ (w.startsWith(\"I\")) {\n                boredoms += w\n            }\n    \
    \    }\n        boredoms.size\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_ckevje.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwzynw2m5.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"[.?!]\").foreach { s =>\n            if (s.startsWith(\"I\"))\
    \ {\n                boredoms += s\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1vatk1q8.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        }\n        boredoms.toList.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp49dmzdea.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgjvany7h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach(boredoms += _)\n        boredoms.count(_\
    \ == \"I\")\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmy492j97.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val words = S.split(\"\\\\.\")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1d5ge5yy.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            val boredom\
    \ = (s.startsWith(\"I\")).longValue\n            boredoms += (s -> boredom)\n\
    \        }\n        boredoms.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe0vchruw.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe0vchruw.scala:15:46\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m\
    \ \e[36mboredom\e[0m = (s.startsWith(\e[31m\"I\"\e[0m)).longValue\n\e[31m\e[31m\
    \   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                          value longValue is not a member of Boolean\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"[.?!]\").foreach(s => {\n            val boredom = (s.startsWith(\"\
    I\"))\n            if (boredom) boredoms += s\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp88tjgazb.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.!?]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4s_xzgtx.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     for(word <- S.split(\"\\\\.\")) {\n            val boredom = (word startsWith\
    \ \"I\")\n            boredoms += boredom\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqqxmcy2e.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793346
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\".toRegex)\n        sentences.foreach(sentence\
    \ => {\n            val words = sentence.split(\" \".toRegex)\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppv5exe0c.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmppv5exe0c.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppv5exe0c.scala:16:43\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m\
    \ \e[36mwords\e[0m = sentence.split(\e[31m\" \"\e[0m.toRegex)\n\e[31m\e[31m  \
    \ |\e[0m                                       ^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                 value toRegex is not a member of String\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659793344
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredoms = sentence.split(\"i\").map(_.toLowerCase)\n\
    \            boredoms.foreach(boredom => {\n                boredoms += boredom\n\
    \            })\n        })\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpei11nclz.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpei11nclz.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                boredoms += boredom\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   value += is not a member\
    \ of Array[String] - did you mean boredoms.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659793347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomWords = sentence.split(\"\\\\s+\").filter(_.startsWith(\"\
    i\"))\n            boredomWords.foreach(boredomWord => {\n                boredoms.add(boredomWord)\n\
    \            })\n        })\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptcm0rynm.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793346
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     for(word <- S.split(\" \")) {\n            boredoms += word\n        }\n\
    \        boredoms.count(_ == \"I\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaxkd6f2r.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793346
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomIndex = sentence.indexOf(\"i\")\n            if\
    \ (boredomIndex >= 0) {\n                boredoms.add(sentence.substring(0,boredomIndex))\n\
    \            }\n        })\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplbo5w4c1.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793346
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence =>\
    \ {\n            val words = sentence.split(\" \")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq5rltrqv.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\".toRegex)\n        for (sentence <-\
    \ sentences) {\n            if (sentence.startsWith(\"I\")) {\n              \
    \  boredoms += sentence\n            }\n        }\n        boredoms.toList.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqfbm_av0.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpqfbm_av0.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n2 errors found\n"
  stdout: ''
  timestamp: 1659793347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        }\n        boredoms.toList.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp49dmzdea.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            val\
    \ boredomEnd = sentence.indexOf(\"i\", boredomStart + 1)\n            boredoms\
    \ += (sentence.substring(boredomStart, boredomEnd))\n        })\n        boredoms.count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3vlkfqom.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk696g7b7.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgjvany7h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5d02ta1d.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     for(word <- S.split(\"\\\\.\")) {\n            val boredom = (word startsWith\
    \ s\"I\")\n            if(boredom) boredoms += word\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv7t_mjza.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793346
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach(boredoms += _)\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2g990bgu.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach(s => {\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1zmw3uea.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgjvany7h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     for(word <- S.split(\" \")){\n            if(word.startsWith(\"I\")){\n\
    \                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppkp18gio.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredoms = sentence.split(\"i\").map(_.toLowerCase)\n\
    \            boredoms.foreach(boredom => {\n                boredoms += boredom\n\
    \            })\n        })\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpei11nclz.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpei11nclz.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                boredoms += boredom\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   value += is not a member\
    \ of Array[String] - did you mean boredoms.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659793347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu1w1eg9n.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.toList.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprzg_mugd.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgjvany7h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw_6mfur6.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val words = S.split(\" \")\n        for(word <- words) {\n          \
    \  if(word.startsWith(\"I\")) {\n                boredoms += word\n          \
    \  }\n        }\n        boredoms.toList.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzlf2nvwx.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val words = S.split(\" \")\n        val boredomWords = words.filter(_.startsWith(\"\
    I\"))\n        boredomWords.foreach(boredoms += _)\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvy6631id.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence =>\
    \ {\n            val words = sentence.split(\" \")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq5rltrqv.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"[.?!]\").foreach { s =>\n            if (s.startsWith(\"I\"))\
    \ {\n                boredoms += s\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1vatk1q8.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk696g7b7.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.toList.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo_maik8i.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence => {\n\
    \            val words = sentence.split(\" \")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaxc29geo.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"[.?!]\").foreach(s => {\n            if (s.startsWith(\"I\"))\
    \ {\n                boredoms += s\n            }\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyat3u7xp.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793348
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\"\\\\.\")\n        for(w <- words) {\n            if(w.startsWith(\"\
    I\")) {\n                boredoms += w\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9pimcxoq.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793349
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ S.split(\"\\\\.|\\\\?|\\\\!\").toList.foreach(s => {\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_n1v8cgw.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793349
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomIndex = sentence.indexOf(\"i\")\n            if(boredomIndex\
    \ > 0) {\n                boredoms.add(sentence)\n            }\n        })\n\
    \        boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphvgpsju1.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793349
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomWords = sentence.split(\"\\\\s+\").filter(_.startsWith(\"\
    i\"))\n            boredomWords.foreach { boredomWord =>\n                boredoms.put(boredomWord,\
    \ boredoms.get(boredomWord).map(x => x + 1).toLong)\n            }\n        }\n\
    \        boredoms.values.sum\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7094iz3s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793349
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"[.?!]\").foreach(word => {\n            if (word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        })\n       \
    \ boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_195j_lr.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793349
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"I\")\n    \
    \        if (boredomStart != -1) {\n                boredoms.add(sentence)\n \
    \           }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnpmt_v2j.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793349
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgjvany7h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            val boredomWords = sentence.split(\"\\\\s+\").filter(_.startsWith(\"\
    I\"))\n            boredomWords.foreach(word => {\n                boredoms +=\
    \ (word -> 1L)\n            })\n        })\n        boredoms.values.sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"))\
    \ == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy4v3t7c1.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793350
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart >= 0) {\n                boredoms += sentence\n    \
    \        }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpslhx8okr.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            val boredom:\
    \ String = s.substring(0, 3)\n            boredoms += boredom -> (boredoms.get\
    \ boredom).getOrElse(0) + 1\n        }\n        boredoms.values.sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) ==\
    \ (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpdanj9p65.scala:16:56 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            boredoms += boredom -> (boredoms.get boredom).getOrElse(\e\
    [31m0\e[0m) + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                            \
    \                            ^\e[0m\n\e[31m   |\e[0m                         \
    \              expression expected but \e[31m')'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdanj9p65.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793349
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredoms = sentence.split(\"\\\\s+\").filter(_.startsWith(\"\
    i\")).map(_.toLowerCase).toSet\n            boredoms.foreach(boredom => boredoms\
    \ += (boredom -> 1L))\n        })\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe8ok0aoy.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe8ok0aoy.scala:17:49\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            boredoms.foreach(\e\
    [36mboredom\e[0m => boredoms += (boredom -> \e[31m1L\e[0m))\n\e[31m\e[31m   |\e\
    [0m                                        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \    value += is not a member of Set[String] - did you mean boredoms.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659793351
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomWords = sentence.split(\"i\").map(_.toLowerCase)\n\
    \            boredomWords.foreach { word =>\n                if (word == \"i\"\
    ) {\n                    boredoms += \"i\"\n                }\n            }\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj_fpcls1.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793350
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\".toList)\n        sentences.foreach(sentence\
    \ => {\n            val words = sentence.split(\" \")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw4htszpu.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpw4htszpu.scala:14:40 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toList)\n\e[31m\e[31m   |\e[0m                            \
    \    ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                Found:\
    \    List[Char]\n\e[31m   |\e[0m                                Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793351
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgxrk3g8q.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence =>\
    \ {\n            val boredomWords = sentence.split(\"I\").length\n           \
    \ boredoms += boredomWords\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg1ecj2hn.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence => {\n\
    \            val words = sentence.split(\" \")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaxc29geo.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpciyc6gk_.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms.add(sentence.substring(0,boredomStart))\n\
    \            }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp70__82ai.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793339
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgjvany7h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        sentences.foreach { sentence\
    \ =>\n            val words = sentence.split(\"\\\\s+\")\n            words.foreach\
    \ { word =>\n                if (word.startsWith(\"I\")) {\n                 \
    \   boredoms += word\n                }\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp14vf78gp.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793350
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            val\
    \ boredomEnd = sentence.indexOf(\"i\", boredomStart + 1)\n            boredoms.add(sentence.substring(boredomStart,\
    \ boredomEnd))\n        })\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ua1f6p1.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793350
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgxrk3g8q.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\"\\\\.\")\n        val boredomWords = words.filter(_.startsWith(\"\
    I\"))\n        boredomWords.foreach(boredoms += _)\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphei6gmh_.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793350
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        for(word <- S.split(\"\\\\.\")) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.toList.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppajbdkjt.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793350
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      if(word.startsWith(\"I\")) {\n                boredoms += (word -> 1L)\n\
    \            }\n        }\n        boredoms.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwjzxku4h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793350
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words){\n            if(word.startsWith(\"\
    I\")){\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2j0erxdm.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793350
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val words = S.split(\"\\\\.\")\n        for(word <- words) {\n      \
    \      val boredomWord = word.startsWith(\"I\")\n            if(boredomWord) {\n\
    \                boredoms += (word -> 1L)\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp60ijam7d.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793350
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgxrk3g8q.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            boredoms += s\n\
    \        }\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2mlkjn2r.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793351
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwzynw2m5.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\".toRegex)\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8v2jgkfl.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp8v2jgkfl.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n2 errors found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu1w1eg9n.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        S.split(\"[.?!]\").foreach { s =>\n            if (s.startsWith(\"I\"\
    )) {\n                boredoms += s\n            }\n        }\n        boredoms.toList.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1g4mw0b9.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\".toRegex)\n        sentences.foreach(sentence\
    \ => {\n            val boredomWords = sentence.split(\"I\".toRegex).length\n\
    \            boredoms += boredomWords\n        })\n        boredoms.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwekregym.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpwekregym.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msentences\e[0m = S.split(\e\
    [31m\"[.?!]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                           \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                value\
    \ toRegex is not a member of String\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwekregym.scala:16:50\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m\
    \ \e[36mboredomWords\e[0m = sentence.split(\e[31m\"I\"\e[0m.toRegex).length\n\e\
    [31m\e[31m   |\e[0m                                              ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                 value toRegex is not a member\
    \ of String\n3 errors found\n"
  stdout: ''
  timestamp: 1659793351
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                boredoms +=\
    \ sentence\n            }\n        }\n        boredoms.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp86qb32js.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793350
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk696g7b7.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk696g7b7.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"I\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpey_e8ckb.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793351
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.!?]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4wwbk2iq.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793351
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            if (sentence.startsWith(\"i\")) {\n                boredoms\
    \ += sentence\n            }\n        })\n        boredoms.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isBored((\"Hello world\")) == (0l));\n\
    \    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5d02ta1d.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach(s => {\n            val boredom:\
    \ String = s.substring(0, s.indexOf(\"I\"))\n            boredoms += boredom ->\
    \ (boredoms.get boredom).getOrElse(0) + 1\n        })\n        boredoms.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp8cjq5om1.scala:16:56 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            boredoms += boredom -> (boredoms.get boredom).getOrElse(\e\
    [31m0\e[0m) + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                            \
    \                            ^\e[0m\n\e[31m   |\e[0m                         \
    \              expression expected but \e[31m')'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp8cjq5om1.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793351
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomIndex = sentence.indexOf(\"i\")\n    \
    \        if (boredomIndex > 0) {\n                boredoms += sentence\n     \
    \       }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvjqjt7hs.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793339

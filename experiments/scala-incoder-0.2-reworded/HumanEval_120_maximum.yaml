name: HumanEval_120_maximum
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a list arr of integers and a positive integer k, return a sorted list\
  \ \n    // of length k with the maximum k numbers in arr.\n    // Example 1:\n \
  \   // >>> maximum((List[Long](-3l.toLong, -4l.toLong, 5l.toLong)), (3l))\n    //\
  \ (List[Long](-4l.toLong, -3l.toLong, 5l.toLong))\n    // Example 2:\n    // >>>\
  \ maximum((List[Long](4l.toLong, -4l.toLong, 4l.toLong)), (2l))\n    // (List[Long](4l.toLong,\
  \ 4l.toLong))\n    // Example 3:\n    // >>> maximum((List[Long](-3l.toLong, 2l.toLong,\
  \ 1l.toLong, 2l.toLong, -1l.toLong, -2l.toLong, 1l.toLong)), (1l))\n    // (List[Long](2l.toLong))\n\
  \    // Note:\n    // 1. The length of the list will be in the range of [1, 1000].\n\
  \    // 2. The elements in the list will be in the range of [-1000, 1000].\n   \
  \ // 3. 0 <= k <= len(arr)\n    def maximum(arr : List[Long], k : Long) : List[Long]\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(maximum((List[Long](-3l.toLong,\
  \ -4l.toLong, 5l.toLong)), (3l)).equals((List[Long](-4l.toLong, -3l.toLong, 5l.toLong))));\n\
  \    assert(maximum((List[Long](4l.toLong, -4l.toLong, 4l.toLong)), (2l)).equals((List[Long](4l.toLong,\
  \ 4l.toLong))));\n    assert(maximum((List[Long](-3l.toLong, 2l.toLong, 1l.toLong,\
  \ 2l.toLong, -1l.toLong, -2l.toLong, 1l.toLong)), (1l)).equals((List[Long](2l.toLong))));\n\
  \    assert(maximum((List[Long](123l.toLong, -123l.toLong, 20l.toLong, 0l.toLong,\
  \ 1l.toLong, 2l.toLong, -3l.toLong)), (3l)).equals((List[Long](2l.toLong, 20l.toLong,\
  \ 123l.toLong))));\n    assert(maximum((List[Long](-123l.toLong, 20l.toLong, 0l.toLong,\
  \ 1l.toLong, 2l.toLong, -3l.toLong)), (4l)).equals((List[Long](0l.toLong, 1l.toLong,\
  \ 2l.toLong, 20l.toLong))));\n    assert(maximum((List[Long](5l.toLong, 15l.toLong,\
  \ 0l.toLong, 3l.toLong, -13l.toLong, -8l.toLong, 0l.toLong)), (7l)).equals((List[Long](-13l.toLong,\
  \ -8l.toLong, 0l.toLong, 0l.toLong, 3l.toLong, 5l.toLong, 15l.toLong))));\n    assert(maximum((List[Long](-1l.toLong,\
  \ 0l.toLong, 2l.toLong, 5l.toLong, 3l.toLong, -10l.toLong)), (2l)).equals((List[Long](3l.toLong,\
  \ 5l.toLong))));\n    assert(maximum((List[Long](1l.toLong, 0l.toLong, 5l.toLong,\
  \ -7l.toLong)), (1l)).equals((List[Long](5l.toLong))));\n    assert(maximum((List[Long](4l.toLong,\
  \ -4l.toLong)), (2l)).equals((List[Long](-4l.toLong, 4l.toLong))));\n    assert(maximum((List[Long](-10l.toLong,\
  \ 10l.toLong)), (2l)).equals((List[Long](-10l.toLong, 10l.toLong))));\n    assert(maximum((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, -23l.toLong, 243l.toLong, -400l.toLong, 0l.toLong)), (0l)).equals((List[Long]())));\n\
  \    }\n\n}\n"
completions: ["        val arr = arr.toList\n        val n = arr.length\n        val\
    \ max = new Array[Long](k)\n        var i = 0\n        while (i < k) {\n     \
    \       if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n        \
    \        i += 1\n            } else {\n                max(i) = arr(i + 1)\n \
    \               i += 1\n            }\n        }\n        max.toList", "     \
    \   val maxList = mutable.ListBuffer.empty[Long]\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxKList = mutable.ListBuffer.empty[Long]\n\
    \        val maxKLength = maxKList.length\n        val maxKK = maxKLength / 2\n\
    \        val maxKKList = mutable.ListBuffer.empty[Long]\n        val maxKKLength\
    \ = maxKKList.length\n        val maxKKK = maxKKLength / 2\n        val maxKKKList\
    \ = mutable.ListBuffer.empty[Long]\n        val maxKKKLength = maxKKKList.length\n\
    \        val maxKKKK = maxKKKLength / 2\n        val maxKKKKList = mutable.ListBuffer.empty[Long]\n\
    \        val maxKKKKLength = maxKKKKList.length\n        val maxKKKKK = maxKKKKLength\
    \ / 2\n        val maxKKKKKList = mutable.ListBuffer.empty[Long]\n        val\
    \ maxKKKKKLength = maxKKKKKList.length\n        val maxKKKKKK = maxKKKKKLength\
    \ / 2\n        val maxKKKKKKList = mutable.ListBuffer.empty[Long]\n        val\
    \ maxKKKKKKLength = maxKKKKKKList.length\n        val maxKKKKKKK = maxKKKKKKLength\
    \ / 2\n        val maxKKKKKKKList = mutable.ListBuffer.empty[Long]\n        val\
    \ maxKKKKKKKLength = maxKKKKKKKList.length\n        val maxKKKKKKKK = maxKKKKKKKKLength\
    \ / 2\n        val maxKKKKKKKKList = mutable.ListBuffer.empty[Long]\n        val\
    \ maxKKKKKKKKLength = maxKKKKKKKKKList.length\n        val maxKKKKKKKKK = maxKKKKKKKKKLength\
    \ / 2\n        val maxKKKKKKKKKList = mutable.ListBuffer.empty[Long]\n       \
    \ val maxKKKKKKKKKLength = maxKKKKKKKKKKList.length\n        val maxKK", "   \
    \     val arr = arr.toList\n        val len = arr.length\n        val max = new\
    \ Array[Long](k)\n        val maxIndex = new Array[Int](k)\n        val maxIndexMap\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap3 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap4 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap5\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap6 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap7 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap8 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap9\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap10 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap11 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap12 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap13\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap14 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap15 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap16 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap17\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap18 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap19 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap20 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap21\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap22 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap23 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap24 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap25\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap26 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap27 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap28 = new mutable.HashMap[Long, Int]()\n        val ", "   \
    \     val maxList = mutable.ArrayBuffer.empty[Long]\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length", "        val maxList = mutable.ListBuffer.empty[Long]\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        val maxLength = arr.length",
  "        val result = new mutable.ListBuffer[Long]()\n        val maxElem = arr.max\n\
    \        val maxIndex = arr.indexWhere(elem => elem == maxElem)\n        val maxIndexList\
    \ = arr.take(maxIndex).toList\n        val maxIndexListLength = maxIndexList.length\n\
    \        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = max", "        val arr = arr.toList\n        val len = arr.length\n      \
    \  val max = new Array[Long](k)\n        var i = 0\n        while (i < k) {\n\
    \            var maxIndex = 0\n            var maxValue = arr(0)\n           \
    \ var j = 0\n            while (j < len) {\n                if (arr(j) > maxValue)\
    \ {\n                    maxValue = arr(j)\n                    maxIndex = j\n\
    \                }\n                j += 1\n            }\n            max +=\
    \ maxIndex\n            i += 1\n        }\n        max.toList", "        val arr\
    \ = arr.sortBy(_).reverse\n        val max = new mutable.PriorityQueue[Long]()\n\
    \        val maxSize = new mutable.PriorityQueue[Long]()\n        var i = 0\n\
    \        while (i < arr.length) {\n            if (max.size < k) {\n         \
    \       max += arr(i)\n                maxSize += arr(i)\n                i +=\
    \ 1\n            } else {\n                if (arr(i) > max.head) {\n        \
    \            max += arr(i)\n                    maxSize += arr(i)\n          \
    \          i += 1\n                } else {\n                    maxSize += arr(i)\n\
    \                }\n            }\n        }\n        val result = new mutable.PriorityQueue[Long]()\n\
    \        while (maxSize.size > 0) {\n            result += maxSize.dequeue()\n\
    \        }\n        return result.toList", "        val arr = arr.sortWith(_ <\
    \ _)\n        val maxK = arr.take(k).toList\n        val maxKIndex = arr.lastIndexWhere(_\
    \ == maxK(0))\n        val maxKIndexList = maxKIndex.until(maxKIndex.drop(1))\n\
    \        val maxKList = maxKIndexList.map(_ - 1).map(arr(_))\n        val maxKListIndex\
    \ = maxKList.lastIndexWhere(_ == maxK(0))\n        val maxKListIndexList = maxKListIndex.until(maxKListIndex.drop(1))\n\
    \        val maxKListList = maxKListIndexList.map(_ - 1).map(arr(_))\n       \
    \ val maxKListListIndex = maxKListList.lastIndexWhere(_ == maxK(0))\n        val\
    \ maxKListListIndexList = maxKListListIndex.until(maxKListListIndex.drop(1))\n\
    \        val maxKListListList = maxKListListIndexList.map(_ - 1).map(arr(_))\n\
    \        val maxKListListListIndex = maxKListListList.lastIndexWhere(_ == maxK(0))\n\
    \        val maxKListListListIndexList = maxKListListListIndex.until(maxKListListListIndex.drop(1))\n\
    \        val maxKListListListList = maxKListListListIndexList.map(_ - 1).map(arr(_))\n\
    \        val maxKListListListListIndex = maxKListListListList.lastIndexWhere(_\
    \ == maxK(0))\n        val maxKListListListListIndexList = maxKListListListListIndex.until(maxKListListListListIndex.drop(1))\n\
    \        val maxKListListListListList = maxKListListListListIndexList.map(_ -\
    \ 1).map(arr(_))\n        val maxKListListListListIndexList = maxKListListListListIndex.until(maxKListListListListIndex.drop(1))\n\
    \        val maxKListListListListList = maxKListListListListIndexList.map(_ -\
    \ 1).map(arr(_))\n        val maxKListListListListListIndex = maxKListListListListList.lastIndexWhere(_\
    \ == maxK(0))\n        val maxKListListListListListIndexList = maxKListListListListListIndex.until(maxKListListListListListIndex.drop(1))\n\
    \        val maxKListListListListListList = maxKListListListListListIndexList.map(_\
    \ - 1).map(arr(_))\n        val maxKListListListListListIndex", "        val arr\
    \ = arr.sortBy(_.toLong)\n        val maxArr : List[Long] = new Array[Long](k)\n\
    \        var i = 0\n        var j = 0\n        while (i < arr.length) {\n    \
    \        if (j == k) {\n                maxArr(i) = arr(i)\n                i\
    \ += 1\n                j = 0\n            } else {\n                if (arr(i)\
    \ > arr(j)) {\n                    maxArr(i) = arr(i)\n                    i +=\
    \ 1\n                } else {\n                    maxArr(i) = arr(j)\n      \
    \              j += 1\n                }\n            }\n        }\n        maxArr",
  "        val arr = arr.sortBy(x => x)\n        val max = new Array[Long](k)\n  \
    \      var i = 0\n        while (i < k) {\n            if (arr(i) > arr(i + 1))\
    \ {\n                max(i) = arr(i)\n                i += 1\n            } else\
    \ {\n                max(i) = arr(i + 1)\n                i += 1\n           \
    \ }\n        }\n        max.toList", "        val arr = arr.sortBy(-_)\n     \
    \   val max = arr.take(k).toList\n        val rest = arr.drop(k)\n        rest\
    \ match {\n            case Nil => max\n            case _ => maximum(max, rest.max)\n\
    \        }", "        val n = arr.length\n        val m = math.min(k, n)\n   \
    \     val maxList = mutable.ArrayBuffer.empty[Long]\n        val maxValue = arr(0)\n\
    \        for(i <- 1 to m) {\n            if(arr(i) > maxValue) {\n           \
    \     maxValue = arr(i)\n            }\n        }\n        maxList += maxValue\n\
    \        for(i <- 1 to n) {\n            if(arr(i) > maxValue) {\n           \
    \     maxValue = arr(i)\n            }\n        }\n        maxList += maxValue\n\
    \        maxList.toList", "        val arr = arr.sortBy(-_)\n        val len =\
    \ arr.length\n        val max = new Array[Long](k)\n        var i = 0\n      \
    \  while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n                max(i)\
    \ = arr(i)\n                i += 1\n            } else {\n                max(i)\
    \ = arr(i + 1)\n                i += 1\n            }\n        }\n        max.toList",
  "        val maxList = mutable.ListBuffer.empty[Long]\n        var maxLength = 0\n\
    \        var maxValue = 0\n        var currentLength = 0\n        var currentValue\
    \ = 0\n        var currentMax = 0\n        for(i <- 0 until arr.length) {\n  \
    \          currentLength = arr(i).toLong\n            currentValue = arr(i).toLong\n\
    \            currentMax = currentValue\n            for(j <- 0 until currentLength)\
    \ {\n                if(currentValue > currentMax) {\n                    currentMax\
    \ = currentValue\n                }\n                currentValue = currentValue\
    \ * 10\n            }\n            if(currentLength > maxLength) {\n         \
    \       maxLength = currentLength\n                maxValue = currentMax\n   \
    \         }\n        }\n        if(maxLength < k) {\n            for(i <- 0 until\
    \ k - maxLength) {\n                maxList += maxValue\n            }\n     \
    \   }\n        else {\n            for(i <- 0 until maxLength) {\n           \
    \     maxList += maxValue\n            }\n        }\n        return maxList.toList",
  "        val arr = arr.sortWith(_ > _)\n        val n = arr.length\n        val\
    \ max = new Array[Long](k)\n        var i = 0\n        while (i < k) {\n     \
    \       if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n        \
    \        i += 1\n            } else {\n                max(i) = arr(i + 1)\n \
    \               i += 1\n            }\n        }\n        max.toList", "     \
    \   val arr = arr.sortBy(_.toLong)\n        val maxList = arr.take(k)\n      \
    \  val maxList2 = arr.drop(k)\n        val maxList3 = arr.takeRight(k)\n     \
    \   val maxList4 = arr.dropRight(k)\n        val maxList5 = arr.take(k)\n    \
    \    val maxList6 = arr.drop(k)\n        val maxList7 = arr.takeRight(k)\n   \
    \     val maxList8 = arr.dropRight(k)\n        val maxList9 = arr.take(k)\n  \
    \      val maxList10 = arr.drop(k)\n        val maxList11 = arr.takeRight(k)\n\
    \        val maxList12 = arr.dropRight(k)\n        val maxList13 = arr.take(k)\n\
    \        val maxList14 = arr.drop(k)\n        val maxList15 = arr.takeRight(k)\n\
    \        val maxList16 = arr.dropRight(k)\n        val maxList17 = arr.take(k)\n\
    \        val maxList18 = arr.drop(k)\n        val maxList19 = arr.takeRight(k)\n\
    \        val maxList20 = arr.dropRight(k)\n        val maxList21 = arr.take(k)\n\
    \        val maxList22 = arr.drop(k)\n        val maxList23 = arr.takeRight(k)\n\
    \        val maxList24 = arr.dropRight(k)\n        val maxList25 = arr.take(k)\n\
    \        val maxList26 = arr.drop(k)\n        val maxList27 = arr.takeRight(k)\n\
    \        val maxList28 = arr.dropRight(k)\n        val maxList29 = arr.take(k)\n\
    \        val maxList30 = arr.drop(k)\n        val maxList31 = arr.takeRight(k)\n\
    \        val maxList32 = arr.dropRight(k)\n        val maxList33 = arr.take(k)\n\
    \        val maxList34 = arr.drop(k)\n        val maxList35 = arr.takeRight(k)\n\
    \        val maxList36 = arr.dropRight(k)\n        val maxList37 = arr.take(k)\n\
    \        val maxList38 = arr.drop(k)\n        val maxList39 = arr.takeRight(k)\n\
    \        val maxList40 = arr.dropRight(k)\n        val maxList41 = arr.take(k)\n\
    \        val maxList42 = arr.drop(k)\n        val maxList43 = arr.takeRight(k)\n\
    \        val maxList44 = arr.dropRight(k)\n        val maxList45 = arr.take",
  "        val arr = arr.sortBy(-_)\n        val maxK = arr.take(k).toList\n     \
    \   val rest = arr.drop(k)\n        val restMaxK = maximum(rest, k)\n        restMaxK\
    \ ++ maxK", "        val arr = arr.sortBy(-_)\n        val len = arr.length\n\
    \        val max = new Array[Long](k)\n        var i = 0\n        while (i < k)\
    \ {\n            if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n\
    \                i += 1\n            } else {\n                max(i) = arr(i\
    \ + 1)\n                i += 1\n            }\n        }\n        if (arr.length\
    \ < k) {\n            val arr = new Array[Long](k)\n            i = 0\n      \
    \      while (i < k) {\n                arr(i) = arr(i + 1)\n                i\
    \ += 1\n            }\n        }\n        arr", "        val maxNum = arr.max\n\
    \        val maxNumIndex = arr.indexWhere(x => x == maxNum)\n        val maxNums\
    \ = arr.take(maxNumIndex + 1)\n        val maxNumsIndex = arr.indexWhere(x =>\
    \ x == maxNums)\n        val maxNumsIndex = maxNumsIndex - k\n        val maxNumsIndex\
    \ = maxNumsIndex % arr.length\n        val maxNumsIndex = maxNumsIndex - k\n \
    \       val maxNumsIndex = maxNumsIndex % arr.length\n        val maxNumsIndex\
    \ = maxNumsIndex - k\n        val maxNumsIndex = maxNumsIndex % arr.length\n \
    \       val maxNumsIndex = maxNumsIndex - k\n        val maxNumsIndex = maxNumsIndex\
    \ % arr.length\n        val maxNumsIndex = maxNumsIndex - k\n        val maxNumsIndex\
    \ = maxNumsIndex % arr.length\n        val maxNumsIndex = maxNumsIndex - k\n \
    \       val maxNumsIndex = maxNumsIndex % arr.length\n        val maxNumsIndex\
    \ = maxNumsIndex - k\n        val maxNumsIndex = maxNumsIndex % arr.length\n \
    \       val maxNumsIndex = maxNumsIndex - k\n        val maxNumsIndex = maxNumsIndex\
    \ % arr.length\n        val maxNumsIndex = maxNumsIndex - k\n        val maxNumsIndex\
    \ = maxNumsIndex % arr.length\n        val maxNumsIndex = maxNumsIndex - k\n \
    \       val maxNumsIndex = maxNumsIndex % arr.length\n        val maxNumsIndex\
    \ = maxNumsIndex - k\n        val maxNumsIndex = maxNumsIndex % arr.length\n \
    \       val maxNumsIndex = maxNumsIndex - k\n        val maxNumsIndex = maxNumsIndex\
    \ % arr.length\n        val maxNumsIndex = maxNumsIndex - k\n        val maxNumsIndex\
    \ = maxNumsIndex % arr.length\n        val maxNumsIndex = maxNumsIndex - k\n \
    \       val maxNumsIndex = maxNumsIndex % arr.length\n        val maxNumsIndex\
    \ = maxNumsIndex - k\n        val maxNumsIndex = maxNumsIndex % arr.length\n \
    \       val maxNumsIndex = maxNumsIndex - k\n        val maxNumsIndex = maxNumsIndex\
    \ % arr.length\n        val maxNumsIndex = maxNumsIndex - k\n        val maxNumsIndex\
    \ = maxNumsIndex % arr.length", "        val arr = arr.toList\n        val len\
    \ = arr.length\n        val max = new Array[Long](k)\n        val maxIndex = new\
    \ Array[Int](k)\n        val maxIndexMap = new mutable.HashMap[Long, Int]()\n\
    \        val maxIndexMap2 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap3\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap4 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap5 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap6 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap7\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap8 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap9 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap10 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap11\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap12 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap13 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap14 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap15\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap16 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap17 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap18 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap19\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap20 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap21 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap22 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap23\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap24 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap25 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap26 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap27\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap28 = new mutable.HashMap[Long,\
    \ Int]()\n        val ", "        val maxList = mutable.ArrayBuffer(arr.head)\n\
    \        val maxK = k\n        val maxLength = arr.length\n        val maxIndex\
    \ = arr.indexOfMax\n        val maxValue = arr(maxIndex)\n        val maxIndexList\
    \ = arr.toList\n        val maxIndexListLength = maxIndexList.length\n       \
    \ val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = ", "        val arr = arr.toList\n        val n = arr.size\n        val m\
    \ = arr.max\n        val maxList = Array.ofDim[Long](k)\n        var maxIndex\
    \ = 0\n        var i = 0\n        var j = 0\n        var k = 0\n        while\
    \ (i < n) {\n            if (arr(i) > m) {\n                maxIndex = 0\n   \
    \             while (j < k) {\n                    if (arr(i) > maxList(j)) {\n\
    \                        maxList(j) = arr(i)\n                        maxIndex\
    \ = j\n                    }\n                    j += 1\n                }\n\
    \                i += 1\n            } else {\n                i += 1\n      \
    \      }\n        }\n        maxList", "        val arr = arr.toList\n       \
    \ val len = arr.length\n        val max = new Array[Long](k)\n        val maxIndex\
    \ = new Array[Int](k)\n        val maxIndexMap = new mutable.HashMap[Long, Int]()\n\
    \        val maxIndexMap2 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap3\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap4 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap5 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap6 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap7\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap8 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap9 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap10 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap11\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap12 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap13 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap14 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap15\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap16 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap17 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap18 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap19\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap20 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap21 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap22 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap23\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap24 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap25 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap26 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap27\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap28 = new mutable.HashMap[Long,\
    \ Int]()\n        val ", "        val arr = arr.toList\n        val len = arr.length\n\
    \        val max = new mutable.PriorityQueue[Long]()\n        val maxIndex = new\
    \ mutable.PriorityQueue[Int]()\n        val maxIndexLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLen = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n    \
    \    val maxIndexLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n     \
    \   val maxIndexLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n   \
    \     val maxIndexLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = new\
    \ mutable.PriorityQueue[Int]()\n        val ", "        val arr = arr.toList\n\
    \        val n = arr.length\n        val m = k\n        val max = new Array[Long](m)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var maxIndex\
    \ = 0\n        var maxValue = 0\n        while (i < n) {\n            while (j\
    \ < m && arr(i) < arr(j)) {\n                j += 1\n            }\n         \
    \   if (j == m) {\n                max(i) = arr(i)\n                i += 1\n \
    \               j += 1\n            } else {\n                max(i) = arr(j)\n\
    \                j += 1\n            }\n        }\n        while (j < m) {\n \
    \           max(i) = arr(j)\n            j += 1\n            i += 1\n        }\n\
    \        val maxList = max.toList\n        val maxLength = maxList.length\n  \
    \      if (maxLength > k) {\n            val newMax = maxList.take(k)\n      \
    \      maxList = maxList.drop(k)\n            val newMaxIndex = maxList.indexOf(newMax)\n\
    \            if (newMaxIndex > maxIndex) {\n                maxIndex = newMaxIndex\n\
    \                maxValue = newMax\n            }\n        }\n        if (maxLength\
    \ > k) {\n            val newMax = maxList.take(k)\n            maxList = maxList.drop(k)\n\
    \            val newMaxIndex = maxList.indexOf(newMax)\n            if (newMaxIndex\
    \ > maxIndex) {\n                maxIndex = newMaxIndex\n                maxValue\
    \ = newMax\n            }\n        }\n        if (maxLength > k) {\n         \
    \   val newMax = maxList.take(k)\n            maxList = maxList.drop(k)\n    \
    \        val newMaxIndex = maxList.indexOf(newMax)\n            if (newMaxIndex\
    \ > maxIndex) {\n                maxIndex = newMaxIndex\n                maxValue\
    \ = newMax\n            }\n        }\n        if (maxLength > k) {\n         \
    \   val newMax = maxList.take(k)\n            maxList = maxList.drop(k)\n    \
    \        val newMaxIndex = maxList.indexOf(newMax)\n            if (newMaxIndex\
    \ > maxIndex) {\n                maxIndex = newMaxIndex\n                maxValue\
    \ = newMax\n            }\n        }\n        if (maxLength > k) {\n         \
    \   val newMax = maxList.take(k)\n            maxList = maxList.drop(k)\n    \
    \        val newMaxIndex = maxList.indexOf(newMax)\n            if (newMaxIndex\
    \ > maxIndex) {\n                maxIndex = newMaxIndex\n                maxValue\
    \ = newMax\n            }\n        }\n        if (maxLength > k) {\n         \
    \   val newMax = maxList.take(k)\n            maxList = maxList.drop(k)\n    \
    \        val newMaxIndex = maxList.indexOf(newMax)\n            if (newMaxIndex\
    \ > maxIndex) {\n                maxIndex = newMaxIndex", "        val arr = arr.toList\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ maxIndex = 0\n        var maxValue = 0\n        var maxIndex2 = 0\n        var\
    \ maxValue2 = 0\n        var i = 0\n        var j = 0\n        while (i < len)\
    \ {\n            val value = arr(i)\n            if (maxIndex < k) {\n       \
    \         if (maxIndex2 < k) {\n                    if (maxIndex == k) {\n   \
    \                     maxIndex2 = 0\n                        maxValue2 = maxValue\n\
    \                    }\n                    if (maxIndex2 == k) {\n          \
    \              maxIndex2 = k\n                        maxValue2 = value\n    \
    \                }\n                    if (maxValue2 < value) {\n           \
    \             maxIndex2 = k\n                        maxValue2 = value\n     \
    \               }\n                }\n                if (maxIndex2 == k) {\n\
    \                    maxIndex2 = k\n                    maxValue2 = value\n  \
    \              }\n                if (maxValue2 < value) {\n                 \
    \   maxIndex2 = k\n                    maxValue2 = value\n                }\n\
    \            }\n            if (maxIndex2 == k) {\n                maxIndex2 =\
    \ k\n                maxValue2 = value\n            }\n            if (maxValue2\
    \ < value) {\n                maxIndex2 = k\n                maxValue2 = value\n\
    \            }\n            maxIndex += 1\n            maxValue += value\n   \
    \         i += 1\n        }\n        val result = new Array[Long](k)\n       \
    \ var i = 0\n        while (i < k) {\n            result(i) = maxValue2\n    \
    \        i += 1\n        }\n        result", "        val maxList = mutable.ListBuffer.empty[Long]\n\
    \        val maxLen = arr.length\n        val maxK = k\n        val maxKList =\
    \ mutable.ListBuffer.empty[Long]\n        val maxKLen = maxKList.length\n    \
    \    val maxKK = maxKList(0)\n        val maxKKList = mutable.ListBuffer.empty[Long]\n\
    \        val maxKKLen = maxKKList.length\n        val maxKKK = maxKKList(0)\n\
    \        val maxKKKList = mutable.ListBuffer.empty[Long]\n        val maxKKKLen\
    \ = maxKKKList.length\n        val maxKKKK = maxKKKList(0)\n        val maxKKKKList\
    \ = mutable.ListBuffer.empty[Long]\n        val maxKKKKLen = maxKKKKList.length\n\
    \        val maxKKKKK = maxKKKKList(0)\n        val maxKKKKKList = mutable.ListBuffer.empty[Long]\n\
    \        val maxKKKKKLen = maxKKKKKList.length\n        val maxKKKKKK = maxKKKKKList(0)\n\
    \        val maxKKKKKKList = mutable.ListBuffer.empty[Long]\n        val maxKKKKKKLen\
    \ = maxKKKKKKList.length\n        val maxKKKKKKK = maxKKKKKKList(0)\n        val\
    \ maxKKKKKKKList = mutable.ListBuffer.empty[Long]\n        val maxKKKKKKKLen =\
    \ maxKKKKKKKList.length\n        val maxKKKKKKKK = maxKKKKKKKList(0)\n       \
    \ val maxKKKKKKKKList = mutable.ListBuffer.empty[Long]\n        val maxKKKKKKKKLen\
    \ = maxKKKKKKKKList.length\n        val maxKKKKKKKKK = maxKKKKKKKKList(0)\n  \
    \      val maxKKKKKKKKKList = mutable.ListBuffer.empty[Long]\n        val maxKKKKKKKKKLen\
    \ = maxKKKKKKKKKList.length\n        val maxKKKK", "        val maxNum = arr.max\n\
    \        val maxNumIndex = arr.indexWhere(x => x == maxNum)\n        val maxNumList\
    \ = arr.take(maxNumIndex + 1)\n        val maxNumListIndex = maxNumList.indexWhere(x\
    \ => x == maxNum)\n        val maxNumListIndex = maxNumListIndex + 1\n       \
    \ val maxNumListLength = maxNumListIndex - maxNumListIndex\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNumListLength - 1\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNumListLength - 1\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNumListLength - 1\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNumListLength - 1\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNumListLength - 1\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNumListLength - 1\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNumListLength - 1\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNumListLength - 1\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNumListLength - 1\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNumListLength - 1\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNumListLength - 1\n        val maxNumListLength\
    \ = maxNumListLength - 1\n        val maxNumListLength = maxNumListLength - 1\n\
    \        val maxNumListLength = maxNum", "        val arr = arr.sortWith(_ > _)\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n   \
    \             max(i) = arr(i)\n                i += 1\n            } else {\n\
    \                max(i) = arr(i + 1)\n                i += 1\n            }\n\
    \        }\n        max.toList", "        val arr = arr.toList\n        val len\
    \ = arr.length\n        val max = new Array[Long](k)\n        var i = 0\n    \
    \    var j = 0\n        var maxIndex = 0\n        while (i < len) {\n        \
    \    if (arr(i) > arr(maxIndex)) {\n                maxIndex = i\n           \
    \ }\n            i += 1\n        }\n        val maxList = arr.take(maxIndex).toList\n\
    \        val maxLen = maxList.length\n        var j = 0\n        while (j < maxLen)\
    \ {\n            if (maxList[j] > arr(maxIndex)) {\n                maxIndex +=\
    \ 1\n            }\n            j += 1\n        }\n        val maxList2 = arr.take(maxIndex).toList\n\
    \        val maxLen2 = maxList2.length\n        var k = 0\n        while (k <=\
    \ maxLen2) {\n            if (maxList2(k) > arr(maxIndex)) {\n               \
    \ maxIndex += 1\n            }\n            k += 1\n        }\n        val maxList3\
    \ = arr.take(maxIndex).toList\n        val maxLen3 = maxList3.length\n       \
    \ var l = 0\n        while (l<maxLen3) {\n            if (maxList3(l) > arr(maxIndex))\
    \ {\n                maxIndex += 1\n            }\n            l += 1\n      \
    \  }\n        val maxList4 = arr.take(maxIndex).toList\n        val maxLen4 =\
    \ maxList4.length\n        var m = 0\n        while (m<maxLen4) {\n          \
    \  if (maxList4(m) > arr(maxIndex)) {\n                maxIndex += 1\n       \
    \     }\n            m += 1\n        }\n        val maxList5 = arr.take(maxIndex).toList\n\
    \        val maxLen5 = maxList5.length\n        var n = 0\n        while (n<maxLen5)\
    \ {\n            if (maxList5(n) > arr(maxIndex)) {\n                maxIndex\
    \ += 1\n            }\n            n += 1\n        }\n        val maxList6 = arr.take(maxIndex).toList\n\
    \        val maxLen6 = maxList6.length\n        var o = 0\n        while (o<maxLen6)\
    \ {\n            if (maxList6(o) > arr(maxIndex)) {\n                maxIndex\
    \ += 1\n            }\n            o += 1\n        }\n        val maxList7 = arr.take(maxIndex).toList\n\
    \        val maxLen7 = maxList7.length\n        var p = 0\n        while (p<maxLen7)\
    \ {\n            if (maxList7(p) > arr(maxIndex)) {\n                maxIndex\
    \ += 1\n            }\n            p += 1\n        }\n        val maxList8 = arr.take(maxIndex).toList\n\
    \        val maxLen8 = maxList8.length\n        var q = 0\n        while (q<maxLen8)\
    \ {\n            if (max", "        val arr = arr.sortBy(-_)\n        val maxArr\
    \ : List[Long] = new Array[Long](k)\n        var i = 0\n        while (i < k)\
    \ {\n            maxArr(i) = arr(i)\n            i += 1\n        }\n        maxArr",
  "        val arr = arr.toList\n        val len = arr.length\n        val max = new\
    \ Array[Long](k)\n        val maxIndex = new Array[Int](k)\n        val maxIndexMap\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2 = new mutable.HashMap[Long,\
    \ Int]()\n        var i = 0\n        var j = 0\n        var k = 0\n        var\
    \ maxIndex = 0\n        var maxIndex2 = 0\n        var maxIndexMap = 0\n     \
    \   var maxIndexMap2 = 0\n        var maxIndexMap3 = 0\n        var maxIndexMap4\
    \ = 0\n        var maxIndexMap5 = 0\n        var maxIndexMap6 = 0\n        var\
    \ maxIndexMap7 = 0\n        var maxIndexMap8 = 0\n        var maxIndexMap9 = 0\n\
    \        var maxIndexMap10 = 0\n        var maxIndexMap11 = 0\n        var maxIndexMap12\
    \ = 0\n        var maxIndexMap13 = 0\n        var maxIndexMap14 = 0\n        var\
    \ maxIndexMap15 = 0\n        var maxIndexMap16 = 0\n        var maxIndexMap17\
    \ = 0\n        var maxIndexMap18 = 0\n        var maxIndexMap19 = 0\n        var\
    \ maxIndexMap20 = 0\n        var maxIndexMap21 = 0\n        var maxIndexMap22\
    \ = 0\n        var maxIndexMap23 = 0\n        var maxIndexMap24 = 0\n        var\
    \ maxIndexMap25 = 0\n        var maxIndexMap26 = 0\n        var maxIndexMap27\
    \ = 0\n        var maxIndexMap28 = 0\n        var maxIndexMap29 = 0\n        var\
    \ maxIndexMap30 = 0\n        var maxIndexMap31 = 0\n        var maxIndexMap32\
    \ = 0\n        var maxIndexMap33 = 0\n        var maxIndexMap34 = 0\n        var\
    \ maxIndexMap35 = 0\n        var maxIndexMap36 = 0\n        var maxIndexMap37\
    \ = 0\n        var maxIndexMap38 = 0\n        var maxIndexMap39 = 0\n        var\
    \ maxIndexMap40 = 0\n        var maxIndexMap41 = 0\n        var maxIndexMap42\
    \ = 0\n        var maxIndexMap43 = 0\n        var maxIndexMap44 = 0\n        var\
    \ maxIndexMap45 = 0\n        var maxIndexMap46 = 0\n        var maxIndexMap47\
    \ = 0\n        var maxIndexMap48 = 0\n        var maxIndexMap49 = 0\n        var\
    \ maxIndexMap50 = 0\n        var maxIndexMap51 = 0\n        var maxIndexMap52\
    \ = 0\n        var maxIndexMap53 = 0\n        var maxIndexMap54 = 0\n        var\
    \ maxIndexMap55 = 0\n        var maxIndexMap56 = 0\n        var maxIndexMap57\
    \ = 0\n        var maxIndexMap58 = 0\n        var maxIndexMap59 = 0\n        var\
    \ maxIndexMap60 = 0\n        var maxIndexMap", "        val arr = arr.sortWith(_\
    \ < _)\n        val n = arr.length\n        val max = new Array[Long](k)\n   \
    \     val maxIndex = new Array[Int](k)\n        val maxIndexMap = new mutable.HashMap[Long,\
    \ Int]()\n        var i = 0\n        while (i < k) {\n            if (maxIndexMap.contains(arr(i)))\
    \ {\n                maxIndex(maxIndexMap(arr(i))) = i\n            } else {\n\
    \                maxIndexMap(arr(i)) = i\n            }\n            i += 1\n\
    \        }\n        var j = 0\n        while (j < n) {\n            if (maxIndexMap.contains(arr(j)))\
    \ {\n                val index = maxIndexMap(arr(j))\n                val maxValue\
    \ = arr(j)\n                val maxIndex = index\n                val maxIndex\
    \ = index\n                val maxValue = arr(j)\n                maxIndex(maxIndex)\
    \ = j\n                maxIndexMap(maxValue) = maxIndex\n                max(i)\
    \ = maxValue\n                j += 1\n            } else {\n                j\
    \ += 1\n            }\n        }\n        max.toList", "        val maxList =\
    \ mutable.ArrayBuffer.empty[Long]\n        val maxK = k\n        val maxLen =\
    \ arr.length\n        val maxNum = arr.max\n        val maxNumIndex = arr.indexWhere(x\
    \ => x == maxNum)\n        val maxNumIndex = maxNumIndex.toInt\n        val maxNum\
    \ = arr(maxNumIndex)\n        val maxNumIndex = maxNumIndex + 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex - 1\n        val maxNumIndex = maxNumIndex - 1\n        val maxNumIndex\
    \ = maxNumIndex", "        val maxList = mutable.ListBuffer.empty[Long]\n    \
    \    val maxLength = arr.length\n        val maxK = k\n        val maxValue =\
    \ arr.max\n        val maxIndex = arr.indexWhere(x => x == maxValue)\n       \
    \ val maxIndex = maxIndex.map(x => x - 1)\n        val maxIndex = maxIndex.take(maxK).toList\n\
    \        val maxIndex = maxIndex.map(x => x + 1)\n        val maxIndex = maxIndex.map(x\
    \ => x - 1)\n        val maxIndex = maxIndex.take(maxK).toList\n        val maxIndex\
    \ = maxIndex.map(x => x + 1)\n        val maxIndex = maxIndex.map(x => x - 1)\n\
    \        val maxIndex = maxIndex.take(maxK).toList\n        val maxIndex = maxIndex.map(x\
    \ => x + 1)\n        val maxIndex = maxIndex.map(x => x - 1)\n        val maxIndex\
    \ = maxIndex.take(maxK).toList\n        val maxIndex = maxIndex.map(x => x + 1)\n\
    \        val maxIndex = maxIndex.map(x => x - 1)\n        val maxIndex = maxIndex.take(maxK).toList\n\
    \        val maxIndex = maxIndex.map(x => x + 1)\n        val maxIndex = maxIndex.map(x\
    \ => x - 1)\n        val maxIndex = maxIndex.take(maxK).toList\n        val maxIndex\
    \ = maxIndex.map(x => x + 1)\n        val maxIndex = maxIndex.map(x => x - 1)\n\
    \        val maxIndex = maxIndex.take(maxK).toList\n        val maxIndex = maxIndex.map(x\
    \ => x + 1)\n        val maxIndex = maxIndex.map(x => x - 1)\n        val maxIndex\
    \ = maxIndex.take(maxK).toList\n        val maxIndex = maxIndex.map(x => x + 1)\n\
    \        val maxIndex = maxIndex.map(x => x - 1)\n        val maxIndex = maxIndex.take(maxK).toList\n\
    \        val maxIndex = maxIndex.map(x => x + 1)\n        val maxIndex = maxIndex.map(x\
    \ => x - 1)\n        val maxIndex = maxIndex.take(maxK).toList\n        val maxIndex\
    \ = maxIndex.map(x => x + 1)\n        val maxIndex = maxIndex.map(x => x - 1)\n\
    \        val maxIndex = maxIndex.take(maxK).toList\n        val maxIndex = maxIndex.map(x\
    \ => x + 1)\n        val maxIndex = maxIndex.map(x => x - 1)\n        val maxIndex\
    \ = maxIndex.take(maxK", "        val result = new mutable.ListBuffer[Long]()\n\
    \        var max = 0\n        var maxIndex = 0\n        var i = 0\n        while\
    \ (i < arr.length) {\n            if (arr(i) > max) {\n                max = arr(i)\n\
    \                maxIndex = i\n            }\n            i += 1\n        }\n\
    \        val maxLength = arr.length - maxIndex\n        if (maxLength < k) {\n\
    \            while (maxLength < k) {\n                val newMax = arr(maxIndex\
    \ + 1)\n                if (newMax > max) {\n                    max = newMax\n\
    \                    maxIndex = maxIndex + 1\n                }\n            \
    \    maxLength += 1\n            }\n        }\n        val newArr = arr.take(maxIndex\
    \ + 1).reverse\n        result.addAll(newArr)\n        result", "        val arr\
    \ = arr.sortBy(-_)\n        val max = new mutable.ListBuffer[Long]()\n       \
    \ var i = 0\n        while (i < arr.length && arr.length > 0) {\n            if\
    \ (arr(i) > arr(i + 1)) {\n                max += arr(i + 1)\n               \
    \ i += 1\n            } else {\n                max += arr(i)\n              \
    \  i += 1\n            }\n        }\n        if (arr.length > 0) {\n         \
    \   max += arr(i)\n        }\n        max.toList", "        val arr = arr.toList\n\
    \        val n = arr.size\n        val max = new Array[Long](k)\n        var maxIndex\
    \ = 0\n        var maxValue = 0\n        for(i <- 0 until k) {\n            val\
    \ index = arr.indexOfMax\n            if(index > -1) {\n                maxIndex\
    \ = i\n                maxValue = arr(index)\n            }\n        }\n     \
    \   val result = new Array[Long](k)\n        for(i <- 0 until k) {\n         \
    \   result(i) = arr(maxIndex)\n        }\n        result", "        val maxNum\
    \ = arr.sortWith(_ > _).take(k).toList\n        val maxNumIndex = arr.lastIndexWhere(_\
    \ == maxNum.max)\n        val maxNumList = arr.take(maxNumIndex).toList\n    \
    \    val maxNumListIndex = arr.lastIndexWhere(_ == maxNumList)\n        val maxNumListLength\
    \ = maxNumListIndex - maxNumIndex\n        val maxNumListLength = maxNumListLength\
    \ + maxNumListLength\n        val maxNumListLength = maxNumListLength + maxNumListLength\n\
    \        val maxNumListLength = maxNumListLength + maxNumListLength\n        val\
    \ maxNumListLength = maxNumListLength + maxNumListLength\n        val maxNumListLength\
    \ = maxNumListLength + maxNumListLength\n        val maxNumListLength = maxNumListLength\
    \ + maxNumListLength\n        val maxNumListLength = maxNumListLength + maxNumListLength\n\
    \        val maxNumListLength = maxNumListLength + maxNumListLength\n        val\
    \ maxNumListLength = maxNumListLength + maxNumListLength\n        val maxNumListLength\
    \ = maxNumListLength + maxNumListLength\n        val maxNumListLength = maxNumListLength\
    \ + maxNumListLength\n        val maxNumListLength = maxNumListLength + maxNumListLength\n\
    \        val maxNumListLength = maxNumListLength + maxNumListLength\n        val\
    \ maxNumListLength = maxNumListLength + maxNumListLength\n        val maxNumListLength\
    \ = maxNumListLength + maxNumListLength\n        val maxNumListLength = maxNumListLength\
    \ + maxNumListLength\n        val maxNumListLength = maxNumListLength + maxNumListLength\n\
    \        val maxNumListLength = maxNumListLength + maxNumListLength\n        val\
    \ maxNumListLength = maxNumListLength + maxNumListLength\n        val maxNumListLength\
    \ = maxNumListLength + maxNumListLength\n        val maxNumListLength = maxNumListLength\
    \ + maxNumListLength\n        val maxNumListLength = maxNumListLength + maxNumListLength\n\
    \        val maxNumListLength = maxNumListLength + maxNumListLength\n        val\
    \ maxNumListLength = maxNumListLength + maxNumListLength\n        val maxNumListLength\
    \ = maxNumListLength + maxNumListLength\n        val maxNumListLength = maxNumListLength\
    \ + maxNumListLength\n        val maxNumListLength = maxNumListLength + maxNumListLength\n\
    \        val maxNum", "        val arr = arr.toList\n        val len = arr.length\n\
    \        val max = new Array[Long](k)\n        var maxIndex = 0\n        var maxValue\
    \ = 0\n        var i = 0\n        var j = 0\n        while (i < len) {\n     \
    \       val value = arr(i)\n            if (value > maxValue) {\n            \
    \    maxValue = value\n                maxIndex = i\n            }\n         \
    \   i += 1\n        }\n        val result = new Array[Long](k)\n        for (i\
    \ <- 0 until k) {\n            result(i) = arr(maxIndex)\n        }\n        result",
  "        val arr = arr.toList\n        val len = arr.length\n        val max = new\
    \ Array[Long](k)\n        var i = 0\n        var j = 0\n        while (i < len)\
    \ {\n            if (arr(i) > arr(j)) {\n                max(i) = arr(i)\n   \
    \             i += 1\n            } else {\n                max(j) = arr(j)\n\
    \                j += 1\n            }\n        }\n        max.toList", "    \
    \    val maxList = mutable.ListBuffer.empty[Long]\n        val maxLength = arr.length\n\
    \        val maxK = k\n        val maxValue = arr.max\n        val minValue =\
    \ arr.min\n        val maxIndex = 0\n        val minIndex = 0\n        val maxValueIndex\
    \ = arr.indexWhere(x => x == maxValue)\n        val minValueIndex = arr.indexWhere(x\
    \ => x == minValue)\n        val maxValueIndex2 = arr.indexWhere(x => x == maxValue)\n\
    \        val minValueIndex2 = arr.indexWhere(x => x == minValue)\n        val\
    \ maxValueIndex3 = arr.indexWhere(x => x == maxValue)\n        val minValueIndex3\
    \ = arr.indexWhere(x => x == minValue)\n        val maxValueIndex4 = arr.indexWhere(x\
    \ => x == maxValue)\n        val minValueIndex4 = arr.indexWhere(x => x == minValue)\n\
    \        val maxValueIndex5 = arr.indexWhere(x => x == maxValue)\n        val\
    \ minValueIndex5 = arr.indexWhere(x => x == minValue)\n        val maxValueIndex6\
    \ = arr.indexWhere(x => x == maxValue)\n        val minValueIndex6 = arr.indexWhere(x\
    \ => x == minValue)\n        val maxValueIndex7 = arr.indexWhere(x => x == maxValue)\n\
    \        val minValueIndex7 = arr.indexWhere(x => x == minValue)\n        val\
    \ maxValueIndex8 = arr.indexWhere(x => x == maxValue)\n        val minValueIndex8\
    \ = arr.indexWhere(x => x == minValue)\n        val maxValueIndex9 = arr.indexWhere(x\
    \ => x == maxValue)\n        val minValueIndex9 = arr.indexWhere(x => x == minValue)\n\
    \        val maxValueIndex10 = arr.indexWhere(x => x == maxValue)\n        val\
    \ minValueIndex10 = arr.indexWhere(x => x == minValue)\n        val maxValueIndex11\
    \ = arr.indexWhere(x => x == maxValue)\n        val minValueIndex11 = arr.indexWhere(x\
    \ => x == minValue)\n        val maxValueIndex12 = arr.indexWhere(x => x == maxValue)\n\
    \        val minValueIndex12 = arr.indexWhere(x => x == minValue)\n        val\
    \ maxValueIndex13 = arr.indexWhere(x => x == maxValue)\n        val minValueIndex13\
    \ = arr.indexWhere(x => x == minValue)\n        val maxValueIndex14 = arr.indexWhere(x\
    \ => x == maxValue)\n        val minValueIndex14 = arr.indexWhere(x => x == minValue)\n\
    \        val maxValueIndex15 = arr.index", "        val arr = arr.sortBy(-_)\n\
    \        val maxList = arr.take(k)\n        val maxList2 = arr.drop(k)\n     \
    \   val maxList3 = arr.takeRight(k)\n        val maxList4 = arr.dropRight(k)\n\
    \        val maxList5 = arr.take(k)\n        val maxList6 = arr.drop(k)\n    \
    \    val maxList7 = arr.takeRight(k)\n        val maxList8 = arr.dropRight(k)\n\
    \        val maxList9 = arr.take(k)\n        val maxList10 = arr.drop(k)\n   \
    \     val maxList11 = arr.takeRight(k)\n        val maxList12 = arr.dropRight(k)\n\
    \        val maxList13 = arr.take(k)\n        val maxList14 = arr.drop(k)\n  \
    \      val maxList15 = arr.takeRight(k)\n        val maxList16 = arr.dropRight(k)\n\
    \        val maxList17 = arr.take(k)\n        val maxList18 = arr.drop(k)\n  \
    \      val maxList19 = arr.takeRight(k)\n        val maxList20 = arr.dropRight(k)\n\
    \        val maxList21 = arr.take(k)\n        val maxList22 = arr.drop(k)\n  \
    \      val maxList23 = arr.takeRight(k)\n        val maxList24 = arr.dropRight(k)\n\
    \        val maxList25 = arr.take(k)\n        val maxList26 = arr.drop(k)\n  \
    \      val maxList27 = arr.takeRight(k)\n        val maxList28 = arr.dropRight(k)\n\
    \        val maxList29 = arr.take(k)\n        val maxList30 = arr.drop(k)\n  \
    \      val maxList31 = arr.takeRight(k)\n        val maxList32 = arr.dropRight(k)\n\
    \        val maxList33 = arr.take(k)\n        val maxList34 = arr.drop(k)\n  \
    \      val maxList35 = arr.takeRight(k)\n        val maxList36 = arr.dropRight(k)\n\
    \        val maxList37 = arr.take(k)\n        val maxList38 = arr.drop(k)\n  \
    \      val maxList39 = arr.takeRight(k)\n        val maxList40 = arr.dropRight(k)\n\
    \        val maxList41 = arr.take(k)\n        val maxList42 = arr.drop(k)\n  \
    \      val maxList43 = arr.takeRight(k)\n        val maxList44 = arr.dropRight(k)\n\
    \        val maxList45 = arr.take(", "        val n = arr.size\n        val max\
    \ = new Array[Long](k)\n        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for(i <- 0 until k) {\n            for(j <- 0 until n) {\n          \
    \      if(arr(j) > maxValue) {\n                    maxValue = arr(j)\n      \
    \              maxIndex = j\n                }\n            }\n            max\
    \ += maxValue\n            maxValue = arr(maxIndex)\n            maxIndex = 0\n\
    \        }\n        max += maxValue\n        max", "        val arr = arr.toList\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        val\
    \ maxIndex = new Array[Int](k)\n        var maxIndex = 0\n        var i = 0\n\
    \        var j = 0\n        var maxIndex = 0\n        var maxVal = 0\n       \
    \ var maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n       \
    \ var maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n        var\
    \ maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n        var\
    \ maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n        var maxIndex\
    \ = 0\n        var maxVal = 0\n        var maxIndex = 0\n        var maxVal =\
    \ 0\n        var maxIndex = 0\n        var maxVal = 0\n        var maxIndex =\
    \ 0\n        var maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n\
    \        var maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n\
    \        var maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n  \
    \      var maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n  \
    \      var maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n    \
    \    var maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n    \
    \    var maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n      \
    \  var maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n      \
    \  var maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n        var\
    \ maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n        var\
    \ maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n        var maxIndex\
    \ = 0\n        var maxVal = 0\n        var maxIndex = 0\n        var maxVal =\
    \ 0\n        var maxIndex = 0\n        var maxVal = 0\n        var maxIndex =\
    \ 0\n        var maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n\
    \        var maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n\
    \        var maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n  \
    \      var maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n  \
    \      var maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n    \
    \    var maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n    \
    \    var maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n      \
    \  var maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n      \
    \  var maxVal = 0\n        var maxIndex = 0\n        var maxVal = 0\n        var\
    \ maxIndex = 0\n        var maxVal = 0\n        var maxIndex = 0\n        var\
    \ maxVal = 0\n        var maxIndex = 0\n        var ", "        val result = new\
    \ mutable.ListBuffer[Long]()\n        val maxNum = arr.max\n        val maxIndex\
    \ = arr.indexWhere(x => x == maxNum)\n        val maxNums = arr.take(maxIndex)\n\
    \        val maxNumsCount = maxNums.size\n        val maxNumsCountInRange = maxNumsCount\
    \ - k\n        val maxNumsCountInRangeInRange = maxNumsCountInRange / 2\n    \
    \    val maxNumsCountInRangeInRangeInRange = maxNumsCountInRangeInRange / 2\n\
    \        val maxNumsCountInRangeInRangeInRangeInRange = maxNumsCountInRangeInRangeInRange\
    \ / 2\n        val maxNumsCountInRangeInRangeInRangeInRange = maxNumsCountInRangeInRangeInRange\
    \ / 2\n        val maxNumsCountInRangeInRangeInRangeInRangeInRange = maxNumsCountInRangeInRangeInRangeInRange\
    \ / 2\n        val maxNumsCountInRangeInRangeInRangeInRangeInRange = maxNumsCountInRangeInRangeInRangeInRange\
    \ / 2\n        val maxNumsCountInRangeInRangeInRangeInRangeInRangeInRange = maxNumsCountInRangeInRangeInRangeInRangeInRange\
    \ / 2\n        val maxNumsCountInRangeInRangeInRangeInRangeInRangeInRange = maxNumsCountInRangeInRangeInRangeInRangeInRange\
    \ / 2\n        val maxNumsCountInRangeInRangeInRangeInRangeInRangeInRange = maxNumsCountInRangeInRangeInRangeInRangeInRange\
    \ / 2\n        val maxNumsCountInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxNumsCountInRangeInRangeInRangeInRangeInRangeInRange / 2\n        val maxNumsCountInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxNumsCountInRangeInRangeInRangeInRangeInRangeInRange / 2\n        val maxNumsCountInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxNumsCountInRangeInRangeInRangeInRangeInRangeInRange / 2\n        val maxNumsCountInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxNumsCountInRangeInRangeInRangeInRangeInRangeInRangeInRange ", "       \
    \ val arr = arr.sortBy(-_)\n        val n = arr.length\n        val m = math.min(k,\
    \ n)\n        val result = new Array[Long](m)\n        var i = 0\n        while\
    \ (i < m) {\n            result(i) = arr(i)\n            i += 1\n        }\n \
    \       result", "        val maxList = mutable.ArrayBuffer.empty[Long]\n    \
    \    val maxLen = arr.length\n        val maxK = k\n        val maxKList = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxKLen = maxKList.length\n        val maxKK = maxKLen / 2\n    \
    \    val maxKKList = mutable.ArrayBuffer.empty[Long]\n        val maxKKLen = maxKKList.length\n\
    \        val maxKKK = maxKKLen / 2\n        val maxKKKList = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxKKKLen = maxKKKList.length\n        val maxKKKK = maxKKKLen /\
    \ 2\n        val maxKKKKList = mutable.ArrayBuffer.empty[Long]\n        val maxKKKKLen\
    \ = maxKKKKList.length\n        val maxKKKKK = maxKKKKLen / 2\n        val maxKKKKKList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxKKKKKLen = maxKKKKKList.length\n\
    \        val maxKKKKKK = maxKKKKKLen / 2\n        val maxKKKKKKList = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxKKKKKKLen = maxKKKKKKList.length\n        val maxKKKKKKK = maxKKKKKKLen\
    \ / 2\n        val maxKKKKKKKList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ maxKKKKKKKLen = maxKKKKKKKList.length\n        val maxKKKKKKKK = maxKKKKKKKKLen\
    \ / 2\n        val maxKKKKKKKKList = mutable.ArrayBuffer.empty[Long]\n       \
    \ val maxKKKKKKKKLen = maxKKKKKKKKList.length\n        val maxKKKKKKKKK = maxKKKKKKKKKLen\
    \ / 2\n        val maxKKKKKKKKKList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val maxKKKKKKKKKLen = maxKKKKKKKKK", "        val max = new mutable.PriorityQueue[Long](k)\n\
    \        arr.foreach(x => max.enqueue(x))\n        val res = new mutable.PriorityQueue[Long](k)\n\
    \        while(max.nonEmpty) {\n            res.enqueue(max.dequeue())\n     \
    \   }\n        res.toList", "        val arr = arr.toList\n        val len = arr.length\n\
    \        val max = new Array[Long](k)\n        var i = 0\n        for(x <- arr)\
    \ {\n            if(i < k) {\n                if(x > max(i)) {\n             \
    \       max(i) = x\n                }\n                i += 1\n            }\n\
    \        }\n        max.toList", "        val arr = arr.sortBy(-_)\n        val\
    \ max = new Array[Long](k)\n        var i = 0\n        while (i < k) {\n     \
    \       if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n        \
    \        i += 1\n            } else {\n                max(i) = arr(i + 1)\n \
    \               i += 1\n            }\n        }\n        max.toList", "     \
    \   val arr = arr.sortBy(x => x)\n        val max = arr.take(k)\n        val rest\
    \ = arr.drop(k)\n        rest match {\n            case Nil => max\n         \
    \   case x :: xs => x :: maximum(Array(xs ++ rest), k)\n        }", "        val\
    \ n = arr.length\n        val m = math.min(k, n)\n        val maxList = mutable.ArrayBuffer.empty[Long]\n\
    \        var maxValue = arr(0)\n        var maxIndex = 0\n        for (i <- 0\
    \ until m) {\n            if (arr(i) > maxValue) {\n                maxValue =\
    \ arr(i)\n                maxIndex = i\n            }\n        }\n        maxList\
    \ += maxValue\n        for (i <- 0 until n) {\n            if (i != maxIndex)\
    \ {\n                maxList += arr(i)\n            }\n        }\n        maxList.toList",
  "        val arr = arr.toList\n        val len = arr.length\n        val max = new\
    \ mutable.PriorityQueue[Long]()\n        val maxIndex = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexMap = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2\
    \ = new mutable.HashMap[Int, Long]()\n        val maxIndexMap3 = new mutable.HashMap[Int,\
    \ Int]()\n        val maxIndexMap4 = new mutable.HashMap[Int, Int]()\n       \
    \ val maxIndexMap5 = new mutable.HashMap[Int, Int]()\n        val maxIndexMap6\
    \ = new mutable.HashMap[Int, Int]()\n        val maxIndexMap7 = new mutable.HashMap[Int,\
    \ Int]()\n        val maxIndexMap8 = new mutable.HashMap[Int, Int]()\n       \
    \ val maxIndexMap9 = new mutable.HashMap[Int, Int]()\n        val maxIndexMap10\
    \ = new mutable.HashMap[Int, Int]()\n        val maxIndexMap11 = new mutable.HashMap[Int,\
    \ Int]()\n        val maxIndexMap12 = new mutable.HashMap[Int, Int]()\n      \
    \  val maxIndexMap13 = new mutable.HashMap[Int, Int]()\n        val maxIndexMap14\
    \ = new mutable.HashMap[Int, Int]()\n        val maxIndexMap15 = new mutable.HashMap[Int,\
    \ Int]()\n        val maxIndexMap16 = new mutable.HashMap[Int, Int]()\n      \
    \  val maxIndexMap17 = new mutable.HashMap[Int, Int]()\n        val maxIndexMap18\
    \ = new mutable.HashMap[Int, Int]()\n        val maxIndexMap19 = new mutable.HashMap[Int,\
    \ Int]()\n        val maxIndexMap20 = new mutable.HashMap[Int, Int]()\n      \
    \  val maxIndexMap21 = new mutable.HashMap[Int, Int]()\n        val maxIndexMap22\
    \ = new mutable.HashMap[Int, Int]()\n        val maxIndexMap23 = new mutable.HashMap[Int,\
    \ Int]()\n        val maxIndexMap24 = new mutable.HashMap[Int, Int]()\n      \
    \  val maxIndexMap25 = new mutable.HashMap[Int, Int]()\n        val maxIndexMap26\
    \ = new mutable.HashMap[Int, Int]()\n        val maxIndexMap27 = new mutable.HashMap[Int,\
    \ Int]()\n        val maxIndexMap28 = new mutable.HashMap[Int, ", "        val\
    \ maxList = arr.sortWith(_ > _)\n        val maxLength = arr.length\n        val\
    \ maxK = math.min(k, maxLength)\n        val maxList = maxList.take(maxK)\n  \
    \      val maxListLength = maxList.length\n        val maxListK = math.min(maxListLength,\
    \ maxLength)\n        val maxListK = math.min(maxListK, maxLength)\n        val\
    \ maxListK = math.min(maxListK, maxLength)\n        val maxListK = math.min(maxListK,\
    \ maxLength)\n        val maxListK = math.min(maxListK, maxLength)\n        val\
    \ maxListK = math.min(maxListK, maxLength)\n        val maxListK = math.min(maxListK,\
    \ maxLength)\n        val maxListK = math.min(maxListK, maxLength)\n        val\
    \ maxListK = math.min(maxListK, maxLength)\n        val maxListK = math.min(maxListK,\
    \ maxLength)\n        val maxListK = math.min(maxListK, maxLength)\n        val\
    \ maxListK = math.min(maxListK, maxLength)\n        val maxListK = math.min(maxListK,\
    \ maxLength)\n        val maxListK = math.min(maxListK, maxLength)\n        val\
    \ maxListK = math.min(maxListK, maxLength)\n        val maxListK = math.min(maxListK,\
    \ maxLength)\n        val maxListK = math.min(maxListK, maxLength)\n        val\
    \ maxListK = math.min(maxListK, maxLength)\n        val maxListK = math.min(maxListK,\
    \ maxLength)\n        val maxListK = math.min(maxListK, maxLength)\n        val\
    \ maxListK = math.min(maxListK, maxLength)\n        val maxListK = math.min(maxListK,\
    \ maxLength)\n        val maxListK = math.min(maxListK, maxLength)\n        val\
    \ maxListK = math.min(maxListK, maxLength)\n        val maxListK = math.min(maxListK,\
    \ maxLength)\n        val maxListK = math.min(maxListK, maxLength)\n        val\
    \ maxListK = math.min(maxListK, maxLength)\n        val maxListK = math.min(maxListK,\
    \ maxLength)\n        val maxListK = math.min(maxListK, maxLength)\n        val\
    \ maxListK = math.min(maxListK, maxLength)\n        val maxListK = math.min(maxList",
  "        val maxNums = arr.take(k).toList\n        val maxNumsSet = maxNums.toSet\n\
    \        val maxNumsSetIterator = maxNumsSet.iterator\n        val maxNumsSetIteratorResult\
    \ = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult2 = maxNumsSetIterator.next\n\
    \        val maxNumsSetIteratorResult3 = maxNumsSetIterator.next\n        val\
    \ maxNumsSetIteratorResult4 = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult5\
    \ = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult6 = maxNumsSetIterator.next\n\
    \        val maxNumsSetIteratorResult7 = maxNumsSetIterator.next\n        val\
    \ maxNumsSetIteratorResult8 = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult9\
    \ = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult10 = maxNumsSetIterator.next\n\
    \        val maxNumsSetIteratorResult11 = maxNumsSetIterator.next\n        val\
    \ maxNumsSetIteratorResult12 = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult13\
    \ = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult14 = maxNumsSetIterator.next\n\
    \        val maxNumsSetIteratorResult15 = maxNumsSetIterator.next\n        val\
    \ maxNumsSetIteratorResult16 = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult17\
    \ = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult18 = maxNumsSetIterator.next\n\
    \        val maxNumsSetIteratorResult19 = maxNumsSetIterator.next\n        val\
    \ maxNumsSetIteratorResult20 = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult21\
    \ = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult22 = maxNumsSetIterator.next\n\
    \        val maxNumsSetIteratorResult23 = maxNumsSetIterator.next\n        val\
    \ maxNumsSetIteratorResult24 = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult25\
    \ = maxNumsSetIterator.next\n        val maxNumsSetIteratorResult26 = maxNumsSetIterator.next\n\
    \        val maxNumsSetIteratorResult27 = maxNumsSetIterator.next\n", "      \
    \  val arr = arr.sortBy(-_)\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        var j = 0\n        var maxIndex = 0\n        while (i < arr.length)\
    \ {\n            if (j == k) {\n                maxIndex = i\n               \
    \ while (j < k) {\n                    if (arr(j) > arr(maxIndex)) {\n       \
    \                 maxIndex = j\n                    }\n                    j +=\
    \ 1\n                }\n            }\n            if (arr(i) > arr(maxIndex))\
    \ {\n                max(i) = arr(i)\n                i += 1\n            } else\
    \ {\n                i += 1\n            }\n        }\n        arr.toList.sortBy(-_)",
  "        val n = arr.length\n        val m = arr.max\n        val maxList = arr.filter(_\
    \ <= m).sortWith(_ > _)\n        val maxListLength = maxList.length\n        val\
    \ maxListLength = maxListLength - k\n        val maxListLength = maxListLength\
    \ + k\n        val maxListLength = maxListLength - k\n        val maxListLength\
    \ = maxListLength + k\n        val maxListLength = maxListLength - k\n       \
    \ val maxListLength = maxListLength + k\n        val maxListLength = maxListLength\
    \ - k\n        val maxListLength = maxListLength + k\n        val maxListLength\
    \ = maxListLength - k\n        val maxListLength = maxListLength + k\n       \
    \ val maxListLength = maxListLength - k\n        val maxListLength = maxListLength\
    \ + k\n        val maxListLength = maxListLength - k\n        val maxListLength\
    \ = maxListLength + k\n        val maxListLength = maxListLength - k\n       \
    \ val maxListLength = maxListLength + k\n        val maxListLength = maxListLength\
    \ - k\n        val maxListLength = maxListLength + k\n        val maxListLength\
    \ = maxListLength - k\n        val maxListLength = maxListLength + k\n       \
    \ val maxListLength = maxListLength - k\n        val maxListLength = maxListLength\
    \ + k\n        val maxListLength = maxListLength - k\n        val maxListLength\
    \ = maxListLength + k\n        val maxListLength = maxListLength - k\n       \
    \ val maxListLength = maxListLength + k\n        val maxListLength = maxListLength\
    \ - k\n        val maxListLength = maxListLength + k\n        val maxListLength\
    \ = maxListLength - k\n        val maxListLength = maxListLength + k\n       \
    \ val maxListLength = maxListLength - k\n        val maxListLength = maxListLength\
    \ + k\n        val maxListLength = maxListLength - k\n        val maxListLength\
    \ = maxListLength + k\n        val maxListLength = maxListLength - k\n       \
    \ val maxListLength = maxListLength + k\n        val maxListLength = maxListLength\
    \ - k\n        val maxListLength = maxListLength + k\n        val maxListLength\
    \ = maxListLength - k\n        val maxListLength = maxListLength + k\n       \
    \ val maxListLength = maxListLength - k\n        val maxListLength = maxListLength\
    \ + k\n        val maxListLength = maxListLength - k\n        ", "        val\
    \ arr = arr.sortBy(-_)\n        val len = arr.length\n        val max = new Array[Long](k)\n\
    \        var i = 0\n        while (i < k) {\n            if (arr(i) > arr(i +\
    \ 1)) {\n                max(i) = arr(i)\n                i += 1\n           \
    \ } else {\n                max(i) = arr(i + 1)\n                i += 1\n    \
    \        }\n        }\n        if (arr.length < k) {\n            val arr = new\
    \ Array[Long](k)\n            i = 0\n            while (i < k) {\n           \
    \     arr(i) = arr(i + 1)\n                i += 1\n            }\n        }\n\
    \        arr", "        val n = arr.length\n        val m = arr.max\n        val\
    \ max = new Array[Long](k)\n        var i = 0\n        while (i < k) {\n     \
    \       if (arr(i) < m) {\n                max(i) = arr(i)\n                i\
    \ += 1\n            } else {\n                max(i) = m\n                i +=\
    \ 1\n            }\n        }\n        max.toList", "        val n = arr.length\n\
    \        val m = math.min(k, n)\n        val max = new mutable.ListBuffer[Long]()\n\
    \        var i = 0\n        while (i < m) {\n            if (arr(i) > arr(i +\
    \ 1)) {\n                max += arr(i + 1)\n                i += 1\n         \
    \   } else {\n                max += arr(i)\n                i += 1\n        \
    \    }\n        }\n        max.toList", "        val arr = arr.toList\n      \
    \  val len = arr.length\n        val max = new Array[Long](k)\n        var i =\
    \ 0\n        var j = 0\n        var maxIndex = 0\n        while (i < len) {\n\
    \            if (arr(i) > arr(maxIndex)) {\n                maxIndex = i\n   \
    \         }\n            i += 1\n        }\n        val maxList = arr.take(maxIndex).toList\n\
    \        val maxLen = maxList.length\n        var j = 0\n        while (j < maxLen)\
    \ {\n            if (arr(j) > arr(maxIndex)) {\n                maxIndex(j)\n\
    \            }\n            j += 1\n        }\n        maxList", "        val\
    \ arr = arr.toList\n        val len = arr.length\n        val max = new Array[Long](k)\n\
    \        var i = 0\n        var j = 0\n        var maxIndex = 0\n        while\
    \ (i < len) {\n            if (arr(i) > arr(maxIndex)) {\n                maxIndex\
    \ += 1\n                max(i) = arr(maxIndex)\n            }\n            i +=\
    \ 1\n        }\n        val newArr = new Array[Long](maxIndex + 1)\n        val\
    \ newArrIndex = 0\n        var k = 0\n        while (j < maxIndex) {\n       \
    \     if (arr(j) > arr(k)) {\n                newArrIndex += 1\n             \
    \   newArr(newArrIndex) = arr(j)\n            }\n            j += 1\n        }\n\
    \        newArr", "        val maxNum = arr.sortWith(_ > _).take(k).toList\n \
    \       val maxNumList = maxNum.map(_.toLong)\n        val maxNumListSorted =\
    \ maxNumList.sortWith(_ > _)\n        val maxNumListSortedReversed = maxNumListSorted.reverse\n\
    \        val maxNumListSortedReversedList = maxNumListSortedReversed.map(_.toLong)\n\
    \        val maxNumListSortedReversedListSorted = maxNumListSortedReversedList.sortWith(_\
    \ > _)\n        val maxNumListSortedReversedListSortedReversed = maxNumListSortedReversedListSorted.reverse\n\
    \        val maxNumListSortedReversedListSortedReversedList = maxNumListSortedReversedListSortedReversed.map(_.toLong)\n\
    \        val maxNumListSortedReversedListSortedReversedListSorted = maxNumListSortedReversedListSortedReversedListSorted.sortWith(_\
    \ > _)\n        val maxNumListSortedReversedListSortedReversedListSortedReversed\
    \ = maxNumListSortedReversedListSortedReversedListSortedReversed.reverse\n   \
    \     val maxNumListSortedReversedListSortedReversedListSortedReversedList = maxNumListSortedReversedListSortedReversedListSortedReversedListSorted.map(_.toLong)\n\
    \        val maxNumListSortedReversedListSortedReversedListSortedReversedListSorted\
    \ = maxNumListSortedReversedListSortedReversedListSortedReversedListSorted.sortWith(_\
    \ > _)\n        val maxNumListSortedReversedListSortedReversedListSortedReversedListSortedReversed\
    \ = maxNumListSortedReversedListSortedReversedListSortedReversedListSortedReversed.reverse\n\
    \        val maxNumListSortedReversedListSortedReversedListSortedReversedListSortedReversedList\
    \ = maxNumListSortedReversedListSortedReversedListSortedReversedListSortedReversedListSorted.map(_.toLong)\n\
    \        val maxNumListSortedReversedListSortedReversedListSortedReversedListSortedReversedListSorted\
    \ = maxNumListSortedReversedListSortedReversedListSortedReversedListSortedReversedListSortedReversed.sortWith(_\
    \ > _)\n        val maxNumListSortedReversedListSortedReversedListSortedReversedListSortedReversedListSortedReversedList\
    \ = maxNumListSortedReversedListSortedReversedListSortedReversedListSortedReversedListSortedReversedListSorted.map(_.toLong)\n\
    \        val maxNumList", "        val arr = arr.sortWith(_ > _)\n        val\
    \ len = arr.length\n        val max = new Array[Long](k)\n        var i = 0\n\
    \        while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n           \
    \     max(i) = arr(i)\n                i += 1\n            } else {\n        \
    \        max(i) = arr(i + 1)\n                i += 1\n            }\n        }\n\
    \        max.toList", "        val maxList = mutable.ListBuffer.empty[Long]\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxIndex\
    \ = arr.indexWhere(x => x > 0)\n        val maxValue = arr(maxIndex)\n       \
    \ val maxIndexList = arr.indexWhere(x => x > maxValue)\n        val maxIndexListLength\
    \ = maxIndexList.length\n        val maxIndexListLength = maxIndexListLength -\
    \ 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexListLength = maxIndexListLength\
    \ - 1\n        val maxIndexListLength = maxIndexListLength - 1\n        val maxIndexListLength\
    \ = maxIndexListLength - 1\n        val maxIndexList", "        val result = new\
    \ mutable.ListBuffer[Long]()\n        val maxValue = arr.max\n        val maxIndex\
    \ = arr.indexWhere(x => x == maxValue)\n        val maxIndexInRange = maxIndex\
    \ - k\n        val maxIndexInRangeInRange = maxIndexInRange / 2\n        val maxIndexInRangeInRangeInRange\
    \ = maxIndexInRangeInRange / 2\n        val maxIndexInRangeInRangeInRangeInRange\
    \ = maxIndexInRangeInRangeInRange / 2\n        val maxIndexInRangeInRangeInRangeInRangeInRange\
    \ = maxIndexInRangeInRangeInRangeInRange / 2\n        val maxIndexInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxIndexInRangeInRangeInRangeInRangeInRange / 2\n        val maxIndexInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxIndexInRangeInRangeInRangeInRangeInRange / 2\n        val maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxIndexInRangeInRangeInRangeInRangeInRangeInRange / 2\n        val maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxIndexInRangeInRangeInRangeInRangeInRangeInRange / 2\n        val maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxIndexInRangeInRangeInRangeInRangeInRangeInRange / 2\n        val maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRange / 2\n        val\
    \ maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange = maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ / 2\n        val maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange / 2\n   \
    \     val maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange /\
    \ 2\n        val maxIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxIndexIn", "        val max = new mutable.PriorityQueue[Long](k)\n     \
    \   arr.foreach(x => max.enqueue(x))\n        val res = new mutable.PriorityQueue[Long](k)\n\
    \        while(max.nonEmpty) {\n            res.enqueue(max.dequeue())\n     \
    \   }\n        res.toList", "        val maxList = mutable.ListBuffer.empty[Long]\n\
    \        val maxValue = arr.head\n        val maxIndex = arr.indexOfMax\n    \
    \    val maxLength = arr.length\n        val maxK = k\n        val maxKIndex =\
    \ maxIndex - maxK\n        val maxKLength = maxLength - maxK\n        val maxKValue\
    \ = arr(maxKIndex)\n        val maxKValueIndex = maxKIndex - maxKLength\n    \
    \    val maxKValueLength = maxKLength - maxKLength\n        val maxKValueIndex\
    \ = maxKIndex - maxKLength\n        val maxKValueLength = maxKLength - maxKLength\n\
    \        val maxKValueIndex = maxKIndex - maxKLength\n        val maxKValueLength\
    \ = maxKLength - maxKLength\n        val maxKValueIndex = maxKIndex - maxKLength\n\
    \        val maxKValueLength = maxKLength - maxKLength\n        val maxKValueIndex\
    \ = maxKIndex - maxKLength\n        val maxKValueLength = maxKLength - maxKLength\n\
    \        val maxKValueIndex = maxKIndex - maxKLength\n        val maxKValueLength\
    \ = maxKLength - maxKLength\n        val maxKValueIndex = maxKIndex - maxKLength\n\
    \        val maxKValueLength = maxKLength - maxKLength\n        val maxKValueIndex\
    \ = maxKIndex - maxKLength\n        val maxKValueLength = maxKLength - maxKLength\n\
    \        val maxKValueIndex = maxKIndex - maxKLength\n        val maxKValueLength\
    \ = maxKLength - maxKLength\n        val maxKValueIndex = maxKIndex - maxKLength\n\
    \        val maxKValueLength = maxKLength - maxKLength\n        val maxKValueIndex\
    \ = maxKIndex - maxKLength\n        val maxKValueLength = maxKLength - maxKLength\n\
    \        val maxKValueIndex = maxKIndex - maxKLength\n        val maxKValueLength\
    \ = maxKLength - maxKLength\n        val maxKValueIndex = maxKIndex - maxKLength\n\
    \        val maxKValueLength = maxKLength - maxKLength\n        val maxKValueIndex\
    \ = maxKIndex - maxKLength\n        val maxKValueLength = maxKLength - maxKLength\n\
    \        val maxKValueIndex = maxKIndex - maxKLength\n        val maxKValueLength\
    \ = maxKLength - maxKLength\n        val maxKValueIndex = maxKIndex - maxKLength\n\
    \        val max", "        val arr = arr.toList\n        val len = arr.length\n\
    \        val max = arr.max\n        val maxIndex = arr.indexWhere(x => x == max)\n\
    \        val maxIndex2 = maxIndex + 1\n        val maxIndex3 = maxIndex2 + 1\n\
    \        val maxIndex4 = maxIndex3 + 1\n        val maxIndex5 = maxIndex4 + 1\n\
    \        val maxIndex6 = maxIndex5 + 1\n        val maxIndex7 = maxIndex6 + 1\n\
    \        val maxIndex8 = maxIndex7 + 1\n        val maxIndex9 = maxIndex8 + 1\n\
    \        val maxIndex10 = maxIndex9 + 1\n        val maxIndex11 = maxIndex10 +\
    \ 1\n        val maxIndex12 = maxIndex11 + 1\n        val maxIndex13 = maxIndex12\
    \ + 1\n        val maxIndex14 = maxIndex13 + 1\n        val maxIndex15 = maxIndex14\
    \ + 1\n        val maxIndex16 = maxIndex15 + 1\n        val maxIndex17 = maxIndex16\
    \ + 1\n        val maxIndex18 = maxIndex17 + 1\n        val maxIndex19 = maxIndex18\
    \ + 1\n        val maxIndex20 = maxIndex19 + 1\n        val maxIndex21 = maxIndex20\
    \ + 1\n        val maxIndex22 = maxIndex21 + 1\n        val maxIndex23 = maxIndex22\
    \ + 1\n        val maxIndex24 = maxIndex23 + 1\n        val maxIndex25 = maxIndex24\
    \ + 1\n        val maxIndex26 = maxIndex25 + 1\n        val maxIndex27 = maxIndex26\
    \ + 1\n        val maxIndex28 = maxIndex27 + 1\n        val maxIndex29 = maxIndex28\
    \ + 1\n        val maxIndex30 = maxIndex29 + 1\n        val maxIndex31 = maxIndex30\
    \ + 1\n        val maxIndex32 = maxIndex31 + 1\n        val maxIndex33 = maxIndex32\
    \ + 1\n        val maxIndex34 = maxIndex33 + 1\n        val maxIndex35 = maxIndex34\
    \ + 1\n        val maxIndex36 = maxIndex35 + 1\n        val maxIndex37 = maxIndex36\
    \ + 1\n        val maxIndex38 = maxIndex37 + 1\n        val maxIndex39 = maxIndex38\
    \ + 1\n        val maxIndex40 = maxIndex39 + 1\n        val maxIndex41 = maxIndex40\
    \ + 1\n        val maxIndex42 = maxIndex41 + 1\n        val maxIndex43 = maxIndex42\
    \ + 1\n        val maxIndex44 = maxIndex43 + 1\n        val maxIndex45 = maxIndex44\
    \ + 1\n        val maxIndex4", "        val arr = arr.toList\n        val len\
    \ = arr.length\n        val max = new Array[Long](k)\n        var i = 0\n    \
    \    while(i < k) {\n            var maxIndex = 0\n            var maxValue =\
    \ arr(0)\n            for(i <- 0 until len) {\n                if(arr(i) > maxValue)\
    \ {\n                    maxValue = arr(i)\n                    maxIndex = i\n\
    \                }\n            }\n            max += maxIndex\n            i\
    \ += 1\n        }\n        max.toList", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val maxValue = arr.max\n        val maxIndex = arr.indexWhere(x => x\
    \ == maxValue)\n        val maxLength = arr.length - maxIndex\n        val maxK\
    \ = math.min(k, maxLength)\n        val maxValues = arr.take(maxK)\n        result.addAll(maxValues)\n\
    \        result", "        val arr = arr.toList\n        val len = arr.size\n\
    \        val max = new Array[Long](k)\n        val maxIndex = new Array[Int](k)\n\
    \        val maxIndexMap = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap3 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap4 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap5 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap6\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap7 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap8 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap9 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap10\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap11 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap12 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap13 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap14\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap15 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap16 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap17 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap18\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap19 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap20 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap21 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap22\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap23 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap24 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap25 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap26\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap27 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap28 = new mutable.HashMap[Long, Int]()\n     \
    \   val ", "        val maxList = arr.sortBy(-_)\n        val maxLength = maxList.size\n\
    \        val maxList2 = maxList.take(k)\n        val maxList3 = maxList2.sortBy(-_)\n\
    \        val maxList4 = maxList3.take(k)\n        val maxList5 = maxList4.sortBy(-_)\n\
    \        val maxList6 = maxList5.take(k)\n        val maxList7 = maxList6.sortBy(-_)\n\
    \        val maxList8 = maxList7.take(k)\n        val maxList9 = maxList8.sortBy(-_)\n\
    \        val maxList10 = maxList9.take(k)\n        val maxList11 = maxList10.sortBy(-_)\n\
    \        val maxList12 = maxList11.take(k)\n        val maxList13 = maxList12.sortBy(-_)\n\
    \        val maxList14 = maxList13.take(k)\n        val maxList15 = maxList14.sortBy(-_)\n\
    \        val maxList16 = maxList15.take(k)\n        val maxList17 = maxList16.sortBy(-_)\n\
    \        val maxList18 = maxList17.take(k)\n        val maxList19 = maxList18.sortBy(-_)\n\
    \        val maxList20 = maxList19.take(k)\n        val maxList21 = maxList20.sortBy(-_)\n\
    \        val maxList22 = maxList21.take(k)\n        val maxList23 = maxList22.sortBy(-_)\n\
    \        val maxList24 = maxList23.take(k)\n        val maxList25 = maxList24.sortBy(-_)\n\
    \        val maxList26 = maxList25.take(k)\n        val maxList27 = maxList26.sortBy(-_)\n\
    \        val maxList28 = maxList27.take(k)\n        val maxList29 = maxList28.sortBy(-_)\n\
    \        val maxList30 = maxList29.take(k)\n        val maxList31 = maxList30.sortBy(-_)\n\
    \        val maxList32 = maxList31.take(k)\n        val maxList33 = maxList32.sortBy(-_)\n\
    \        val maxList34 = maxList33.take(k)\n        val maxList35 = maxList34.sortBy(-_)\n\
    \        val maxList36 = maxList35.take(k)\n        val maxList37 = maxList36.sortBy(-_)\n\
    \        ", "        val maxList = mutable.ListBuffer.empty[Long]\n        val\
    \ maxLength = arr.length\n        val maxK = k\n        val maxElement = arr.max\n\
    \        val maxIndex = arr.indexOf(maxElement)\n        val maxElementIndex =\
    \ maxIndex\n        val maxElementLength = maxIndex\n        val maxElementK =\
    \ maxElementIndex\n        val maxElementElement = maxElement\n        val maxElementElementIndex\
    \ = maxElementIndex\n        val maxElementElementLength = maxElementIndex\n \
    \       val maxElementElementK = maxElementElementIndex\n        val maxElementElementElement\
    \ = maxElementElement\n        val maxElementElementElementIndex = maxElementElementIndex\n\
    \        val maxElementElementElementLength = maxElementElementIndex\n       \
    \ val maxElementElementElementK = maxElementElementElementIndex\n        val maxElementElementElementElement\
    \ = maxElementElementElement\n        val maxElementElementElementElementIndex\
    \ = maxElementElementElementIndex\n        val maxElementElementElementElementLength\
    \ = maxElementElementElementIndex\n        val maxElementElementElementElementK\
    \ = maxElementElementElementElementIndex\n        val maxElementElementElementElementElement\
    \ = maxElementElementElementElement\n        val maxElementElementElementElementElementIndex\
    \ = maxElementElementElementElementElementIndex\n        val maxElementElementElementElementElementLength\
    \ = maxElementElementElementElementElementIndex\n        val maxElementElementElementElementElementK\
    \ = maxElementElementElementElementElementIndex\n        val maxElementElementElementElementElementElement\
    \ = maxElementElementElementElementElementElement\n        val maxElementElementElementElementElementElementIndex\
    \ = maxElementElementElementElementElementElementIndex\n        val maxElementElementElementElementElementElementLength\
    \ = maxElementElementElementElementElementElementIndex\n        val maxElementElementElementElementElementElementK\
    \ = maxElementElementElementElementElementElementIndex\n        val maxElementElementElementElementElementElementElement\
    \ = maxElementElementElementElementElementElementElement\n        val maxElementElementElementElementElementElementElementIndex\
    \ = maxElementElementElementElementElementElementElementElementIndex\n       \
    \ val maxElementElementElementElementElementElementElementLength = maxElementElementElementElementElementElementElementElementIndex\n\
    \        val maxElementElementElementElementElementElementElementK = maxElementElementElementElementElementElementElementElementIndex\n\
    \        val maxElementElementElementElementElementElementElementElement = maxElementElementElementElementElementElementElementElementElementIndex\n\
    \        val maxElementElementElementElementElementElementElementElementIndex\
    \ = maxElementElementElementElementElementElementElementElementElementLength\n\
    \        val maxElementElementElementElementElementElementElementElementK = maxElementElement",
  "        val arr = arr.toList\n        val len = arr.length\n        val max = arr.max\n\
    \        val maxIndex = arr.indexWhere(x => x == max)\n        val maxIndex2 =\
    \ maxIndex + 1\n        val maxIndex3 = maxIndex2 + 1\n        val maxIndex4 =\
    \ maxIndex3 + 1\n        val maxIndex5 = maxIndex4 + 1\n        val maxIndex6\
    \ = maxIndex5 + 1\n        val maxIndex7 = maxIndex6 + 1\n        val maxIndex8\
    \ = maxIndex7 + 1\n        val maxIndex9 = maxIndex8 + 1\n        val maxIndex10\
    \ = maxIndex9 + 1\n        val maxIndex11 = maxIndex10 + 1\n        val maxIndex12\
    \ = maxIndex11 + 1\n        val maxIndex13 = maxIndex12 + 1\n        val maxIndex14\
    \ = maxIndex13 + 1\n        val maxIndex15 = maxIndex14 + 1\n        val maxIndex16\
    \ = maxIndex15 + 1\n        val maxIndex17 = maxIndex16 + 1\n        val maxIndex18\
    \ = maxIndex17 + 1\n        val maxIndex19 = maxIndex18 + 1\n        val maxIndex20\
    \ = maxIndex19 + 1\n        val maxIndex21 = maxIndex20 + 1\n        val maxIndex22\
    \ = maxIndex21 + 1\n        val maxIndex23 = maxIndex22 + 1\n        val maxIndex24\
    \ = maxIndex23 + 1\n        val maxIndex25 = maxIndex24 + 1\n        val maxIndex26\
    \ = maxIndex25 + 1\n        val maxIndex27 = maxIndex26 + 1\n        val maxIndex28\
    \ = maxIndex27 + 1\n        val maxIndex29 = maxIndex28 + 1\n        val maxIndex30\
    \ = maxIndex29 + 1\n        val maxIndex31 = maxIndex30 + 1\n        val maxIndex32\
    \ = maxIndex31 + 1\n        val maxIndex33 = maxIndex32 + 1\n        val maxIndex34\
    \ = maxIndex33 + 1\n        val maxIndex35 = maxIndex34 + 1\n        val maxIndex36\
    \ = maxIndex35 + 1\n        val maxIndex37 = maxIndex36 + 1\n        val maxIndex38\
    \ = maxIndex37 + 1\n        val maxIndex39 = maxIndex38 + 1\n        val maxIndex40\
    \ = maxIndex39 + 1\n        val maxIndex41 = maxIndex40 + 1\n        val maxIndex42\
    \ = maxIndex41 + 1\n        val maxIndex43 = maxIndex42 + 1\n        val maxIndex44\
    \ = maxIndex43 + 1\n        val maxIndex45 = maxIndex44 + 1\n        val maxIndex4",
  "        val n = arr.length\n        val m = k\n        val max = new Array[Long](m)\n\
    \        var i = 0\n        while (i < m) {\n            var maxIndex = 0\n  \
    \          var maxValue = arr(0)\n            for (j <- 0 until n) {\n       \
    \         if (arr(j) > maxValue) {\n                    maxValue = arr(j)\n  \
    \                  maxIndex = j\n                }\n            }\n          \
    \  max.update(i, maxValue)\n            i += 1\n        }\n        max.toList",
  "        val arr = arr.sortBy(_).reverse\n        val maxList = arr.take(k)\n  \
    \      val maxList2 = arr.drop(k)\n        val maxList3 = arr.takeRight(k)\n \
    \       val maxList4 = arr.dropRight(k)\n        val maxList5 = arr.take(k)\n\
    \        val maxList6 = arr.drop(k)\n        val maxList7 = arr.takeRight(k)\n\
    \        val maxList8 = arr.dropRight(k)\n        val maxList9 = arr.take(k)\n\
    \        val maxList10 = arr.drop(k)\n        val maxList11 = arr.takeRight(k)\n\
    \        val maxList12 = arr.dropRight(k)\n        val maxList13 = arr.take(k)\n\
    \        val maxList14 = arr.drop(k)\n        val maxList15 = arr.takeRight(k)\n\
    \        val maxList16 = arr.dropRight(k)\n        val maxList17 = arr.take(k)\n\
    \        val maxList18 = arr.drop(k)\n        val maxList19 = arr.takeRight(k)\n\
    \        val maxList20 = arr.dropRight(k)\n        val maxList21 = arr.take(k)\n\
    \        val maxList22 = arr.drop(k)\n        val maxList23 = arr.takeRight(k)\n\
    \        val maxList24 = arr.dropRight(k)\n        val maxList25 = arr.take(k)\n\
    \        val maxList26 = arr.drop(k)\n        val maxList27 = arr.takeRight(k)\n\
    \        val maxList28 = arr.dropRight(k)\n        val maxList29 = arr.take(k)\n\
    \        val maxList30 = arr.drop(k)\n        val maxList31 = arr.takeRight(k)\n\
    \        val maxList32 = arr.dropRight(k)\n        val maxList33 = arr.take(k)\n\
    \        val maxList34 = arr.drop(k)\n        val maxList35 = arr.takeRight(k)\n\
    \        val maxList36 = arr.dropRight(k)\n        val maxList37 = arr.take(k)\n\
    \        val maxList38 = arr.drop(k)\n        val maxList39 = arr.takeRight(k)\n\
    \        val maxList40 = arr.dropRight(k)\n        val maxList41 = arr.take(k)\n\
    \        val maxList42 = arr.drop(k)\n        val maxList43 = arr.takeRight(k)\n\
    \        val maxList44 = arr.dropRight(k)\n        val maxList45 = arr.take(",
  "        val arr = arr.sortBy(-_)\n        val n = arr.length\n        val max =\
    \ new Array[Long](k)\n        var i = 0\n        while (i < k) {\n           \
    \ if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n              \
    \  i += 1\n            } else {\n                max(i) = arr(i + 1)\n       \
    \         i += 1\n            }\n        }\n        max.toList", "        val\
    \ arr = arr.toList\n        val len = arr.length\n        val max = new Array[Long](k)\n\
    \        var i = 0\n        var j = 0\n        var maxIndex = 0\n        while(i\
    \ < len) {\n            while(j < k && arr(i) < arr(j)) {\n                j +=\
    \ 1\n            }\n            while(j < k && arr(i) == arr(j)) {\n         \
    \       j += 1\n            }\n            if(j == k) {\n                max(i)\
    \ = arr(i)\n                i += 1\n                j += 1\n                maxIndex\
    \ += 1\n            } else {\n                max(i) = arr(j)\n              \
    \  j += 1\n                i += 1\n            }\n        }\n        max.toList",
  "        val arr = arr.sortWith(_ < _)\n        val max = arr.take(k)\n        val\
    \ rest = arr.drop(k)\n        rest ++ max", "        val arr = arr.toList\n  \
    \      val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        var j = 0\n        var maxIndex = 0\n        while(i < len) {\n\
    \            while(j < k) {\n                if(arr(i) > arr(j)) {\n         \
    \           maxIndex = j\n                    arr(maxIndex) = arr(i)\n       \
    \             arr(i) = arr(j)\n                    arr(j) = arr(maxIndex)\n  \
    \              }\n                j+=1\n            }\n            i+=1\n    \
    \        j = 0\n        }\n        arr", "        val arr = arr.sortBy(_)\n  \
    \      val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n   \
    \             max(i) = arr(i)\n                i += 1\n            } else {\n\
    \                max(i) = arr(i + 1)\n                i += 1\n            }\n\
    \        }\n        max.toList", "        val arr = arr.sortBy(x => x)\n     \
    \   val len = arr.length\n        val max = new Array[Long](k)\n        val maxIndex\
    \ = new Array[Int](k)\n        var i = 0\n        var j = 0\n        var maxIndex\
    \ = 0\n        var maxVal = 0\n        while(i < len) {\n            while(j <\
    \ k) {\n                if(arr(i) > arr(j)) {\n                    maxVal = arr(i)\n\
    \                    maxIndex = i\n                    maxIndex(0) = j\n     \
    \               maxIndex(1) = j\n                    maxIndex(2) = j\n       \
    \             i = j\n                    j = j + 1\n                } else {\n\
    \                    maxVal = arr(j)\n                    maxIndex = j\n     \
    \               maxIndex(0) = i\n                    maxIndex(1) = i\n       \
    \             maxIndex(2) = i\n                    j = i + 1\n               \
    \ }\n            }\n            i = i + 1\n        }\n        val result = new\
    \ Array[Long](k)\n        for(i <- 0 until k) {\n            result(i) = arr(maxIndex(i))\n\
    \        }\n        result", "        val maxList = mutable.ListBuffer[Long]()\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxValue\
    \ = arr(0)\n        val maxIndex = arr.indexOf(0)\n        for(i <- 1 to maxLength)\
    \ {\n            val value = arr(i)\n            if(value > maxValue) {\n    \
    \            maxValue = value\n                maxIndex = i\n            }\n \
    \       }\n        val maxListLength = maxIndex - maxK + 1\n        val maxList\
    \ = new Array[Long](maxListLength)\n        for(i <- 0 until maxListLength) {\n\
    \            maxList(i) = arr(maxIndex + i)\n        }\n        maxList", "  \
    \      val arr = arr.toList\n        val n = arr.length\n        val m = arr.take(k).max\n\
    \        val maxList = arr.take(k).filter(_ == m).toList\n        val maxList2\
    \ = arr.take(k).filter(_ != m).toList\n        val maxList3 = arr.take(k).filter(_\
    \ != m).filter(_ != m).toList\n        val maxList4 = arr.take(k).filter(_ !=\
    \ m).filter(_ != m).filter(_ != m).toList\n        val maxList5 = arr.take(k).filter(_\
    \ != m).filter(_ != m).filter(_ != m).filter(_ != m).toList\n        val maxList6\
    \ = arr.take(k).filter(_ != m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_\
    \ != m).toList\n        val maxList7 = arr.take(k).filter(_ != m).filter(_ !=\
    \ m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_ != m).toList\n    \
    \    val maxList8 = arr.take(k).filter(_ != m).filter(_ != m).filter(_ != m).filter(_\
    \ != m).filter(_ != m).filter(_ != m).filter(_ != m).toList\n        val maxList9\
    \ = arr.take(k).filter(_ != m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_\
    \ != m).filter(_ != m).filter(_ != m).filter(_ != m).toList\n        val maxList10\
    \ = arr.take(k).filter(_ != m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_\
    \ != m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_ != m).toList\n \
    \       val maxList11 = arr.take(k).filter(_ != m).filter(_ != m).filter(_ !=\
    \ m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_\
    \ != m).filter(_ != m).toList\n        val maxList12 = arr.take(k).filter(_ !=\
    \ m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_\
    \ != m).filter(_ != m).filter(_ != m).filter(_ != m).filter(_ != m).toList\n \
    \       val maxList13 = arr.take(k).filter(_ != m).filter(_ != m).filter(_ !=\
    \ m", "        val arr = arr.toList\n        val len = arr.length\n        val\
    \ max = arr.max\n        val maxIndex = arr.indexWhere(x => x == max)\n      \
    \  val maxIndexList = arr.take(maxIndex).toList\n        val maxIndexListLen =\
    \ maxIndexList.length\n        val maxIndexListLenMinusOne = maxIndexListLen -\
    \ 1\n        val maxIndexListLenMinusTwo = maxIndexListLen - 2\n        val maxIndexListLenMinusThree\
    \ = maxIndexListLen - 3\n        val maxIndexListLenMinusFour = maxIndexListLen\
    \ - 4\n        val maxIndexListLenMinusFive = maxIndexListLen - 5\n        val\
    \ maxIndexListLenMinusSix = maxIndexListLen - 6\n        val maxIndexListLenMinusSeven\
    \ = maxIndexListLen - 7\n        val maxIndexListLenMinusEight = maxIndexListLen\
    \ - 8\n        val maxIndexListLenMinusNine = maxIndexListLen - 9\n        val\
    \ maxIndexListLenMinusTen = maxIndexListLen - 10\n        val maxIndexListLenMinusEleven\
    \ = maxIndexListLen - 11\n        val maxIndexListLenMinusTwelve = maxIndexListLen\
    \ - 12\n        val maxIndexListLenMinusThirteen = maxIndexListLen - 13\n    \
    \    val maxIndexListLenMinusFourteen = maxIndexListLen - 14\n        val maxIndexListLenMinusFifteen\
    \ = maxIndexListLen - 15\n        val maxIndexListLenMinusSixteen = maxIndexListLen\
    \ - 16\n        val maxIndexListLenMinusSeventeen = maxIndexListLen - 17\n   \
    \     val maxIndexListLenMinusEighteen = maxIndexListLen - 18\n        val maxIndexListLenMinusNineteen\
    \ = maxIndexListLen - 19\n        val maxIndexListLenMinusTwenty = maxIndexListLen\
    \ - 20\n        val maxIndexListLenMinusThirty = maxIndexListLen - 30\n      \
    \  val maxIndexListLenMinusFourty = maxIndexListLen - 40\n        val maxIndexListLenMinusFifty\
    \ = maxIndexListLen - 50\n        val maxIndexListLenMinusSixty = maxIndexListLen\
    \ - 60\n        val maxIndexListLenMinusSeventy = maxIndexListLen - 70\n     \
    \   val maxIndex", "        val result = new mutable.ListBuffer[Long]()\n    \
    \    val arr = arr.toList\n        val len = arr.length\n        val max = arr.max\n\
    \        val maxIndex = arr.indexWhere(x => x == max)\n        val maxIndex1 =\
    \ maxIndex - 1\n        val maxIndex2 = maxIndex + 1\n        val maxIndex3 =\
    \ maxIndex + 2\n        val maxIndex4 = maxIndex + 3\n        val maxIndex5 =\
    \ maxIndex + 4\n        val maxIndex6 = maxIndex + 5\n        val maxIndex7 =\
    \ maxIndex + 6\n        val maxIndex8 = maxIndex + 7\n        val maxIndex9 =\
    \ maxIndex + 8\n        val maxIndex10 = maxIndex + 9\n        val maxIndex11\
    \ = maxIndex + 10\n        val maxIndex12 = maxIndex + 11\n        val maxIndex13\
    \ = maxIndex + 12\n        val maxIndex14 = maxIndex + 13\n        val maxIndex15\
    \ = maxIndex + 14\n        val maxIndex16 = maxIndex + 15\n        val maxIndex17\
    \ = maxIndex + 16\n        val maxIndex18 = maxIndex + 17\n        val maxIndex19\
    \ = maxIndex + 18\n        val maxIndex20 = maxIndex + 19\n        val maxIndex21\
    \ = maxIndex + 20\n        val maxIndex22 = maxIndex + 21\n        val maxIndex23\
    \ = maxIndex + 22\n        val maxIndex24 = maxIndex + 23\n        val maxIndex25\
    \ = maxIndex + 24\n        val maxIndex26 = maxIndex + 25\n        val maxIndex27\
    \ = maxIndex + 26\n        val maxIndex28 = maxIndex + 27\n        val maxIndex29\
    \ = maxIndex + 28\n        val maxIndex30 = maxIndex + 29\n        val maxIndex31\
    \ = maxIndex + 30\n        val maxIndex32 = maxIndex + 31\n        val maxIndex33\
    \ = maxIndex + 32\n        val maxIndex34 = maxIndex + 33\n        val maxIndex35\
    \ = maxIndex + 34\n        val maxIndex36 = maxIndex + 35\n        val maxIndex37\
    \ = maxIndex + 36\n        val maxIndex38 = maxIndex + 37\n        val maxIndex39\
    \ = maxIndex + 38\n        val maxIndex40 = maxIndex + 39\n        val maxIndex41\
    \ = maxIndex + 40\n        val maxIndex42 = maxIndex + 41\n        val maxIndex43\
    \ = maxIndex + 42\n        val maxIndex44 = maxIndex", "        val arr = arr.toList\n\
    \        val n = arr.length\n        val m = arr.take(k).max\n        val max\
    \ = arr.filter(_ <= m).sortBy(-_).take(k)\n        max.toList", "        val arr\
    \ = arr.sortBy(-_)\n        val len = arr.length\n        val max = new Array[Long](k)\n\
    \        var i = 0\n        while (i < k) {\n            if (arr(i) > arr(i +\
    \ 1)) {\n                max(i) = arr(i)\n                i += 1\n           \
    \ } else {\n                max(i) = arr(i + 1)\n                i += 1\n    \
    \        }\n        }\n        max.toList", "        val maxNums = arr.take(k)\n\
    \        val maxNumsSet = maxNums.toSet\n        val maxNumsSortedSet = maxNums.sort\n\
    \        val maxNumsSortedSetSet = maxNumsSortedSet.toSet\n        val maxNumsSortedSetSet\
    \ = maxNumsSortedSet.subsets(k)\n        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n\
    \        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet\
    \ = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n\
    \        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet\
    \ = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n\
    \        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet\
    \ = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n\
    \        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet\
    \ = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n\
    \        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet\
    \ = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n\
    \        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet\
    \ = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n\
    \        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet\
    \ = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n\
    \        val maxNumsSortedSetSet = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet\
    \ = maxNumsSortedSetSet.toSet\n        val maxNumsSortedSetSet = ", "        val\
    \ n = arr.length\n        val m = math.min(k, n)\n        val maxList = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxIndex = mutable.ArrayBuffer.empty[Int]\n        val maxValue =\
    \ mutable.ArrayBuffer.empty[Long]\n        \n        for(i <- 0 until m) {\n \
    \           val index = arr.indexOfMax(arr(i))\n            maxIndex += index\n\
    \            maxValue += arr(i)\n            maxList += arr(i)\n        }\n  \
    \      \n        maxIndex.toList", "        val n = arr.length\n        val m\
    \ = math.min(k, n)\n        val maxList = mutable.ArrayBuffer.empty[Long]\n  \
    \      var max = 0\n        var i = 0\n        while (i < m) {\n            max\
    \ = arr(i)\n            i += 1\n        }\n        while (i < n) {\n         \
    \   if (max < arr(i)) {\n                max = arr(i)\n            }\n       \
    \     i += 1\n        }\n        maxList += max\n        val newList = maxList.sortWith(_\
    \ > _)\n        if (newList.length == k) {\n            newList\n        } else\
    \ {\n            maximum(newList, k)\n        }", "        val arr = arr.sortBy(_)\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n   \
    \             max(i) = arr(i)\n                i += 1\n            } else {\n\
    \                max(i) = arr(i + 1)\n                i += 1\n            }\n\
    \        }\n        max.toList", "        val arr = arr.toList\n        val len\
    \ = arr.length\n        val max = new Array[Long](k)\n        val maxIndex = new\
    \ Array[Int](k)\n        val maxIndexMap = new mutable.HashMap[Long, Int]()\n\
    \        val maxIndexMap2 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap3\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap4 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap5 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap6 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap7\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap8 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap9 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap10 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap11\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap12 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap13 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap14 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap15\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap16 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap17 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap18 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap19\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap20 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap21 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap22 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap23\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap24 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap25 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap26 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap27\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap28 = new mutable.HashMap[Long,\
    \ Int]()\n        val ", "        val arr = arr.toList\n        val n = arr.length\n\
    \        val m = arr.take(k).toList\n        val max = new Array[Long](k)\n  \
    \      val maxIndex = new Array[Int](k)\n        val maxIndexMap = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap2 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap3 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap4\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap5 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap6 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap7 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap8\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap9 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap10 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap11 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap12\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap13 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap14 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap15 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap16\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap17 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap18 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap19 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap20\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap21 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap22 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap23 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap24\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap25 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap26 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap27 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap28\
    \ = new mutable.Hash", "        val arr = arr.sortBy(-_)\n        val len = arr.length\n\
    \        val max = new Array[Long](k)\n        var i = 0\n        while (i < k)\
    \ {\n            if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n\
    \                i += 1\n            } else {\n                max(i) = arr(i\
    \ + 1)\n                i += 1\n            }\n        }\n        if (arr.length\
    \ < k) {\n            val len = arr.length\n            val max = new Array[Long](k)\n\
    \            var i = 0\n            while (i < k) {\n                if (arr(i)\
    \ > arr(i + 1)) {\n                    max(i) = arr(i)\n                    i\
    \ += 1\n                } else {\n                    max(i) = arr(i + 1)\n  \
    \                  i += 1\n                }\n            }\n        }\n     \
    \   max.toList", "        val n = arr.length\n        val m = math.min(k, n)\n\
    \        val maxList = mutable.ArrayBuffer.empty[Long]\n        var max = 0\n\
    \        var i = 0\n        while (i < m) {\n            val cur = arr(i)\n  \
    \          if (cur > max) {\n                max = cur\n                maxList\
    \ += max\n            }\n            i += 1\n        }\n        if (max == 0)\
    \ maxList += 0\n        maxList.toList", "        val maxList = mutable.ListBuffer.empty[Long]\n\
    \        var maxNum : Long = arr(0)\n        var i : Long = 1\n        while (i\
    \ < arr.length) {\n            if (arr(i) > maxNum) {\n                maxNum\
    \ = arr(i)\n            }\n            i += 1\n        }\n        val maxListLength\
    \ = k - maxList.size\n        if (maxListLength > 0) {\n            maxList ++=\
    \ arr.take(maxListLength)\n        }\n        maxList.toList", "        val arr\
    \ = arr.sortBy(-_)\n        val n = arr.length\n        val max = new Array[Long](k)\n\
    \        var i = 0\n        while (i < k) {\n            if (arr(i) > arr(i +\
    \ 1)) {\n                max(i) = arr(i)\n                i += 1\n           \
    \ } else {\n                max(i) = arr(i + 1)\n                i += 1\n    \
    \        }\n        }\n        max.toList", "        val arr = arr.toList\n  \
    \      val len = arr.length\n        val max = new Array[Long](k)\n        val\
    \ maxIndex = new Array[Int](k)\n        val maxIndexMap = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap2 = new mutable.HashMap[Long, Int]()\n      \
    \  var i = 0\n        var j = 0\n        var k = 0\n        var maxIndex = 0\n\
    \        var maxIndex2 = 0\n        var maxIndex3 = 0\n        var maxIndex4 =\
    \ 0\n        var maxIndex5 = 0\n        var maxIndex6 = 0\n        var maxIndex7\
    \ = 0\n        var maxIndex8 = 0\n        var maxIndex9 = 0\n        var maxIndex10\
    \ = 0\n        var maxIndex11 = 0\n        var maxIndex12 = 0\n        var maxIndex13\
    \ = 0\n        var maxIndex14 = 0\n        var maxIndex15 = 0\n        var maxIndex16\
    \ = 0\n        var maxIndex17 = 0\n        var maxIndex18 = 0\n        var maxIndex19\
    \ = 0\n        var maxIndex20 = 0\n        var maxIndex21 = 0\n        var maxIndex22\
    \ = 0\n        var maxIndex23 = 0\n        var maxIndex24 = 0\n        var maxIndex25\
    \ = 0\n        var maxIndex26 = 0\n        var maxIndex27 = 0\n        var maxIndex28\
    \ = 0\n        var maxIndex29 = 0\n        var maxIndex30 = 0\n        var maxIndex31\
    \ = 0\n        var maxIndex32 = 0\n        var maxIndex33 = 0\n        var maxIndex34\
    \ = 0\n        var maxIndex35 = 0\n        var maxIndex36 = 0\n        var maxIndex37\
    \ = 0\n        var maxIndex38 = 0\n        var maxIndex39 = 0\n        var maxIndex40\
    \ = 0\n        var maxIndex41 = 0\n        var maxIndex42 = 0\n        var maxIndex43\
    \ = 0\n        var maxIndex44 = 0\n        var maxIndex45 = 0\n        var maxIndex46\
    \ = 0\n        var maxIndex47 = 0\n        var maxIndex48 = 0\n        var maxIndex49\
    \ = 0\n        var maxIndex50 = 0\n        var maxIndex51 = 0\n        var maxIndex52\
    \ = 0\n        var maxIndex53 = 0\n        var maxIndex54 = 0\n        var maxIndex55\
    \ = 0\n        var maxIndex56 = 0\n        var maxIndex57 = 0\n        var maxIndex58\
    \ = 0\n        var maxIndex59 = 0\n        var maxIndex60 = 0\n        var maxIndex61\
    \ = 0\n        var maxIndex62 = 0\n        var maxIndex63 = 0\n        var maxIndex64\
    \ = 0\n        var maxIndex65 = 0\n        var maxIndex66 = 0\n        var maxIndex67\
    \ = 0\n        var maxIndex68 = 0\n        var maxIndex69 = 0\n        var maxIndex70\
    \ = 0\n        var maxIndex71 = 0\n        var maxIndex72 = 0\n        var maxIndex",
  "        val result = new mutable.ListBuffer[Long]()\n        var max = 0\n    \
    \    var maxIndex = 0\n        for (i <- 0 until arr.length) {\n            if\
    \ (arr(i) > max) {\n                max = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        for (i <- 0 until arr.length) {\n         \
    \   if (arr(i) == max) {\n                result += arr(maxIndex)\n          \
    \  }\n        }\n        return result.toList", "        val arr = arr.sortBy(-_)\n\
    \        val max = arr.take(k).toList\n        val rest = arr.drop(k)\n      \
    \  val restSorted = maximum(rest, k)\n        restSorted.zip(max).map(x => x._1\
    \ :: x._2)", "        val arr = arr.toList\n        val len = arr.size\n     \
    \   val max = new mutable.PriorityQueue[Long]()\n        val maxSize = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndex = new mutable.PriorityQueue[Long]()\n        val maxIndexSize\
    \ = new mutable.PriorityQueue[Long]()\n        val maxIndexSize2 = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndexSize3 = new mutable.PriorityQueue[Long]()\n        val maxIndexSize4\
    \ = new mutable.PriorityQueue[Long]()\n        val maxIndexSize5 = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndexSize6 = new mutable.PriorityQueue[Long]()\n        val maxIndexSize7\
    \ = new mutable.PriorityQueue[Long]()\n        val maxIndexSize8 = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndexSize9 = new mutable.PriorityQueue[Long]()\n        val maxIndexSize10\
    \ = new mutable.PriorityQueue[Long]()\n        val maxIndexSize11 = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndexSize12 = new mutable.PriorityQueue[Long]()\n        val maxIndexSize13\
    \ = new mutable.PriorityQueue[Long]()\n        val maxIndexSize14 = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndexSize15 = new mutable.PriorityQueue[Long]()\n        val maxIndexSize16\
    \ = new mutable.PriorityQueue[Long]()\n        val maxIndexSize17 = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndexSize18 = new mutable.PriorityQueue[Long]()\n        val maxIndexSize19\
    \ = new mutable.PriorityQueue[Long]()\n        val maxIndexSize20 = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndexSize21 = new mutable.PriorityQueue[Long]()\n        val maxIndexSize22\
    \ = new mutable.PriorityQueue[Long]()\n        val maxIndexSize23 = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndexSize24 = new mutable.PriorityQueue[Long]()\n        val maxIndexSize25\
    \ = new mutable.PriorityQueue[Long]()\n        val maxIndexSize26 = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndexSize27 = new mutable.PriorityQueue[Long]()\n        val maxIndexSize28\
    \ = new mutable.PriorityQueue[Long]()\n        val maxIndexSize29 = new mutable.Priority",
  "        val arr = arr.sortBy(-_)\n        val len = arr.length\n        val max\
    \ = new Array[Long](k)\n        val maxIndex = new Array[Int](k)\n        val\
    \ maxIndexSet = new HashSet[Int]()\n        val maxIndexSetSet = new HashSet[Int]()\n\
    \        var i = 0\n        while (i < k) {\n            if (maxIndexSet.contains(i))\
    \ {\n                maxIndexSetSet.add(maxIndex(i))\n            } else {\n \
    \               maxIndexSetSet.add(i)\n            }\n            if (maxIndexSetSet.size\
    \ == k) {\n                maxIndexSetSet.remove(0)\n            }\n         \
    \   val maxIndex = maxIndexSetSet.iterator\n            if (maxIndex.hasNext)\
    \ {\n                max(i) = arr(maxIndex.next())\n                maxIndexSetSet.remove(maxIndex.next())\n\
    \                maxIndexSetSet.add(maxIndex.next())\n                i += 1\n\
    \            } else {\n                max(i) = arr(len)\n                maxIndexSetSet.add(len)\n\
    \                i += 1\n            }\n        }\n        val maxList = List(max:\
    \ _*)\n        return maxList", "        val arr = arr.sortBy(-_)\n        val\
    \ max = new Array[Long](k)\n        var i = 0\n        while(i < k) {\n      \
    \      val cur = arr(i)\n            val j = i\n            while(j < k) {\n \
    \               if(arr(j) < cur) {\n                    val tmp = arr(j)\n   \
    \                 arr(j) = cur\n                    cur = tmp\n              \
    \  }\n                j+=1\n            }\n            max(i) = cur\n        \
    \    i+=1\n        }\n        arr", "        val n = arr.size\n        val m =\
    \ math.min(k, n)\n        val maxList = arr.take(m).sortWith(_ > _)\n        val\
    \ maxListSize = maxList.size\n        val maxListIndex = maxListSize - 1\n   \
    \     val maxListTail = maxList.drop(maxListIndex).reverse\n        val maxListTailSize\
    \ = maxListTail.size\n        val maxListTailIndex = maxListTailSize - 1\n   \
    \     val maxListTailTail = maxListTail.drop(maxListTailIndex).reverse\n     \
    \   val maxListTailTailSize = maxListTailTail.size\n        val maxListTailTailIndex\
    \ = maxListTailTailSize - 1\n        val maxListTailTailTail = maxListTailTail.drop(maxListTailTailIndex).reverse\n\
    \        val maxListTailTailTailSize = maxListTailTailTail.size\n        val maxListTailTailTailIndex\
    \ = maxListTailTailTailSize - 1\n        val maxListTailTailTailTail = maxListTailTailTail.drop(maxListTailTailTailIndex).reverse\n\
    \        val maxListTailTailTailTailSize = maxListTailTailTailTail.size\n    \
    \    val maxListTailTailTailTailIndex = maxListTailTailTailTailSize - 1\n    \
    \    val maxListTailTailTailTailTail = maxListTailTailTailTailTail.drop(maxListTailTailTailTailTailIndex).reverse\n\
    \        val maxListTailTailTailTailTailSize = maxListTailTailTailTailTailTail.size\n\
    \        val maxListTailTailTailTailTailIndex = maxListTailTailTailTailTailSize\
    \ - 1\n        val maxListTailTailTailTailTailTail = maxListTailTailTailTailTailTail.drop(maxListTailTailTailTailTailTailIndex).reverse\n\
    \        val maxListTailTailTailTailTailTailSize = maxListTailTailTailTailTailTailTail.size\n\
    \        val maxListTailTailTailTailTailTailIndex = maxListTailTailTailTailTailTailTailSize\
    \ - 1\n        val maxListTailTailTailTailTailTailTail = maxListTailTailTailTailTailTailTail.drop(maxListTailTailTailTailTailTailTailIndex).reverse\n\
    \        val maxListTailTailTailTailTailTailTailSize = maxListTailTailTailTailTailTailTailTail.size\n\
    \        val maxListTailTailTailTailTailTailTailIndex = maxListTailTailTailTailTailTailTailTailSize\
    \ - 1\n        val maxListTailTailTailTailTailTailTailTail = maxListTailTailTailTailTailTailTailTail.drop(max",
  "        val arr = arr.toList\n        val n = arr.length\n        val m = arr.take(k).max\n\
    \        val max = arr.take(k)\n        val maxList = arr.take(k).sortWith(_ >\
    \ _).take(k)\n        val maxList2 = arr.take(k).sortWith(_ > _).take(k)\n   \
    \     val maxList3 = arr.take(k).sortWith(_ > _).take(k)\n        val maxList4\
    \ = arr.take(k).sortWith(_ > _).take(k)\n        val maxList5 = arr.take(k).sortWith(_\
    \ > _).take(k)\n        val maxList6 = arr.take(k).sortWith(_ > _).take(k)\n \
    \       val maxList7 = arr.take(k).sortWith(_ > _).take(k)\n        val maxList8\
    \ = arr.take(k).sortWith(_ > _).take(k)\n        val maxList9 = arr.take(k).sortWith(_\
    \ > _).take(k)\n        val maxList10 = arr.take(k).sortWith(_ > _).take(k)\n\
    \        val maxList11 = arr.take(k).sortWith(_ > _).take(k)\n        val maxList12\
    \ = arr.take(k).sortWith(_ > _).take(k)\n        val maxList13 = arr.take(k).sortWith(_\
    \ > _).take(k)\n        val maxList14 = arr.take(k).sortWith(_ > _).take(k)\n\
    \        val maxList15 = arr.take(k).sortWith(_ > _).take(k)\n        val maxList16\
    \ = arr.take(k).sortWith(_ > _).take(k)\n        val maxList17 = arr.take(k).sortWith(_\
    \ > _).take(k)\n        val maxList18 = arr.take(k).sortWith(_ > _).take(k)\n\
    \        val maxList19 = arr.take(k).sortWith(_ > _).take(k)\n        val maxList20\
    \ = arr.take(k).sortWith(_ > _).take(k)\n        val maxList21 = arr.take(k).sortWith(_\
    \ > _).take(k)\n        val maxList22 = arr.take(k).sortWith(_ > _).take(k)\n\
    \        val maxList23 = arr.take(k).sortWith(_ > _).take(k)\n        val maxList24\
    \ = arr.take(k).sortWith(_ > _).take(k)\n        val maxList25 = arr.take(k).sortWith(_\
    \ > _", "        val arr = arr.toList\n        val len = arr.length\n        val\
    \ max = new mutable.PriorityQueue[(Long, Long)](len * 2 - 1)\n        for (i <-\
    \ 0 until len) {\n            val curr = arr(i)\n            if (curr <= 0) continue\n\
    \            if (curr <= max.head._1) {\n                max.dequeue()\n     \
    \           max.enqueue((curr, i))\n            } else if (curr <= max.head._2)\
    \ {\n                max.enqueue((curr, i))\n            }\n        }\n      \
    \  val res = new mutable.PriorityQueue[(Long, Long)](k)\n        for (i <- 0 until\
    \ k) {\n            val curr = max.dequeue()\n            res.enqueue(curr)\n\
    \        }\n        res.toList", "        val arr = arr.toList\n        val len\
    \ = arr.length\n        val max = new Array[Long](k)\n        var i = 0\n    \
    \    var j = 0\n        var maxIndex = 0\n        var maxValue = arr(0)\n    \
    \    while (i < len) {\n            while (j < k) {\n                if (arr(i)\
    \ > arr(j)) {\n                    maxValue = arr(i)\n                    maxIndex\
    \ = j\n                }\n                j += 1\n            }\n            i\
    \ += 1\n            max(i) = maxValue\n            j += 1\n        }\n       \
    \ max.toList", "        val n = arr.length\n        val m = k\n        val max\
    \ = new Array[Long](m)\n        val maxIndex = new Array[Int](m)\n        val\
    \ maxIndexMap = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2 = new\
    \ mutable.HashMap[Long, Int]()\n        val maxIndexMap3 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap4 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap5 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap6\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap7 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap8 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap9 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap10\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap11 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap12 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap13 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap14\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap15 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap16 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap17 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap18\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap19 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap20 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap21 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap22\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap23 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap24 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap25 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap26\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap27 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap28 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndex", "        val arr = arr.toList\n        val n = arr.length\n\
    \        val m = k\n        val max = new Array[Long](m)\n        var i = 0\n\
    \        var j = 0\n        var maxIndex = 0\n        var maxVal = 0\n       \
    \ while (i < n) {\n            if (j == m) {\n                maxIndex = i\n \
    \               maxVal = arr(i)\n                j = 0\n            }\n      \
    \      if (arr(i) > maxVal) {\n                maxIndex = i\n                maxVal\
    \ = arr(i)\n            }\n            i += 1\n            j += 1\n        }\n\
    \        val result = new Array[Long](k)\n        for (i <- 0 until k) {\n   \
    \         result(i) = arr(maxIndex)\n        }\n        result", "        val\
    \ result = new Array[Long](k)\n        var max = 0\n        var index = 0\n  \
    \      for(i <- 0 until arr.length) {\n            if(arr(i) > max) {\n      \
    \          max = arr(i)\n                index = i\n            }\n        }\n\
    \        for(i <- 0 until k) {\n            result(i) = arr(index)\n         \
    \   index++\n        }\n        result", "        val arr = arr.sortBy(-_)\n \
    \       val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n   \
    \             max(i) = arr(i)\n                i += 1\n            } else {\n\
    \                max(i) = arr(i + 1)\n                i += 1\n            }\n\
    \        }\n        if (arr.length < k) {\n            val diff = len - k\n  \
    \          val rem = len - diff\n            val arr = new Array[Long](rem)\n\
    \            for (i <- 0 until diff) {\n                arr(i) = arr(i + 1)\n\
    \            }\n            arr(diff) = arr(diff + 1)\n        }\n        arr",
  "        val arr = arr.sortBy(-_)\n        val len = arr.length\n        val max\
    \ = new Array[Long](k)\n        val maxIndex = new Array[Int](k)\n        val\
    \ maxIndexSet = new mutable.HashSet[Int]()\n        val maxIndexSetSet = new mutable.HashSet[Int]()\n\
    \        var i = 0\n        while (i < k) {\n            if (maxIndexSet.contains(i))\
    \ {\n                maxIndexSetSet.remove(i)\n                maxIndexSetSet.add(i,\
    \ 1)\n            } else {\n                maxIndexSetSet.add(i, 1)\n       \
    \     }\n            val maxIndex = maxIndexSet.max\n            val maxValue\
    \ = arr(maxIndex)\n            if (maxValue > max(i)) {\n                max(i)\
    \ = maxValue\n                maxIndexSetSet(maxIndex) = maxIndexSetSet.get(maxIndex)\
    \ + 1\n            }\n            i += 1\n        }\n        arr.toList", "  \
    \      val arr = arr.toList\n        val len = arr.length\n        val max = new\
    \ Array[Long](k)\n        val maxIndex = new Array[Int](k)\n        val maxIndexMap\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap3 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap4 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap5\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap6 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap7 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap8 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap9\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap10 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap11 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap12 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap13\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap14 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap15 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap16 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap17\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap18 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap19 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap20 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap21\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap22 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap23 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap24 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap25\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap26 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap27 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap28 = new mutable.HashMap[Long, Int]()\n        val ", "   \
    \     val arr = arr.toList\n        val len = arr.length\n        val max = new\
    \ Array[Long](k)\n        var maxIndex = 0\n        var maxValue = arr(0)\n  \
    \      for(i <- 0 until len) {\n            if(arr(i) > maxValue) {\n        \
    \        maxValue = arr(i)\n                maxIndex = i\n            }\n    \
    \    }\n        val maxList = arr.take(maxIndex+1).sortBy(x => -x)\n        val\
    \ maxList2 = arr.take(maxIndex+1).sortBy(x => x)\n        val maxList3 = arr.take(maxIndex+1).sortBy(x\
    \ => -x)\n        val maxList4 = arr.take(maxIndex+1).sortBy(x => x)\n       \
    \ val maxList5 = arr.take(maxIndex+1).sortBy(x => -x)\n        val maxList6 =\
    \ arr.take(maxIndex+1).sortBy(x => x)\n        val maxList7 = arr.take(maxIndex+1).sortBy(x\
    \ => -x)\n        val maxList8 = arr.take(maxIndex+1).sortBy(x => x)\n       \
    \ val maxList9 = arr.take(maxIndex+1).sortBy(x => -x)\n        val maxList10 =\
    \ arr.take(maxIndex+1).sortBy(x => x)\n        val maxList11 = arr.take(maxIndex+1).sortBy(x\
    \ => -x)\n        val maxList12 = arr.take(maxIndex+1).sortBy(x => x)\n      \
    \  val maxList13 = arr.take(maxIndex+1).sortBy(x => -x)\n        val maxList14\
    \ = arr.take(maxIndex+1).sortBy(x => x)\n        val maxList15 = arr.take(maxIndex+1).sortBy(x\
    \ => -x)\n        val maxList16 = arr.take(maxIndex+1).sortBy(x => x)\n      \
    \  val maxList17 = arr.take(maxIndex+1).sortBy(x => -x)\n        val maxList18\
    \ = arr.take(maxIndex+1).sortBy(x => x)\n        val maxList19 = arr.take(maxIndex+1).sortBy(x\
    \ => -x)\n        val maxList20 = arr.take(maxIndex+1).sortBy(x => x)\n      \
    \  val maxList21 = arr.take(maxIndex+1).sortBy(x => -x)\n        val maxList22\
    \ = arr.take(maxIndex+1).sortBy(x => x)\n        val maxList23 = arr.take(maxIndex+1).sortBy(x\
    \ => -x)\n        val maxList24 = arr.take(maxIndex", "        val arr = arr.toList\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ maxIndex = 0\n        var maxVal = arr(0)\n        var i = 0\n        while\
    \ (i < len) {\n            if (arr(i) > maxVal) {\n                maxIndex =\
    \ i\n                maxVal = arr(i)\n            }\n            i += 1\n    \
    \    }\n        val result = new Array[Long](k)\n        var j = 0\n        while\
    \ (j < k) {\n            result(j) = arr(maxIndex + j)\n            j += 1\n \
    \       }\n        result", "        val maxList = mutable.ListBuffer.empty[Long]\n\
    \        var maxLength = 0\n        for (i <- 0 until arr.length) {\n        \
    \    if (arr(i) > arr(maxLength)) {\n                maxLength += 1\n        \
    \        maxList += arr(i)\n            }\n        }\n        if (maxLength <\
    \ k) {\n            val newList = maxList.take(k - maxLength)\n            val\
    \ newLength = k - maxLength\n            val newMaxLength = maxLength\n      \
    \      val newMaxList = maxList\n            val newMaxList = newMaxList.take(newLength)\n\
    \            val newMaxLength = newMaxLength\n            val newMaxList = newMaxList.take(newLength)\n\
    \            val newMaxList = newMaxList.take(newLength)\n            val newMaxList\
    \ = newMaxList.take(newLength)\n            val newMaxList = newMaxList.take(newLength)\n\
    \            val newMaxList = newMaxList.take(newLength)\n            val newMaxList\
    \ = newMaxList.take(newLength)\n            val newMaxList = newMaxList.take(newLength)\n\
    \            val newMaxList = newMaxList.take(newLength)\n            val newMaxList\
    \ = newMaxList.take(newLength)\n            val newMaxList = newMaxList.take(newLength)\n\
    \            val newMaxList = newMaxList.take(newLength)\n            val newMaxList\
    \ = newMaxList.take(newLength)\n            val newMaxList = newMaxList.take(newLength)\n\
    \            val newMaxList = newMaxList.take(newLength)\n            val newMaxList\
    \ = newMaxList.take(newLength)\n            val newMaxList = newMaxList.take(newLength)\n\
    \            val newMaxList = newMaxList.take(newLength)\n            val newMaxList\
    \ = newMaxList.take(newLength)\n            val newMaxList = newMaxList.take(newLength)\n\
    \            val newMaxList = newMaxList.take(newLength)\n            val newMaxList\
    \ = newMaxList.take(newLength)\n            val newMaxList = newMaxList.take(newLength)\n\
    \            val newMaxList = newMaxList.take(newLength)\n            val newMaxList\
    \ = newMaxList.take(newLength)\n            val newMaxList = newMaxList.take(newLength)\n\
    \            val newMaxList = newMaxList.take(newLength)\n            val newMaxList\
    \ = newMaxList.take(newLength)\n            val newMaxList = newMaxList.take(newLength)\n\
    \            val newMaxList = newMaxList.take(newLength)\n            val newMaxList\
    \ = newMaxList.take(newLength)\n            val new", "        val arr = arr.toList\n\
    \        val len = arr.length\n        val max = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndex = new mutable.PriorityQueue[Int]()\n        val maxIndexLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLen = new mutable.PriorityQueue[Int]()\n\
    \        val maxIndexLenLenLen = new mutable.PriorityQueue[Int]()\n        val\
    \ maxIndexLenLenLenLen = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLen =\
    \ new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val maxIndexLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.PriorityQueue[Int]()\n        val ", "        val arr = arr.toList\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n   \
    \             max(i) = arr(i)\n                i += 1\n            } else {\n\
    \                max(i) = arr(i + 1)\n                i += 1\n            }\n\
    \        }\n        if (arr.length == k) {\n            arr\n        } else {\n\
    \            arr ++ max.reverse\n        }", "        val arr = arr.toList\n \
    \       val len = arr.length\n        val max = arr.max\n        val maxIndex\
    \ = arr.indexWhere(x => x == max)\n        val maxIndex1 = maxIndex - 1\n    \
    \    val maxIndex2 = maxIndex + 1\n        val maxIndex3 = maxIndex + 2\n    \
    \    val maxIndex4 = maxIndex + 3\n        val maxIndex5 = maxIndex + 4\n    \
    \    val maxIndex6 = maxIndex + 5\n        val maxIndex7 = maxIndex + 6\n    \
    \    val maxIndex8 = maxIndex + 7\n        val maxIndex9 = maxIndex + 8\n    \
    \    val maxIndex10 = maxIndex + 9\n        val maxIndex11 = maxIndex + 10\n \
    \       val maxIndex12 = maxIndex + 11\n        val maxIndex13 = maxIndex + 12\n\
    \        val maxIndex14 = maxIndex + 13\n        val maxIndex15 = maxIndex + 14\n\
    \        val maxIndex16 = maxIndex + 15\n        val maxIndex17 = maxIndex + 16\n\
    \        val maxIndex18 = maxIndex + 17\n        val maxIndex19 = maxIndex + 18\n\
    \        val maxIndex20 = maxIndex + 19\n        val maxIndex21 = maxIndex + 20\n\
    \        val maxIndex22 = maxIndex + 21\n        val maxIndex23 = maxIndex + 22\n\
    \        val maxIndex24 = maxIndex + 23\n        val maxIndex25 = maxIndex + 24\n\
    \        val maxIndex26 = maxIndex + 25\n        val maxIndex27 = maxIndex + 26\n\
    \        val maxIndex28 = maxIndex + 27\n        val maxIndex29 = maxIndex + 28\n\
    \        val maxIndex30 = maxIndex + 29\n        val maxIndex31 = maxIndex + 30\n\
    \        val maxIndex32 = maxIndex + 31\n        val maxIndex33 = maxIndex + 32\n\
    \        val maxIndex34 = maxIndex + 33\n        val maxIndex35 = maxIndex + 34\n\
    \        val maxIndex36 = maxIndex + 35\n        val maxIndex37 = maxIndex + 36\n\
    \        val maxIndex38 = maxIndex + 37\n        val maxIndex39 = maxIndex + 38\n\
    \        val maxIndex40 = maxIndex + 39\n        val maxIndex41 = maxIndex + 40\n\
    \        val maxIndex42 = maxIndex + 41\n        val maxIndex43 = maxIndex + 42\n\
    \        val maxIndex44 = maxIndex + 43\n        val maxIndex45 = maxIndex + 44",
  "        val arr = arr.sortWith(_ < _)\n        val maxList = arr.take(k)\n    \
    \    val maxListLength = maxList.length\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val maxListLength = maxListLength\
    \ + 1 // +1 because we add 1 at the end\n        val max", "        val arr =\
    \ arr.sortBy(-_)\n        val len = arr.length\n        val max = new Array[Long](k)\n\
    \        var i = 0\n        while (i < k) {\n            if (arr(i) > arr(i +\
    \ 1)) {\n                max(i) = arr(i)\n                i += 1\n           \
    \ } else {\n                max(i) = arr(i + 1)\n                i += 1\n    \
    \        }\n        }\n        max.toList", "        val result = new mutable.ListBuffer[Long]()\n\
    \        var max = 0\n        var i = 0\n        while (i < arr.length) {\n  \
    \          if (arr(i) > max) {\n                max = arr(i)\n            }\n\
    \            i += 1\n        }\n        val maxIndex = arr.length - 1\n      \
    \  var j = 0\n        while (j < k) {\n            if (arr(maxIndex - j) > max)\
    \ {\n                max = arr(maxIndex - j)\n            }\n            j +=\
    \ 1\n        }\n        val maxIndex = arr.length - k\n        var k = 0\n   \
    \     while (k <= maxIndex) {\n            if (arr(k) > max) {\n             \
    \   max = arr(k)\n            }\n            k += 1\n        }\n        result.clear()\n\
    \        result.add(max)\n        result", "        val arr = arr.sortBy(-_)\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n   \
    \             max(i) = arr(i)\n                i += 1\n            } else {\n\
    \                max(i) = arr(i + 1)\n                i += 1\n            }\n\
    \        }\n        max.toList", "        val maxList = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxLength = arr.length\n        val maxK = k\n        val maxIndex\
    \ = arr.indexWhere(x => x >= 0)\n        val maxValue = arr(maxIndex)\n      \
    \  val maxKValue = arr.take(maxK).max\n        val maxKIndex = arr.indexWhere(x\
    \ => x == maxKValue)\n        val maxKValue = arr(maxKIndex)\n        val maxKKValue\
    \ = arr.take(maxK - 1).max\n        val maxKKIndex = arr.indexWhere(x => x ==\
    \ maxKKValue)\n        val maxKKValue = arr(maxKKIndex)\n        val maxKKKValue\
    \ = arr.take(maxK - 2).max\n        val maxKKKIndex = arr.indexWhere(x => x ==\
    \ maxKKKValue)\n        val maxKKKValue = arr(maxKKKIndex)\n        val maxKKKKValue\
    \ = arr.take(maxK - 3).max\n        val maxKKKKIndex = arr.indexWhere(x => x ==\
    \ maxKKKKValue)\n        val maxKKKKValue = arr(maxKKKKIndex)\n        val maxKKKKKValue\
    \ = arr.take(maxK - 4).max\n        val maxKKKKKIndex = arr.indexWhere(x => x\
    \ == maxKKKKKValue)\n        val maxKKKKKValue = arr(maxKKKKKIndex)\n        val\
    \ maxKKKKKKValue = arr.take(maxK - 5).max\n        val maxKKKKKKIndex = arr.indexWhere(x\
    \ => x == maxKKKKKKValue)\n        val maxKKKKKKValue = arr(maxKKKKKKIndex)\n\
    \        val maxKKKKKKKValue = arr.take(maxK - 6).max\n        val maxKKKKKKKIndex\
    \ = arr.indexWhere(x => x == maxKKKKKKKValue)\n        val maxKKKKKKKValue = arr(maxKKKKKKKIndex)\n\
    \        val maxKKKKKKKKValue = arr.take(maxK - 7).max\n        val maxKKKKKKKKIndex\
    \ = arr.indexWhere(x => x == maxKKKKKKKKValue)\n        val maxKKKKKKKKValue =\
    \ arr(maxKK", "        val arr = arr.toList\n        val len = arr.length\n  \
    \      val max = new Array[Long](k)\n        val maxIndex = new Array[Int](k)\n\
    \        val maxIndexMap = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap3 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap4 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap5 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap6\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap7 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap8 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap9 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap10\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap11 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap12 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap13 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap14\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap15 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap16 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap17 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap18\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap19 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap20 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap21 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap22\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap23 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap24 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap25 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap26\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap27 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap28 = new mutable.HashMap[Long, Int]()\n     \
    \   val ", "        val arr = arr.toList\n        val len = arr.length\n     \
    \   val max = new Array[Long](k)\n        var i = 0\n        while (i < k) {\n\
    \            val max = arr(i)\n            val index = arr.indexOf(max)\n    \
    \        arr.remove(max)\n            arr.remove(index)\n            i += 1\n\
    \        }\n        arr.toList", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val max = new mutable.PriorityQueue[Long]()\n        val min = new mutable.PriorityQueue[Long]()\n\
    \        val size = arr.size\n        val max = arr.max\n        val min = arr.min\n\
    \        val mid = arr.size / 2\n        val mid2 = mid / 2\n        val mid3\
    \ = mid / 3\n        val mid4 = mid / 4\n        val mid5 = mid / 5\n        val\
    \ mid6 = mid / 6\n        val mid7 = mid / 7\n        val mid8 = mid / 8\n   \
    \     val mid9 = mid / 9\n        val mid10 = mid / 10\n        val mid11 = mid\
    \ / 11\n        val mid12 = mid / 12\n        val mid13 = mid / 13\n        val\
    \ mid14 = mid / 14\n        val mid15 = mid / 15\n        val mid16 = mid / 16\n\
    \        val mid17 = mid / 17\n        val mid18 = mid / 18\n        val mid19\
    \ = mid / 19\n        val mid20 = mid / 20\n        val mid21 = mid / 21\n   \
    \     val mid22 = mid / 22\n        val mid23 = mid / 23\n        val mid24 =\
    \ mid / 24\n        val mid25 = mid / 25\n        val mid26 = mid / 26\n     \
    \   val mid27 = mid / 27\n        val mid28 = mid / 28\n        val mid29 = mid\
    \ / 29\n        val mid30 = mid / 30\n        val mid31 = mid / 31\n        val\
    \ mid32 = mid / 32\n        val mid33 = mid / 33\n        val mid34 = mid / 34\n\
    \        val mid35 = mid / 35\n        val mid36 = mid / 36\n        val mid37\
    \ = mid / 37\n        val mid38 = mid / 38\n        val mid39 = mid / 39\n   \
    \     val mid40 = mid / 40\n        val mid41 = mid / 41\n        val mid42 =\
    \ mid / 42\n        val mid43 = mid / 43\n        val mid44 = mid / 44\n     \
    \   val mid45 = mid / 45\n        val mid46 = mid / 46\n        val mid47 = mid\
    \ / 47\n        val mid48 = mid / 48\n        val mid49 = mid / 49\n        val\
    \ mid50 = mid / 50\n", "        val maxNum = arr.max\n        val maxNumIndex\
    \ = arr.indexWhere(x => x == maxNum)\n        val maxNumList = arr.take(maxNumIndex\
    \ + 1)\n        val maxNumListIndex = arr.indexWhere(x => x == maxNumList)\n \
    \       val maxNumListLength = maxNumListIndex - maxNumIndex\n        val maxNumListLength\
    \ = maxNumListLength / k\n        val maxNumListLength = maxNumListLength.toInt\n\
    \        val maxNumListLength = maxNumListLength * k\n        val maxNumListLength\
    \ = maxNumListLength.toLong\n        val maxNumListLength = maxNumListLength.asInstanceOf[Long]\n\
    \        val maxNumListLength = maxNumListLength.toInt\n        val maxNumListLength\
    \ = maxNumListLength * k\n        val maxNumListLength = maxNumListLength.toLong\n\
    \        val maxNumListLength = maxNumListLength.asInstanceOf[Long]\n        val\
    \ maxNumListLength = maxNumListLength.toInt\n        val maxNumListLength = maxNumListLength\
    \ * k\n        val maxNumListLength = maxNumListLength.toLong\n        val maxNumListLength\
    \ = maxNumListLength.asInstanceOf[Long]\n        val maxNumListLength = maxNumListLength.toInt\n\
    \        val maxNumListLength = maxNumListLength * k\n        val maxNumListLength\
    \ = maxNumListLength.toLong\n        val maxNumListLength = maxNumListLength.asInstanceOf[Long]\n\
    \        val maxNumListLength = maxNumListLength.toInt\n        val maxNumListLength\
    \ = maxNumListLength * k\n        val maxNumListLength = maxNumListLength.toLong\n\
    \        val maxNumListLength = maxNumListLength.asInstanceOf[Long]\n        val\
    \ maxNumListLength = maxNumListLength.toInt\n        val maxNumListLength = maxNumListLength\
    \ * k\n        val maxNumListLength = maxNumListLength.toLong\n        val maxNumListLength\
    \ = maxNumListLength.asInstanceOf[Long]\n        val maxNumListLength = maxNumListLength.toInt\n\
    \        val maxNumListLength = maxNumListLength * k\n        val maxNumListLength\
    \ = maxNumListLength.toLong\n        val maxNumListLength = maxNumListLength.asInstanceOf[Long]\n\
    \        val maxNumListLength = maxNumListLength.toInt\n        val maxNumListLength\
    \ = maxNumListLength * k\n        val maxNumList", "        val arr = arr.toList\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ maxIndex = 0\n        var maxValue = arr(0)\n        var i = 0\n        while\
    \ (i < len) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n            i += 1\n\
    \        }\n        val newArr = new Array[Long](k)\n        newArr(0) = maxValue\n\
    \        var j = 1\n        while (j < k) {\n            if (maxIndex == j) newArr(j)\
    \ = arr(maxIndex)\n            else newArr(j) = arr(maxIndex)\n            j +=\
    \ 1\n        }\n        newArr", "        val n = arr.length\n        val m =\
    \ arr.max\n        val result = new Array[Long](k)\n        var i = 0\n      \
    \  var j = 0\n        while (i < k) {\n            if (arr(i) > m) {\n       \
    \         result(j) = arr(i)\n                j += 1\n            } else {\n \
    \               i += 1\n            }\n        }\n        result", "        val\
    \ arr = arr.toList\n        val len = arr.length\n        val max = new mutable.PriorityQueue[Long]()\n\
    \        val maxIndex = new mutable.PriorityQueue[Int]()\n        val maxIndexMap\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap3 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap4 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap5\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap6 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap7 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap8 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap9\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap10 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap11 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap12 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap13\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap14 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap15 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap16 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap17\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap18 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap19 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap20 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap21\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap22 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap23 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap24 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap25\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap26 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap27 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap28 = new mutable.HashMap[Long, ", "        val arr = arr.toList\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ maxIndex = 0\n        var maxVal = arr(0)\n        var i = 0\n        while\
    \ (i < len) {\n            if (arr(i) > maxVal) {\n                maxIndex =\
    \ i\n                maxVal = arr(i)\n            }\n            i += 1\n    \
    \    }\n        val newArr = new Array[Long](maxIndex + 1)\n        var j = 0\n\
    \        while (j < maxIndex) {\n            newArr(j) = arr(j)\n            j\
    \ += 1\n        }\n        newArr", "        val maxNums = arr.sortWith( (a,b)\
    \ => a > b )\n        val maxNumsLen = maxNums.length\n        val maxNumsCopy\
    \ = maxNums.toList\n        val maxNumsCopyLen = maxNumsCopy.length\n        val\
    \ maxNumsCopyCopy = maxNumsCopy.toList\n        val maxNumsCopyCopyLen = maxNumsCopyCopy.length\n\
    \        val maxNumsCopyCopyCopy = maxNumsCopyCopy.toList\n        val maxNumsCopyCopyCopyLen\
    \ = maxNumsCopyCopyCopy.length\n        val maxNumsCopyCopyCopyCopy = maxNumsCopyCopyCopy.toList\n\
    \        val maxNumsCopyCopyCopyLen = maxNumsCopyCopyCopy.length\n        val\
    \ maxNumsCopyCopyCopyCopy = maxNumsCopyCopyCopy.toList\n        val maxNumsCopyCopyCopyCopyLen\
    \ = maxNumsCopyCopyCopyCopy.length\n        val maxNumsCopyCopyCopyCopyCopy =\
    \ maxNumsCopyCopyCopyCopy.toList\n        val maxNumsCopyCopyCopyCopyCopyLen =\
    \ maxNumsCopyCopyCopyCopyCopy.length\n        val maxNumsCopyCopyCopyCopyCopy\
    \ = maxNumsCopyCopyCopyCopyCopy.toList\n        val maxNumsCopyCopyCopyCopyCopyLen\
    \ = maxNumsCopyCopyCopyCopyCopy.length\n        val maxNumsCopyCopyCopyCopyCopyCopy\
    \ = maxNumsCopyCopyCopyCopyCopyCopy.toList\n        val maxNumsCopyCopyCopyCopyCopyCopyLen\
    \ = maxNumsCopyCopyCopyCopyCopyCopy.length\n        val maxNumsCopyCopyCopyCopyCopyCopyCopy\
    \ = maxNumsCopyCopyCopyCopyCopyCopyCopy.toList\n        val maxNumsCopyCopyCopyCopyCopyCopyCopyLen\
    \ = maxNumsCopyCopyCopyCopyCopyCopyCopyCopy.length\n        val maxNumsCopyCopyCopyCopyCopyCopyCopy\
    \ = maxNumsCopyCopyCopyCopyCopyCopyCopyCopy.toList\n        val maxNumsCopyCopyCopyCopyCopyCopyCopyLen\
    \ = maxNumsCopyCopyCopyCopyCopyCopyCopyCopyCopy.length\n        val maxNumsCopyCopyCopyCopyCopyCopyCopyCopy\
    \ = maxNumsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n        val maxNumsCopyCopyCopyCopyCopyCopyCopyCopyLen\
    \ = maxNumsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.length\n        val maxNumsCopyCopyCopyCopyCopyCopy",
  "        val result = new Array[Long](k)\n        val max = new Array[Long](k)\n\
    \        val min = new Array[Long](k)\n        var i = 0\n        var j = 0\n\
    \        var maxIndex = 0\n        var minIndex = 0\n        var maxValue = arr(0)\n\
    \        var minValue = arr(0)\n        for(i <- 0 until k) {\n            maxValue\
    \ = arr(i)\n            minValue = arr(i)\n            for(j <- 0 until k) {\n\
    \                if(arr(j) > maxValue) {\n                    maxValue = arr(j)\n\
    \                    maxIndex = j\n                }\n                if(arr(j)\
    \ < minValue) {\n                    minValue = arr(j)\n                    minIndex\
    \ = j\n                }\n            }\n            result(i) = maxValue\n  \
    \          max(i) = maxIndex\n            min(i) = minIndex\n        }\n     \
    \   result", "        val maxList = mutable.ListBuffer.empty[Long]\n        val\
    \ maxK = mutable.ListBuffer.empty[Long]\n        val maxKIndex = mutable.ListBuffer.empty[Long]\n\
    \        val maxKValue = mutable.ListBuffer.empty[Long]\n        val maxKValueIndex\
    \ = mutable.ListBuffer.empty[Long]\n        val maxKValueValue = mutable.ListBuffer.empty[Long]\n\
    \        val maxKValueValueIndex = mutable.ListBuffer.empty[Long]\n        val\
    \ maxKValueValueValue = mutable.ListBuffer.empty[Long]\n        val maxKValueValueValueIndex\
    \ = mutable.ListBuffer.empty[Long]\n        val maxKValueValueValueValue = mutable.ListBuffer.empty[Long]\n\
    \        val maxKValueValueValueIndex = mutable.ListBuffer.empty[Long]\n     \
    \   val maxKValueValueValueValue = mutable.ListBuffer.empty[Long]\n        val\
    \ maxKValueValueValueIndex = mutable.ListBuffer.empty[Long]\n        val maxKValueValueValueValue\
    \ = mutable.ListBuffer.empty[Long]\n        val maxKValueValueValueIndex = mutable.ListBuffer.empty[Long]\n\
    \        val maxKValueValueValueValue = mutable.ListBuffer.empty[Long]\n     \
    \   val maxKValueValueValueIndex = mutable.ListBuffer.empty[Long]\n        val\
    \ maxKValueValueValueValue = mutable.ListBuffer.empty[Long]\n        val maxKValueValueValueIndex\
    \ = mutable.ListBuffer.empty[Long]\n        val maxKValueValueValueValue = mutable.ListBuffer.empty[Long]\n\
    \        val maxKValueValueValueIndex = mutable.ListBuffer.empty[Long]\n     \
    \   val maxKValueValueValueValue = mutable.ListBuffer.empty[Long]\n        val\
    \ maxKValueValueValueIndex = mutable.ListBuffer.empty[Long]\n        val maxKValueValueValueValue\
    \ = mutable.ListBuffer.empty[Long]\n        val maxKValueValueValueIndex = mutable.ListBuffer.empty[Long]\n\
    \        val maxKValueValueValueValue = mutable.ListBuffer.empty[Long]\n     \
    \   val maxKValueValueValueIndex = mutable.ListBuffer.empty[Long]\n        val\
    \ maxKValueValueValueValue = mutable.ListBuffer.empty[Long]\n        val maxKValueValueValueIndex\
    \ = mutable.ListBuffer.empty[Long]\n        val maxKValueValueValueValue = mutable.ListBuffer.empty[Long]\n\
    \        val maxKValueValueValueIndex = mutable.ListBuffer.empty[Long]\n     \
    \   val maxK", "        val arr = arr.sortWith(_ < _)\n        val maxList = arr.take(k)\n\
    \        val maxListLen = maxList.length\n        val maxListLenMinusOne = maxListLen\
    \ - 1\n        val maxListLenMinusTwo = maxListLen - 2\n        val maxListLenMinusThree\
    \ = maxListLen - 3\n        val maxListLenMinusFour = maxListLen - 4\n       \
    \ val maxListLenMinusFive = maxListLen - 5\n        val maxListLenMinusSix = maxListLen\
    \ - 6\n        val maxListLenMinusSeven = maxListLen - 7\n        val maxListLenMinusEight\
    \ = maxListLen - 8\n        val maxListLenMinusNine = maxListLen - 9\n       \
    \ val maxListLenMinusTen = maxListLen - 10\n        val maxListLenMinusEleven\
    \ = maxListLen - 11\n        val maxListLenMinusTwelve = maxListLen - 12\n   \
    \     val maxListLenMinusThirteen = maxListLen - 13\n        val maxListLenMinusFourteen\
    \ = maxListLen - 14\n        val maxListLenMinusFifteen = maxListLen - 15\n  \
    \      val maxListLenMinusSixteen = maxListLen - 16\n        val maxListLenMinusSeventeen\
    \ = maxListLen - 17\n        val maxListLenMinusEighteen = maxListLen - 18\n \
    \       val maxListLenMinusNineteen = maxListLen - 19\n        val maxListLenMinusTwenty\
    \ = maxListLen - 20\n        val maxListLenMinusThirty = maxListLen - 30\n   \
    \     val maxListLenMinusFourty = maxListLen - 40\n        val maxListLenMinusFifty\
    \ = maxListLen - 50\n        val maxListLenMinusSixty = maxListLen - 60\n    \
    \    val maxListLenMinusSeventy = maxListLen - 70\n        val maxListLenMinusEighty\
    \ = maxListLen - 80\n        val maxListLenMinusNinety = maxListLen - 90\n   \
    \     val maxListLenMinusTwentyOne = maxListLen - 100\n        val maxListLenMinusTwentyTwo\
    \ = maxListLen - 200\n        val maxListLenMinusTwentyThree", "        val arr\
    \ = arr.sortBy(_.toLong)\n        val maxList = arr.take(k)\n        val maxList2\
    \ = arr.drop(k)\n        val maxList3 = arr.takeRight(k)\n        val maxList4\
    \ = arr.dropRight(k)\n        val maxList5 = arr.take(k)\n        val maxList6\
    \ = arr.drop(k)\n        val maxList7 = arr.takeRight(k)\n        val maxList8\
    \ = arr.dropRight(k)\n        val maxList9 = arr.take(k)\n        val maxList10\
    \ = arr.drop(k)\n        val maxList11 = arr.takeRight(k)\n        val maxList12\
    \ = arr.dropRight(k)\n        val maxList13 = arr.take(k)\n        val maxList14\
    \ = arr.drop(k)\n        val maxList15 = arr.takeRight(k)\n        val maxList16\
    \ = arr.dropRight(k)\n        val maxList17 = arr.take(k)\n        val maxList18\
    \ = arr.drop(k)\n        val maxList19 = arr.takeRight(k)\n        val maxList20\
    \ = arr.dropRight(k)\n        val maxList21 = arr.take(k)\n        val maxList22\
    \ = arr.drop(k)\n        val maxList23 = arr.takeRight(k)\n        val maxList24\
    \ = arr.dropRight(k)\n        val maxList25 = arr.take(k)\n        val maxList26\
    \ = arr.drop(k)\n        val maxList27 = arr.takeRight(k)\n        val maxList28\
    \ = arr.dropRight(k)\n        val maxList29 = arr.take(k)\n        val maxList30\
    \ = arr.drop(k)\n        val maxList31 = arr.takeRight(k)\n        val maxList32\
    \ = arr.dropRight(k)\n        val maxList33 = arr.take(k)\n        val maxList34\
    \ = arr.drop(k)\n        val maxList35 = arr.takeRight(k)\n        val maxList36\
    \ = arr.dropRight(k)\n        val maxList37 = arr.take(k)\n        val maxList38\
    \ = arr.drop(k)\n        val maxList39 = arr.takeRight(k)\n        val maxList40\
    \ = arr.dropRight(k)\n        val maxList41 = arr.take(k)\n        val maxList42\
    \ = arr.drop(k)\n        val maxList43 = arr.takeRight(k)\n        val maxList44\
    \ = arr.dropRight(k)\n        val maxList45 = arr.take", "        val arr = arr.toList\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n   \
    \             max(i) = arr(i)\n                i += 1\n            } else {\n\
    \                max(i) = arr(i + 1)\n                i += 1\n            }\n\
    \        }\n        max.toList", "        val arr = arr.sortBy(-_)\n        val\
    \ max = arr.take(k).toList\n        val rest = arr.drop(k)\n        rest match\
    \ {\n            case Nil => max\n            case x :: xs => maximum(x :: xs,\
    \ k)\n        }", "        val arr = arr.sortBy(_.toLong)\n        val len = arr.length\n\
    \        val max = new Array[Long](k)\n        var i = 0\n        while (i < k)\
    \ {\n            if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n\
    \                i += 1\n            } else {\n                max(i) = arr(i\
    \ + 1)\n                i += 1\n            }\n        }\n        max.toList",
  "        val arr = arr.sortBy(-_)\n        val len = arr.length\n        val max\
    \ = new Array[Long](k)\n        var i = 0\n        while (i < k) {\n         \
    \   if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n            \
    \    i += 1\n            } else {\n                max(i) = arr(i + 1)\n     \
    \           i += 1\n            }\n        }\n        max.toList", "        val\
    \ arr = arr.toList\n        val len = arr.length\n        val max = new Array[Long](k)\n\
    \        var i = 0\n        while (i < k) {\n            val max = arr(i)\n  \
    \          val index = arr.indexWhere(x => x > max)\n            if (index ==\
    \ -1) {\n                i += 1\n            } else {\n                max(i)\
    \ = arr(index)\n                i += 1\n            }\n        }\n        max.toList",
  "        val max = new mutable.PriorityQueue[Long]()\n        val maxLength = new\
    \ mutable.PriorityQueue[Long]()\n        val maxLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLength = new mutable.PriorityQueue[Long]()\n     \
    \   val maxLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n    \
    \    val maxLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n   \
    \     val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLengthLengthLength = new mutable.PriorityQueue[Long]()\n\
    \        val maxLengthLengthLength", "        val arr = arr.toList\n        val\
    \ max = arr.sortWith(_ > _)\n        val maxLength = arr.length\n        val maxK\
    \ = math.min(k, maxLength)\n        val maxList = max.take(maxK).toList\n    \
    \    val maxListLength = maxList.length\n        val maxKList = maxList.take(maxListLength).toList\n\
    \        val maxKListLength = maxKList.length\n        val maxKListLength = maxKListLength\
    \ - k\n        val maxKList = maxKList.take(maxKListLength).toList\n        val\
    \ maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxKListLength - k\n        val maxKList = maxKList.take(maxKListLength).toList\n\
    \        val maxKListLength = maxK", "        val maxList = mutable.ArrayBuffer.empty[Long]\n\
    \        var maxIndex = 0\n        var maxValue = arr(0)\n        var i = 0\n\
    \        while (i < arr.length) {\n            if (arr(i) > maxValue) {\n    \
    \            maxValue = arr(i)\n                maxIndex = i\n            }\n\
    \            i += 1\n        }\n        maxList += maxValue\n        var j = 0\n\
    \        while (j < k) {\n            if (maxIndex < arr.length) {\n         \
    \       maxList += arr(maxIndex)\n                maxIndex += 1\n            }\n\
    \            j += 1\n        }\n        maxList.toList", "        val n = arr.length\n\
    \        val max = new Array[Long](k)\n        val maxIndex = new Array[Int](k)\n\
    \        val maxIndexMap = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2\
    \ = new mutable.HashMap[Long, Int]()\n        var i = 0\n        var j = 0\n \
    \       var k = 0\n        var temp = 0\n        var maxIndex = 0\n        var\
    \ maxIndex2 = 0\n        var maxIndex3 = 0\n        var maxIndex4 = 0\n      \
    \  var maxIndex5 = 0\n        var maxIndex6 = 0\n        var maxIndex7 = 0\n \
    \       var maxIndex8 = 0\n        var maxIndex9 = 0\n        var maxIndex10 =\
    \ 0\n        var maxIndex11 = 0\n        var maxIndex12 = 0\n        var maxIndex13\
    \ = 0\n        var maxIndex14 = 0\n        var maxIndex15 = 0\n        var maxIndex16\
    \ = 0\n        var maxIndex17 = 0\n        var maxIndex18 = 0\n        var maxIndex19\
    \ = 0\n        var maxIndex20 = 0\n        var maxIndex21 = 0\n        var maxIndex22\
    \ = 0\n        var maxIndex23 = 0\n        var maxIndex24 = 0\n        var maxIndex25\
    \ = 0\n        var maxIndex26 = 0\n        var maxIndex27 = 0\n        var maxIndex28\
    \ = 0\n        var maxIndex29 = 0\n        var maxIndex30 = 0\n        var maxIndex31\
    \ = 0\n        var maxIndex32 = 0\n        var maxIndex33 = 0\n        var maxIndex34\
    \ = 0\n        var maxIndex35 = 0\n        var maxIndex36 = 0\n        var maxIndex37\
    \ = 0\n        var maxIndex38 = 0\n        var maxIndex39 = 0\n        var maxIndex40\
    \ = 0\n        var maxIndex41 = 0\n        var maxIndex42 = 0\n        var maxIndex43\
    \ = 0\n        var maxIndex44 = 0\n        var maxIndex45 = 0\n        var maxIndex46\
    \ = 0\n        var maxIndex47 = 0\n        var maxIndex48 = 0\n        var maxIndex49\
    \ = 0\n        var maxIndex50 = 0\n        var maxIndex51 = 0\n        var maxIndex52\
    \ = 0\n        var maxIndex53 = 0\n        var maxIndex54 = 0\n        var maxIndex55\
    \ = 0\n        var maxIndex56 = 0\n        var maxIndex57 = 0\n        var maxIndex58\
    \ = 0\n        var maxIndex59 = 0\n        var maxIndex60 = 0\n        var maxIndex61\
    \ = 0\n        var maxIndex62 = 0\n        var maxIndex63 = 0\n        var maxIndex64\
    \ = 0\n        var maxIndex65 = 0\n        var maxIndex66 = 0\n        var maxIndex67\
    \ = 0\n        var maxIndex68 = 0\n        var maxIndex69 = 0\n        var maxIndex70\
    \ = 0\n        var maxIndex71 = 0\n        var maxIndex72 = 0\n        var maxIndex73\
    \ = 0\n", "        val arr = arr.sortBy(-_)\n        val len = arr.length\n  \
    \      val max = new Array[Long](k)\n        var i = 0\n        while (i < k)\
    \ {\n            if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n\
    \                i += 1\n            } else {\n                max(i) = arr(i\
    \ + 1)\n                i += 1\n            }\n        }\n        if (arr.length\
    \ < k) {\n            val newArr = new Array[Long](k)\n            i = 0\n   \
    \         while (i < k) {\n                newArr(i) = arr(i)\n              \
    \  i += 1\n            }\n            max = newArr\n        }\n        max.toList",
  "        val n = arr.size\n        val max = new Array[Long](k)\n        val maxIndex\
    \ = new Array[Int](k)\n        val maxIndexMap = new mutable.HashMap[Long, Int]()\n\
    \        val maxIndexMap2 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap3\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap4 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap5 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap6 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap7\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap8 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap9 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap10 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap11\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap12 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap13 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap14 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap15\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap16 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap17 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap18 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap19\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap20 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap21 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap22 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap23\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap24 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap25 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap26 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap27\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap28 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap29 = new mutable.", "        val n = arr.size\n\
    \        val m = math.min(k, n)\n        val maxList = mutable.ArrayBuffer.empty[Long]\n\
    \        var max = 0\n        var i = 0\n        while (i < m) {\n           \
    \ max = arr(i)\n            if (max > maxList(0)) {\n                maxList +=\
    \ max\n            }\n            i += 1\n        }\n        maxList.toList",
  "        val arr = arr.toList\n        val len = arr.size\n        val max = new\
    \ Array[Long](k)\n        val maxIndex = new Array[Int](k)\n        val maxIndexMap\
    \ = new HashMap[Long, Int]()\n        val maxIndexMap2 = new HashMap[Int, Int]()\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var maxIndex\
    \ = 0\n        var maxIndex2 = 0\n        var maxIndex3 = 0\n        var maxIndex4\
    \ = 0\n        var maxIndex5 = 0\n        var maxIndex6 = 0\n        var maxIndex7\
    \ = 0\n        var maxIndex8 = 0\n        var maxIndex9 = 0\n        var maxIndex10\
    \ = 0\n        var maxIndex11 = 0\n        var maxIndex12 = 0\n        var maxIndex13\
    \ = 0\n        var maxIndex14 = 0\n        var maxIndex15 = 0\n        var maxIndex16\
    \ = 0\n        var maxIndex17 = 0\n        var maxIndex18 = 0\n        var maxIndex19\
    \ = 0\n        var maxIndex20 = 0\n        var maxIndex21 = 0\n        var maxIndex22\
    \ = 0\n        var maxIndex23 = 0\n        var maxIndex24 = 0\n        var maxIndex25\
    \ = 0\n        var maxIndex26 = 0\n        var maxIndex27 = 0\n        var maxIndex28\
    \ = 0\n        var maxIndex29 = 0\n        var maxIndex30 = 0\n        var maxIndex31\
    \ = 0\n        var maxIndex32 = 0\n        var maxIndex33 = 0\n        var maxIndex34\
    \ = 0\n        var maxIndex35 = 0\n        var maxIndex36 = 0\n        var maxIndex37\
    \ = 0\n        var maxIndex38 = 0\n        var maxIndex39 = 0\n        var maxIndex40\
    \ = 0\n        var maxIndex41 = 0\n        var maxIndex42 = 0\n        var maxIndex43\
    \ = 0\n        var maxIndex44 = 0\n        var maxIndex45 = 0\n        var maxIndex46\
    \ = 0\n        var maxIndex47 = 0\n        var maxIndex48 = 0\n        var maxIndex49\
    \ = 0\n        var maxIndex50 = 0\n        var maxIndex51 = 0\n        var maxIndex52\
    \ = 0\n        var maxIndex53 = 0\n        var maxIndex54 = 0\n        var maxIndex55\
    \ = 0\n        var maxIndex56 = 0\n        var maxIndex57 = 0\n        var maxIndex58\
    \ = 0\n        var maxIndex59 = 0\n        var maxIndex60 = 0\n        var maxIndex61\
    \ = 0\n        var maxIndex62 = 0\n        var maxIndex63 = 0\n        var maxIndex64\
    \ = 0\n        var maxIndex65 = 0\n        var maxIndex66 = 0\n        var maxIndex67\
    \ = 0\n        var maxIndex68 = 0\n        var maxIndex69 = 0\n        var maxIndex70\
    \ = 0\n        var maxIndex71 = 0\n        var maxIndex72 = 0\n        var maxIndex73\
    \ = 0\n        var ", "        val arr = arr.sortBy(_.toLong)\n        val len\
    \ = arr.length\n        if (k > len) throw new IllegalArgumentException(\"k should\
    \ be less than or equal to length of arr\")\n        if (k == 0) arr.toList\n\
    \        else {\n            val max = new mutable.PriorityQueue[Long]()\n   \
    \         var i = 0\n            while (i < len) {\n                if (max.size\
    \ < k) max += arr(i)\n                i += 1\n            }\n            max.toList\n\
    \        }", "        val maxNums = arr.take(k).toList\n        val maxNumsLen\
    \ = maxNums.size\n        val maxNumsIndex = maxNums.indexWhere(_ > 0)\n     \
    \   val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)\n\
    \        val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.max(0)",
  "        val n = arr.length\n        val max = new Array[Long](k)\n        val maxIndex\
    \ = new Array[Int](k)\n        val maxIndexMap = new mutable.HashMap[Long, Int]()\n\
    \        val maxIndexMap2 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap3\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap4 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap5 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap6 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap7\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap8 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap9 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap10 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap11\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap12 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap13 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap14 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap15\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap16 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap17 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap18 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap19\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap20 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap21 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap22 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap23\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap24 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap25 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap26 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap27\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap28 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap29 = new mutable.", "        val arr = arr.toList\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        val\
    \ maxIndex = new Array[Int](k)\n        val maxIndexSet = new mutable.HashSet[Int]()\n\
    \        val maxIndexSetSet = new mutable.HashSet[Int]()\n        val maxIndexSetSet2\
    \ = new mutable.HashSet[Int]()\n        val maxIndexSetSet3 = new mutable.HashSet[Int]()\n\
    \        val maxIndexSetSet4 = new mutable.HashSet[Int]()\n        val maxIndexSetSet5\
    \ = new mutable.HashSet[Int]()\n        val maxIndexSetSet6 = new mutable.HashSet[Int]()\n\
    \        val maxIndexSetSet7 = new mutable.HashSet[Int]()\n        val maxIndexSetSet8\
    \ = new mutable.HashSet[Int]()\n        val maxIndexSetSet9 = new mutable.HashSet[Int]()\n\
    \        val maxIndexSetSet10 = new mutable.HashSet[Int]()\n        val maxIndexSetSet11\
    \ = new mutable.HashSet[Int]()\n        val maxIndexSetSet12 = new mutable.HashSet[Int]()\n\
    \        val maxIndexSetSet13 = new mutable.HashSet[Int]()\n        val maxIndexSetSet14\
    \ = new mutable.HashSet[Int]()\n        val maxIndexSetSet15 = new mutable.HashSet[Int]()\n\
    \        val maxIndexSetSet16 = new mutable.HashSet[Int]()\n        val maxIndexSetSet17\
    \ = new mutable.HashSet[Int]()\n        val maxIndexSetSet18 = new mutable.HashSet[Int]()\n\
    \        val maxIndexSetSet19 = new mutable.HashSet[Int]()\n        val maxIndexSetSet20\
    \ = new mutable.HashSet[Int]()\n        val maxIndexSetSet21 = new mutable.HashSet[Int]()\n\
    \        val maxIndexSetSet22 = new mutable.HashSet[Int]()\n        val maxIndexSetSet23\
    \ = new mutable.HashSet[Int]()\n        val maxIndexSetSet24 = new mutable.HashSet[Int]()\n\
    \        val maxIndexSetSet25 = new mutable.HashSet[Int]()\n        val maxIndexSetSet26\
    \ = new mutable.HashSet[Int]()\n        val maxIndexSetSet27 = new mutable.HashSet[Int]()\n\
    \        val maxIndex", "        val arr = arr.toList\n        val n = arr.length\n\
    \        val m = arr.max\n        val maxList = arr.take(k)\n        val maxList2\
    \ = maxList.sortWith(_ > _)\n        val maxList3 = maxList2.takeRight(k)\n  \
    \      val maxList4 = maxList3.sortWith(_ > _)\n        val maxList5 = maxList4.takeRight(k)\n\
    \        val maxList6 = maxList5.sortWith(_ > _)\n        val maxList7 = maxList6.takeRight(k)\n\
    \        val maxList8 = maxList7.sortWith(_ > _)\n        val maxList9 = maxList8.takeRight(k)\n\
    \        val maxList10 = maxList9.sortWith(_ > _)\n        val maxList11 = maxList10.takeRight(k)\n\
    \        val maxList12 = maxList11.sortWith(_ > _)\n        val maxList13 = maxList12.takeRight(k)\n\
    \        val maxList14 = maxList13.sortWith(_ > _)\n        val maxList15 = maxList14.takeRight(k)\n\
    \        val maxList16 = maxList15.sortWith(_ > _)\n        val maxList17 = maxList16.takeRight(k)\n\
    \        val maxList18 = maxList17.sortWith(_ > _)\n        val maxList19 = maxList18.takeRight(k)\n\
    \        val maxList20 = maxList19.sortWith(_ > _)\n        val maxList21 = maxList20.takeRight(k)\n\
    \        val maxList22 = maxList21.sortWith(_ > _)\n        val maxList23 = maxList22.takeRight(k)\n\
    \        val maxList24 = maxList23.sortWith(_ > _)\n        val maxList25 = maxList24.takeRight(k)\n\
    \        val maxList26 = maxList25.sortWith(_ > _)\n        val maxList27 = maxList26.takeRight(k)\n\
    \        val maxList28 = maxList27.sortWith(_ > _)\n        val maxList29 = maxList28.takeRight(k)\n\
    \        val maxList30 = maxList29.sortWith(_ > _)\n        val maxList31 = maxList30.takeRight(k)\n\
    \        val maxList32 = maxList31.sortWith(_ > _)\n        val maxList33 = maxList32.takeRight(k)\n\
    \        val maxList34 = maxList33.sortWith(_ > _)\n", "        val result = new\
    \ mutable.ListBuffer[Long]()\n        val maxNum = arr.max\n        val maxIndex\
    \ = arr.indexWhere(x => x == maxNum)\n        val maxNums = arr.take(maxIndex\
    \ + 1)\n        val maxNumsIndex = arr.indexWhere(x => x == maxNums)\n       \
    \ val maxNumsIndex = maxNumsIndex + 1\n        val maxNumsLength = maxNumsIndex\
    \ - maxIndex\n        val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength\
    \ = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength + 1\n       \
    \ val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength\
    \ + 1\n        val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength\
    \ = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength + 1\n       \
    \ val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength\
    \ + 1\n        val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength\
    \ = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength + 1\n       \
    \ val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength\
    \ + 1\n        val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength\
    \ = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength + 1\n       \
    \ val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength\
    \ + 1\n        val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength\
    \ = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength + 1\n       \
    \ val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength\
    \ + 1\n        val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength\
    \ = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength + 1\n       \
    \ val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength\
    \ + 1\n        val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength\
    \ = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength + 1\n       \
    \ val maxNumsLength = maxNumsLength + 1\n        val maxNumsLength = maxNumsLength\
    \ + 1\n        ", "        val arr = arr.toList\n        val len = arr.length\n\
    \        val max = new Array[Long](k)\n        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for(i <- 0 until len) {\n            val curr = arr(i)\n \
    \           if(curr > maxValue) {\n                maxValue = curr\n         \
    \       maxIndex = i\n            }\n        }\n        val result = new Array[Long](k)\n\
    \        for(i <- 0 until k) {\n            result(i) = arr(maxIndex + i)\n  \
    \      }\n        result", "        val result = new mutable.ListBuffer[Long]()\n\
    \        var max = 0\n        var maxIndex = 0\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > max) {\n                max = arr(i)\n         \
    \       maxIndex = i\n            }\n        }\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) == max) {\n                result.add(arr(maxIndex))\n\
    \            }\n        }\n        result.toList", "        val arr = arr.sortBy(-_)\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        var j = 0\n        while (i < len) {\n            if (j == k)\
    \ {\n                max(i) = arr(i)\n                i += 1\n               \
    \ j += 1\n            } else {\n                if (arr(i) > arr(j)) {\n     \
    \               max(i) = arr(i)\n                    i += 1\n                }\
    \ else {\n                    max(i) = arr(j)\n                    j += 1\n  \
    \              }\n            }\n        }\n        max.toList", "        val\
    \ maxList = mutable.ListBuffer.empty[Long]\n        val maxLength = 0\n      \
    \  arr.foreach { x =>\n            if (maxLength < k) {\n                maxList\
    \ += x\n                maxLength += 1\n            }\n            if (maxLength\
    \ == k) {\n                if (x > maxList(0)) {\n                    maxList\
    \ += x\n                    maxLength += 1\n                }\n            }\n\
    \        }\n        maxList.sortWith(_ > _)", "        val arr = arr.sortWith(_\
    \ < _)\n        val len = arr.length\n        val max = new Array[Long](k)\n \
    \       val maxIndex = new Array[Int](k)\n        val maxIndexMap = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap2 = new mutable.HashMap[Long, Int]()\n      \
    \  var i = 0\n        while (i < k) {\n            if (maxIndexMap.contains(arr(i)))\
    \ {\n                maxIndexMap(arr(i)) = maxIndexMap(arr(i)) + 1\n         \
    \   } else {\n                maxIndexMap(arr(i)) = 1\n            }\n       \
    \     if (maxIndexMap2.contains(arr(i))) {\n                maxIndexMap2(arr(i))\
    \ = maxIndexMap2(arr(i)) + 1\n            } else {\n                maxIndexMap2(arr(i))\
    \ = 1\n            }\n            if (maxIndexMap(arr(i)) > maxIndexMap2(arr(i)))\
    \ {\n                maxIndexMap(arr(i)) = maxIndexMap2(arr(i))\n            }\n\
    \            i += 1\n        }\n        val maxList = arr.map(x => if (maxIndexMap(x)\
    \ == maxIndexMap2(x)) x else null).toList\n        val maxList2 = arr.map(x =>\
    \ if (maxIndexMap(x) == maxIndexMap2(x)) x else null).toList\n        if (maxList.length\
    \ == k) {\n            return maxList\n        } else {\n            return maxList2\n\
    \        }", "        val result = new mutable.ListBuffer[Long]()\n        val\
    \ maxValue = arr.max\n        val maxIndex = arr.indexWhere(x => x == maxValue)\n\
    \        val maxLength = maxIndex - k + 1\n        val maxValues = arr.take(maxLength)\n\
    \        result.addAll(maxValues)\n        result", "        val arr = arr.sortBy(-_)\n\
    \        val maxK = arr.take(k).toList\n        val maxKIndex = arr.lastIndexWhere(_\
    \ == maxK(0))\n        val maxKList = arr.take(maxKIndex).toList\n        val\
    \ maxKListIndex = arr.lastIndexWhere(_ == maxKList(0))\n        val maxKListIndex\
    \ = maxKListIndex + 1\n        val maxKListLength = maxKListIndex - maxKIndex\n\
    \        val maxKListLength = maxKListLength + 1\n        val maxKListLength =\
    \ maxKListLength + 1\n        val maxKListLength = maxKListLength + 1\n      \
    \  val maxKListLength = maxKListLength + 1\n        val maxKListLength = maxKListLength\
    \ + 1\n        val maxKListLength = maxKListLength + 1\n        val maxKListLength\
    \ = maxKListLength + 1\n        val maxKListLength = maxKListLength + 1\n    \
    \    val maxKListLength = maxKListLength + 1\n        val maxKListLength = maxKListLength\
    \ + 1\n        val maxKListLength = maxKListLength + 1\n        val maxKListLength\
    \ = maxKListLength + 1\n        val maxKListLength = maxKListLength + 1\n    \
    \    val maxKListLength = maxKListLength + 1\n        val maxKListLength = maxKListLength\
    \ + 1\n        val maxKListLength = maxKListLength + 1\n        val maxKListLength\
    \ = maxKListLength + 1\n        val maxKListLength = maxKListLength + 1\n    \
    \    val maxKListLength = maxKListLength + 1\n        val maxKListLength = maxKListLength\
    \ + 1\n        val maxKListLength = maxKListLength + 1\n        val maxKListLength\
    \ = maxKListLength + 1\n        val maxKListLength = maxKListLength + 1\n    \
    \    val maxKListLength = maxKListLength + 1\n        val maxKListLength = maxKListLength\
    \ + 1\n        val maxKListLength = maxKListLength + 1\n        val maxKListLength\
    \ = maxKListLength + 1\n        val maxKListLength = maxKListLength + 1\n    \
    \    val maxKListLength = maxKListLength + 1\n        val maxKListLength = maxKListLength\
    \ + 1\n        val maxKListLength = maxKListLength + 1\n        val maxKListLength\
    \ = maxKListLength + 1\n        val maxKListLength = maxKListLength + 1\n    \
    \    val maxKListLength = maxKListLength + 1\n        val maxKListLength = maxKListLength\
    \ + 1\n", "        val arr = arr.sortBy(-_)\n        val len = arr.length\n  \
    \      val max = new Array[Long](k)\n        val maxIndex = new Array[Int](k)\n\
    \        val maxIndexMap = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap3 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap4 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap5 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap6\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap7 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap8 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap9 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap10\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap11 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap12 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap13 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap14\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap15 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap16 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap17 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap18\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap19 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap20 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap21 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap22\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap23 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap24 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap25 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap26\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap27 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap28 = new mutable.HashMap[Long, Int]()", "   \
    \     val n = arr.size\n        val m = arr.max\n        val maxList = new Array[Long](k)\n\
    \        var i = 0\n        while (i < k) {\n            if (arr(i) < m) {\n \
    \               maxList(i) = arr(i)\n                i += 1\n            } else\
    \ {\n                maxList(i) = m\n                i += 1\n            }\n \
    \       }\n        return maxList", "        val max = new Array[Long](k)\n  \
    \      var i = 0\n        var j = 0\n        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        while (i < arr.length) {\n            while (j < arr.length\
    \ && arr(j) < maxValue) {\n                j++\n            }\n            if\
    \ (j == arr.length) {\n                maxIndex += 1\n                maxValue\
    \ = arr(i)\n                max(i) = arr(i)\n                i += 1\n        \
    \        j = 0\n            } else {\n                maxIndex += 1\n        \
    \        maxValue = arr(i)\n                max(i) = arr(i)\n                i\
    \ += 1\n                j = j + 1\n            }\n        }\n        max.toList",
  "        val maxList = mutable.ArrayBuffer.empty[Long]\n        val maxLength =\
    \ Math.min(arr.length, k)\n        var i = 0\n        while (i < maxLength) {\n\
    \            val currentMax = arr(i)\n            if (currentMax > maxList(0))\
    \ {\n                maxList += currentMax\n            }\n            i += 1\n\
    \        }\n        maxList.toList", "        val arr = arr.sortBy(_)\n      \
    \  val len = arr.length\n        val max = new Array[Long](k)\n        var i =\
    \ 0\n        while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n       \
    \         max(i) = arr(i)\n                i += 1\n            } else {\n    \
    \            max(i) = arr(i + 1)\n                i += 1\n            }\n    \
    \    }\n        if (arr.length == k) {\n            arr\n        } else {\n  \
    \          arr ++ max.reverse\n        }", "        val arr = arr.toList\n   \
    \     val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        while(i < k) {\n            val max = arr(i)\n            val\
    \ j = 0\n            while(j < len) {\n                if(arr(j) > max) {\n  \
    \                  max = arr(j)\n                }\n                j += 1\n \
    \           }\n            i += 1\n            max(i) = max\n        }\n     \
    \   max.toList", "        val maxNums = arr.take(k).maxBy(_.toLong)\n        val\
    \ maxNumsIndex = arr.lastIndexWhere(_.toLong == maxNums)\n        val maxNumsIndexInRange\
    \ = maxNumsIndex.toLong\n        val maxNumsIndexInRangeInRange = maxNumsIndexInRange\
    \ - k\n        val maxNumsIndexInRangeInRangeInRange = maxNumsIndexInRangeInRange\
    \ / k\n        val maxNumsIndexInRangeInRangeInRangeInRange = maxNumsIndexInRangeInRangeInRangeInRange\
    \ % k\n        val maxNumsIndexInRangeInRangeInRangeInRangeInRange = maxNumsIndexInRangeInRangeInRangeInRangeInRange\
    \ / k\n        val maxNumsIndexInRangeInRangeInRangeInRangeInRange = maxNumsIndexInRangeInRangeInRangeInRangeInRange\
    \ % k\n        val maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRange = maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRange\
    \ / k\n        val maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRange % k\n      \
    \  val maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRange = maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ / k\n        val maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange % k\n\
    \        val maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ / k\n        val maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ % k\n        val maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ = maxNumsIndexInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRangeInRange\
    \ / k\n        val maxNum", "        val arr = arr.sortBy(x => x)\n        val\
    \ maxList = arr.take(k)\n        val maxList2 = arr.drop(k)\n        val maxList3\
    \ = arr.takeRight(k)\n        val maxList4 = arr.dropRight(k)\n        val maxList5\
    \ = arr.take(arr.size - k)\n        val maxList6 = arr.drop(arr.size - k)\n  \
    \      val maxList7 = arr.takeRight(arr.size - k)\n        val maxList8 = arr.dropRight(arr.size\
    \ - k)\n        val maxList9 = arr.take(arr.size - k)\n        val maxList10 =\
    \ arr.drop(arr.size - k)\n        val maxList11 = arr.takeRight(arr.size - k)\n\
    \        val maxList12 = arr.dropRight(arr.size - k)\n        val maxList13 =\
    \ arr.take(arr.size - k)\n        val maxList14 = arr.drop(arr.size - k)\n   \
    \     val maxList15 = arr.takeRight(arr.size - k)\n        val maxList16 = arr.dropRight(arr.size\
    \ - k)\n        val maxList17 = arr.take(arr.size - k)\n        val maxList18\
    \ = arr.drop(arr.size - k)\n        val maxList19 = arr.takeRight(arr.size - k)\n\
    \        val maxList20 = arr.dropRight(arr.size - k)\n        val maxList21 =\
    \ arr.take(arr.size - k)\n        val maxList22 = arr.drop(arr.size - k)\n   \
    \     val maxList23 = arr.takeRight(arr.size - k)\n        val maxList24 = arr.dropRight(arr.size\
    \ - k)\n        val maxList25 = arr.take(arr.size - k)\n        val maxList26\
    \ = arr.drop(arr.size - k)\n        val maxList27 = arr.takeRight(arr.size - k)\n\
    \        val maxList28 = arr.dropRight(arr.size - k)\n        val maxList29 =\
    \ arr.take(arr.size - k)\n        val maxList30 = arr.drop(arr.size - k)\n   \
    \     val maxList31 = arr.takeRight(arr.size - k)\n        val maxList32 = arr.dropRight(arr.size\
    \ - k)\n        val maxList33 = arr.take(arr.size - k)\n        val maxList34\
    \ = arr.drop(arr.size - k)\n        val maxList35 = arr.takeRight(arr.size - k)\n\
    \        val maxList36 = arr.dropRight(arr.size - k)\n        val maxList37 =\
    \ arr.take(arr.size - k)\n        val maxList38 = arr.drop(arr.size - k)\n   \
    \     val maxList39 = arr.takeRight(arr.", "        val arr = arr.sortBy(-_)\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n   \
    \             max(i) = arr(i)\n                i += 1\n            } else {\n\
    \                max(i) = arr(i + 1)\n                i += 1\n            }\n\
    \        }\n        max.toList", "        val arr = arr.sortBy(-_)\n        val\
    \ max = new Array[Long](k)\n        var i = 0\n        var j = 0\n        var\
    \ maxIndex = 0\n        while (i < arr.length && j < k) {\n            if (arr(i)\
    \ > arr(j)) {\n                max(i) = arr(i)\n                i += 1\n     \
    \       } else {\n                max(j) = arr(j)\n                j += 1\n  \
    \          }\n        }\n        while (i < arr.length) {\n            max(maxIndex)\
    \ = arr(i)\n            i += 1\n            maxIndex += 1\n        }\n       \
    \ while (j < k) {\n            max(maxIndex) = arr(j)\n            j += 1\n  \
    \          maxIndex += 1\n        }\n        arr", "        val n = arr.length\n\
    \        val max = new Array[Long](k)\n        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for(i <- 0 until k) {\n            for(j <- 0 until n) {\n\
    \                if(arr(j) > maxValue) {\n                    maxValue = arr(j)\n\
    \                    maxIndex = j\n                }\n            }\n        \
    \    max += maxValue\n            maxValue = arr(maxIndex)\n            maxIndex\
    \ = 0\n        }\n        max += maxValue\n        max.toList", "        val maxList\
    \ = mutable.ListBuffer.empty[Long]\n        val maxK = k\n        val maxLength\
    \ = arr.length\n        val maxValue = arr(0)\n        val maxIndex = arr.indexOf(0)\n\
    \        val maxIndexList = mutable.ListBuffer.empty[Long]\n        val maxIndexK\
    \ = k\n        val maxIndexLength = arr.indexOf(0)\n        val maxIndexValue\
    \ = arr(0)\n        val maxIndexIndex = arr.indexOf(0)\n        val maxIndexIndexList\
    \ = mutable.ListBuffer.empty[Long]\n        val maxIndexIndexK = k\n        val\
    \ maxIndexIndexLength = arr.indexOf(0)\n        val maxIndexIndexValue = arr(0)\n\
    \        val maxIndexIndexIndex = arr.indexOf(0)\n        val maxIndexIndexIndexList\
    \ = mutable.ListBuffer.empty[Long]\n        val maxIndexIndexIndexK = k\n    \
    \    val maxIndexIndexIndexLength = arr.indexOf(0)\n        val maxIndexIndexIndexValue\
    \ = arr(0)\n        val maxIndexIndexIndexIndex = arr.indexOf(0)\n        val\
    \ maxIndexIndexIndexIndexList = mutable.ListBuffer.empty[Long]\n        val maxIndexIndexIndexIndexK\
    \ = k\n        val maxIndexIndexIndexIndexLength = arr.indexOf(0)\n        val\
    \ maxIndexIndexIndexIndexValue = arr(0)\n        val maxIndexIndexIndexIndexIndex\
    \ = arr.indexOf(0)\n        val maxIndexIndexIndexIndexIndexList = mutable.ListBuffer.empty[Long]\n\
    \        val maxIndexIndexIndexIndexIndexK = k\n        val maxIndexIndexIndexIndexIndexLength\
    \ = arr.indexOf(0)\n        val maxIndexIndexIndexIndexIndexValue = arr(0)\n \
    \       val maxIndexIndexIndexIndexIndexIndex = arr.indexOf(0)\n        val maxIndexIndexIndexIndexIndexIndexList\
    \ = mutable.ListBuffer.empty[Long]\n        val maxIndexIndexIndexIndexIndexK\
    \ = k\n        val maxIndexIndexIndexIndexIndexIndexLength = arr.indexOf(0)\n\
    \        val maxIndexIndexIndexIndexIndexIndexValue = arr(0)\n        val maxIndexIndexIndexIndexIndexIndex\
    \ = arr.indexOf(0)\n        val maxIndexIndexIndexIndexIndexIndexList = mutable.ListBuffer.empty[Long]\n\
    \        val maxIndexIndexIndexIndexIndexIndexK = k\n        val maxIndexIndexIndexIndexIndexIndexIndexLength\
    \ = arr.indexOf(0)\n        val maxIndexIndexIndexIndexIndexIndexValue = arr(0)\n\
    \        val maxIndexIndexIndexIndexIndexIndex = arr.indexOf(0)\n        val maxIndexIndexIndexIndexIndexIndexIndexList\
    \ = mutable.ListBuffer.empty[Long]\n        val maxIndexIndexIndexIndexIndexIndexK\
    \ = k\n        val max", "        val arr = arr.toList\n        val len = arr.length\n\
    \        val max = new Array[Long](k)\n        val maxIndex = new Array[Int](k)\n\
    \        val maxIndexMap = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap3 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap4 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap5 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap6\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap7 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap8 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap9 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap10\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap11 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap12 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap13 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap14\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap15 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap16 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap17 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap18\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap19 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap20 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap21 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap22\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap23 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap24 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap25 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap26\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap27 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap28 = new mutable.HashMap[Long, Int]()\n     \
    \   val ", "        val arr = arr.toList\n        val len = arr.length\n     \
    \   val max = new Array[Long](k)\n        var maxIndex = 0\n        var maxValue\
    \ = 0\n        var i = 0\n        var j = 0\n        while (i < len) {\n     \
    \       val value = arr(i)\n            if (maxIndex < k) {\n                if\
    \ (value > maxValue) {\n                    maxValue = value\n               \
    \     maxIndex = j\n                }\n                j += 1\n            } else\
    \ {\n                if (value > maxValue) {\n                    maxValue = value\n\
    \                    maxIndex = j\n                }\n            }\n        \
    \    i += 1\n        }\n        val result = new Array[Long](maxIndex)\n     \
    \   var index = 0\n        var value = 0\n        while (index < maxIndex) {\n\
    \            value = maxValue\n            result(index) = value\n           \
    \ index += 1\n        }\n        result", "        val arr = arr.sortBy(-_)\n\
    \        val maxArr : List[Long] = new Array[Long](k)\n        var i = 0\n   \
    \     while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n              \
    \  maxArr(i) = arr(i)\n                i += 1\n            } else {\n        \
    \        maxArr(i) = arr(i + 1)\n                i += 1\n            }\n     \
    \   }\n        maxArr", "        val arr = arr.toList\n        val len = arr.length\n\
    \        val max = arr.max\n        val maxIndex = arr.indexWhere(x => x == max)\n\
    \        val maxIndex2 = maxIndex + 1\n        val maxIndex3 = maxIndex2 + 1\n\
    \        val maxIndex4 = maxIndex3 + 1\n        val maxIndex5 = maxIndex4 + 1\n\
    \        val maxIndex6 = maxIndex5 + 1\n        val maxIndex7 = maxIndex6 + 1\n\
    \        val maxIndex8 = maxIndex7 + 1\n        val maxIndex9 = maxIndex8 + 1\n\
    \        val maxIndex10 = maxIndex9 + 1\n        val maxIndex11 = maxIndex10 +\
    \ 1\n        val maxIndex12 = maxIndex11 + 1\n        val maxIndex13 = maxIndex12\
    \ + 1\n        val maxIndex14 = maxIndex13 + 1\n        val maxIndex15 = maxIndex14\
    \ + 1\n        val maxIndex16 = maxIndex15 + 1\n        val maxIndex17 = maxIndex16\
    \ + 1\n        val maxIndex18 = maxIndex17 + 1\n        val maxIndex19 = maxIndex18\
    \ + 1\n        val maxIndex20 = maxIndex19 + 1\n        val maxIndex21 = maxIndex20\
    \ + 1\n        val maxIndex22 = maxIndex21 + 1\n        val maxIndex23 = maxIndex22\
    \ + 1\n        val maxIndex24 = maxIndex23 + 1\n        val maxIndex25 = maxIndex24\
    \ + 1\n        val maxIndex26 = maxIndex25 + 1\n        val maxIndex27 = maxIndex26\
    \ + 1\n        val maxIndex28 = maxIndex27 + 1\n        val maxIndex29 = maxIndex28\
    \ + 1\n        val maxIndex30 = maxIndex29 + 1\n        val maxIndex31 = maxIndex30\
    \ + 1\n        val maxIndex32 = maxIndex31 + 1\n        val maxIndex33 = maxIndex32\
    \ + 1\n        val maxIndex34 = maxIndex33 + 1\n        val maxIndex35 = maxIndex34\
    \ + 1\n        val maxIndex36 = maxIndex35 + 1\n        val maxIndex37 = maxIndex36\
    \ + 1\n        val maxIndex38 = maxIndex37 + 1\n        val maxIndex39 = maxIndex38\
    \ + 1\n        val maxIndex40 = maxIndex39 + 1\n        val maxIndex41 = maxIndex40\
    \ + 1\n        val maxIndex42 = maxIndex41 + 1\n        val maxIndex43 = maxIndex42\
    \ + 1\n        val maxIndex44 = maxIndex43 + 1\n        val maxIndex45 = maxIndex44\
    \ + 1\n        val maxIndex4", "        val arr = arr.sortBy(_.toLong)\n     \
    \   val max = arr.take(k).toList\n        val rest = arr.drop(k)\n        rest\
    \ match {\n            case Nil => max\n            case _ => maximum(max, rest.max)\n\
    \        }", "        val arr = arr.sortBy(-_)\n        val len = arr.length\n\
    \        val max = new Array[Long](k)\n        var i = 0\n        while (i < k)\
    \ {\n            if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n\
    \                i += 1\n            } else {\n                max(i) = arr(i\
    \ + 1)\n                i += 1\n            }\n        }\n        if (len > k)\
    \ {\n            val newArr = new Array[Long](len - k)\n            i = 0\n  \
    \          while (i < k) {\n                newArr(i) = arr(i + k)\n         \
    \       i += 1\n            }\n            max = newArr\n        }\n        max",
  "        val arr = arr.toList\n        val n = arr.size\n        val max = new Array[Long](k)\n\
    \        val maxIndex = new Array[Int](k)\n        var maxIndexIndex = 0\n   \
    \     var maxIndexValue = 0\n        var maxIndexValueIndex = 0\n        var maxIndexValueValue\
    \ = 0\n        var maxIndexValueValueIndex = 0\n        var maxIndexValueValueValue\
    \ = 0\n        var maxIndexValueValueValueIndex = 0\n        var maxIndexValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue\
    \ = 0\n        var maxIndexValueValueValueValueIndex = 0\n        var maxIndexValueValueValueValueValue",
  "        val arr = arr.sortWith(_ < _)\n        val len = arr.length\n        if\
    \ (k > len) k else k\n        val max = new Array[Long](k)\n        var i = 0\n\
    \        while (i < k) {\n            if (arr(i) > arr(i + 1)) max += arr(i +\
    \ 1)\n            else max += arr(i)\n            i += 1\n        }\n        max\
    \ += arr(k)\n        val res = new Array[Long](k)\n        var j = 0\n       \
    \ while (j < k) {\n            if (arr(j) > max) res(j) = arr(j)\n           \
    \ else res(j) = max\n            j += 1\n        }\n        res", "        val\
    \ result = new mutable.ListBuffer[Long]()\n        val len = arr.length\n    \
    \    val maxLen = k\n        val maxNum = arr.max\n        val minNum = arr.min\n\
    \        val maxIndex = arr.lastIndexWhere(x => x == maxNum)\n        val minIndex\
    \ = arr.lastIndexWhere(x => x == minNum)\n        val maxNums = arr.take(maxLen)\n\
    \        val minNums = arr.take(minLen)\n        val maxIndex = arr.lastIndexWhere(x\
    \ => x == maxNum)\n        val minIndex = arr.lastIndexWhere(x => x == minNum)\n\
    \        val maxNumsIndex = arr.lastIndexWhere(x => x == maxNums)\n        val\
    \ minNumsIndex = arr.lastIndexWhere(x => x == minNums)\n        val maxIndex =\
    \ arr.lastIndexWhere(x => x == maxNum)\n        val minIndex = arr.lastIndexWhere(x\
    \ => x == minNum)\n        val maxNumsIndex = arr.lastIndexWhere(x => x == maxNums)\n\
    \        val minNumsIndex = arr.lastIndexWhere(x => x == minNums)\n        val\
    \ maxIndex = arr.lastIndexWhere(x => x == maxNum)\n        val minIndex = arr.lastIndexWhere(x\
    \ => x == minNum)\n        val maxNumsIndex = arr.lastIndexWhere(x => x == maxNums)\n\
    \        val minNumsIndex = arr.lastIndexWhere(x => x == minNums)\n        val\
    \ maxIndex = arr.lastIndexWhere(x => x == maxNum)\n        val minIndex = arr.lastIndexWhere(x\
    \ => x == minNum)\n        val maxNumsIndex = arr.lastIndexWhere(x => x == maxNums)\n\
    \        val minNumsIndex = arr.lastIndexWhere(x => x == minNums)\n        val\
    \ maxIndex = arr.lastIndexWhere(x => x == maxNum)\n        val minIndex = arr.lastIndexWhere(x\
    \ => x == minNum)\n        val maxNumsIndex = arr.lastIndexWhere(x => x == maxNums)\n\
    \        val minNumsIndex = arr.lastIndexWhere(x => x == minNums)\n        val\
    \ maxIndex = arr.lastIndexWhere(x => x == maxNum)\n        val minIndex = arr.lastIndexWhere(x\
    \ => x == minNum)\n        val maxNumsIndex = arr.lastIndexWhere(x => x == maxNums)\n\
    \        val minNumsIndex = arr.lastIndexWhere(x => x == minNums)\n        val\
    \ maxIndex = arr.lastIndexWhere(x => x == maxNum)\n        val minIndex = arr.lastIndexWhere(x\
    \ => x == minNum)\n        val max", "        val arr = arr.sortWith(_ < _)\n\
    \        val len = arr.length\n        val max = new Array[Long](k)\n        var\
    \ i = 0\n        while (i < k) {\n            if (arr(i) > arr(i + 1)) {\n   \
    \             max(i) = arr(i)\n                i += 1\n            } else {\n\
    \                max(i) = arr(i + 1)\n                i += 1\n            }\n\
    \        }\n        max.toList", "        val arr = arr.sortBy(-_)\n        val\
    \ max = new Array[Long](k)\n        var i = 0\n        while (i < k) {\n     \
    \       if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n        \
    \        i += 1\n            } else {\n                max(i) = arr(i + 1)\n \
    \               i += 1\n            }\n        }\n        max.toList", "     \
    \   val arr = arr.sortBy(_.toLong)\n        val len = arr.length\n        val\
    \ max = new Array[Long](k)\n        var i = 0\n        while (i < k) {\n     \
    \       if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n        \
    \        i += 1\n            } else {\n                max(i) = arr(i + 1)\n \
    \               i += 1\n            }\n        }\n        if (arr.length < k)\
    \ {\n            val newArr = new Array[Long](k)\n            var j = 0\n    \
    \        while (j < k) {\n                newArr(j) = arr(j)\n               \
    \ j += 1\n            }\n            max = newArr\n        }\n        new Array[Long](k)",
  "        val n = arr.length\n        val m = arr.max\n        val max = new Array[Long](k)\n\
    \        val maxIndex = new Array[Int](k)\n        val maxIndexMap = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap2 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap3 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap4\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap5 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap6 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap7 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap8\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap9 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap10 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap11 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap12\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap13 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap14 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap15 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap16\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap17 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap18 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap19 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap20\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap21 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap22 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap23 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap24\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap25 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap26 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap27 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap28\
    \ = new mutable.HashMap[Long, Int]()\n        val max", "        val maxNums =\
    \ arr.take(k).toList\n        val maxNumsSorted = arr.sortWith(_.compareTo(_)\
    \ > 0).take(k).toList\n        val maxNumsSortedReverse = arr.sortWith(_.compareTo(_)\
    \ < 0).take(k).toList\n        val maxNumsSortedReverse2 = arr.sortWith(_.compareTo(_)\
    \ < 0).take(k).toList.reverse\n        val maxNumsSortedReverse3 = arr.sortWith(_.compareTo(_)\
    \ < 0).take(k).toList.reverse\n        val maxNumsSortedReverse4 = arr.sortWith(_.compareTo(_)\
    \ < 0).take(k).toList.reverse.reverse\n        val maxNumsSortedReverse5 = arr.sortWith(_.compareTo(_)\
    \ < 0).take(k).toList.reverse.reverse.reverse\n        val maxNumsSortedReverse6\
    \ = arr.sortWith(_.compareTo(_) < 0).take(k).toList.reverse.reverse.reverse\n\
    \        val maxNumsSortedReverse7 = arr.sortWith(_.compareTo(_) < 0).take(k).toList.reverse.reverse.reverse.reverse\n\
    \        val maxNumsSortedReverse8 = arr.sortWith(_.compareTo(_) < 0).take(k).toList.reverse.reverse.reverse.reverse.reverse\n\
    \        val maxNumsSortedReverse9 = arr.sortWith(_.compareTo(_) < 0).take(k).toList.reverse.reverse.reverse.reverse.reverse\n\
    \        val maxNumsSortedReverse10 = arr.sortWith(_.compareTo(_) < 0).take(k).toList.reverse.reverse.reverse.reverse.reverse.reverse\n\
    \        val maxNumsSortedReverse11 = arr.sortWith(_.compareTo(_) < 0).take(k).toList.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse",
  "        val n = arr.size\n        val m = arr.max\n        val maxList = mutable.ArrayBuffer.empty[Long]\n\
    \        var maxIndex = 0\n        var maxValue = m\n        var i = 0\n     \
    \   while (i < n) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n            i += 1\n\
    \        }\n        if (maxIndex == k) {\n            maxList += maxValue\n  \
    \      }\n        else {\n            val leftList = arr.take(maxIndex)\n    \
    \        val rightList = arr.drop(maxIndex + 1)\n            val leftMax = maximum(leftList,\
    \ k)\n            val rightMax = maximum(rightList, k)\n            val maxList\
    \ = leftMax + rightMax\n        }\n        return maxList", "        val arr =\
    \ arr.toList\n        val len = arr.length\n        val max = new Array[Long](k)\n\
    \        val maxIndex = new Array[Int](k)\n        val maxIndexLen = new Array[Int](k)\n\
    \        val maxIndexLenLen = new Array[Int](k)\n        val maxIndexLenLenLen\
    \ = new Array[Int](k)\n        val maxIndexLenLenLen = new Array[Int](k)\n   \
    \     val maxIndexLenLenLen = new Array[Int](k)\n        val maxIndexLenLenLen\
    \ = new Array[Int](k)\n        val maxIndexLenLenLen = new Array[Int](k)\n   \
    \     val maxIndexLenLenLen = new Array[Int](k)\n        val maxIndexLenLenLen\
    \ = new Array[Int](k)\n        val maxIndexLenLenLen = new Array[Int](k)\n   \
    \     val maxIndexLenLenLen = new Array[Int](k)\n        val maxIndexLenLenLen\
    \ = new Array[Int](k)\n        val maxIndexLenLenLen = new Array[Int](k)\n   \
    \     val maxIndexLenLenLen = new Array[Int](k)\n        val maxIndexLenLenLen\
    \ = new Array[Int](k)\n        val maxIndexLenLenLen = new Array[Int](k)\n   \
    \     val maxIndexLenLenLen = new Array[Int](k)\n        val maxIndexLenLenLen\
    \ = new Array[Int](k)\n        val maxIndexLenLenLen = new Array[Int](k)\n   \
    \     val maxIndexLenLenLen = new Array[Int](k)\n        val maxIndexLenLenLen\
    \ = new Array[Int](k)\n        val maxIndexLenLenLen = new Array[Int](k)\n   \
    \     val maxIndexLenLenLen = new Array[Int](k)\n        val maxIndexLenLenLen\
    \ = new Array[Int](k)\n        val maxIndexLenLenLen = new Array[Int](k)\n   \
    \     val maxIndexLenLenLen = new Array[Int](k)\n        val maxIndexLenLenLen\
    \ = new Array[Int](k)\n        val maxIndexLenLenLen = new Array[Int](k)\n   \
    \     val maxIndexLenLenLen = new Array[Int](k)\n        val maxIndexLenLenLen\
    \ = new Array[Int](k)\n        val maxIndexLenLenLen = new Array[Int](k)\n   \
    \     val maxIndexLenLenLen = new Array[Int](k)\n        val maxIndexLenLenLen\
    \ = new Array[Int](k)\n        val maxIndexLenLenLen = new Array[Int](k)\n   \
    \     val maxIndexLen", "        val arr = arr.toList\n        val n = arr.size\n\
    \        val m = arr.max\n        val max = new mutable.PriorityQueue[Long]()\n\
    \        for (i <- 0 until n) {\n            if (arr(i) > m) {\n             \
    \   max.enqueue(arr(i))\n            }\n        }\n        val result = new mutable.PriorityQueue[Long]()\n\
    \        for (i <- 0 until k) {\n            if (max.isEmpty) {\n            \
    \    break\n            }\n            result.enqueue(max.dequeue())\n       \
    \ }\n        result.toList", "        val maxList = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxLen = arr.length\n        val maxK = k\n        val maxNum = arr.max\n\
    \        val maxNumIndex = arr.indexWhere(x => x == maxNum)\n        val maxNumIndex\
    \ = maxNumIndex.min(maxK - maxNumIndex.size)\n        val maxNums = arr.take(maxNumIndex.toInt)\n\
    \        val maxNumsIndex = maxNums.indexWhere(x => x == maxNum)\n        val\
    \ maxNumsIndex = maxNumsIndex.min(maxK - maxNumsIndex.size)\n        val maxNumsIndex\
    \ = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.min(maxLen)\n\
    \        val maxNumsIndex = maxNumsIndex.min(maxK - maxNumsIndex.size)\n     \
    \   val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.min(maxLen)\n\
    \        val maxNumsIndex = maxNumsIndex.min(maxK - maxNumsIndex.size)\n     \
    \   val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.min(maxLen)\n\
    \        val maxNumsIndex = maxNumsIndex.min(maxK - maxNumsIndex.size)\n     \
    \   val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.min(maxLen)\n\
    \        val maxNumsIndex = maxNumsIndex.min(maxK - maxNumsIndex.size)\n     \
    \   val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.min(maxLen)\n\
    \        val maxNumsIndex = maxNumsIndex.min(maxK - maxNumsIndex.size)\n     \
    \   val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.min(maxLen)\n\
    \        val maxNumsIndex = maxNumsIndex.min(maxK - maxNumsIndex.size)\n     \
    \   val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = maxNumsIndex.min(maxLen)\n\
    \        val maxNumsIndex = maxNumsIndex.min(maxK - maxNumsIndex.size)\n     \
    \   val maxNumsIndex = maxNumsIndex.max(0)\n        val maxNumsIndex = max", " \
    \       val arr = arr.toList\n        val len = arr.length\n        val max =\
    \ new Array[Long](k)\n        val maxIndex = new Array[Int](k)\n        val maxIndexMap\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap2 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap3 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap4 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap5\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap6 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap7 = new mutable.HashMap[Long, Int]()\n      \
    \  val maxIndexMap8 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap9\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap10 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap11 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap12 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap13\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap14 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap15 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap16 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap17\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap18 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap19 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap20 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap21\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap22 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap23 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap24 = new mutable.HashMap[Long, Int]()\n        val maxIndexMap25\
    \ = new mutable.HashMap[Long, Int]()\n        val maxIndexMap26 = new mutable.HashMap[Long,\
    \ Int]()\n        val maxIndexMap27 = new mutable.HashMap[Long, Int]()\n     \
    \   val maxIndexMap28 = new mutable.HashMap[Long, Int]()\n        val ", "   \
    \     val result = new mutable.ListBuffer[Long]()\n        val maxNum = arr.max\n\
    \        val maxIndex = arr.indexWhere(x => x == maxNum)\n        val maxNums\
    \ = arr.take(maxIndex)\n        result.addAll(maxNums)\n        val rest = arr.drop(maxIndex)\n\
    \        result.addAll(maximum(rest, k - maxNums.size))\n        result.toList",
  "        val arr = arr.sortBy(_.toLong)\n        val len = arr.length\n        val\
    \ max = new Array[Long](k)\n        var i = 0\n        while (i < k) {\n     \
    \       if (arr(i) > arr(i + 1)) {\n                max(i) = arr(i)\n        \
    \        i += 1\n            } else {\n                max(i) = arr(i + 1)\n \
    \               i += 1\n            }\n        }\n        max.toList"]
stop_tokens:
- "\n    }\n"

name: HumanEval_77_iscube
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that takes an integer a and returns true \n    // if this\
  \ ingeger is a cube of some integer number.\n    // Note: you may assume the input\
  \ is always valid.\n    // Examples:\n    // >>> iscube((1l))\n    // (true)\n \
  \   // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n    // (true)\n\
  \    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n    // (true)\n\
  \    // >>> iscube((180l))\n    // (false)\n    def iscube(a : Long) : Boolean =\
  \ {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(iscube((1l)) == (true));\n\
  \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n  \
  \  assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n  \
  \  assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n   \
  \ assert(iscube((1729l)) == (false));\n    }\n\n}\n"
completions: ["        val cube = a.toString.toInt\n        cube == cube * cube *\
    \ cube", "        val n = a.toInt\n        if (n == 0) true\n        else if (n\
    \ == 1) false\n        else if (n % 2 == 0) iscube(n * n) else false", "     \
    \   val cube = a.toString.toInt\n        cube == cube * cube * cube", "      \
    \  val cube = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n      \
    \  cubes += cube\n        cubes += cube * cube\n        cubes += cube * cube *\
    \ cube\n        cubes += cube * cube * cube * cube\n        cubes += cube * cube\
    \ * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube ", "        val cube = a.toString.toInt\n        cube == cube * cube\
    \ * cube", "        val cube = a.toString.toInt\n        cube == cube * cube *\
    \ cube", "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a\n        ", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       val cubes = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.HashSet(cubes)\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetIterator = cubesSet.iterator\n\
    \        val cubesSetIteratorSize = cubesSetIterator.size\n        val cubesSetIteratorNext\
    \ = cubesSetIterator.next\n        val cubesSetIteratorNextSize = cubesSetIteratorNext.size\n\
    \        val cubesSetIteratorNextNext = cubesSetIteratorNext.next\n        val\
    \ cubesSetIteratorNextNextSize = cubesSetIteratorNextNext.size\n        val cubesSetIteratorNextNextNext\
    \ = cubesSetIteratorNextNext.next\n        val cubesSetIteratorNextNextNextSize\
    \ = cubesSetIteratorNextNextNext.size\n        val cubesSetIteratorNextNextNextNext\
    \ = cubesSetIteratorNextNextNext.next\n        val cubesSetIteratorNextNextNextNextSize\
    \ = cubesSetIteratorNextNextNextNext.size\n        val cubesSetIteratorNextNextNextNextNext\
    \ = cubesSetIteratorNextNextNextNext.next\n        val cubesSetIteratorNextNextNextNextNextSize\
    \ = cubesSetIteratorNextNextNextNextNext.size\n        val cubesSetIteratorNextNextNextNextNextNext\
    \ = cubesSetIteratorNextNextNextNextNext.next\n        val cubesSetIteratorNextNextNextNextNextNextSize\
    \ = cubesSetIteratorNextNextNextNextNextNext.size\n        val cubesSetIteratorNextNextNextNextNextNextNext\
    \ = cubesSetIteratorNextNextNextNextNextNextNext.next\n        val cubesSetIteratorNextNextNextNextNextNextNextSize\
    \ = cubesSetIteratorNextNextNextNextNextNextNext.size\n        val cubesSetIteratorNextNextNextNextNextNextNextNext\
    \ = cubesSetIteratorNextNextNextNextNextNextNextNext.next\n        val cubesSetIteratorNextNextNextNextNextNextNextNextSize\
    \ = cubesSetIteratorNextNextNextNextNextNextNextNext.size\n        val cubesSetIteratorNextNextNextNextNextNextNextNextNext\
    \ = cubesSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n        val\
    \ cubesSetIteratorNextNextNextNextNextNextNextNextNextSize = cubesSetIteratorNextNextNextNextNextNextNextNextNextNext.size\n\
    \        val cubesSetIteratorNextNextNextNextNextNextNext", "        val cube\
    \ = a.toString.toInt\n        val cubes = mutable.ListBuffer(cube)\n        cubes\
    \ foreach { x => cubes += x*x*x }\n        cubes.size == a.toString.toInt", " \
    \       val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong * a.toString.toLong * a.toString.toLong", " \
    \       val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube ", "        val n = a.toInt\n        val cubes = mutable.Set[Long]()\n\
    \        cubes.add(1l)\n        cubes.add(3l)\n        cubes.add(5l)\n       \
    \ cubes.add(7l)\n        cubes.add(9l)\n        cubes.add(11l)\n        cubes.add(13l)\n\
    \        cubes.add(15l)\n        cubes.add(17l)\n        cubes.add(19l)\n    \
    \    cubes.add(21l)\n        cubes.add(23l)\n        cubes.add(25l)\n        cubes.add(27l)\n\
    \        cubes.add(29l)\n        cubes.add(31l)\n        cubes.add(33l)\n    \
    \    cubes.add(35l)\n        cubes.add(37l)\n        cubes.add(39l)\n        cubes.add(41l)\n\
    \        cubes.add(43l)\n        cubes.add(45l)\n        cubes.add(47l)\n    \
    \    cubes.add(49l)\n        cubes.add(51l)\n        cubes.add(53l)\n        cubes.add(55l)\n\
    \        cubes.add(57l)\n        cubes.add(59l)\n        cubes.add(61l)\n    \
    \    cubes.add(63l)\n        cubes.add(65l)\n        cubes.add(67l)\n        cubes.add(69l)\n\
    \        cubes.add(71l)\n        cubes.add(73l)\n        cubes.add(75l)\n    \
    \    cubes.add(77l)\n        cubes.add(79l)\n        cubes.add(81l)\n        cubes.add(83l)\n\
    \        cubes.add(85l)\n        cubes.add(87l)\n        cubes.add(89l)\n    \
    \    cubes.add(91l)\n        cubes.add(93l)\n        cubes.add(95l)\n        cubes.add(97l)\n\
    \        cubes.add(99l)\n        cubes.add(101l)\n        cubes.add(103l)\n  \
    \      cubes.add(105l)\n        cubes.add(107l)\n        cubes.add(109l)\n   \
    \     cubes.add(111l)\n        cubes.add(113l)\n        cubes.add(115l)\n    \
    \    cubes.add(117l)\n        cubes.add(119l)\n        cubes.add(121l)\n     \
    \   cubes.add(123l)\n        cubes.add(125l)\n        cubes.add(127l)\n      \
    \  cubes.add(129l)\n        cubes.add(131l)\n        cubes.add(133l)\n       \
    \ cubes.add(135l)\n        cubes.add(137l)\n        cubes.add(139l)\n        cubes.add(141l)\n\
    \        cubes.add(143l)\n        cubes.add(145l)\n        cubes.add(147l)\n \
    \       cubes.add(149l)\n        cubes.add(151l)\n        cubes.add(153l)\n  \
    \      cubes.add(155l)\n        cubes.add(157l)\n        cubes.add(159l)\n   \
    \     cubes.add(161l)\n", "        val cube = a.toLong * a.toLong * a.toLong\n\
    \        cube == a.toLong", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes.contains(cube)",
  "        val cube = a.toString.toInt\n        val cubes = mutable.Set[Long]()\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        val cubesCount = cubes.length\n\
    \        val cubesSum = cubes.sum\n        val cubesSumSquare = cubesSum * cubesSum\n\
    \        val cubesSumCube = cubesSum * cube\n        val cubesSumCubeSquare =\
    \ cubesSumCube * cubesSumCube\n        val cubesSumCubeCube = cubesSumCube * cube\n\
    \        val cubesSumCubeCubeSquare = cubesSumCubeCube * cubesSumCube\n      \
    \  val cubesSumCubeCubeCube = cubesSumCubeCube * cube\n        val cubesSumCubeCubeCubeSquare\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cubesSumCubeCubeCube * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube\
    \ = cube", "        val cube = a.toLong * a.toLong * a.toLong\n        cube ==\
    \ a.toLong", "        val cube = a.toString.toInt\n        cube == cube * cube\
    \ * cube", "        val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube ", "        val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong * a.toString.toLong * a.toString.toLong", " \
    \       val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesSet = mutable.HashSet(cubes)\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSet", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.ArrayBuffer.empty[Long]\n        cubes += a\n        cubes += a *\
    \ a\n        cubes += a * a * a\n        cubes += a * a * a * a\n        cubes\
    \ += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        ", " \
    \       val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer(cube)\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube ", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.Set[Long]()\n        cubes += cube\n        cubes += cube * cube\n\
    \        cubes += cube * cube * cube\n        cubes.contains(a)", "        val\
    \ cube = a.toInt\n        val cubes = mutable.Set[Long]()\n        cubes += cube\n\
    \        cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(a)",
  "        val n = a.toInt\n        if (n == 0 || n == 1) return true\n        if\
    \ (n % 2 == 0) return false\n        val x = n\n        val y = n\n        val\
    \ z = n\n        while (x != 1) {\n            x /= 2\n            y /= 2\n  \
    \          z /= 2\n        }\n        if (y == z) return true\n        if (y ==\
    \ 1) return false\n        if (z == 1) return false\n        val a = n\n     \
    \   val b = n\n        val c = n\n        while (a != 1) {\n            a /= 2\n\
    \            b /= 2\n            c /= 2\n        }\n        if (b == c) return\
    \ true\n        if (b == 1) return false\n        if (c == 1) return false\n \
    \       val d = n\n        val e = n\n        val f = n\n        while (d != 1)\
    \ {\n            d /= 2\n            e /= 2\n            f /= 2\n        }\n \
    \       if (e == f) return true\n        if (e == 1) return false\n        if\
    \ (f == 1) return false\n        val g = n\n        val h = n\n        val i =\
    \ n\n        while (g != 1) {\n            g /= 2\n            h /= 2\n      \
    \      i /= 2\n        }\n        if (h == i) return true\n        if (h == 1)\
    \ return false\n        if (i == 1) return false\n        val j = n\n        val\
    \ k = n\n        val l = n\n        while (j != 1) {\n            j /= 2\n   \
    \         k /= 2\n            l /= 2\n        }\n        if (k == l) return true\n\
    \        if (k == 1) return false\n        if (l == 1) return false\n        val\
    \ m = n\n        val n = n\n        val o = n\n        while (m != 1) {\n    \
    \        m /= 2\n            n /= 2\n            o /= 2\n        }\n        if\
    \ (o == n) return true\n        if (o == 1) return false\n        if (n == 1)\
    \ return false\n        val p = n\n        val q = n\n        val r = n\n    \
    \    while (p != 1) {\n            p /= 2\n            q /= 2\n            r /=\
    \ 2\n        }\n        if (q == r) return true\n        if (q == 1) return false\n\
    \        if (r == 1) return false\n        val s = n\n        val t = n\n    \
    \    val u = n\n        while (s != 1) {\n            s /= 2\n            t /=\
    \ 2\n            u /= 2\n        }\n        if (t == u) return true\n        if\
    \ (t == 1) return false\n        if (u == 1) return false\n        val v = n\n\
    \        val w = n\n        val x = n\n        while (w != 1) {\n            w\
    \ /= 2\n            v /= 2\n            x /= 2", "        val n = a.toInt\n  \
    \      val cubes = mutable.ListBuffer[Long]()\n        cubes += n\n        cubes\
    \ += n * n\n        cubes += n * n * n\n        cubes += n * n * n * n\n     \
    \   cubes += n * n * n * n * n\n        cubes += n * n * n * n * n * n\n     \
    \   cubes += n * n * n * n * n * n * n\n        cubes += n * n * n * n * n * n\
    \ * n * n\n        cubes += n * n * n * n * n * n * n * n * n\n        cubes +=\
    \ n * n * n * n * n * n * n * n * n * n\n        cubes += n * n * n * n * n *\
    \ n * n * n * n * n * n\n        cubes += n * n * n * n * n * n * n * n * n *\
    \ n * n * n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n\n\
    \        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n\
    \        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n\n        cubes += n * n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * n\n        cubes += n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes +=\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n\n        cubes += n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes +=\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * n\n        cubes += n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n\
    \        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n\n        cubes += n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * ", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       val cubes = mutable.Set[Long]()\n        cubes += cube\n        cubes\
    \ += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(a)",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val n = a.toInt\n        val cube = n * n * n\n        cube == a.toLong",
  "        val cube = a.toString.toLong\n        val cubes = cube.toString.toLong\n\
    \        val cubesArray = cubes.toString.toLong\n        val cubesArrayLength\
    \ = cubesArray.length\n        val cubesArrayLength = cubesArray.length\n    \
    \    val cubesArrayLength = cubesArray.length\n        val cubesArrayLength =\
    \ cubesArray.length\n        val cubesArrayLength = cubesArray.length\n      \
    \  val cubesArrayLength = cubesArray.length\n        val cubesArrayLength = cubesArray.length\n\
    \        val cubesArrayLength = cubesArray.length\n        val cubesArrayLength\
    \ = cubesArray.length\n        val cubesArrayLength = cubesArray.length\n    \
    \    val cubesArrayLength = cubesArray.length\n        val cubesArrayLength =\
    \ cubesArray.length\n        val cubesArrayLength = cubesArray.length\n      \
    \  val cubesArrayLength = cubesArray.length\n        val cubesArrayLength = cubesArray.length\n\
    \        val cubesArrayLength = cubesArray.length\n        val cubesArrayLength\
    \ = cubesArray.length\n        val cubesArrayLength = cubesArray.length\n    \
    \    val cubesArrayLength = cubesArray.length\n        val cubesArrayLength =\
    \ cubesArray.length\n        val cubesArrayLength = cubesArray.length\n      \
    \  val cubesArrayLength = cubesArray.length\n        val cubesArrayLength = cubesArray.length\n\
    \        val cubesArrayLength = cubesArray.length\n        val cubesArrayLength\
    \ = cubesArray.length\n        val cubesArrayLength = cubesArray.length\n    \
    \    val cubesArrayLength = cubesArray.length\n        val cubesArrayLength =\
    \ cubesArray.length\n        val cubesArrayLength = cubesArray.length\n      \
    \  val cubesArrayLength = cubesArray.length\n        val cubesArrayLength = cubesArray.length\n\
    \        val cubesArrayLength = cubesArray.length\n        val cubesArrayLength\
    \ = cubesArray.length\n        val cubesArrayLength = cubesArray.length\n    \
    \    val cubesArrayLength = cubesArray.length\n        val cubesArrayLength =\
    \ cubesArray.length\n        val cubesArrayLength = cubesArray.length\n      \
    \  val cubesArrayLength = cubesArray.length\n        val cubesArrayLength = cubesArray.length\n\
    \        val cubesArrayLength = cubesArray.length\n        val cubesArrayLength\
    \ = cubesArray.length\n        val cubesArrayLength = cubesArray.length\n    \
    \    val cubesArrayLength = cubesArray.length\n        val cubesArrayLength = ",
  "        val cube = a.toInt\n        if (cube == cube*cube && cube == cube*cube*cube)\n\
    \            true\n        else\n            false", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n     \
    \   cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes +=\
    \ cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cu", "    \
    \    val cube = a.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        while(cubes.nonEmpty) {\n            val cube = cubes.head\n\
    \            cubes -= cube\n            if(cube == cube*cube*cube) {\n       \
    \         return true\n            }\n        }\n        return false", "    \
    \    val cube = a.toString.toInt\n        cube == cube * cube * cube", "     \
    \   val cube = a.toString.toInt\n        cube == cube * cube * cube", "      \
    \  val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n    \
    \    cube == a.toString.toLong", "        val n = a.toInt\n        val cube =\
    \ n * n * n\n        cube == a.toLong", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       val cubes = mutable.ArrayBuffer(cube)\n        cubes += cube\n       \
    \ cubes.contains(cube)", "        val cube = a.toString.toInt\n        val cubes\
    \ = cube.toString.toInt\n        val cubesString = cubes.toString\n        val\
    \ cubesStringLength = cubesString.length\n        val cubesStringLength = cubesString.length\n\
    \        val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length", " \
    \       val cube = a.toString.toInt\n        cube == cube * cube * cube", "  \
    \      val n = a.toInt\n        val cube = n * n * n\n        if (cube == a) true\
    \ else false", "        val cube = a.toString.toInt\n        cube == cube * cube\
    \ * cube", "        val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong", "        val n = a.toInt\n        if (n ==\
    \ 0 || n == 1) return true\n        if (n % 2 == 0) return false\n        if (n\
    \ % 3 == 0) return false\n        if (n % 5 == 0) return false\n        if (n\
    \ % 7 == 0) return false\n        if (n % 11 == 0) return false\n        if (n\
    \ % 13 == 0) return false\n        if (n % 17 == 0) return false\n        if (n\
    \ % 19 == 0) return false\n        if (n % 23 == 0) return false\n        if (n\
    \ % 29 == 0) return false\n        if (n % 31 == 0) return false\n        if (n\
    \ % 37 == 0) return false\n        if (n % 41 == 0) return false\n        if (n\
    \ % 43 == 0) return false\n        if (n % 47 == 0) return false\n        if (n\
    \ % 53 == 0) return false\n        if (n % 59 == 0) return false\n        if (n\
    \ % 61 == 0) return false\n        if (n % 67 == 0) return false\n        if (n\
    \ % 71 == 0) return false\n        if (n % 73 == 0) return false\n        if (n\
    \ % 79 == 0) return false\n        if (n % 83 == 0) return false\n        if (n\
    \ % 89 == 0) return false\n        if (n % 97 == 0) return false\n        if (n\
    \ % 103 == 0) return false\n        if (n % 111 == 0) return false\n        if\
    \ (n % 127 == 0) return false\n        if (n % 131 == 0) return false\n      \
    \  if (n % 137 == 0) return false\n        if (n % 143 == 0) return false\n  \
    \      if (n % 149 == 0) return false\n        if (n % 153 == 0) return false\n\
    \        if (n % 157 == 0) return false\n        if (n % 161 == 0) return false\n\
    \        if (n % 167 == 0) return false\n        if (n % 173 == 0) return false\n\
    \        if (n % 179 == 0) return false\n        if (n % 183 == 0) return false\n\
    \        if (n % 191 == 0) return false\n        if (n % 197 == 0) return false\n\
    \        if (n % 203 == 0) return false\n        if (n % 209 == 0) return false\n\
    \        if (n % 215 == 0) return false\n        if (n % 221 == 0) return false\n\
    \        if (n % 227 == 0) return false\n        if (n % 233 == 0) return false\n\
    \        if (n % 239 == 0) return false\n        if (n % 243 == 0) return false\n\
    \        if (n % 249 == 0) return false\n        if (n % 253 == 0) return false\n\
    \        if (n % 259 == 0) return false\n        if (n % 263 == 0) return false\n\
    \        if (n % 269 == 0) return false\n        if (n % 273 == 0) return false\n\
    \        if (n % 279 == 0) return false\n        if (n % 283 == 0) return false\n\
    \        if (n % 289 == 0) return false\n        if (n % 297 == 0) return false\n\
    \        if (n % 303 == 0) return false\n        if (n % 309 == 0) return false\n\
    \        if (n % 313 == 0) return false\n        if (n % 317", "        val cube\
    \ = a.toString.toInt\n        cube == (a.toString.toInt * a.toString.toInt * a.toString.toInt)",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        cubes += cube\n        cubes.contains(cube)", "        val cube = a.toInt\n\
    \        val cubes = cube.toLong * cube.toLong * cube.toLong\n        cubes ==\
    \ a", "        val cube = a.toLong * a.toLong * a.toLong\n        cube == a.toLong",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesCount = cubes.toSeq.length\n        val cubesSum = cubes.sum\n\
    \        val cubesSum2 = cubesSum * cubesSum\n        val cubesSum3 = cubesSum2\
    \ * cubesSum\n        val cubesSum4 = cubesSum3 * cubesSum\n        val cubesSum5\
    \ = cubesSum4 * cubesSum\n        val cubesSum6 = cubesSum5 * cubesSum\n     \
    \   val cubesSum7 = cubesSum6 * cubesSum\n        val cubesSum8 = cubesSum7 *\
    \ cubesSum\n        val cubesSum9 = cubesSum8 * cubesSum\n        val cubesSum10\
    \ = cubesSum9 * cubesSum\n        val cubesSum11 = cubesSum10 * cubesSum\n   \
    \     val cubesSum12 = cubesSum11 * cubesSum\n        val cubesSum13 = cubesSum12\
    \ * cubesSum\n        val cubesSum14 = cubesSum13 * cubesSum\n        val cubesSum15\
    \ = cubesSum14 * cubesSum\n        val cubesSum16 = cubesSum15 * cubesSum\n  \
    \      val cubesSum17 = cubesSum16 * cubesSum\n        val cubesSum18 = cubesSum17\
    \ * cubesSum\n        val cubesSum19 = cubesSum18 * cubesSum\n        val cubesSum20\
    \ = cubesSum19 * cubesSum\n        val cubesSum21 = cubesSum20 * cubesSum\n  \
    \      val cubesSum22 = cubesSum21 * cubesSum\n        val cubesSum23 = cubesSum22\
    \ * cubesSum\n        val cubesSum24 = cubesSum23 * cubesSum\n        val cubesSum25\
    \ = cubesSum24 * cubesSum\n        val cubesSum26 = cubesSum25 * cubesSum\n  \
    \      val cubesSum27 = cubesSum26 * cubesSum\n        val cubesSum28 = cubesSum27\
    \ * cubesSum\n        val cubesSum29 = cubesSum28 * cubesSum\n        val cubesSum30\
    \ = cubesSum29 * cubesSum\n        val cubesSum31 = cubesSum30 * cubesSum\n  \
    \      val cubesSum32 = cube", "        val cube = a.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.HashSet[Long]()\n\
    \        cubesSet += cube\n        cubesSet += cube * cube\n        cubesSet +=\
    \ cube * cube * cube\n        cubesSet += cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube\n        cubesSet += cube * cube * cube\
    \ * cube * cube * cube\n        cubesSet += cube * cube * cube * cube * cube *\
    \ cube * cube\n        cubesSet += cube * cube * cube * cube * cube * cube * cube\
    \ * cube\n        cubesSet += cube * cube * cube * cube * cube * cube * cube *\
    \ cube * cube\n        cubesSet += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube\n        cubesSet += cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube\n        cubesSet += cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubesSet += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube ", "        val\
    \ n = a.toInt\n        if (n < 0) false\n        else if (n == 0) true\n     \
    \   else if (n % 2 == 0) false\n        else iscube(n - 1l) ", "        val cube\
    \ = a.toString.toInt\n        cube == cube * cube * cube", "        val n = a.toInt\n\
    \        val cubes = mutable.ListBuffer(n).map(x => x*x*x)\n        cubes.contains(a)",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toInt\n        val cubes = cube.toLong * cube.toLong * cube.toLong\n\
    \        cubes.toLong == a", "        val n = a.toInt\n        if (n == 1l) true\n\
    \        else if (n % 2 == 0l) iscube(n / 2l)\n        else false", "        val\
    \ cube = a.toString.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a.toString.toInt\n        cube == cube * cube * cube", "        val cube =\
    \ a.toLong * a.toLong * a.toLong\n        val cube2 = a.toLong * a.toLong * a.toLong\n\
    \        val cube3 = a.toLong * a.toLong * a.toLong\n        val cube4 = a.toLong\
    \ * a.toLong * a.toLong\n        val cube5 = a.toLong * a.toLong * a.toLong\n\
    \        val cube6 = a.toLong * a.toLong * a.toLong\n        val cube7 = a.toLong\
    \ * a.toLong * a.toLong\n        val cube8 = a.toLong * a.toLong * a.toLong\n\
    \        val cube9 = a.toLong * a.toLong * a.toLong\n        val cube10 = a.toLong\
    \ * a.toLong * a.toLong\n        val cube11 = a.toLong * a.toLong * a.toLong\n\
    \        val cube12 = a.toLong * a.toLong * a.toLong\n        val cube13 = a.toLong\
    \ * a.toLong * a.toLong\n        val cube14 = a.toLong * a.toLong * a.toLong\n\
    \        val cube15 = a.toLong * a.toLong * a.toLong\n        val cube16 = a.toLong\
    \ * a.toLong * a.toLong\n        val cube17 = a.toLong * a.toLong * a.toLong\n\
    \        val cube18 = a.toLong * a.toLong * a.toLong\n        val cube19 = a.toLong\
    \ * a.toLong * a.toLong\n        val cube20 = a.toLong * a.toLong * a.toLong\n\
    \        val cube21 = a.toLong * a.toLong * a.toLong\n        val cube22 = a.toLong\
    \ * a.toLong * a.toLong\n        val cube23 = a.toLong * a.toLong * a.toLong\n\
    \        val cube24 = a.toLong * a.toLong * a.toLong\n        val cube25 = a.toLong\
    \ * a.toLong * a.toLong\n        val cube26 = a.toLong * a.toLong * a.toLong\n\
    \        val cube27 = a.toLong * a.toLong * a.toLong\n        val cube28 = a.toLong\
    \ * a.toLong * a.toLong\n        val cube29 = a.toLong * a.toLong * a.toLong\n\
    \        val cube30 = a.toLong * a.toLong * a.toLong\n        val cube31 = a.toLong\
    \ * a.toLong * a.", "        val cube = a.toString.toInt\n        val cubes =\
    \ mutable.ListBuffer(cube)\n        cubes += cube\n        cubes += cube * cube\n\
    \        cubes += cube * cube * cube\n        cubes += cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube\n        cubes += cube * cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube ", "        val cube = a.toLong * a.toLong\
    \ * a.toLong\n        cube == a.toLong", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       val cubes = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.HashSet(cubes)\n\
    \        cubesSet.contains(cube)", "        val cube = a.toString.toInt\n    \
    \    val cubes = mutable.ArrayBuffer(cube)\n        cubes += cube\n        cubes.contains(cube)",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer(cube)\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += a\n    \
    \    cubes += a * a\n        cubes += a * a * a\n        cubes += a * a * a *\
    \ a\n        cubes += a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        ", "        val cube = a.toString.toInt\n        val\
    \ cubes = mutable.ListBuffer(cube)\n        val cubesCount = cubes.toSeq.length\n\
    \        val cubesSum = cubes.sum\n        val cubesSum2 = cubesSum * cubesSum\n\
    \        val cubesSum3 = cubesSum2 * cubesSum\n        val cubesSum4 = cubesSum3\
    \ * cubesSum\n        val cubesSum5 = cubesSum4 * cubesSum\n        val cubesSum6\
    \ = cubesSum5 * cubesSum\n        val cubesSum7 = cubesSum6 * cubesSum\n     \
    \   val cubesSum8 = cubesSum7 * cubesSum\n        val cubesSum9 = cubesSum8 *\
    \ cubesSum\n        val cubesSum10 = cubesSum9 * cubesSum\n        val cubesSum11\
    \ = cubesSum10 * cubesSum\n        val cubesSum12 = cubesSum11 * cubesSum\n  \
    \      val cubesSum13 = cubesSum12 * cubesSum\n        val cubesSum14 = cubesSum13\
    \ * cubesSum\n        val cubesSum15 = cubesSum14 * cubesSum\n        val cubesSum16\
    \ = cubesSum15 * cubesSum\n        val cubesSum17 = cubesSum16 * cubesSum\n  \
    \      val cubesSum18 = cubesSum17 * cubesSum\n        val cubesSum19 = cubesSum18\
    \ * cubesSum\n        val cubesSum20 = cubesSum19 * cubesSum\n        val cubesSum21\
    \ = cubesSum20 * cubesSum\n        val cubesSum22 = cubesSum21 * cubesSum\n  \
    \      val cubesSum23 = cubesSum22 * cubesSum\n        val cubesSum24 = cubesSum23\
    \ * cubesSum\n        val cubesSum25 = cubesSum24 * cubesSum\n        val cubesSum26\
    \ = cubesSum25 * cubesSum\n        val cubesSum27 = cubesSum26 * cubesSum\n  \
    \      val cubesSum28 = cubesSum27 * cubesSum\n        val cubesSum29 = cubesSum28\
    \ * cubesSum\n        val cubesSum30 = cubesSum29 * cubesSum\n        val cubesSum31\
    \ = cubesSum30 * cubesSum\n        val cubesSum32 = cube", "        val cube =\
    \ a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n    \
    \    cubes += a\n        cubes += a * a\n        cubes += a * a * a\n        cubes\
    \ += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n \
    \       cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        ", "        val cube = a.toInt\n      \
    \  val cubes = mutable.ListBuffer(cube)\n        cubes foreach { x =>\n      \
    \      cubes += x * x\n            cubes += x * x * x\n            cubes += x\
    \ * x * x * x\n            cubes += x * x * x * x * x\n            cubes += x\
    \ * x * x * x * x * x\n            cubes += x * x * x * x * x * x * x\n      \
    \      cubes += x * x * x * x * x * x * x * x\n            cubes += x * x * x\
    \ * x * x * x * x * x * x\n            cubes += x * x * x * x * x * x * x * x\
    \ * x * x\n            cubes += x * x * x * x * x * x * x * x * x * x * x\n  \
    \          cubes += x * x * x * x * x * x * x * x * x * x * x * x\n          \
    \  cubes += x * x * x * x * x * x * x * x * x * x * x * x * x\n            cubes\
    \ += x * x * x * x * x * x * x * x * x * x * x * x * x * x\n            cubes\
    \ += x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\n            cubes\
    \ += x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\n         \
    \   cubes += x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\n\
    \            cubes += x * x * x * x * x * x * x * x * x * x * x * x * x * x *\
    \ x * x * x * x\n            cubes += x * x * x * x * x * x * x * x * x * x *\
    \ x * x * x * x * x * x * x * x * x\n            cubes += x * x * x * x * x *\
    \ x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\n            cubes\
    \ += x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\
    \ * x * x\n            cubes += x * x * x * x * x * x * x * x * x * x * x * x\
    \ * x * x * x * x * x * x * x * x * x * x\n            cubes += x * x * x * x\
    \ * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\n  \
    \          cubes += x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\
    \ * x * x * x * x * x * x * x * x\n            cubes += x * x * x * x * x * x\
    \ * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\n      \
    \      cubes += x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\
    \ * x * x * x * x * x * x * x\n            cubes += x * x * x * x * x * x * x\
    \ * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\n      \
    \      cubes += x * x * x * x * x * x * x * x * x * x * ", "        val cube =\
    \ a.toInt\n        val cubes = cube.toLong * cube.toLong * cube.toLong\n     \
    \   cubes % 1 == 0", "        val cube = a.toString.toInt\n        val cubes =\
    \ mutable.ArrayBuffer.empty[Long]\n        cubes += a\n        cubes += a * a\n\
    \        cubes += a * a * a\n        cubes += a * a * a * a\n        cubes +=\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        ", " \
    \       val cube = a.toInt\n        if (cube == 0)\n            return true\n\
    \        if (cube == 1)\n            return true\n        if (cube == 2)\n   \
    \         return true\n        if (cube == 3)\n            return true\n     \
    \   if (cube == 4)\n            return true\n        if (cube == 5)\n        \
    \    return true\n        if (cube == 6)\n            return true\n        if\
    \ (cube == 7)\n            return true\n        if (cube == 8)\n            return\
    \ true\n        if (cube == 9)\n            return true\n        if (cube == 10)\n\
    \            return true\n        if (cube == 11)\n            return true\n \
    \       if (cube == 12)\n            return true\n        if (cube == 13)\n  \
    \          return true\n        if (cube == 14)\n            return true\n   \
    \     if (cube == 15)\n            return true\n        if (cube == 16)\n    \
    \        return true\n        if (cube == 17)\n            return true\n     \
    \   if (cube == 18)\n            return true\n        if (cube == 19)\n      \
    \      return true\n        if (cube == 20)\n            return true\n       \
    \ if (cube == 21)\n            return true\n        if (cube == 22)\n        \
    \    return true\n        if (cube == 23)\n            return true\n        if\
    \ (cube == 24)\n            return true\n        if (cube == 25)\n           \
    \ return true\n        if (cube == 26)\n            return true\n        if (cube\
    \ == 27)\n            return true\n        if (cube == 28)\n            return\
    \ true\n        if (cube == 29)\n            return true\n        if (cube ==\
    \ 30)\n            return true\n        if (cube == 31)\n            return true\n\
    \        if (cube == 32)\n            return true\n        if (cube == 33)\n \
    \           return true\n        if (cube == 34)\n            return true\n  \
    \      if (cube == 35)\n            return true\n        if (cube == 36)\n   \
    \         return true\n        if (cube == 37)\n            return true\n    \
    \    if (cube == 38)\n            return true\n        if (cube == 39)\n     \
    \       return true\n        if (cube == 40)\n            return true\n      \
    \  if (cube == 41)\n            return true\n        if (cube == 42)\n       \
    \     return true\n        if (cube == 43)\n            return true\n        if\
    \ (cube == 44)\n            return true\n        if (cube == 45)\n           \
    \ return true\n        if (cube == 46)\n            return true\n        if (cube\
    \ == 47)\n            return true\n        if (cube == 48)\n            return\
    \ true\n        if (cube == 49)\n            return true\n        if (cube ==\
    \ 50)\n            return true\n        if (cube == 51)\n            return true\n\
    \        if (cube == 52)\n            return true\n        if (cube ", "     \
    \   val cube = a.toInt\n        if (cube == 1) {\n            true\n        }\
    \ else if (cube == 2) {\n            true\n        } else if (cube == 3) {\n \
    \           true\n        } else if (cube == 4) {\n            true\n        }\
    \ else if (cube == 5) {\n            true\n        } else if (cube == 6) {\n \
    \           true\n        } else if (cube == 7) {\n            true\n        }\
    \ else if (cube == 8) {\n            true\n        } else if (cube == 9) {\n \
    \           true\n        } else if (cube == 10) {\n            true\n       \
    \ } else if (cube == 11) {\n            true\n        } else if (cube == 12) {\n\
    \            true\n        } else if (cube == 13) {\n            true\n      \
    \  } else if (cube == 14) {\n            true\n        } else if (cube == 15)\
    \ {\n            true\n        } else if (cube == 16) {\n            true\n  \
    \      } else if (cube == 17) {\n            true\n        } else if (cube ==\
    \ 18) {\n            true\n        } else if (cube == 19) {\n            true\n\
    \        } else if (cube == 20) {\n            true\n        } else if (cube ==\
    \ 21) {\n            true\n        } else if (cube == 22) {\n            true\n\
    \        } else if (cube == 23) {\n            true\n        } else if (cube ==\
    \ 24) {\n            true\n        } else if (cube == 25) {\n            true\n\
    \        } else if (cube == 26) {\n            true\n        } else if (cube ==\
    \ 27) {\n            true\n        } else if (cube == 28) {\n            true\n\
    \        } else if (cube == 29) {\n            true\n        } else if (cube ==\
    \ 30) {\n            true\n        } else if (cube == 31) {\n            true\n\
    \        } else if (cube == 32) {\n            true\n        } else if (cube ==\
    \ 33) {\n            true\n        } else if (cube == 34) {\n            true\n\
    \        } else if (cube == 35) {\n            true\n        } else if (cube ==\
    \ 36) {\n            true\n        } else if (cube == 37) {\n            true\n\
    \        } else if (cube == 38) {\n            true\n        } else if (cube ==\
    \ 39) {\n            true\n        } else if (cube == 40) {\n            true\n\
    \        } else if (cube == 41) {\n            true\n        } else if (cube ==\
    \ 42) {\n            true\n        } else if (cube == 43) {\n            true\n\
    \        } else if (cube == 44) {\n            true\n        } else if (cube ==\
    \ 45) {\n            true\n        } else if (cube == 46) {\n            true\n\
    \        } else if (cube == 47) {\n            true\n        } else if (cube ==\
    \ 48) {\n            true\n        } else if (cube == 49) {\n            true\n\
    \        } else if (cube == 50) {\n            true\n        } else if (cube ==\
    \ 51) {\n            ", "        val cube = a.toString.toInt\n        val cubes\
    \ = cube.toString.toInt\n        val cubesString = cubes.toString\n        val\
    \ cubesStringLength = cubesString.length\n        val cubesStringLength2 = cubesStringLength\
    \ * cubesStringLength\n        val cubesStringLength3 = cubesStringLength2 * cubesStringLength\n\
    \        val cubesStringLength4 = cubesStringLength3 * cubesStringLength\n   \
    \     val cubesStringLength5 = cubesStringLength4 * cubesStringLength\n      \
    \  val cubesStringLength6 = cubesStringLength5 * cubesStringLength\n        val\
    \ cubesStringLength7 = cubesStringLength6 * cubesStringLength\n        val cubesStringLength8\
    \ = cubesStringLength7 * cubesStringLength\n        val cubesStringLength9 = cubesStringLength8\
    \ * cubesStringLength\n        val cubesStringLength10 = cubesStringLength9 *\
    \ cubesStringLength\n        val cubesStringLength11 = cubesStringLength10 * cubesStringLength\n\
    \        val cubesStringLength12 = cubesStringLength11 * cubesStringLength\n \
    \       val cubesStringLength13 = cubesStringLength12 * cubesStringLength\n  \
    \      val cubesStringLength14 = cubesStringLength13 * cubesStringLength\n   \
    \     val cubesStringLength15 = cubesStringLength14 * cubesStringLength\n    \
    \    val cubesStringLength16 = cubesStringLength15 * cubesStringLength\n     \
    \   val cubesStringLength17 = cubesStringLength16 * cubesStringLength\n      \
    \  val cubesStringLength18 = cubesStringLength17 * cubesStringLength\n       \
    \ val cubesStringLength19 = cubesStringLength18 * cubesStringLength\n        val\
    \ cubesStringLength20 = cubesStringLength19 * cubesStringLength\n        val cubesStringLength21\
    \ = cubesStringLength20 * cubesStringLength\n        val cubesStringLength22 =\
    \ cubesStringLength21 * cubesStringLength\n        val cubesStringLength23 = cubesStringLength22\
    \ * cubesStringLength\n        val cubesStringLength24 = cubesStringLength23 *\
    \ cubesStringLength\n        val cubesStringLength25 = cubesStringLength24 * cubesStringLength\n\
    \        val cubesStringLength26 = cubesStringLength25 * cubesStringLength\n \
    \       val cubesStringLength27 = cubesStringLength26 * cube", "        val cube\
    \ = a.toString.toInt\n        val cubes = cube.toString.toInt\n        val cubesString\
    \ = cubes.toString\n        val cubesStringLength = cubesString.length\n     \
    \   val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length\n        val cubesStringLength\
    \ = cubesString.length\n        val cubesStringLength = cubesString.length\n \
    \       val cubesStringLength = cubesString.length", "        val cube = a.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        cubes += cube\n      \
    \  cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes +=\
    \ cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube ",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toString.toLong\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * ", "        val n = a.toInt\n        if (n == 1) true\n    \
    \    else if (n == 2) true\n        else if (n % 2 == 0) true\n        else false",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesCount = cubes.toSeq.length\n        val cubesSum = cubes.sum\n\
    \        val cubesSum2 = cubesSum * cubesSum\n        val cubesSum3 = cubesSum2\
    \ * cubesSum\n        val cubesSum4 = cubesSum3 * cubesSum\n        val cubesSum5\
    \ = cubesSum4 * cubesSum\n        val cubesSum6 = cubesSum5 * cubesSum\n     \
    \   val cubesSum7 = cubesSum6 * cubesSum\n        val cubesSum8 = cubesSum7 *\
    \ cubesSum\n        val cubesSum9 = cubesSum8 * cubesSum\n        val cubesSum10\
    \ = cubesSum9 * cubesSum\n        val cubesSum11 = cubesSum10 * cubesSum\n   \
    \     val cubesSum12 = cubesSum11 * cubesSum\n        val cubesSum13 = cubesSum12\
    \ * cubesSum\n        val cubesSum14 = cubesSum13 * cubesSum\n        val cubesSum15\
    \ = cubesSum14 * cubesSum\n        val cubesSum16 = cubesSum15 * cubesSum\n  \
    \      val cubesSum17 = cubesSum16 * cubesSum\n        val cubesSum18 = cubesSum17\
    \ * cubesSum\n        val cubesSum19 = cubesSum18 * cubesSum\n        val cubesSum20\
    \ = cubesSum19 * cubesSum\n        val cubesSum21 = cubesSum20 * cubesSum\n  \
    \      val cubesSum22 = cubesSum21 * cubesSum\n        val cubesSum23 = cubesSum22\
    \ * cubesSum\n        val cubesSum24 = cubesSum23 * cubesSum\n        val cubesSum25\
    \ = cubesSum24 * cubesSum\n        val cubesSum26 = cubesSum25 * cubesSum\n  \
    \      val cubesSum27 = cubesSum26 * cubesSum\n        val cubesSum28 = cubesSum27\
    \ * cubesSum\n        val cubesSum29 = cubesSum28 * cubesSum\n        val cubesSum30\
    \ = cubesSum29 * cubesSum\n        val cubesSum31 = cubesSum30 * cubesSum\n  \
    \      val cubesSum32 = cube", "        val cube = a.toString.toInt\n        val\
    \ cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n        cubes +=\
    \ cube * cube\n        cubes += cube * cube * cube\n        cubes += cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * ", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        val cubesCount = cubes.length\n\
    \        val cubesSum = cubes.sum\n        val cubesSumSquare = cubes.sum * cubes.sum\n\
    \        val cubesProduct = cubes.product\n        val cubesProductSquare = cubes.product\
    \ * cubes.product\n        val cubesProductSum = cubes.product * cubesSum\n  \
    \      val cubesProductSumSquare = cubes.product * cubesSumSquare\n        val\
    \ cubesProductSumCube = cubes.product * cubesSum * cubesSum\n        val cubesProductSumCube2\
    \ = cubes.product * cubesSum * cubesSumSquare\n        val cubesProductSumCube3\
    \ = cubes.product * cubesSum * cubesSum * cubesSum\n        val cubesProductSumCube4\
    \ = cubes.product * cubesSum * cubesSum * cubesSum * cubesSum\n        val cubesProductSumCube5\
    \ = cubes.product * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum\n   \
    \     val cubesProductSumCube6 = cubes.product * cubesSum * cubesSum * cubesSum\
    \ * cubesSum * cubesSum * cubesSum\n        val cubesProductSumCube7 = cubes.product\
    \ * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum\n\
    \        val cubesProductSumCube8 = cubes.product * cubesSum * cubesSum * cubesSum\
    \ * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum\n        val cubesProductSumCube9\
    \ = cubes.product * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum\
    \ * cubesSum * cubesSum * cubesSum\n        val cubesProductSumCube10 = cubes.product\
    \ * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum\
    \ * cubesSum * cubesSum * cubesSum\n        val cubesProductSumCube11 = cubes.product\
    \ * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum * cubesSum\
    \ * cubesSum * cubesSum * cubesSum * cubesSum\n", "        val cube = a.toLong\
    \ * a.toLong * a.toLong\n        cube == a.toLong", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val n = a.toInt\n        val cubes\
    \ = mutable.ListBuffer[Long]()\n        cubes += n\n        cubes += n * n\n \
    \       cubes += n * n * n\n        cubes += n * n * n * n\n        cubes += n\
    \ * n * n * n * n\n        cubes += n * n * n * n * n * n\n        cubes += n\
    \ * n * n * n * n * n * n\n        cubes += n * n * n * n * n * n * n * n\n  \
    \      cubes += n * n * n * n * n * n * n * n * n\n        cubes += n * n * n\
    \ * n * n * n * n * n * n * n\n        cubes += n * n * n * n * n * n * n * n\
    \ * n * n * n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n\n\
    \        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes\
    \ += n * n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes += n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes += n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes +=\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes\
    \ += n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n \
    \       cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n\n        cubes += n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes += n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n\n        cubes += n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n        cubes +=\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n\n        cubes += n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * n * n\n        cubes += n * n * n * n *\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    \
    \    cubes += n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * ", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesSet = mutable.Set[Long]()\n        val cubesSetSize = cubes.size\n\
    \        val cubesSetIterator = cubes.iterator\n        val cubesSetIteratorSize\
    \ = cubesSetIterator.size\n        val cubesSetIteratorIterator = cubesSetIterator.iterator\n\
    \        val cubesSetIteratorIteratorSize = cubesSetIteratorIterator.size\n  \
    \      val cubesSetIteratorIteratorIterator = cubesSetIteratorIterator.iterator\n\
    \        val cubesSetIteratorIteratorIteratorSize = cubesSetIteratorIteratorIterator.size\n\
    \        val cubesSetIteratorIteratorIteratorIterator = cubesSetIteratorIteratorIterator.iterator\n\
    \        val cubesSetIteratorIteratorIteratorIteratorSize = cubesSetIteratorIteratorIteratorIterator.size\n\
    \        val cubesSetIteratorIteratorIteratorIteratorIterator = cubesSetIteratorIteratorIteratorIterator.iterator\n\
    \        val cubesSetIteratorIteratorIteratorIteratorIteratorSize = cubesSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val cubesSetIteratorIteratorIteratorIteratorIteratorIterator = cubesSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val cubesSetIteratorIteratorIteratorIteratorIteratorIteratorSize = cubesSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = cubesSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n      \
    \  val cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize =\
    \ cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n    \
    \    val cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = cubesSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val cubesSet", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.ArrayBuffer.empty[Long]\n        cubes += a\n        cubes += a *\
    \ a\n        cubes += a * a * a\n        cubes += a * a * a * a\n        cubes\
    \ += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cube",
  "        val cube = a.toInt\n        val cubes = mutable.Set[Long]()\n        cubes.add(cube)\n\
    \        cubes.add(cube * cube)\n        cubes.add(cube * cube * cube)\n     \
    \   cubes.add(cube * cube * cube * cube)\n        cubes.add(cube * cube * cube\
    \ * cube * cube)\n        cubes.add(cube * cube * cube * cube * cube * cube)\n\
    \        cubes.add(cube * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube)\n   \
    \     cubes.add(cube * cube * cube * cube * cube * cube * cube * cube * cube *\
    \ cube * cube * cube)\n        cubes.add(cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube)\n        cubes.add(cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube)\n\
    \        cubes.add(cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube * cube *\
    \ cube * cube * cube * cube * cube * cube * ", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += a\n   \
    \     cubes += a * a\n        cubes += a * a * a\n        cubes += a * a * a *\
    \ a\n        cubes += a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a", "        val n = a.toInt\n        if (n == 1l) true\n  \
    \      else if (n == 0l) true\n        else if (n == -1l) true\n        else if\
    \ (n % 2 == 0) true\n        else false", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       cube == cube * cube * cube", "        val cube = a.toString.toLong * a.toString.toLong\
    \ * a.toString.toLong\n        cube == a.toString.toLong * a.toString.toLong *\
    \ a.toString.toLong", "        val cube = a.toLong * a.toLong * a.toLong\n   \
    \     val cubes = mutable.ListBuffer[Long]()\n        cubes += a.toLong\n    \
    \    cubes += a.toLong * a.toLong\n        cubes += a.toLong * a.toLong * a.toLong\n\
    \        cubes += a.toLong * a.toLong * a.toLong * a.toLong\n        cubes +=\
    \ a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\n        cubes += a.toLong\
    \ * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\n        cubes += a.toLong\
    \ * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\n        cubes\
    \ += a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\
    \ * a.toLong\n        cubes += a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\
    \ * a.toLong * a.toLong * a.toLong * a.toLong\n        cubes += a.toLong * a.toLong\
    \ * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\
    \ * a.toLong\n        cubes += a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\
    \ * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\n        cubes\
    \ += a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\
    \ * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\n        cubes += a.toLong\
    \ * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\
    \ * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\n        cubes += a.toLong\
    \ * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\
    \ * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong * a.toLong\n        cubes\
    \ += a.toLong * a.toLong * a.toLong * a.toLong * a.to", "        val cube = a.toString.toLong\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n     \
    \   cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes +=\
    \ cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * ", "        val cube\
    \ = a.toInt\n        if (cube == 1) {\n            return true\n        }\n  \
    \      if (cube == 3) {\n            return true\n        }\n        if (cube\
    \ == 5) {\n            return true\n        }\n        if (cube == 7) {\n    \
    \        return true\n        }\n        if (cube == 9) {\n            return\
    \ true\n        }\n        if (cube == 11) {\n            return true\n      \
    \  }\n        if (cube == 13) {\n            return true\n        }\n        if\
    \ (cube == 15) {\n            return true\n        }\n        if (cube == 17)\
    \ {\n            return true\n        }\n        if (cube == 19) {\n         \
    \   return true\n        }\n        if (cube == 21) {\n            return true\n\
    \        }\n        if (cube == 23) {\n            return true\n        }\n  \
    \      if (cube == 25) {\n            return true\n        }\n        if (cube\
    \ == 27) {\n            return true\n        }\n        if (cube == 29) {\n  \
    \          return true\n        }\n        if (cube == 31) {\n            return\
    \ true\n        }\n        if (cube == 33) {\n            return true\n      \
    \  }\n        if (cube == 35) {\n            return true\n        }\n        if\
    \ (cube == 37) {\n            return true\n        }\n        if (cube == 39)\
    \ {\n            return true\n        }\n        if (cube == 41) {\n         \
    \   return true\n        }\n        if (cube == 43) {\n            return true\n\
    \        }\n        if (cube == 45) {\n            return true\n        }\n  \
    \      if (cube == 47) {\n            return true\n        }\n        if (cube\
    \ == 49) {\n            return true\n        }\n        if (cube == 51) {\n  \
    \          return true\n        }\n        if (cube == 53) {\n            return\
    \ true\n        }\n        if (cube == 55) {\n            return true\n      \
    \  }\n        if (cube == 57) {\n            return true\n        }\n        if\
    \ (cube == 59) {\n            return true\n        }\n        if (cube == 61)\
    \ {\n            return true\n        }\n        if (cube == 63) {\n         \
    \   return true\n        }\n        if (cube == 65) {\n            return true\n\
    \        }\n        if (cube == 67) {\n            return true\n        }\n  \
    \      if (cube == 69) {\n            return true\n        }\n        if (cube\
    \ == 71) {\n            return true\n        }\n        if (cube == 73) {\n  \
    \          return true\n        }\n        if (cube == 75) {\n            return\
    \ true\n        }\n        if (cube == 77) {\n            return true\n      \
    \  }\n        if (cube == 79) {\n            return true\n        }\n        if\
    \ (cube == 81) {\n            return true\n        }\n        if (cube == 83)\
    \ {\n            return true\n        }\n        if (", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong *\
    \ a.toString.toLong * a.toString.toLong", "        val cube = a.toInt\n      \
    \  val cubes = cube.toLong\n        val cubesRemainder = cubes % 3\n        val\
    \ cubesRemainder2 = cubesRemainder.toInt\n        val cubesRemainder3 = cubesRemainder2.toLong\n\
    \        val cubesRemainder4 = cubesRemainder3.toInt\n        val cubesRemainder5\
    \ = cubesRemainder4.toLong\n        val cubesRemainder6 = cubesRemainder5.toInt\n\
    \        val cubesRemainder7 = cubesRemainder6.toLong\n        val cubesRemainder8\
    \ = cubesRemainder7.toInt\n        val cubesRemainder9 = cubesRemainder8.toLong\n\
    \        val cubesRemainder10 = cubesRemainder9.toInt\n        val cubesRemainder11\
    \ = cubesRemainder10.toLong\n        val cubesRemainder12 = cubesRemainder11.toInt\n\
    \        val cubesRemainder13 = cubesRemainder12.toLong\n        val cubesRemainder14\
    \ = cubesRemainder13.toInt\n        val cubesRemainder15 = cubesRemainder14.toLong\n\
    \        val cubesRemainder16 = cubesRemainder15.toInt\n        val cubesRemainder17\
    \ = cubesRemainder16.toLong\n        val cubesRemainder18 = cubesRemainder17.toInt\n\
    \        val cubesRemainder19 = cubesRemainder18.toLong\n        val cubesRemainder20\
    \ = cubesRemainder19.toInt\n        val cubesRemainder21 = cubesRemainder20.toLong\n\
    \        val cubesRemainder22 = cubesRemainder21.toInt\n        val cubesRemainder23\
    \ = cubesRemainder22.toLong\n        val cubesRemainder24 = cubesRemainder23.toInt\n\
    \        val cubesRemainder25 = cubesRemainder24.toLong\n        val cubesRemainder26\
    \ = cubesRemainder25.toInt\n        val cubesRemainder27 = cubesRemainder26.toLong\n\
    \        val cubesRemainder28 = cubesRemainder27.toInt\n        val cubesRemainder29\
    \ = cubesRemainder28.toLong\n        val cubesRemainder30 = cubesRemainder29.toInt\n\
    \        val cubesRemainder31 = cubesRemainder30.toLong\n        val cubesRemainder32\
    \ = cubesRemainder31.toInt\n        ", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        val cubesCount = cubes.length\n\
    \        val cubesSum = cubes.sum\n        val cubesSumSquare = cubesSum * cubesSum\n\
    \        val cubesSumSquareRoot = cubesSumSquare / cubesCount\n        val cubesSumSquareRoot2\
    \ = cubesSumSquareRoot / 2\n        val cubesSumSquareRoot3 = cubesSumSquareRoot\
    \ / 3\n        val cubesSumSquareRoot4 = cubesSumSquareRoot / 4\n        val cubesSumSquareRoot5\
    \ = cubesSumSquareRoot / 5\n        val cubesSumSquareRoot6 = cubesSumSquareRoot\
    \ / 6\n        val cubesSumSquareRoot7 = cubesSumSquareRoot / 7\n        val cubesSumSquareRoot8\
    \ = cubesSumSquareRoot / 8\n        val cubesSumSquareRoot9 = cubesSumSquareRoot\
    \ / 9\n        val cubesSumSquareRoot10 = cubesSumSquareRoot / 10\n        val\
    \ cubesSumSquareRoot11 = cubesSumSquareRoot / 11\n        val cubesSumSquareRoot12\
    \ = cubesSumSquareRoot / 12\n        val cubesSumSquareRoot13 = cubesSumSquareRoot\
    \ / 13\n        val cubesSumSquareRoot14 = cubesSumSquareRoot / 14\n        val\
    \ cubesSumSquareRoot15 = cubesSumSquareRoot / 15\n        val cubesSumSquareRoot16\
    \ = cubesSumSquareRoot / 16\n        val cubesSumSquareRoot17 = cubesSumSquareRoot\
    \ / 17\n        val cubesSumSquareRoot18 = cubesSumSquareRoot / 18\n        val\
    \ cubesSumSquareRoot19 = cubesSumSquareRoot / 19\n        val cubesSumSquareRoot20\
    \ = cubesSumSquareRoot / 20\n        val cubesSumSquareRoot21 = cubesSumSquareRoot\
    \ / 21\n        val cubesSumSquareRoot22 = cubesSumSquareRoot / 22\n        val\
    \ cubesSumSquareRoot23 = cubesSumSquareRoot / 23\n        val cubesSumSquareRoot24\
    \ = cubesSumSquareRoot / 24\n        val cubesSumSquareRoot25 = cubesSumSquareRoot\
    \ / 25\n        val cubesSumSquareRoot26 = cubesSumSquareRoot / 26\n        val\
    \ cubesSumSquareRoot27 = cubesSumSquareRoot / 27\n        val cubesSumSquareRoot28\
    \ = ", "        val cube = a.toInt\n        if (cube == 0)\n            return\
    \ true\n        if (cube == 1)\n            return false\n        if (cube ==\
    \ -1)\n            return true\n        if (cube == 64)\n            return true\n\
    \        if (cube == -64)\n            return false\n        if (cube == 128)\n\
    \            return true\n        if (cube == -128)\n            return false\n\
    \        if (cube == 256)\n            return true\n        if (cube == -256)\n\
    \            return false\n        if (cube == 512)\n            return true\n\
    \        if (cube == -512)\n            return false\n        if (cube == 1024)\n\
    \            return true\n        if (cube == -1024)\n            return false\n\
    \        if (cube == 2048)\n            return true\n        if (cube == -2048)\n\
    \            return false\n        if (cube == 4096)\n            return true\n\
    \        if (cube == -4096)\n            return false\n        if (cube == 8192)\n\
    \            return true\n        if (cube == -8192)\n            return false\n\
    \        if (cube == 16384)\n            return true\n        if (cube == -16384)\n\
    \            return false\n        if (cube == 32768)\n            return true\n\
    \        if (cube == -32768)\n            return false\n        if (cube == 65536)\n\
    \            return true\n        if (cube == -65536)\n            return false\n\
    \        if (cube == 131072)\n            return true\n        if (cube == -131072)\n\
    \            return false\n        if (cube == 262144)\n            return true\n\
    \        if (cube == -262144)\n            return false\n        if (cube == 524288)\n\
    \            return true\n        if (cube == -524288)\n            return false\n\
    \        if (cube == 1048576)\n            return true\n        if (cube == -1048576)\n\
    \            return false\n        if (cube == 2097152)\n            return true\n\
    \        if (cube == -2097152)\n            return false\n        if (cube ==\
    \ 4194304)\n            return true\n        if (cube == -4194304)\n         \
    \   return false\n        if (cube == 8388608)\n            return true\n    \
    \    if (cube == -8388608)\n            return false\n        if (cube == 16777216)\n\
    \            return true\n        if (cube == -16777216)\n            return false\n\
    \        if (cube == 33554432)\n            return true\n        if (cube == -33554432)\n\
    \            return false\n        if (cube == 67108864)\n            return true\n\
    \        if (cube == -67108864)\n            return false\n        if (cube ==\
    \ 134217728)\n            return true", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += a\n   \
    \     cubes += a * a\n        cubes += a * a * a\n        cubes += a * a * a *\
    \ a\n        cubes += a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cube", "        val cube = a.toString.toLong * a.toString.toLong\
    \ * a.toString.toLong\n        cube == a.toString.toLong", "        val cube =\
    \ a.toLong * a.toLong * a.toLong\n        cube == a.toLong", "        val cube\
    \ = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n  \
    \      cubes += a\n        while(cubes.nonEmpty) {\n            val cube = cubes.head\n\
    \            cubes -= cube\n            if(cubes.nonEmpty) {\n               \
    \ cubes += cube\n            }\n            if(cubes.contains(cube)) {\n     \
    \           return true\n            }\n        }\n        return false", "  \
    \      val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n   \
    \     val cubesSet = mutable.HashSet[Long]()\n        cubesSet += cube\n     \
    \   cubesSet += cube*cube\n        cubesSet += cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube\n     \
    \   cubesSet += cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube",
  "        val cube = a.toLong * a.toLong * a.toLong\n        cube == a.toLong", " \
    \       val n = a.toInt\n        if (n == 1l) true\n        else if (n == 0l)\
    \ true\n        else if (n == -1l) true\n        else if (n == 64l) true\n   \
    \     else if (n % 3 == 0) true\n        else false", "        val cube = a.toLong\
    \ * a.toLong * a.toLong\n        cube == a.toLong", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube.toString == a.toString.toLong.toString",
  "        val cube = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n  \
    \      cubes += a\n        cubes += a * a\n        cubes += a * a * a\n      \
    \  cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong *\
    \ a.toString.toLong * a.toString.toLong", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n     \
    \   cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes +=\
    \ cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * ", "        val cube\
    \ = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n        cubes +=\
    \ cube\n        cubes += cube * cube\n        cubes += cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube ", "        val cube = a.toInt\n        val cubes = cube.toLong * cube.toLong\
    \ * cube.toLong\n        cubes % 1 == 0", "        val n = a.toInt\n        val\
    \ cube = n * n * n\n        cube == a.toLong", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += a\n   \
    \     cubes += a * a\n        cubes += a * a * a\n        cubes += a * a * a *\
    \ a\n        cubes += a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a", "        val cube = a.toLong * a.toLong * a.toLong\n\
    \        cube == a.toLong", "        val cube = a.toInt\n        val cubes = cube.toLong\
    \ * cube.toLong * cube.toLong\n        cubes.toLong == a", "        val cube =\
    \ a.toString.toLong * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toInt\n        val cubes = cube.pow(3).toInt\n        val cubes3\
    \ = cubes.pow(3).toInt\n        val cubes5 = cubes3.pow(5).toInt\n        val\
    \ cubes7 = cubes5.pow(7).toInt\n        val cubes9 = cubes7.pow(9).toInt\n   \
    \     val cubes11 = cubes9.pow(11).toInt\n        val cubes13 = cubes11.pow(13).toInt\n\
    \        val cubes15 = cubes13.pow(15).toInt\n        val cubes17 = cubes15.pow(17).toInt\n\
    \        val cubes19 = cubes17.pow(19).toInt\n        val cubes23 = cubes19.pow(23).toInt\n\
    \        val cubes27 = cubes23.pow(27).toInt\n        val cubes31 = cubes27.pow(31).toInt\n\
    \        val cubes37 = cubes31.pow(37).toInt\n        val cubes43 = cubes37.pow(43).toInt\n\
    \        val cubes47 = cube43.pow(47).toInt\n        val cubes53 = cubes47.pow(53).toInt\n\
    \        val cubes59 = cubes53.pow(59).toInt\n        val cubes63 = cubes59.pow(63).toInt\n\
    \        val cubes67 = cubes63.pow(67).toInt\n        val cubes71 = cubes67.pow(71).toInt\n\
    \        val cubes73 = cubes71.pow(73).toInt\n        val cubes79 = cubes73.pow(79).toInt\n\
    \        val cubes83 = cubes79.pow(83).toInt\n        val cubes87 = cubes83.pow(87).toInt\n\
    \        val cubes91 = cubes87.pow(91).toInt\n        val cubes93 = cubes91.pow(93).toInt\n\
    \        val cubes97 = cubes93.pow(97).toInt\n        val cubes101 = cubes97.pow(101).toInt\n\
    \        val cubes103 = cubes101.pow(103).toInt\n        val cubes107 = cubes103.pow(107).toInt\n\
    \        val cubes111 = cubes107.pow(111).toInt\n        val cubes113 = cubes111.pow(113).toInt\n\
    \        val cubes117 = cubes113.pow(117).toInt\n        val cubes121 = cubes117.pow(121).toInt\n\
    \        val cubes", "        val cube = a.toString.toInt\n        val cubes =\
    \ mutable.ArrayBuffer.empty[Long]\n        cubes += a\n        while(cubes.nonEmpty)\
    \ {\n            val c = cubes.head\n            cubes -= c\n            if (c*c*c\
    \ == a)\n                return true\n            cubes += c\n        }\n    \
    \    return false", "        val cube = a.toLong * a.toLong * a.toLong\n     \
    \   cube == a.toLong", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        cubes += cube\n        cubes.contains(cube)",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toString.toInt\n        val cubes = mutable.Set[Long]()\n \
    \       cubes += cube\n        cubes += cube * cube\n        cubes += cube * cube\
    \ * cube\n        cubes.contains(a)", "        val cube = a.toString.toInt\n \
    \       val cubes = mutable.ArrayBuffer(cube)\n        cubes += cube\n       \
    \ cubes.contains(cube)", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.ListBuffer[Long]()\n        cubes += cube\n        cubes += cube *\
    \ cube\n        cubes += cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube\n        cubes +=\
    \ cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube ", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toInt\n        val\
    \ cubes = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.HashSet(cubes)\n\
    \        val cubesCount = cubesSet.count(_ == cube)\n        cubesCount > 0",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a\n        ", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toInt\n        if\
    \ (cube == 1) true\n        else if (cube == 3) true\n        else if (cube ==\
    \ 9) true\n        else if (cube == 27) true\n        else if (cube == 81) true\n\
    \        else if (cube == 243) true\n        else if (cube == 729) true\n    \
    \    else if (cube == 827) true\n        else if (cube == 829) true\n        else\
    \ if (cube == 831) true\n        else if (cube == 833) true\n        else if (cube\
    \ == 839) true\n        else if (cube == 849) true\n        else if (cube == 857)\
    \ true\n        else if (cube == 859) true\n        else if (cube == 863) true\n\
    \        else if (cube == 865) true\n        else if (cube == 867) true\n    \
    \    else if (cube == 869) true\n        else if (cube == 871) true\n        else\
    \ if (cube == 873) true\n        else if (cube == 877) true\n        else if (cube\
    \ == 879) true\n        else if (cube == 881) true\n        else if (cube == 883)\
    \ true\n        else if (cube == 885) true\n        else if (cube == 887) true\n\
    \        else if (cube == 889) true\n        else if (cube == 891) true\n    \
    \    else if (cube == 893) true\n        else if (cube == 897) true\n        else\
    \ if (cube == 899) true\n        else if (cube == 903) true\n        else if (cube\
    \ == 907) true\n        else if (cube == 909) true\n        else if (cube == 911)\
    \ true\n        else if (cube == 913) true\n        else if (cube == 917) true\n\
    \        else if (cube == 919) true\n        else if (cube == 923) true\n    \
    \    else if (cube == 927) true\n        else if (cube == 929) true\n        else\
    \ if (cube == 931) true\n        else if (cube == 933) true\n        else if (cube\
    \ == 937) true\n        else if (cube == 939) true\n        else if (cube == 941)\
    \ true\n        else if (cube == 943) true\n        else if (cube == 947) true\n\
    \        else if (cube == 949) true\n        else if (cube == 951) true\n    \
    \    else if (cube == 953) true\n        else if (cube == 959) true\n        else\
    \ if (cube == 961) true\n        else if (cube == 967) true\n        else if (cube\
    \ == 969) true\n        else if (cube == 971) true\n        else if (cube == 977)\
    \ true\n        else if (cube == 979) true\n        else if (cube ", "       \
    \ val cube = a.toLong * a.toLong * a.toLong\n        cube == a.toLong", "    \
    \    val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * ", "        val cube = a.toString.toInt\n        cube == cube\
    \ * cube * cube", "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesSet = mutable.Set[Long]()\n        cubesSet += cube\n      \
    \  cubesSet += cube*cube\n        cubesSet += cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube\n     \
    \   cubesSet += cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cube", "        val cube\
    \ = a.toLong * a.toLong * a.toLong\n        cube == a.toLong", "        val cube\
    \ = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n       \
    \ cubes += cube\n        cubes += cube * cube\n        cubes += cube * cube *\
    \ cube\n        cubes += cube * cube * cube * cube\n        cubes += cube * cube\
    \ * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube ", " \
    \       val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n  \
    \      cubes += cube\n        cubes.toList.forall(cubes.contains)", "        val\
    \ cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        while(cubes.nonEmpty) {\n            val cube = cubes.head\n\
    \            cubes -= cube\n            if(cubes.nonEmpty) {\n               \
    \ cubes += cube\n            }\n        }\n        cubes.nonEmpty", "        val\
    \ cube = a.toLong * a.toLong * a.toLong\n        cube == a.toLong", "        val\
    \ cube = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n        cubes\
    \ += cube\n        cubes += cube * cube\n        cubes += cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube ", "        val cube = a.toString.toInt\n        cube == cube * cube\
    \ * cube", "        val cube = a.toString.toInt\n        cube == cube * cube *\
    \ cube", "        val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong * a.toString.toLong * a.toString.toLong", " \
    \       val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong * a.toString.toLong * a.toString.toLong", " \
    \       val cube = a.toString.toInt\n        cube == cube * cube * cube", "  \
    \      val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toString.toInt\n        cube == cube * cube * cube", "    \
    \    val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(a)", "        val cube = a.toInt\n     \
    \   if (cube == 1) true\n        else if (cube == 2) false\n        else if (cube\
    \ == 3) true\n        else if (cube == 4) false\n        else if (cube == 5) true\n\
    \        else if (cube == 6) false\n        else if (cube == 7) true\n       \
    \ else if (cube == 8) false\n        else if (cube == 9) true\n        else if\
    \ (cube == 10) false\n        else if (cube == 11) true\n        else if (cube\
    \ == 12) false\n        else if (cube == 13) true\n        else if (cube == 14)\
    \ false\n        else if (cube == 15) true\n        else if (cube == 16) false\n\
    \        else if (cube == 17) true\n        else if (cube == 18) false\n     \
    \   else if (cube == 19) true\n        else if (cube == 20) false\n        else\
    \ if (cube == 21) true\n        else if (cube == 22) false\n        else if (cube\
    \ == 23) true\n        else if (cube == 24) false\n        else if (cube == 25)\
    \ true\n        else if (cube == 26) false\n        else if (cube == 27) true\n\
    \        else if (cube == 28) false\n        else if (cube == 29) true\n     \
    \   else if (cube == 30) false\n        else if (cube == 31) true\n        else\
    \ if (cube == 32) false\n        else if (cube == 33) true\n        else if (cube\
    \ == 34) false\n        else if (cube == 35) true\n        else if (cube == 36)\
    \ false\n        else if (cube == 37) true\n        else if (cube == 38) false\n\
    \        else if (cube == 39) true\n        else if (cube == 40) false\n     \
    \   else if (cube == 41) true\n        else if (cube == 42) false\n        else\
    \ if (cube == 43) true\n        else if (cube == 44) false\n        else if (cube\
    \ == 45) true\n        else if (cube == 46) false\n        else if (cube == 47)\
    \ true\n        else if (cube == 48) false\n        else if (cube == 49) true\n\
    \        else if (cube == 50) false\n        else if (cube == 51) true\n     \
    \   else if (cube == 52) false\n        else if (cube == 53) true\n        else\
    \ if (cube == 54) false\n        else if (cube == 55) true\n        else if (cube\
    \ == 56) false\n        else if (cube == 57) true\n        else if (cube == 58)\
    \ false\n        else if (cube == 59) true\n        else if (cube == 60) false\n\
    \        else if (cube == 61) true\n        else if (cube == 62) false\n     \
    \   else if (cube == 63) true\n        else if (cube == 64) false\n        else\
    \ if (", "        val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        ", "        val cube\
    \ = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n        val\
    \ cubesSet = mutable.Set[Long](cube)\n        val cubesSet2 = mutable.Set[Long](cube)\n\
    \        val cubesSet3 = mutable.Set[Long](cube)\n        val cubesSet4 = mutable.Set[Long](cube)\n\
    \        val cubesSet5 = mutable.Set[Long](cube)\n        val cubesSet6 = mutable.Set[Long](cube)\n\
    \        val cubesSet7 = mutable.Set[Long](cube)\n        val cubesSet8 = mutable.Set[Long](cube)\n\
    \        val cubesSet9 = mutable.Set[Long](cube)\n        val cubesSet10 = mutable.Set[Long](cube)\n\
    \        val cubesSet11 = mutable.Set[Long](cube)\n        val cubesSet12 = mutable.Set[Long](cube)\n\
    \        val cubesSet13 = mutable.Set[Long](cube)\n        val cubesSet14 = mutable.Set[Long](cube)\n\
    \        val cubesSet15 = mutable.Set[Long](cube)\n        val cubesSet16 = mutable.Set[Long](cube)\n\
    \        val cubesSet17 = mutable.Set[Long](cube)\n        val cubesSet18 = mutable.Set[Long](cube)\n\
    \        val cubesSet19 = mutable.Set[Long](cube)\n        val cubesSet20 = mutable.Set[Long](cube)\n\
    \        val cubesSet21 = mutable.Set[Long](cube)\n        val cubesSet22 = mutable.Set[Long](cube)\n\
    \        val cubesSet23 = mutable.Set[Long](cube)\n        val cubesSet24 = mutable.Set[Long](cube)\n\
    \        val cubesSet25 = mutable.Set[Long](cube)\n        val cubesSet26 = mutable.Set[Long](cube)\n\
    \        val cubesSet27 = mutable.Set[Long](cube)\n        val cubesSet28 = mutable.Set[Long](cube)\n\
    \        val cubesSet29 = mutable.Set[Long](cube)\n        val cubesSet30 = mutable.Set[Long](cube)\n\
    \        val cubesSet31 = mutable.Set[Long](cube)\n        val cubesSet32 = ",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toString.toInt\n        cube == cube * cube * cube", "    \
    \    val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n  \
    \      cube == a.toString.toLong", "        val cube = a.toString.toInt\n    \
    \    cube == cube * cube * cube", "        val cube = a.toString.toInt\n     \
    \   val cubes = mutable.ListBuffer(cube)\n        cubes foreach (x => cubes +=\
    \ x*x*x)\n        cubes.toList.contains(a)", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a\n        "]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_23_strlen
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpkqs9cu1l.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkqs9cu1l.scala:21:60\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m       Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkqs9cu1l.scala:22:66\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkqs9cu1l.scala:23:72\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qzxr0f7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var length =\
    \ 0\n        for (i <- 0 until chars.length)\n            length += chars(i).length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8aru79g7.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp8aru79g7.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += chars(i).length\n\e[31m\e[31m \
    \  |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp8aru79g7.scala:13:22\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            length +=\
    \ chars(i).length\n\e[31m\e[31m   |\e[0m                      ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      \e[33mvalue\e[0m \e[35mchars\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        chars.toList.map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzzvry7kh.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpzzvry7kh.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0 else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        for (i <- 0 until string.length)\n\
    \            length += 1L\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpamx7ry2g.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1L\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val chars\
    \ = string.chars\n        val charsLength = chars.length\n        var count =\
    \ 0\n        var i = 0\n        while (i < charsLength) {\n            count +=\
    \ chars(i).length\n            i += 1\n        }\n        count + length\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpk277yp6e.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcharsLength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpk277yp6e.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            count += chars(i).length\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpk277yp6e.scala:16:21\
    \ -----------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            count +=\
    \ chars(i).length\n\e[31m\e[31m   |\e[0m                     ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     \e[33mvalue\e[0m \e[35mchars\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr9s29vrm.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpr9s29vrm.scala:17:42\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr9s29vrm.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr9s29vrm.scala:25:78\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr9s29vrm.scala:22:60\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLe"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpkqs9cu1l.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkqs9cu1l.scala:21:60\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m       Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkqs9cu1l.scala:22:66\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkqs9cu1l.scala:23:72\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += string.charAt(i).toInt * (string.length.toLong - i)\n \
    \       length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplsiikemj.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += string.charAt(i).toInt * (string.length.toLong\
    \ - i)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \       value += is not a member of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len > 0)\
    \ {\n            len\n        } else {\n            0\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\
    \ length += string(i)\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpufd49_q6.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until string.length)\
    \ length += string(i)\n\e[31m\e[31m   |\e[0m                                 \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while(i\
    \ < string.length) {\n            len += 1\n            i += 1\n        }\n  \
    \      return len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        return len\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp334i91e6.scala:17)\n\tat Problem.main(tmp334i91e6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpdcx257x2.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdcx257x2.scala:21:60\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m       Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdcx257x2.scala:24:72\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdcx257x2.scala:26:78\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                            "
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toLong\n        return strLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = new mutable.HashMap[String, Long]()\n\
    \        for (i <- 0 until string.length)\n            len += (string.charAt(i)\
    \ -> 1L)\n        len.foldLeft(0L)((x, y) => x + y)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzkmheobu.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = \e[33mnew\e[0m\
    \ mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793165
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val lengthLong\
    \ = length.toLong\n        lengthLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = str\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8b1lh5qn.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmp8b1lh5qn.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8b1lh5qn.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8b1lh5qn.scala:21:57\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                            "
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpidq25ckw.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmpidq25ckw.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpidq25ckw.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpidq25ckw.scala:22:60\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                               "
  stdout: ''
  timestamp: 1659793170
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val len =\
    \ new mutable.HashMap[String, Long]()\n        len.put(\"0\", strLen)\n      \
    \  len.put(\"1\", strLen - 1)\n        len.put(\"2\", strLen - 2)\n        len.put(\"\
    3\", strLen - 3)\n        len.put(\"4\", strLen - 4)\n        len.put(\"5\", strLen\
    \ - 5)\n        len.put(\"6\", strLen - 6)\n        len.put(\"7\", strLen - 7)\n\
    \        len.put(\"8\", strLen - 8)\n        len.put(\"9\", strLen - 9)\n    \
    \    len.put(\"10\", strLen - 10)\n        len.put(\"11\", strLen - 11)\n    \
    \    len.put(\"12\", strLen - 12)\n        len.put(\"13\", strLen - 13)\n    \
    \    len.put(\"14\", strLen - 14)\n        len.put(\"15\", strLen - 15)\n    \
    \    len.put(\"16\", strLen - 16)\n        len.put(\"17\", strLen - 17)\n    \
    \    len.put(\"18\", strLen - 18)\n        len.put(\"19\", strLen - 19)\n    \
    \    len.put(\"20\", strLen - 20)\n        len.put(\"21\", strLen - 21)\n    \
    \    len.put(\"22\", strLen - 22)\n        len.put(\"23\", strLen - 23)\n    \
    \    len.put(\"24\", strLen - 24)\n        len.put(\"25\", strLen - 25)\n    \
    \    len.put(\"26\", strLen - 26)\n        len.put(\"27\", strLen - 27)\n    \
    \    len.put(\"28\", strLen - 28)\n        len.put(\"29\", strLen - 29)\n    \
    \    len.put(\"30\", strLen - 30)\n        len.put(\"31\", strLen - 31)\n    \
    \    len.put(\"32\", strLen - 32)\n        len.put(\"33\", strLen - 33)\n    \
    \    len.put(\"34\", strLen - 34)\n        len.put(\"35\", strLen - 35)\n    \
    \    len.put(\"36\", strLen - 36)\n        len.put(\"37\", strLen - 37)\n    \
    \    len.put(\"38\", strLen - 38)\n        len.put(\"39\", strLen - 39)\n    \
    \    \n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\"))\
    \ == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuguhms79.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = \e[33mnew\e[0m\
    \ mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793170
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ 0L\n        for (i <- 0 until chars.length)\n            length += chars(i).length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp28danlle.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp28danlle.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += chars(i).length\n\e[31m\e[31m \
    \  |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Long - did you mean length.!=?\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmp28danlle.scala:13:22 -----------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m            length += chars(i).length\n\e[31m\e[31m   |\e[0m         \
    \             ^^^^^\e[0m\n\e[31m   |\e[0m                      \e[33mvalue\e[0m\
    \ \e[35mchars\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793172
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0L\n        for(i <- 0 until string.length)\n\
    \            len += string(i)\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7blx79hl.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string(i)\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Long - did you mean len.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string(i).length\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz4r2xqh3.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string(i).length\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz4r2xqh3.scala:12:29\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m            len += string(i).length\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                   value length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLen\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmppgimkidf.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppgimkidf.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppgimkidf.scala:26:75\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppgimkidf.scala:22:60\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \          Not found: strLe"
  stdout: ''
  timestamp: 1659793172
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toLong\n        strLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793172
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val charLen\
    \ = string.toCharArray().length\n        val result = strLen + charLen\n     \
    \   result\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpz7fkgblq.scala:17)\n\tat Problem.main(tmpz7fkgblq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793172
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        if (length\
    \ == 0) 0\n        else length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += 1\n            i += 1\n        }\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpidq25ckw.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmpidq25ckw.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpidq25ckw.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpidq25ckw.scala:22:60\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                               "
  stdout: ''
  timestamp: 1659793170
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var count =\
    \ 0\n        for(i <- 0 until chars.length)\n            count += chars(i).length\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt_i__1fw.scala:12:31 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpt_i__1fw.scala:13:18 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            count += chars(i).length\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpt_i__1fw.scala:13:21\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            count +=\
    \ chars(i).length\n\e[31m\e[31m   |\e[0m                     ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     \e[33mvalue\e[0m \e[35mchars\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var length = 0\n        for(i <- 0 until string.length)\n\
    \            length += string(i)\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpd6fqjny4.scala:17)\n\tat Problem.main(tmpd6fqjny4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var count =\
    \ 0\n        for (char <- chars) {\n            count = count + 1\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpaqnhlvyo.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (char <- chars) {\n\e[31m\e[31m\
    \   |\e[0m                     ^^^^^\e[0m\n\e[31m   |\e[0mvalue foreach is not\
    \ a member of java.util.stream.IntStream - did you mean chars.forEach?\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val chars\
    \ = string.chars\n        val charsLength = chars.length\n        val charsLength2\
    \ = charsLength * 2\n        val charsLength3 = charsLength * 3\n        val charsLength4\
    \ = charsLength * 4\n        val charsLength5 = charsLength * 5\n        val charsLength6\
    \ = charsLength * 6\n        val charsLength7 = charsLength * 7\n        val charsLength8\
    \ = charsLength * 8\n        val charsLength9 = charsLength * 9\n        val charsLength10\
    \ = charsLength * 10\n        val charsLength11 = charsLength * 11\n        val\
    \ charsLength12 = charsLength * 12\n        val charsLength13 = charsLength *\
    \ 13\n        val charsLength14 = charsLength * 14\n        val charsLength15\
    \ = charsLength * 15\n        val charsLength16 = charsLength * 16\n        val\
    \ charsLength17 = charsLength * 17\n        val charsLength18 = charsLength *\
    \ 18\n        val charsLength19 = charsLength * 19\n        val charsLength20\
    \ = charsLength * 20\n        val charsLength21 = charsLength * 21\n        val\
    \ charsLength22 = charsLength * 22\n        val charsLength23 = charsLength *\
    \ 23\n        val charsLength24 = charsLength * 24\n        val charsLength25\
    \ = charsLength * 25\n        val charsLength26 = charsLength * 26\n        val\
    \ charsLength27 = charsLength * 27\n        val charsLength28 = charsLength *\
    \ 28\n        val charsLength29 = charsLength * 29\n        val charsLength30\
    \ = charsLength * 30\n        val charsLength31 = charsLength * 31\n        val\
    \ charsLength32 = charsLength * 32\n        val charsLength33 = charsLength *\
    \ 33\n        val charsLength34 = charsLength * 34\n        val charsLength35\
    \ = charsLength * 35\n        val charsLength36 = charsLength * 36\n        val\
    \ charsLength37 = charsLength * 37\n        val charsLength38 = charsLength *\
    \ 38\n        val charsLength39 = charsLength * 39\n        val charsLength40\
    \ = char\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\"\
    )) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpq5q0ukdk.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcharsLength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpq5q0ukdk.scala:51:28 ------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36mcharsLength40\e[0m = char\n\
    \e[31m\e[31m   |\e[0m                            ^^^^\e[0m\n\e[31m   |\e[0m  \
    \                          Not found: char\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpq5q0ukdk.scala:52:5 ---------------------\e[0m\e\
    [0m\n\e[31m52 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m \
    \    Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        if (len == 0)\
    \ 0\n        else len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen + 1\n        val strLenLenLen = strLenLen + 1\n        val strLenLenLenLen\
    \ = strLenLenLen + 1\n        val strLenLenLenLenLen = strLenLenLenLen + 1\n \
    \       val strLenLenLenLenLenLen = strLenLenLenLenLen + 1\n        val strLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLen + 1\n        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmph_25myti.scala:29:68 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = \n\e[31m\e[31m   |\e[0m                                                \
    \                    ^\e[0m\n\e[31m   |\e[0m                                 \
    \      expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmph_25myti.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLen + \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLen is already defined\
    \ as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmph_25myti.scala:28:12 ---------------------------\e[0m\e[0m\n\e[31m28\
    \ |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen + \e[31m1\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen is\
    \ already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmph_25myti.scala:18:45 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLen\e[0m\
    \ = strLenLenLenLenLenLenLenLenLen + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string(i)\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw1n32_gn.scala:17)\n\tat Problem.main(tmpw1n32_gn.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toLong\n        return strLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += (string.charAt(i).toChar).asInstanceOf[Int]\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpi69thj18.scala:17)\n\tat Problem.main(tmpi69thj18.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder()\n        str.append(string)\n\
    \        str.length()\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toInt + 1\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph6lfijri.scala:17)\n\tat Problem.main(tmph6lfijri.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toLong\n        return strLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = new mutable.ListBuffer[Long]()\n   \
    \     for (i <- 0 until string.length)\n            len += string(i)\n       \
    \ len.toList.length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfh22_q59.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = \e[33mnew\e[0m\
    \ mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m               \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += (string.charAt(i).toInt * (1 +- string.charAt(i).toInt))\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgcr9fs8x.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += (string.charAt(i).toInt * (\e[31m1\e\
    [0m +- string.charAt(i).toInt))\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\
    \e[31m   |\e[0m            value += is not a member of Int - did you mean Int.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgcr9fs8x.scala:12:48 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += (string.charAt(i).toInt * (\e[31m1\e\
    [0m +- string.charAt(i).toInt))\n\e[31m\e[31m   |\e[0m                       \
    \                       ^^^^\e[0m\n\e[31m   |\e[0m                           \
    \              value +- is not a member of Int\n2 errors found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += 1\n            i += 1\n        }\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdxssftue.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            len += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean len.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string(i)\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw1n32_gn.scala:17)\n\tat Problem.main(tmpw1n32_gn.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.to\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpgn_ad6o5.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgn_ad6o5.scala:20:54\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgn_ad6o5.scala:25:78\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgn_ad6o5.scala:22:63\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qzxr0f7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder()\n        str.append(string)\n\
    \        str.length()\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder()\n        for(i <-\
    \ 0 until string.length)\n            str.append(string.charAt(i))\n        str.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        for(i <- 0 until string.length)\n\
    \            length += 1L\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg6idfhyw.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1L\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = new mutable.HashMap[String, Long]()\n\
    \        for (i <- 0 until string.length)\n            len += (string -> string.length)\n\
    \        len.toMap.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7qfb8biq.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = \e[33mnew\e[0m\
    \ mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpoye3fi99.scala:27:4 ----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpoye3fi99.scala:17:42\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoye3fi99.scala:20:54\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoye3fi99.scala:23:69\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoye3fi99.scala:24:75\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLe"
  stdout: ''
  timestamp: 1659793177
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += string.charAt(i).toLong\n        length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp50jk83qp.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += string.charAt(i).toLong\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793178
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen / 2\n        val strLenLenLen = strLenLen / 2\n        val strLenLenLenLen\
    \ = strLenLenLen / 2\n        val strLenLenLenLenLen = strLenLenLenLen / 2\n \
    \       val strLenLenLenLenLenLen = strLenLenLenLenLen / 2\n        val strLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLen / 2\n        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / 2\n        val strLenLenLen\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2bapz48t.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2bapz48t.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen is already defined\
    \ as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp2bapz48t.scala:27:12 ---------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen / \e[31m2\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen is already\
    \ defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp2bapz48t.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen / \e[31m2\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen is already\
    \ defined as \e[33mvalue\e[0m \e[35mstrLenLen"
  stdout: ''
  timestamp: 1659793177
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string(i)\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw1n32_gn.scala:17)\n\tat Problem.main(tmpw1n32_gn.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += string.charAt(i).toCharCode()\n  \
    \          i += 1\n        }\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpncm6epdm.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            len += string.charAt(i).toCharCode()\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpncm6epdm.scala:13:36 ------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m            len += string.charAt(i).toCharCode()\n\e[31m\e[31m   |\e[0m\
    \                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \           value toCharCode is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793179
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        for(i <- 0 until string.length)\n\
    \            length += 1L\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg6idfhyw.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1L\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793176
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var count = 0\n        for(i <- 0 until string.length)\n\
    \            count += string.charAt(i).toChar\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvtkh0lrz.scala:17)\n\tat Problem.main(tmpvtkh0lrz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793179
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var length = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            length += 1\n            i += 1\n       \
    \ }\n        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793178
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val newLength\
    \ = (length.toLong * 2)\n        newLength\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpckox_miq.scala:16)\n\tat Problem.main(tmpckox_miq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793178
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var count =\
    \ 0\n        for (i <- 0 until chars.length)\n            count += chars(i).length\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdesxr1zi.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpdesxr1zi.scala:13:18 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            count += chars(i).length\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpdesxr1zi.scala:13:21\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            count +=\
    \ chars(i).length\n\e[31m\e[31m   |\e[0m                     ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     \e[33mvalue\e[0m \e[35mchars\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793178
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd3g4qbmd.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string.charAt(i).toChar\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean len.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793178
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val len =\
    \ new mutable.HashMap[String, Long]()\n        len.put(\"a\", strLen)\n      \
    \  len.put(\"b\", strLen)\n        len.put(\"c\", strLen)\n        len.put(\"\
    d\", strLen)\n        len.put(\"e\", strLen)\n        len.put(\"f\", strLen)\n\
    \        len.put(\"g\", strLen)\n        len.put(\"h\", strLen)\n        len.put(\"\
    i\", strLen)\n        len.put(\"j\", strLen)\n        len.put(\"k\", strLen)\n\
    \        len.put(\"l\", strLen)\n        len.put(\"m\", strLen)\n        len.put(\"\
    n\", strLen)\n        len.put(\"o\", strLen)\n        len.put(\"p\", strLen)\n\
    \        len.put(\"q\", strLen)\n        len.put(\"r\", strLen)\n        len.put(\"\
    s\", strLen)\n        len.put(\"t\", strLen)\n        len.put(\"u\", strLen)\n\
    \        len.put(\"v\", strLen)\n        len.put(\"w\", strLen)\n        len.put(\"\
    x\", strLen)\n        len.put(\"y\", strLen)\n        len.put(\"z\", strLen)\n\
    \        len.put(\"A\", strLen)\n        len.put(\"B\", strLen)\n        len.put(\"\
    C\", strLen)\n        len.put(\"D\", strLen)\n        len.put(\"E\", strLen)\n\
    \        len.put(\"F\", strLen)\n        len.put(\"G\", strLen)\n        len.put(\"\
    H\", strLen)\n        len.put(\"I\", strLen)\n        len.put(\"J\", strLen)\n\
    \        len.put(\"K\", strLen)\n        len.put(\"L\", strLen)\n        len.put(\"\
    M\", strLen)\n        len.put(\"N\", strLen)\n        len.put(\"O\", strLen)\n\
    \        len.put(\"P\", strLen)\n        len.put(\"Q\", strLen)\n        len.put(\"\
    R\", strLen)\n        len.put(\"S\", strLen)\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaefrcb5t.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = \e[33mnew\e[0m\
    \ mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var length = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            length += 1\n            i += 1\n       \
    \ }\n        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793178
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var length =\
    \ 0\n        for (i <- 0 until chars.length)\n            length += chars(i).length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8aru79g7.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp8aru79g7.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += chars(i).length\n\e[31m\e[31m \
    \  |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp8aru79g7.scala:13:22\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            length +=\
    \ chars(i).length\n\e[31m\e[31m   |\e[0m                      ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      \e[33mvalue\e[0m \e[35mchars\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for (i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp64qw8542.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793178
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen + 1\n        val strLenLenLen = strLenLen + 1\n        val strLenLenLenLen\
    \ = strLenLenLen + 1\n        val strLenLenLenLenLen = strLenLenLenLen + 1\n \
    \       val strLenLenLenLenLenLen = strLenLenLenLenLen + 1\n        val strLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLen + 1\n        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + 1\n        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_70sv1yj.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_70sv1yj.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLen is already defined\
    \ as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp_70sv1yj.scala:28:12 ---------------------------\e[0m\e[0m\n\e[31m28\
    \ |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen + \e[31m1\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen is\
    \ already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmp_70sv1yj.scala:18:45 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLen\e[0m\
    \ = strLenLenLenLenLenLenLenLenLen + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \                                        ^\e[0m\n\e[31m   |\e[0m             \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLen\e[0m needs\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /"
  stdout: ''
  timestamp: 1659793178
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val len =\
    \ new mutable.HashMap[String, Long]()\n        len.put(\"a\", 0)\n        len.put(\"\
    b\", 0)\n        len.put(\"c\", 0)\n        len.put(\"d\", 0)\n        len.put(\"\
    e\", 0)\n        len.put(\"f\", 0)\n        len.put(\"g\", 0)\n        len.put(\"\
    h\", 0)\n        len.put(\"i\", 0)\n        len.put(\"j\", 0)\n        len.put(\"\
    k\", 0)\n        len.put(\"l\", 0)\n        len.put(\"m\", 0)\n        len.put(\"\
    n\", 0)\n        len.put(\"o\", 0)\n        len.put(\"p\", 0)\n        len.put(\"\
    q\", 0)\n        len.put(\"r\", 0)\n        len.put(\"s\", 0)\n        len.put(\"\
    t\", 0)\n        len.put(\"u\", 0)\n        len.put(\"v\", 0)\n        len.put(\"\
    w\", 0)\n        len.put(\"x\", 0)\n        len.put(\"y\", 0)\n        len.put(\"\
    z\", 0)\n        len.put(\"A\", 0)\n        len.put(\"B\", 0)\n        len.put(\"\
    C\", 0)\n        len.put(\"D\", 0)\n        len.put(\"E\", 0)\n        len.put(\"\
    F\", 0)\n        len.put(\"G\", 0)\n        len.put(\"H\", 0)\n        len.put(\"\
    I\", 0)\n        len.put(\"J\", 0)\n        len.put(\"K\", 0)\n        len.put(\"\
    L\", 0)\n        len.put(\"M\", 0)\n        len.put(\"N\", 0)\n        len.put(\"\
    O\", 0)\n        len.put(\"P\", 0)\n        len.put(\"Q\", 0)\n        len.put(\"\
    R\", 0)\n        len.put(\"S\", 0)\n        len.put(\"T\", 0)\n        len.put(\"\
    U\", 0)\n        len.put(\"V\", 0)\n        len.put(\"W\", 0)\n        len.put(\"\
    X\", 0)\n        len.put(\"Y\", 0)\n        len.put(\"Z\", 0)\n        len.put(\"\
    0\", 0)\n        len.put(\"1\", 0)\n        len.put(\"2\", 0)\n        len.put\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsm25kw57.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = \e[33mnew\e[0m\
    \ mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += string.charAt(i).toCharCode().toInt\n\
    \            i += 1\n        }\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuwbll0_y.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            len += string.charAt(i).toCharCode().toInt\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpuwbll0_y.scala:13:36 ------------------------\e[0m\e[0m\n\
    \e[31m13 |\e[0m            len += string.charAt(i).toCharCode().toInt\n\e[31m\e\
    [31m   |\e[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                   value toCharCode is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793179
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var count =\
    \ 0\n        for(i <- 0 until chars.length)\n            count += chars(i).length\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt_i__1fw.scala:12:31 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpt_i__1fw.scala:13:18 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            count += chars(i).length\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpt_i__1fw.scala:13:21\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            count +=\
    \ chars(i).length\n\e[31m\e[31m   |\e[0m                     ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     \e[33mvalue\e[0m \e[35mchars\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val charArray = string.toCharArray\n        var\
    \ count = 0\n        for (i <- 0 until charArray.length)\n            count +=\
    \ charArray(i)\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjj1ovk6m.scala:18)\n\tat Problem.main(tmpjj1ovk6m.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793179
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk1o7b1zf.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpk1o7b1zf.scala:17:42\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpk1o7b1zf.scala:18:45\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                             ^\e[0m\n\e[31m\
    \   |\e[0m               Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk1o7b1zf.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk1o7b1zf.scala:21:57\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e["
  stdout: ''
  timestamp: 1659793179
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder()\n        str.append(string)\n\
    \        str.length()\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpdg7st4ep.scala:27:11 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E045] Cyclic Error: /tmp/tmpdg7st4ep.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpdg7st4ep.scala:18:45\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                             ^\e[0m\n\e[31m\
    \   |\e[0m               Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdg7st4ep.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdg7st4ep.scala:23:66\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[3"
  stdout: ''
  timestamp: 1659793178
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qzxr0f7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len += 1\n            i += 1\n        }\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdxssftue.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            len += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean len.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        chars.toList.map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzzvry7kh.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpzzvry7kh.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        chars.toList.foldLeft(0l){ (acc, c) =>\n            val\
    \ newAcc = acc + c.length\n            if (newAcc > length) length else newAcc\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2plwu_os.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2plwu_os.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.foldLeft(\e[31m0l\e[0m){ (\e[36macc\e\
    [0m, \e[36mc\e[0m) =>\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m        value toList is not a member of java.util.stream.IntStream\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793179
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3n5uvpda.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmp3n5uvpda.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3n5uvpda.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3n5uvpda.scala:22:60\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                     "
  stdout: ''
  timestamp: 1659793179
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3zb3jaba.scala:17)\n\tat Problem.main(tmp3zb3jaba.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        var i = 0\n        while\
    \ (i < string.length) {\n            length += 1L\n            i += 1\n      \
    \  }\n        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg3y9bp4p.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += \e[31m1L\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793182
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        for(i <- 0 until string.length)\n\
    \            length += 1L\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg6idfhyw.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1L\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx0qo_7vy.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen is\
    \ already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx0qo_7vy.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLen\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen is\
    \ already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmpx0qo_7vy.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx0qo_7vy.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = st"
  stdout: ''
  timestamp: 1659793182
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\
    \ {\n            len += string(i).length\n        }\n        len\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8gdzk3c9.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string(i).length\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8gdzk3c9.scala:12:29\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m            len += string(i).length\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                   value length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qzxr0f7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val lengthOfString\
    \ = length.toLong\n        val lengthOfStringInBytes = lengthOfString*2\n    \
    \    val lengthOfStringInBits = lengthOfStringInBytes*8\n        val lengthOfStringInKilobytes\
    \ = lengthOfStringInBits/1024\n        val lengthOfStringInMegabytes = lengthOfStringInKilobytes/1024\n\
    \        val lengthOfStringInGigabytes = lengthOfStringInMegabytes/1024\n    \
    \    val lengthOfStringInTerabytes = lengthOfStringInGigabytes/1024\n        val\
    \ lengthOfStringInPetabytes = lengthOfStringInTerabytes/1024\n        val lengthOfStringInExabytes\
    \ = lengthOfStringInPetabytes/1024\n        val lengthOfStringInZettabytes = lengthOfStringInExabytes/1024\n\
    \        val lengthOfStringInYottabytes = lengthOfStringInZettabytes/1024\n  \
    \      val lengthOfStringInExobytes = (lengthOfStringInYottabytes*1024).toLong\n\
    \        val lengthOfStringInMebibytes = (lengthOfStringInExobytes*1024).toLong\n\
    \        val lengthOfStringInGibibytes = (lengthOfStringInMebibytes*1024).toLong\n\
    \        val lengthOfStringInTebibytes = (lengthOfStringInGibibytes*1024).toLong\n\
    \        val lengthOfStringInPebibytes = (lengthOfStringInTebibytes*1024).toLong\n\
    \        val lengthOfStringInExibytes = (lengthOfStringInPebibytes*1024).toLong\n\
    \        val lengthOfStringInZebibytes = (lengthOfStringInExibytes*1024).toLong\n\
    \        val lengthOfStringInYebibytes = (lengthOfStringInZebibytes*1024).toLong\n\
    \        val lengthOfStringInEibytes = (lengthOfStringInYebibytes*1024).toLong\n\
    \        val lengthOfStringInZeibytes = (lengthOfStringInEibytes*1024).toLong\n\
    \        val lengthOfStringInYeibytes = (lengthOfStringInZeibytes*1024).toLong\n\
    \        val lengthOfStringInEobytes = (lengthOfStringInYeibytes*1024).toLong\n\
    \        val lengthOfStringInZeobytes = (lengthOfStringInEobytes*1024).toLong\n\
    \        val lengthOfStringInYobytes = (\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp4w_vlq4y.scala:35:39 ---------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m        \e[33mval\e[0m \e[36mlengthOfStringInYobytes\e\
    [0m = (\n\e[31m\e[31m   |\e[0m                                       ^\e[0m\n\e\
    [31m   |\e[0m                                       expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4w_vlq4y.scala:36:5\
    \ ---------------------\e[0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        chars.toList.foldLeft(0l) { (acc, c) =>\n            val\
    \ newAcc = acc + c.length\n            newAcc\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg12f4yk7.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpg12f4yk7.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.foldLeft(\e[31m0l\e[0m) { (\e[36macc\e\
    [0m, \e[36mc\e[0m) =>\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m        value toList is not a member of java.util.stream.IntStream\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793182
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toInt + 1\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph6lfijri.scala:17)\n\tat Problem.main(tmph6lfijri.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var len = 0\n\
    \        for (i <- 0 until chars.length)\n            len += chars(i).length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6lw7js0l.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp6lw7js0l.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            len += chars(i).length\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp6lw7js0l.scala:13:19\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            len += chars(i).length\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^\e[0m\n\e[31m   |\e[0m          \
    \         \e[33mvalue\e[0m \e[35mchars\e[0m does not take parameters\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659793183
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var count =\
    \ 0\n        for(i <- 0 until chars.length)\n            count += chars(i).length\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt_i__1fw.scala:12:31 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpt_i__1fw.scala:13:18 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            count += chars(i).length\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpt_i__1fw.scala:13:21\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            count +=\
    \ chars(i).length\n\e[31m\e[31m   |\e[0m                     ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     \e[33mvalue\e[0m \e[35mchars\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3zb3jaba.scala:17)\n\tat Problem.main(tmp3zb3jaba.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var length = 0\n        for(i <- 0 until string.length)\n\
    \            length += string.charAt(i).toInt + 1\n        length\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n   \
    \ assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_0ib26zm.scala:17)\n\tat Problem.main(tmp_0ib26zm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += string.charAt(i).toChar\n        length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6lk6vq_6.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += string.charAt(i).toChar\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793183
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgsgzuq3g.scala:17)\n\tat Problem.main(tmpgsgzuq3g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        val result = new mutable.HashMap[Char, Long]()\n     \
    \   for (i <- 0 until length) {\n            val c = chars(i)\n            val\
    \ count = result.getOrElse(c, 0L)\n            result(c) = (count + 1L)\n    \
    \    }\n        result.values.sum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2rgcd0j_.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2rgcd0j_.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp2rgcd0j_.scala:14:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e\
    [0m \e[36mc\e[0m = chars(i)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    \e[33mvalue\e[0m \e[35mchars\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793184
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += (string.charAt(i).toInt * (string.charAt(i).toInt - 'a'.toInt))\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprxo4speu.scala:17)\n\tat Problem.main(tmprxo4speu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793184
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val charArray = string.toCharArray\n        var\
    \ count = 0\n        for (i <- 0 until charArray.length)\n            count +=\
    \ charArray(i).length\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphyjtov4_.scala:13:18 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            count += charArray(i).length\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmphyjtov4_.scala:13:34 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m            count += charArray(i).length\n\e[31m\e[31m   |\e[0m           \
    \          ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     value\
    \ length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793184
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val chars\
    \ = string.chars\n        var i = 0\n        var len = 0\n        while (i < strLen)\
    \ {\n            val c = chars(i)\n            if (c == ' ') {\n             \
    \   len += 1\n            } else {\n                len += 2\n            }\n\
    \            i += 1\n        }\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmplwbhpv7p.scala:15:20 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36mc\e[0m = chars(i)\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m   |\e[0m           \
    \         \e[33mvalue\e[0m \e[35mchars\e[0m does not take parameters\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793182
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val charLen\
    \ = string.toCharArray.length\n        val strLenChar = strLen + charLen\n   \
    \     strLenChar\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfvzekmz7.scala:17)\n\tat Problem.main(tmpfvzekmz7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793184
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var length = 0\n        for(i <- 0 until string.length){\n\
    \            length += 1\n        }\n        length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793185
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3zb3jaba.scala:17)\n\tat Problem.main(tmp3zb3jaba.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3zb3jaba.scala:17)\n\tat Problem.main(tmp3zb3jaba.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLen\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmppgimkidf.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppgimkidf.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppgimkidf.scala:26:75\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppgimkidf.scala:22:60\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \          Not found: strLe"
  stdout: ''
  timestamp: 1659793172
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        for(i <- 0 until string.length)\n\
    \            length += 1L\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg6idfhyw.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1L\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793176
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val result\
    \ = length.toLong\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        for(i <- 0 until string.length)\n\
    \            length += string.charAt(i).toChar\n        length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb22ats22.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += string.charAt(i).toChar\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793184
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var count =\
    \ 0\n        for (char <- chars) {\n            count += 1\n        }\n      \
    \  count\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\"\
    )) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprpj43eur.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (char <- chars) {\n\e[31m\e[31m\
    \   |\e[0m                     ^^^^^\e[0m\n\e[31m   |\e[0mvalue foreach is not\
    \ a member of java.util.stream.IntStream - did you mean chars.forEach?\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793184
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            len = len + 1\n            i = i + 1\n  \
    \      }\n        return len\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n  \
    \  assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793184
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp6s55rye3.scala:17:42 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLen.toString.length\n\e[31m\e[31m   |\e[0m     \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6s55rye3.scala:23:69\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6s55rye3.scala:22:66\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m    Not found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6s55rye3.scala:26:84\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \          "
  stdout: ''
  timestamp: 1659793184
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = string.length\n        val chars\
    \ = string.chars\n        val charsLength = chars.length\n        val charsLengthLong\
    \ = charsLength.toLong\n        val charsLengthLongLong = charsLengthLong.toLong\n\
    \        val charsLengthLongDouble = charsLengthLong.toDouble\n        val charsLengthLongDoubleDouble\
    \ = charsLengthLongDouble.toDouble\n        val charsLengthLongDoubleDoubleDouble\
    \ = charsLengthLongDoubleDouble.toDouble\n        val charsLengthLongDoubleDoubleDoubleDouble\
    \ = charsLengthLongDoubleDoubleDouble.toDouble\n        val charsLengthLongDoubleDoubleDoubleDoubleDouble\
    \ = charsLengthLongDoubleDoubleDoubleDouble.toDouble\n        val charsLengthLongDoubleDoubleDoubleDoubleDoubleDouble\
    \ = charsLengthLongDoubleDoubleDoubleDoubleDouble.toDouble\n        val charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDouble\
    \ = charsLengthLongDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n        val\
    \ charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble = charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n\
    \        val charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\
    \ = charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n\
    \        val charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\
    \ = charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n\
    \        val charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\
    \ = charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n\
    \        val charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\
    \ = charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n\
    \        val charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\
    \ = charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n\
    \        val charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\
    \ = charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n\
    \        val charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\
    \ = charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n\
    \        val charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpl5i8ezxd.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl5i8ezxd.scala:12:32\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mcharsLength\e[0m = chars.length\n\e[31m\e[31m   |\e[0m                   \
    \       ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              value length is not a\
    \ member of java.util.stream.IntStream\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpl5i8ezxd.scala:22:78\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mcharsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\e[0m =\
    \ charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \                    ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m \e[35mcharsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpl5i8ezxd.scala:23:84\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mcharsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\e\
    [0m = charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                            ^\e[0m\n\e[31m   |\e[0mRecursive \e[33mvalue\e[0m\
    \ \e[35mcharsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpl5i8ezxd.scala:24:90\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36mcharsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble\e\
    [0m = charsLengthLongDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble.toDouble\n\
    \e[31m\e[31m   |\e[0m        "
  stdout: ''
  timestamp: 1659793184
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        strLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpemm6v19_.scala:15)\n\tat Problem.main(tmpemm6v19_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793184
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0L\n        for(i <- 0 until string.length)\
    \ length += string.charAt(i).toChar\n        length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m0ormyp.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until string.length)\
    \ length += string.charAt(i).toChar\n\e[31m\e[31m   |\e[0m                   \
    \                     ^^^^^^^^^\e[0m\n\e[31m   |\e[0m              value += is\
    \ not a member of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793184
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val length =\
    \ chars.length\n        val sum = 0\n        for (i <- 0 until length) {\n   \
    \         sum += chars(i).length\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr8b_69mi.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpr8b_69mi.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            sum += chars(i).length\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpr8b_69mi.scala:14:19\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            sum += chars(i).length\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^\e[0m\n\e[31m   |\e[0m          \
    \         \e[33mvalue\e[0m \e[35mchars\e[0m does not take parameters\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659793185
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qzxr0f7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\
    \ length += string.charAt(i).toLong\n        length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpopw0zlwa.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until string.length)\
    \ length += string.charAt(i).toLong\n\e[31m\e[31m   |\e[0m                   \
    \                     ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               value += is\
    \ not a member of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793186
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val str = new StringBuilder()\n        str.append(string)\n\
    \        str.result()\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp44x25xr9.scala:12:18\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        str.result()\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    String\n\
    \e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793186
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = str\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8b1lh5qn.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic\
    \ Error: /tmp/tmp8b1lh5qn.scala:17:42 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mstrLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                  Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8b1lh5qn.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: strLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8b1lh5qn.scala:21:57\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                            "
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        var length =\
    \ 0\n        for (i <- 0 until chars.length)\n            length += chars(i).length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8aru79g7.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp8aru79g7.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += chars(i).length\n\e[31m\e[31m \
    \  |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp8aru79g7.scala:13:22\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            length +=\
    \ chars(i).length\n\e[31m\e[31m   |\e[0m                      ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      \e[33mvalue\e[0m \e[35mchars\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qzxr0f7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val strLen = string.length\n        val strLenLen\
    \ = strLen.toLong\n        return strLenLen\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var count = 0\n        for (i <- 0 until string.length)\n\
    \            count += string.charAt(i).toChar\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8v_jbhhy.scala:17)\n\tat Problem.main(tmp8v_jbhhy.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793186
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val len = string.length\n        len.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var length = 0\n        for (i <- 0 until string.length)\n\
    \            length += string.charAt(i).toChar\n        length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvunvdk_n.scala:17)\n\tat Problem.main(tmpvunvdk_n.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793186
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        val chars = string.chars\n        val len = chars.length\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps_beyt2j.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793167
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> stringLength((\"\"))\n \
    \   // (0l)\n    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string\
    \ : String) : Long = {\n        var len = 0\n        for (i <- 0 until string.length)\
    \ {\n            len += string.charAt(i).toChar\n        }\n        len\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpmzm0m_x5.scala:18)\n\tat Problem.main(tmpmzm0m_x5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793186

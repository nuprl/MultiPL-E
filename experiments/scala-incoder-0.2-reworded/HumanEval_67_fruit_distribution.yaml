name: HumanEval_67_fruit_distribution
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // In this task, you will be given a string that represents a number of apples\
  \ and oranges \n    // that are distributed in a basket of fruit this basket contains\
  \ \n    // apples, oranges, and mango fruits. Given the string that represents the\
  \ total number of \n    // the oranges and apples and an integer that represent\
  \ the total number of the fruits \n    // in the basket return the number of the\
  \ mango fruits in the basket.\n    // for examble:\n    // >>> fruitDistribution((\"\
  5 apples and 6 oranges\"), (19l))\n    // (8l)\n    // >>> fruitDistribution((\"\
  0 apples and 1 oranges\"), (3l))\n    // (2l)\n    // >>> fruitDistribution((\"\
  2 apples and 3 oranges\"), (100l))\n    // (95l)\n    // >>> fruitDistribution((\"\
  100 apples and 1 oranges\"), (120l))\n    // (19l)\n    def fruitDistribution(s\
  \ : String, n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fruitDistribution((\"\
  5 apples and 6 oranges\"), (19l)) == (8l));\n    assert(fruitDistribution((\"5 apples\
  \ and 6 oranges\"), (21l)) == (10l));\n    assert(fruitDistribution((\"0 apples\
  \ and 1 oranges\"), (3l)) == (2l));\n    assert(fruitDistribution((\"1 apples and\
  \ 0 oranges\"), (3l)) == (2l));\n    assert(fruitDistribution((\"2 apples and 3\
  \ oranges\"), (100l)) == (95l));\n    assert(fruitDistribution((\"2 apples and 3\
  \ oranges\"), (5l)) == (0l));\n    assert(fruitDistribution((\"1 apples and 100\
  \ oranges\"), (120l)) == (19l));\n    }\n\n}\n"
completions: ["        val apples = s.split(\" \")(0)\n        val oranges = s.split(\"\
    \ \")(1)\n        val fruits = s.split(\" \")(2)\n        val appleAndOranges\
    \ = apples + \" \" + oranges\n        val fruitAndApples = fruits + \" \" + apples\n\
    \        val appleAndOrangesAndFruits = appleAndOranges + \" \" + fruitAndApples\n\
    \        val fruitAndApplesAndOranges = fruitAndApples + \" \" + oranges\n   \
    \     val appleAndOrangesAndFruitsAndOranges = appleAndOrangesAndFruits + \" \"\
    \ + fruitAndApplesAndOranges\n        val fruitAndApplesAndOrangesAndOranges =\
    \ fruitAndApplesAndOranges + \" \" + oranges\n        val appleAndOrangesAndFruitsAndOrangesAndOranges\
    \ = appleAndOrangesAndFruitsAndOranges + \" \" + oranges\n        val fruitAndApplesAndOrangesAndOrangesAndOranges\
    \ = fruitAndApplesAndOrangesAndOranges + \" \" + oranges\n        val appleAndOrangesAndFruitsAndOrangesAndOrangesAndOranges\
    \ = appleAndOrangesAndFruitsAndOrangesAndOranges + \" \" + oranges\n        val\
    \ fruitAndApplesAndOrangesAndOrangesAndOrangesAndOranges = fruitAndApplesAndOrangesAndOrangesAndOranges\
    \ + \" \" + oranges\n        val appleAndOrangesAndFruitsAndOrangesAndOrangesAndOrangesAndOranges\
    \ = appleAndOrangesAndFruitsAndOrangesAndOrangesAndOranges + \" \" + oranges\n\
    \        val fruitAndApplesAndOrangesAndOrangesAndOrangesAndOrangesAndOranges\
    \ = fruitAndApplesAndOrangesAndOrangesAndOrangesAndOranges + \" \" + oranges\n\
    \        val appleAndOrangesAndFruitsAndOrangesAndOrangesAndOrangesAndOrangesAndOranges\
    \ = appleAndOrangesAndFruitsAndOrangesAndOrangesAndOrangesAndOranges + \" \" +\
    \ oranges\n        val fruitAndApplesAndOrangesAndOrangesAndOrangesAndOrangesAndOrangesAndOranges\
    \ = fruitAndApplesAndOrangesAndOrangesAndOrangesAndOrangesAndOranges + \" \" +\
    \ oranges\n        val appleAndOrangesAndFruitsAndOrangesAndOrangesAndOrangesAndOrangesAndOrangesAndOranges\
    \ = appleAndOrangesAndFruitsAndOrangesAndOrangesAndOrangesAndOrangesAnd", "  \
    \      val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val appleCount = apples.sum\n        val orangeCount = oranges.sum\n       \
    \ val mangoCount = mangos.sum\n        val totalCount = appleCount + orangeCount\
    \ + mangoCount\n        val appleFruits = apples.filter(_ > 0)\n        val orangeFruits\
    \ = oranges.filter(_ > 0)\n        val mangoFruits = mangos.filter(_ > 0)\n  \
    \      val appleFruitCount = appleFruits.sum\n        val orangeFruitCount = orangeFruits.sum\n\
    \        val mangoFruitCount = mangoFruits.sum\n        val totalFruitCount =\
    \ appleFruitCount + orangeFruitCount + mangoFruitCount\n        val appleFruitPercentage\
    \ = appleFruitCount / totalFruitCount\n        val orangeFruitPercentage = orangeFruitCount\
    \ / totalFruitCount\n        val mangoFruitPercentage = mangoFruitCount / totalFruitCount\n\
    \        val totalFruitPercentage = appleFruitPercentage + orangeFruitPercentage\
    \ + mangoFruitPercentage\n        val mangoFruitCount = appleFruitPercentage*appleFruitCount\
    \ + orangeFruitPercentage*orangeFruitCount + mangoFruitPercentage*mangoFruitCount\n\
    \        val totalFruitCount = appleFruitPercentage*appleFruitCount + orangeFruitPercentage*orangeFruitCount\
    \ + mangoFruitPercentage*mangoFruitCount\n        mangoFruitCount", "        val\
    \ apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val appleCount = apples.sum\n\
    \        val orangeCount = oranges.sum\n        val mangoCount = fruits.filter(x\
    \ => x % 2 == 0).sum\n        val mangoCount = fruits.filter(x => x % 2 == 1).sum\n\
    \        val mangoCount = fruits.filter(x => x % 2 == 0).sum\n        val mangoCount\
    \ = fruits.filter(x => x % 2 == 1).sum\n        val mangoCount = fruits.filter(x\
    \ => x % 2 == 0).sum\n        val mangoCount = fruits.filter(x => x % 2 == 1).sum\n\
    \        val mangoCount = fruits.filter(x => x % 2 == 0).sum\n        val mangoCount\
    \ = fruits.filter(x => x % 2 == 1).sum\n        val mangoCount = fruits.filter(x\
    \ => x % 2 == 0).sum\n        val mangoCount = fruits.filter(x => x % 2 == 1).sum\n\
    \        val mangoCount = fruits.filter(x => x % 2 == 0).sum\n        val mangoCount\
    \ = fruits.filter(x => x % 2 == 1).sum\n        val mangoCount = fruits.filter(x\
    \ => x % 2 == 0).sum\n        val mangoCount = fruits.filter(x => x % 2 == 1).sum\n\
    \        val mangoCount = fruits.filter(x => x % 2 == 0).sum\n        val mangoCount\
    \ = fruits.filter(x => x % 2 == 1).sum\n        val mangoCount = fruits.filter(x\
    \ => x % 2 == 0).sum\n        val mangoCount = fruits.filter(x => x % 2 == 1).sum\n\
    \        val mangoCount = fruits.filter(x => x % 2 == 0).sum\n        val mangoCount\
    \ = fruits.filter(x => x % 2 == 1).sum\n        val mangoCount = fruits.filter(x\
    \ => x % 2 == 0).sum\n        val mangoCount = fruits.filter(x => x % 2 == 1).sum\n\
    \        val mangoCount = fruits.filter(x => x % 2 == 0).sum\n        val mangoCount\
    \ = fruits.filter(x => x % 2 == 1).sum\n        val mangoCount = fruits.filter(x\
    \ => x % 2 == 0).sum\n        val mangoCount = fruits.filter(x => x % 2 == 1).sum\n\
    \        val mangoCount = fruits.filter(x => x % 2 == 0).sum\n        val mangoCount\
    \ = fruits.filter(x => x % 2 == 1).sum\n        val mangoCount = fruits.filter(x\
    \ => x ", "        val apples = s.split(\" \")(0).toLong\n        val oranges\
    \ = s.split(\" \")(1).toLong\n        val mangos = s.split(\" \")(2).toLong\n\
    \        val basket = new mutable.HashMap[String, Long]()\n        basket.put(\"\
    apples\", apples)\n        basket.put(\"oranges\", oranges)\n        basket.put(\"\
    mangos\", mangos)\n        val totalFruits = apples + oranges + mangos\n     \
    \   val fruits = basket.filter(_._2 > 0).map(_._1).sum\n        fruits.toLong\
    \ - totalFruits", "        val apples = n.toLong - s.toLong\n        val oranges\
    \ = s.toLong - apples.toLong\n        val mangos = apples.toLong - oranges.toLong\n\
    \        mangos", "        val apples = s.split(\" \")(0)\n        val oranges\
    \ = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n        val applesAndOranges\
    \ = apples + \" \" + oranges\n        val applesAndOrangesArray = applesAndOranges.split(\"\
    \ \")\n        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val applesAndOrangesArrayLength = applesAndOrangesArray.length\n        val\
    \ applesAndOrangesArrayLength = applesAndOrangesArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val applesAndOrangesArrayLength = applesAndOrangesArray.length\n        val\
    \ applesAndOrangesArrayLength = applesAndOrangesArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val applesAndOrangesArrayLength = applesAndOrangesArray.length\n        val\
    \ applesAndOrangesArrayLength = applesAndOrangesArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val applesAndOrangesArrayLength = applesAndOrangesArray.length\n        val\
    \ applesAndOrangesArrayLength = applesAndOrangesArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val applesAndOrangesArrayLength = applesAndOrangesArray.length\n        val\
    \ applesAndOrangesArrayLength = applesAndOrangesArray.length\n        val applesAndOrangesArrayLength\
    \ = applesAndOrangesArray.length\n        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n\
    \        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n    \
    \    val ", "        val apples = s.split(\" \")(0).toLong\n        val oranges\
    \ = s.split(\" \")(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n\
    \        val mangos = n - apples - oranges - fruits\n        mangos", "      \
    \  val apples = n.toInt\n        val oranges = s.split(\" \").last.toInt\n   \
    \     val fruits = s.split(\" \").dropRight(1).mkString(\"\")\n        val applesAndOranges\
    \ = apples + oranges\n        val fruitsInBasket = fruits.split(\" \").length\n\
    \        val mangoFruits = fruitsInBasket - applesAndOranges\n        mangoFruits",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val fruitsInBasket = fruits.split(\" \")\n      \
    \  val applesAndOrangesInBasket = applesAndOranges.split(\" \")\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val fruitsInBasketCount = fruitsInBasket.length\n\
    \        val mangoFruits = fruitsInBasketCount - applesAndOrangesInBasketCount\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val applesAndOrangesInBasketCount = applesAnd", "        val apples =\
    \ n.toInt\n        val oranges = s.toInt\n        val fruits = apples + oranges\n\
    \        val mangos = fruits - apples - oranges\n        mangos", "        val\
    \ apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"and\"\
    ).map(_.toInt)\n        val fruits = apples ++ oranges\n        val totalFruits\
    \ = fruits.sum\n        val mangos = fruits.filter(_ % 2 == 0)\n        val totalMangos\
    \ = mangos.sum\n        val result = totalMangos - totalFruits\n        result",
  "        val apples = n.toLong - s.toLong\n        val oranges = s.toLong\n    \
    \    val mangos = apples + oranges\n        mangos", "        val apples = s.split(\"\
    \ \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n      \
    \  val fruits = apples ++ oranges\n        val appleCount = apples.sum\n     \
    \   val orangeCount = oranges.sum\n        val mangoCount = fruits.filter(_ >\
    \ 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount\
    \ = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n\
    \        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_\
    \ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount\
    \ = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n\
    \        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_\
    \ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount\
    \ = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n\
    \        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_\
    \ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount\
    \ = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n\
    \        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_\
    \ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount\
    \ = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n\
    \        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_\
    \ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount\
    \ = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n\
    \        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_\
    \ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n        val mangoCount\
    \ = fruits.filter(_ > 1).sum\n        val mangoCount = fruits.filter(_ > 1).sum\n\
    \        val mangoCount = fruits.filter(_ > 1).sum\n        val mango", "    \
    \    val apples = n.toInt\n        val oranges = s.toInt\n        val mangos =\
    \ apples - oranges\n        mangos", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples\
    \ ++ oranges\n        val mangos = fruits.filter(x => x % 2 == 0)\n        val\
    \ totalMangos = mangos.length\n        val totalApples = apples.length\n     \
    \   val totalOranges = oranges.length\n        val totalFruits = fruits.length\n\
    \        val totalMangoFruits = totalMangos * 2\n        val totalAppleFruits\
    \ = totalApples * 2\n        val totalOrangeFruits = totalOranges * 2\n      \
    \  val totalFruitFruits = totalFruits * 2\n        val totalMangoFruitFruits =\
    \ totalMangoFruits * 2\n        val totalAppleFruitFruits = totalAppleFruits *\
    \ 2\n        val totalOrangeFruitFruits = totalOrangeFruits * 2\n        val totalFruitFruitFruits\
    \ = totalFruitFruits * 2\n        val totalMangoFruitFruitFruits = totalMangoFruitFruits\
    \ * 2\n        val totalAppleFruitFruitFruits = totalAppleFruitFruits * 2\n  \
    \      val totalOrangeFruitFruitFruits = totalOrangeFruitFruits * 2\n        val\
    \ totalFruitFruitFruitFruits = totalFruitFruitFruits * 2\n        val totalMangoFruitFruitFruitFruits\
    \ = totalMangoFruitFruitFruits * 2\n        val totalAppleFruitFruitFruitFruits\
    \ = totalAppleFruitFruitFruits * 2\n        val totalOrangeFruitFruitFruitFruits\
    \ = totalOrangeFruitFruitFruits * 2\n        val totalFruitFruitFruitFruitFruits\
    \ = totalFruitFruitFruitFruits * 2\n        val totalMangoFruitFruitFruitFruitFruits\
    \ = totalMangoFruitF", "        val apples = n.toLong - s.toLong\n        val\
    \ oranges = s.toLong - apples.toLong\n        val mango = apples.toLong - oranges.toLong\n\
    \        mango", "        val apples = s.split(\"apples and \").map(_.toInt)\n\
    \        val oranges = s.split(\"oranges and \").map(_.toInt)\n        val fruits\
    \ = s.split(\"fruits\").map(_.toInt)\n        val mango = fruits.filter(x => x\
    \ % 2 == 0)\n        val total = mango.sum\n        val appleAndOranges = apples.zip(oranges)\n\
    \        val appleAndOrangesCount = appleAndOranges.filter(x => x._1 == x._2).length\n\
    \        val appleAndOrangesPercentage = appleAndOrangesCount / appleAndOranges.length\n\
    \        val appleAndOrangesPercentagePercentage = appleAndOrangesPercentage *\
    \ 100\n        val appleAndOrangesPercentagePercentagePercentagePercentage = appleAndOrangesPercentagePercentagePercentage\
    \ * 100\n        val appleAndOrangesPercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangesPercentagePercentagePercentagePercentagePercentage * 100\n\
    \        val appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentage\
    \ * 100\n        val appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ * 100\n        val appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ * 100\n        val appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ * 100\n        val appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ * 100\n        val appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ * 100\n        val appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ * 100\n        val appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ * 100\n        val appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = appleAndOrangesPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ * 100\n        val appleAndOranges", "        val apples = n.toInt\n       \
    \ val oranges = s.split(\"and\").map(_.toInt).sum\n        val mangos = apples\
    \ - oranges\n        mangos", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = apples - oranges\n        val fruits = apples\
    \ + oranges + mangos\n        fruits", "        val apples = n.toLong - s.split(\"\
    and\").length\n        val oranges = s.split(\"and\").length\n        val mangos\
    \ = apples - oranges\n        mangos", "        val apples = s.split(\" \")(0).toLong\n\
    \        val oranges = s.split(\" \")(1).toLong\n        val mangos = s.split(\"\
    \ \")(2).toLong\n        val basket = new mutable.HashMap[String, Long]()\n  \
    \      basket.put(\"apples\", apples)\n        basket.put(\"oranges\", oranges)\n\
    \        basket.put(\"mangos\", mangos)\n        val totalFruits = apples + oranges\
    \ + mangos\n        val totalFruitsPerApple = apples / totalFruits\n        val\
    \ totalFruitsPerOrange = oranges / totalFruits\n        val totalFruitsPerMango\
    \ = mangos / totalFruits\n        val totalFruitsPerAppleAndOrange = totalFruitsPerApple\
    \ * totalFruitsPerOrange\n        val totalFruitsPerAppleAndMango = totalFruitsPerApple\
    \ * totalFruitsPerMango\n        val totalFruitsPerOrangeAndMango = totalFruitsPerOrange\
    \ * totalFruitsPerMango\n        val totalFruitsPerAppleAndOrangeAndMango = totalFruitsPerAppleAndOrange\
    \ * totalFruitsPerMango\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruits\
    \ = totalFruitsPerAppleAndOrangeAndMango * totalFruits\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerApple\
    \ = totalFruitsPerAppleAndOrangeAndMango * totalFruitsPerApple\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerOrange\
    \ = totalFruitsPerAppleAndOrangeAndMango * totalFruitsPerOrange\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerMango\
    \ = totalFruitsPerAppleAndOrangeAndMango * totalFruitsPerMango\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerAppleAndOrange\
    \ = totalFruitsPerAppleAndOrangeAndMangoAndTotalFruits * totalFruitsPerAppleAndOrange\n\
    \        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruits", "        val\
    \ apples = s.split(\"apples and \")(0).trim\n        val oranges = s.split(\"\
    oranges and \")(0).trim\n        val mangos = s.split(\"mango and \")(0).trim\n\
    \        val applesAndOranges = apples + oranges\n        val mangoAndOranges\
    \ = mangos + oranges\n        val applesAndMangos = apples + mangos\n        val\
    \ orangesAndMangos = oranges + mangos\n        val applesAndOrangesAndMangos =\
    \ applesAndOranges + mangoAndOranges\n        val applesAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangos + orangesAndMangos\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOranges + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOranges + mangos\n        val\
    \ applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges =\
    \ applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos + oranges\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos + mangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ + mangos\n        val applesAnd", "        val apples = n.toInt\n        val\
    \ oranges = s.split(\"and\").map(_.toInt).sum\n        val fruits = s.split(\"\
    and\").map(_.toLong).sum\n        val mango = fruits - apples - oranges\n    \
    \    mango", "        val apples = s.split(\" \")(0).toLong\n        val oranges\
    \ = s.split(\" \")(1).toLong\n        val mangos = s.split(\" \")(2).toLong\n\
    \        val basket = new mutable.HashMap[String, Long]()\n        basket.put(\"\
    apples\", apples)\n        basket.put(\"oranges\", oranges)\n        basket.put(\"\
    mangos\", mangos)\n        val totalFruits = apples + oranges + mangos\n     \
    \   val fruits = basket.filter(_._2 > 0)\n        fruits.filter(_._2 > 0).map(_._1).sum",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val applesAndOrangesArray = applesAndOranges.split(\"\
    \ \")\n        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n\
    \        val fruitArray = fruits.split(\" \")\n        val fruitArrayLength =\
    \ fruitArray.length\n        val applesAndOrangesArrayLength = applesAndOrangesArrayLength\n\
    \        val fruitArrayLength = fruitArrayLength\n        val numberOfApples =\
    \ applesAndOrangesArrayLength(0)\n        val numberOfOranges = applesAndOrangesArrayLength(1)\n\
    \        val numberOfFruits = applesAndOrangesArrayLength(2)\n        val numberOfApplesAndOranges\
    \ = numberOfApples + \" \" + numberOfOranges\n        val numberOfApplesAndOrangesArray\
    \ = numberOfApplesAndOranges.split(\" \")\n        val numberOfApplesAndOrangesArrayLength\
    \ = numberOfApplesAndOrangesArray.length\n        val numberOfFruitsArray = numberOfFruits.split(\"\
    \ \")\n        val numberOfFruitsArrayLength = numberOfFruitsArray.length\n  \
    \      val numberOfApplesAndOrangesArrayLength = numberOfApplesAndOrangesArrayLength\n\
    \        val numberOfFruitsArrayLength = numberOfFruitsArrayLength\n        val\
    \ numberOfFruits = numberOfApplesAndOrangesArrayLength(2)\n        val numberOfApples\
    \ = numberOfApplesAndOrangesArrayLength(0)\n        val numberOfOranges = numberOfApplesAndOrangesArrayLength(1)\n\
    \        val numberOfFruitsArrayLength = numberOfFruitsArrayLength\n        val\
    \ numberOfApplesAndOrangesArrayLength = numberOfApplesAndOrangesArrayLength\n\
    \        val numberOfFruitsArrayLength = numberOfFruitsArrayLength\n        val\
    \ numberOfApplesAndOranges = numberOfApples + \" \" + numberOfOranges\n      \
    \  val numberOfApplesAndOrangesArray = numberOfApplesAndOranges.split(\" \")\n\
    \        val numberOfApplesAndOrangesArrayLength = numberOfApplesAndOrangesArray.length\n\
    \        val numberOfFruitsArray = numberOfFruits.split(\" \")\n        val numberOfFruitsArrayLength\
    \ = numberOfFruitsArray.length\n        val numberOfApplesAndOrangesArrayLength\
    \ = numberOfApplesAndOrangesArrayLength\n        val numberOfFruitsArrayLength\
    \ = numberOfFruitsArrayLength\n        val numberOfApplesAndOranges = numberOfApples\
    \ + \" \" + numberOfOranges\n        val numberOfApplesAnd", "        val apples\
    \ = n.toInt\n        val oranges = s.split(\" \")(1).split(\"and\")(0).toInt\n\
    \        val mangos = apples - oranges\n        val fruits = apples + oranges\
    \ + mangos\n        fruits", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val fruits = apples + oranges\n        val mangos = fruits\
    \ - apples - oranges\n        mangos", "        val apples = n.toLong - s.replaceAll(\"\
    [^0-9]\", \"\").length\n        val oranges = s.replaceAll(\"[^0-9]\", \"\").length\n\
    \        val mangos = apples - oranges\n        mangos", "        val apples =\
    \ n.toLong - s.toLong\n        val oranges = s.toLong\n        val mangos = apples\
    \ + oranges\n        mangos", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = apples - oranges\n        val fruits = apples\
    \ + oranges + mangos\n        fruits", "        val apples = s.split(\" \").map(_.toInt).sum\n\
    \        val oranges = s.split(\" \").map(_.toInt).sum\n        val mangos = n\
    \ - apples - oranges\n        val applesAndOranges = apples + oranges\n      \
    \  val applesAndMangos = apples + mangos\n        val mangoFruits = mangos - applesAndMangos\n\
    \        applesAndOranges + applesAndMangos + mangoFruits", "        val apples\
    \ = s.split(\"apples and \")(0).trim\n        val oranges = s.split(\"oranges\
    \ and \")(0).trim\n        val fruits = s.split(\"fruits and \")(0).trim\n   \
    \     val appleAndOranges = apples + \" and \" + oranges\n        val fruitAndApples\
    \ = fruits + \" and \" + apples\n        val appleAndOrangesAndFruits = appleAndOranges\
    \ + \" and \" + fruitAndApples\n        val appleAndOrangesAndFruitsAndMango =\
    \ appleAndOrangesAndFruits + \" and mango\"\n        val appleAndOrangesAndFruitsAndMangoAndMango\
    \ = appleAndOrangesAndFruitsAndMango + \" and mango\"\n        val appleAndOrangesAndFruitsAndMangoAndMangoAndMango\
    \ = appleAndOrangesAndFruitsAndMangoAndMango + \" and mango\"\n        val appleAndOrangesAndFruitsAndMangoAndMangoAndMangoAndMango\
    \ = appleAndOrangesAndFruitsAndMangoAndMangoAndMango + \" and mango\"\n      \
    \  val appleAndOrangesAndFruitsAndMangoAndMangoAndMangoAndMangoAndMango = appleAndOrangesAndFruitsAndMangoAndMangoAndMangoAndMango\
    \ + \" and mango\"\n        val appleAndOrangesAndFruitsAndMangoAndMangoAndMangoAndMangoAndMangoAndMango\
    \ = appleAndOrangesAndFruitsAndMangoAndMangoAndMangoAndMangoAndMango + \" and\
    \ mango\"\n        val appleAndOrangesAndFruitsAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango\
    \ = appleAndOrangesAndFruitsAndMangoAndMangoAndMangoAndMangoAndMangoAndMango +\
    \ \" and mango\"\n        val appleAndOrangesAndFruitsAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango\
    \ = appleAndOrangesAndFruitsAndMangoAndMangoAndMangoAndMangoAnd", "        val\
    \ apples = n.toLong - s.split(\" \").map(_.toLong).sum\n        val oranges =\
    \ s.split(\" \").map(_.toLong).sum\n        val mangos = apples - oranges\n  \
    \      mangos", "        val apples = n.toLong - s.replaceAll(\"apples\", \"0\"\
    ).length\n        val oranges = s.replaceAll(\"oranges\", \"0\").length\n    \
    \    val mangos = s.replaceAll(\"mango\", \"0\").length\n        val applesAndOranges\
    \ = apples + oranges\n        val applesAndMangos = apples + mangos\n        val\
    \ orangesAndMangos = oranges + mangos\n        val applesAndOrangesAndMangos =\
    \ applesAndOranges + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangos + orangesAndMangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + orangesAndMangosAndO", "  \
    \      val apples = n.toLong - s.toLong\n        val oranges = s.toLong\n    \
    \    val mangos = apples - oranges\n        mangos", "        val apples = n.toInt\n\
    \        val oranges = s.toInt\n        val fruits = apples + oranges\n      \
    \  val mangos = fruits - apples - oranges\n        mangos", "        val apples\
    \ = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits\
    \ = s.split(\" \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n\
    \        val fruitsInBasket = fruits.split(\" \").length\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.split(\" \").length\n        val mangoFruits = fruitsInBasket\
    \ - applesAndOrangesInBasket\n        val applesAndOrangesInBasketInt = applesAndOrangesInBasket.toInt\n\
    \        val mangoFruitsInBasket = mangoFruits.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n\
    \        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n\
    \        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n\
    \        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n\
    \        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n\
    \        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBaske", "        val apples = n.toLong - s.toLong\n        val\
    \ oranges = s.toLong\n        val mangos = apples + oranges\n        mangos",
  "        val apples = s.split(\"apples and \")(0).trim\n        val oranges = s.split(\"\
    oranges and \")(0).trim\n        val mangos = s.split(\"mango and \")(0).trim\n\
    \        val applesAndOranges = apples + oranges\n        val mangoAndApples =\
    \ mangos + apples\n        val applesAndOrangesAndMangos = applesAndOranges +\
    \ mangos\n        val applesAndOrangesAndMangosAndApples = applesAndOrangesAndMangos\
    \ + apples\n        val applesAndOrangesAndMangosAndApplesAndOranges = applesAndOrangesAndMangosAndApples\
    \ + oranges\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOranges + mangos\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + apples\n        val\
    \ applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ + oranges\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangos + mangos\n        val\
    \ applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples + apples\n\
    \        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples + oranges\n\
    \        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples + mangos\n\
    \        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAnd",
  "        val apples = s.split(\"apples\")(0).toLong\n        val oranges = s.split(\"\
    oranges\")(0).toLong\n        val mangos = s.split(\"mangos\")(0).toLong\n   \
    \     val basket = new mutable.HashMap[String, Long]()\n        basket.put(\"\
    apples\", apples)\n        basket.put(\"oranges\", oranges)\n        basket.put(\"\
    mangos\", mangos)\n        val total = apples + oranges + mangos\n        val\
    \ fruits = basket.filter(_._2 > 0).map(_._1).sum\n        fruits.toLong - mangos",
  "        val apples = n.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangos = fruits.toDouble * 0.95\n        fruits\
    \ - mangos", "        val apples = n.toInt\n        val oranges = s.toInt\n  \
    \      val mangos = apples - oranges\n        val fruits = apples + oranges +\
    \ mangos\n        fruits", "        val apples = s.split(\" \")(0).toLong\n  \
    \      val oranges = s.split(\" \")(1).toLong\n        val mangos = s.split(\"\
    \ \")(2).toLong\n        val basket = new mutable.HashMap[String, Long]()\n  \
    \      basket.put(\"apples\", apples)\n        basket.put(\"oranges\", oranges)\n\
    \        basket.put(\"mangos\", mangos)\n        val totalFruits = apples + oranges\
    \ + mangos\n        val totalFruitsPerApple = apples / totalFruits\n        val\
    \ totalFruitsPerOrange = oranges / totalFruits\n        val totalFruitsPerMango\
    \ = mangos / totalFruits\n        val totalFruitsPerAppleAndOrange = apples +\
    \ oranges\n        val totalFruitsPerAppleAndMango = apples + mangos\n       \
    \ val totalFruitsPerOrangeAndMango = oranges + mangos\n        val totalFruitsPerAppleAndOrangeAndMango\
    \ = apples + oranges + mangos\n        val totalFruitsPerAppleAndOrangeAndMangoAndBasket\
    \ = apples + oranges + mangos + basket.size\n        val totalFruitsPerAppleAndOrangeAndMangoAndBasketAndBasket\
    \ = apples + oranges + mangos + basket.size + basket.size\n        val totalFruitsPerAppleAndOrangeAndMangoAndBasketAndBasketAndBasket\
    \ = apples + oranges + mangos + basket.size + basket.size + basket.size\n    \
    \    val totalFruitsPerAppleAndOrangeAndMangoAndBasketAndBasketAndBasketAndBasket\
    \ = apples + oranges + mangos + basket.size + basket.size + basket.size + basket.size\n\
    \        val totalFruitsPerAppleAndOrangeAndMangoAndBasketAndBasketAndBasketAndBasketAndBasket\
    \ = apples + oranges + mangos + basket.size + basket.size + basket.size + basket.size\
    \ + basket.size + basket.size\n        val totalFruitsPerAppleAndOrangeAndMangoAndBasketAndBasketAndBasketAndBasketAndBasketAndBasket\
    \ = apples + oranges + mangos + basket.size + basket.size + basket.size + basket.size\
    \ + basket.size + basket.size + bas", "        val apples = n.toInt\n        val\
    \ oranges = s.toInt\n        val fruits = apples + oranges\n        val mangos\
    \ = fruits - apples - oranges\n        mangos", "        val apples = s.split(\"\
    \ \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n      \
    \  val fruits = apples ++ oranges\n        val appleCount = apples.sum\n     \
    \   val orangeCount = oranges.sum\n        val mangoCount = fruits.filter(_ %\
    \ 2 == 0).sum\n        val totalCount = appleCount + orangeCount + mangoCount\n\
    \        val mangoFruits = fruits.filter(_ % 2 == 1).sum\n        val totalFruits\
    \ = appleCount + orangeCount + mangoCount + mangoFruits\n        val result =\
    \ totalCount - mangoFruits\n        result", "        val apples = n.toInt\n \
    \       val oranges = s.split(\"and\").map(_.toInt).sum\n        val mangos =\
    \ apples - oranges\n        mangos", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples\
    \ ++ oranges\n        val mangos = fruits.filter(x => x % 2 == 1)\n        val\
    \ totalMangos = mangos.size\n        val totalApples = apples.sum\n        val\
    \ totalOranges = oranges.sum\n        val totalFruits = fruits.sum\n        val\
    \ totalMangoFruits = mangos.sum\n        val totalMangoFruitsPerApple = mangos.map(x\
    \ => x / totalApples).sum\n        val totalMangoFruitsPerOrange = mangos.map(x\
    \ => x / totalOranges).sum\n        val totalMangoFruitsPerMango = mangos.map(x\
    \ => x / totalMangos).sum\n        val totalMangoFruitsPerAppleAndOrange = mangos.map(x\
    \ => x / totalApples + x / totalOranges).sum\n        val totalMangoFruitsPerOrangeAndApple\
    \ = mangos.map(x => x / totalOranges + x / totalApples).sum\n        val totalMangoFruitsPerMangoAndApple\
    \ = mangos.map(x => x / totalMangos + x / totalApples).sum\n        val totalMangoFruitsPerAppleAndOrangeAndMango\
    \ = mangos.map(x => x / totalApples + x / totalOranges + x / totalMangos).sum\n\
    \        val totalMangoFruitsPerOrangeAndAppleAndMango = mangos.map(x => x / totalOranges\
    \ + x / totalApples + x / totalMangos).sum\n        val totalMangoFruitsPerMangoAndAppleAndOrange\
    \ = mangos.map(x => x / totalMangos + x / totalApples + x / totalOranges).sum\n\
    \        val totalMangoFruitsPerAppleAndOrangeAndMango = mangos.map(x => x / totalApples\
    \ + x / totalOranges + x / totalMangos).sum\n        val totalMangoFruitsPerOrangeAndAppleAndMango\
    \ = mangos.map(x => x / totalOranges + x / totalApples + x / totalMangos).sum\n\
    \        val totalMangoFruitsPerMangoAndAppleAndOrange = mangos.map(x => x / totalMangos\
    \ + x / totalApple", "        val apples = n.toInt\n        val oranges = s.toInt\n\
    \        val mangos = apples - oranges\n        val fruits = apples + oranges\
    \ + mangos\n        fruits", "        val apples = n.toInt\n        val oranges\
    \ = s.split(\" \").last.toInt\n        val fruits = s.split(\" \").dropRight(1).mkString(\"\
    \")\n        val applesAndOranges = apples + oranges\n        val fruitsInBasket\
    \ = fruits.split(\" \").length\n        val mangos = applesAndOranges - fruitsInBasket\n\
    \        mangos", "        val apples = s.split(\"apples\")(1).trim\n        val\
    \ oranges = s.split(\"oranges\")(1).trim\n        val mangos = s.split(\"mango\"\
    )(1).trim\n        val applesAndOranges = apples + oranges\n        val applesAndMangos\
    \ = apples + mangos\n        val orangesAndMangos = oranges + mangos\n       \
    \ val applesAndOrangesAndMangos = applesAndOranges + mangos\n        val applesAndOrangesAndMangosAndMangos\
    \ = applesAndOrangesAndMangos + mangos\n        val applesAndOrangesAndMangosAndMangosAndMangos\
    \ = applesAndOrangesAndMangosAndMangos + mangos\n        val applesAndOrangesAndMangosAndMangosAndMangosAndMangos\
    \ = applesAndOrangesAndMangosAndMangosAndMangos + mangos\n        val applesAndOrangesAndMangosAndMangosAndMangosAndMangosAndMangos\
    \ = applesAndOrangesAndMangosAndMangosAndMangosAndMangos + mangos\n        val\
    \ applesAndOrangesAndMangosAndMangosAndMangosAndMangosAndMangosAndMangos = applesAndOrangesAndMangosAndMangosAndMangosAndMangosAndMangos\
    \ + mangos\n        val applesAndOrangesAndMangosAndMangosAndMangosAndMangosAndMangosAndMangosAndMangos\
    \ = applesAndOrangesAndMangosAndMangosAndMangosAndMangosAndMangosAndMangos + mangos\n\
    \        val applesAndOrangesAndMangosAndMangosAndMangosAndMangosAndMangosAndMangosAndMangosAndMangos\
    \ = applesAndOrangesAndMangosAndMangosAndMangosAndMangosAndMangosAndMangosAndMangos\
    \ + mangos\n        val applesAndOrangesAndMangosAndMangosAndMangosAndMangosAndMangosAndMangosAndMangosAndMangosAndMangos\
    \ = applesAndOrangesAndMangosAndMangosAndMangosAndMang", "        val apples =\
    \ s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val appleCount = apples.sum\n\
    \        val orangeCount = oranges.sum\n        val mangoCount = fruits.filter(_\
    \ % 2 == 0).sum\n        val mangoCount = fruits.filter(_ % 2 == 1).sum\n    \
    \    val mangoCount = fruits.filter(_ % 3 == 0).sum\n        val mangoCount =\
    \ fruits.filter(_ % 3 == 1).sum\n        val mangoCount = fruits.filter(_ % 5\
    \ == 0).sum\n        val mangoCount = fruits.filter(_ % 5 == 1).sum\n        val\
    \ mangoCount = fruits.filter(_ % 7 == 0).sum\n        val mangoCount = fruits.filter(_\
    \ % 7 == 1).sum\n        val mangoCount = fruits.filter(_ % 11 == 0).sum\n   \
    \     val mangoCount = fruits.filter(_ % 11 == 1).sum\n        val mangoCount\
    \ = fruits.filter(_ % 13 == 0).sum\n        val mangoCount = fruits.filter(_ %\
    \ 13 == 1).sum\n        val mangoCount = fruits.filter(_ % 17 == 0).sum\n    \
    \    val mangoCount = fruits.filter(_ % 17 == 1).sum\n        val mangoCount =\
    \ fruits.filter(_ % 19 == 0).sum\n        val mangoCount = fruits.filter(_ % 19\
    \ == 1).sum\n        val mangoCount = fruits.filter(_ % 23 == 0).sum\n       \
    \ val mangoCount = fruits.filter(_ % 23 == 1).sum\n        val mangoCount = fruits.filter(_\
    \ % 29 == 0).sum\n        val mangoCount = fruits.filter(_ % 29 == 1).sum\n  \
    \      val mangoCount = fruits.filter(_ % 31 == 0).sum\n        val mangoCount\
    \ = fruits.filter(_ % 31 == 1).sum\n        val mangoCount = fruits.filter(_ %\
    \ 37 == 0).sum\n        val mangoCount = fruits.filter(_ % 37 == 1).sum\n    \
    \    val mangoCount = fruits.filter(_ % 41 == 0).sum\n        val mangoCount =\
    \ fruits.filter(_ % 41 == 1).sum\n        val mangoCount = fruits.filter(_ % 47\
    \ == 0).sum\n        val mangoCount = fruits.filter(_ % 47 == 1).sum\n       \
    \ val mangoCount = fruits.filter(_ % 53 == 0).sum\n        val mangoCount = fruits.filter(_\
    \ % 53 == 1).sum\n        val mangoCount = fruits.filter(_ % 59 == 0).", "   \
    \     val apples = n.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = apples - oranges\n        val basket = new mutable.ListBuffer[String]()\n\
    \        basket += s\n        basket += s\"$apples apples\"\n        basket +=\
    \ s\"$oranges oranges\"\n        basket += s\"$mangos mangoes\"\n        basket.toList.map(_.split(\"\
    \ \")).map(_.size).sum", "        val apples = s.split(\" \").map(_.toInt)\n \
    \       val oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples\
    \ ++ oranges\n        val count = fruits.count(_ == 0)\n        val mangos = fruits.count(_\
    \ == 1)\n        val totalFruits = fruits.length\n        val totalMangos = mangos.toLong\n\
    \        val totalApples = apples.toLong\n        val totalOranges = oranges.toLong\n\
    \        val totalFruits = fruits.length\n        val totalMangos = mangos.toLong\n\
    \        val totalApples = apples.toLong\n        val totalOranges = oranges.toLong\n\
    \        val totalFruits = fruits.length\n        val totalMangos = mangos.toLong\n\
    \        val totalApples = apples.toLong\n        val totalOranges = oranges.toLong\n\
    \        val totalFruits = fruits.length\n        val totalMangos = mangos.toLong\n\
    \        val totalApples = apples.toLong\n        val totalOranges = oranges.toLong\n\
    \        val totalFruits = fruits.length\n        val totalMangos = mangos.toLong\n\
    \        val totalApples = apples.toLong\n        val totalOranges = oranges.toLong\n\
    \        val totalFruits = fruits.length\n        val totalMangos = mangos.toLong\n\
    \        val totalApples = apples.toLong\n        val totalOranges = oranges.toLong\n\
    \        val totalFruits = fruits.length\n        val totalMangos = mangos.toLong\n\
    \        val totalApples = apples.toLong\n        val totalOranges = oranges.toLong\n\
    \        val totalFruits = fruits.length\n        val totalMangos = mangos.toLong\n\
    \        val totalApples = apples.toLong\n        val totalOranges = oranges.toLong\n\
    \        val totalFruits = fruits.length\n        val totalMangos = mangos.toLong\n\
    \        val totalApples = apples.toLong\n        val totalOranges = oranges.toLong\n\
    \        val totalFruits = fruits.length\n        val totalMangos = mangos.toLong\n\
    \        val totalApples = apples.toLong\n        val totalOranges = oranges.toLong\n\
    \        val totalFruits = fruits.length\n        val totalMangos = mangos.toLong\n\
    \        ", "        val apples = s.split(\"apples\")(0).toLong\n        val oranges\
    \ = s.split(\"oranges\")(0).toLong\n        val mangos = s.split(\"mango\")(0).toLong\n\
    \        val totalFruits = apples + oranges + mangos\n        val fruitsInBasket\
    \ = n.toLong\n        val fruitsInBasketWithMango = fruitsInBasket - mangos\n\
    \        fruitsInBasketWithMango", "        val apples = s.split(\"apples and\
    \ \").map(_.toInt)\n        val oranges = s.split(\"oranges and \").map(_.toInt)\n\
    \        val mangos = s.split(\"mango and \").map(_.toInt)\n        val fruits\
    \ = apples ++ oranges ++ mangos\n        val totalFruits = fruits.sum\n      \
    \  val totalApples = apples.sum\n        val totalOranges = oranges.sum\n    \
    \    val totalMangos = mangos.sum\n        val totalFruitsInBasket = totalFruits\
    \ - totalApples - totalOranges - totalMangos\n        val totalFruitsInBasketWithApples\
    \ = totalFruitsInBasket - totalApples\n        val totalFruitsInBasketWithOranges\
    \ = totalFruitsInBasket - totalOranges\n        val totalFruitsInBasketWithMangos\
    \ = totalFruitsInBasket - totalMangos\n        val totalFruitsInBasketWithApplesAndOranges\
    \ = totalFruitsInBasketWithApples + totalFruitsInBasketWithOranges\n        val\
    \ totalFruitsInBasketWithApplesAndMangos = totalFruitsInBasketWithApples + totalFruitsInBasketWithMangos\n\
    \        val totalFruitsInBasketWithOrangesAndMangos = totalFruitsInBasketWithOranges\
    \ + totalFruitsInBasketWithMangos\n        val totalFruitsInBasketWithApplesAndOrangesAndMangos\
    \ = totalFruitsInBasketWithApplesAndOranges + totalFruitsInBasketWithMangos\n\
    \        val totalFruitsInBasketWithApplesAndOrangesAndMangosWithApples = totalFruitsInBasketWithApplesAndOrangesAndMangos\
    \ - totalFruitsInBasketWithApples\n        val totalFruitsInBasketWithApplesAndOrangesAndMangosWithOranges\
    \ = totalFruitsInBasketWithApplesAndOrangesAndMangos - totalFruitsInBasketWithOranges\n\
    \        val totalFruitsInBasketWithApplesAndOrangesAndMangosWithMangos = totalFruitsInBasketWithApplesAndOrangesAndMangos\
    \ - totalFruitsInBasketWithMang", "        val apples = n.toLong - s.toLong\n\
    \        val oranges = s.toLong\n        val mangos = apples - oranges\n     \
    \   mangos", "        val apples = n.toInt\n        val oranges = s.toInt\n  \
    \      val fruits = apples + oranges\n        val mangos = fruits - apples - oranges\n\
    \        mangos", "        val apples = n.toInt\n        val oranges = s.toInt\n\
    \        val mangos = apples - oranges\n        mangos", "        val apples =\
    \ s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val appleCount = apples.sum\n\
    \        val orangeCount = oranges.sum\n        val mangoCount = fruits.filter(f\
    \ => f > 0).sum\n        val totalCount = appleCount + orangeCount + mangoCount\n\
    \        val totalFruits = fruits.sum\n        val totalMangoFruits = fruits.filter(f\
    \ => f > 0).sum\n        val mangoFruits = totalMangoFruits - totalFruits\n  \
    \      val totalMangoFruitsPercentage = (mangoFruits/totalMangoFruits)*100\n \
    \       val totalFruitsPercentage = (totalFruits/totalCount)*100\n        val\
    \ totalPercentage = totalMangoFruitsPercentage + totalFruitsPercentage\n     \
    \   totalPercentage", "        val apples = n.toLong - s.toLong\n        val oranges\
    \ = s.toLong\n        val mangos = apples - oranges\n        mangos", "      \
    \  val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n \
    \       val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val fruitsInBasket = fruits.split(\" \").length\n\
    \        val applesAndOrangesInBasket = applesAndOranges.split(\" \").length\n\
    \        val mangoFruits = fruitsInBasket - applesAndOrangesInBasket\n       \
    \ mangoFruits", "        val apples = n.toLong - s.toLong\n        val oranges\
    \ = s.toLong\n        val mango = apples + oranges\n        val appleFruits =\
    \ apples / 3\n        val orangeFruits = oranges / 3\n        val mangoFruits\
    \ = appleFruits + orangeFruits\n        mangoFruits", "        val apples = n.toInt\n\
    \        val oranges = s.toInt\n        val fruits = apples + oranges\n      \
    \  val mango = fruits - apples - oranges\n        mango", "        val apples\
    \ = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val numOfFruits = fruits.toSet.size\n\
    \        val numOfMangoFruits = fruits.filter(x => x % 2 == 0).size\n        numOfMangoFruits",
  "        val apples = n.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = apples - oranges\n        val fruits = apples + oranges + mangos\n       \
    \ fruits", "        val apples = n.toInt\n        val oranges = s.toInt\n    \
    \    val mangos = apples - oranges\n        val fruits = apples + oranges + mangos\n\
    \        fruits", "        val apples = n.toInt\n        val oranges = apples\
    \ - 1\n        val fruits = apples + oranges + 1\n        val basket = s.split(\"\
    \ \")\n        val appleFruits = basket.filter(_ == \"apples\").toList.size\n\
    \        val orangeFruits = basket.filter(_ == \"oranges\").toList.size\n    \
    \    val mangoFruits = basket.filter(_ == \"mango\").toList.size\n        val\
    \ totalFruits = appleFruits + orangeFruits + mangoFruits\n        val mangoFruitsPercentage\
    \ = totalFruits / fruits\n        val mangoFruitsPercentage = appleFruits / fruits\n\
    \        val mangoFruitsPercentage = orangeFruits / fruits\n        val mangoFruitsPercentage\
    \ = appleFruits / fruits\n        val mangoFruitsPercentage = orangeFruits / fruits\n\
    \        val mangoFruitsPercentage = appleFruits / fruits\n        val mangoFruitsPercentage\
    \ = orangeFruits / fruits\n        val mangoFruitsPercentage = appleFruits / fruits\n\
    \        val mangoFruitsPercentage = orangeFruits / fruits\n        val mangoFruitsPercentage\
    \ = appleFruits / fruits\n        val mangoFruitsPercentage = orangeFruits / fruits\n\
    \        val mangoFruitsPercentage = appleFruits / fruits\n        val mangoFruitsPercentage\
    \ = orangeFruits / fruits\n        val mangoFruitsPercentage = appleFruits / fruits\n\
    \        val mangoFruitsPercentage = orangeFruits / fruits\n        val mangoFruitsPercentage\
    \ = appleFruits / fruits\n        val mangoFruitsPercentage = orangeFruits / fruits\n\
    \        val mangoFruitsPercentage = appleFruits / fruits\n        val mangoFruitsPercentage\
    \ = orangeFruits / fruits\n        val mangoFruitsPercentage = appleFruits / fruits\n\
    \        val mangoFruitsPercentage = orangeFruits / fruits\n        val mangoFruitsPercentage\
    \ = appleFruits / fruits\n        val mangoFruitsPercentage = orangeFruits / fruits\n\
    \        val mangoF", "        val apples = s.split(\" \").map(_.toInt)\n    \
    \    val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val basket = new mutable.HashMap[String, Long]()\n\
    \        basket.put(\"apples\", apples.sum)\n        basket.put(\"oranges\", oranges.sum)\n\
    \        basket.put(\"mangos\", mangos.sum)\n        basket.put(\"total\", apples.sum\
    \ + oranges.sum + mangos.sum)\n        basket.get(\"total\").filter(_ > n).size",
  "        val apples = s.split(\"apples and \")\n        val oranges = s.split(\"\
    oranges and \")\n        val fruits = apples ++ oranges\n        val appleCount\
    \ = apples.map(_.toInt).sum\n        val orangeCount = oranges.map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(", "      \
    \  val apples = n.toInt\n        val oranges = s.toInt\n        val mangos = apples\
    \ - oranges\n        val fruits = apples + oranges + mangos\n        fruits",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val fruits = apples ++ oranges ++ mangos\n        val basket = fruits.toSet\n\
    \        val totalFruits = fruits.toSet.size\n        val totalApples = apples.toSet.size\n\
    \        val totalOranges = oranges.toSet.size\n        val totalMangos = mangos.toSet.size\n\
    \        val totalFruitsInBasket = fruits.toSet.size\n        val totalApplesInBasket\
    \ = apples.toSet.size\n        val totalOrangesInBasket = oranges.toSet.size\n\
    \        val totalMangoInBasket = mangos.toSet.size\n        val totalFruitsInBasketInBasket\
    \ = fruits.toSet.size\n        val totalApplesInBasketInBasket = apples.toSet.size\n\
    \        val totalOrangesInBasketInBasket = oranges.toSet.size\n        val totalMangoInBasketInBasket\
    \ = mangos.toSet.size\n        val totalFruitsInBasketInBasketInBasket = fruits.toSet.size\n\
    \        val totalApplesInBasketInBasketInBasket = apples.toSet.size\n       \
    \ val totalOrangesInBasketInBasketInBasket = oranges.toSet.size\n        val totalMangoInBasketInBasketInBasket\
    \ = mangos.toSet.size\n        val totalFruitsInBasketInBasketInBasketInBasket\
    \ = fruits.toSet.size\n        val totalApplesInBasketInBasketInBasketInBasket\
    \ = apples.toSet.size\n        val totalOrangesInBasketInBasketInBasketInBasket\
    \ = oranges.toSet.size\n        val totalMangoInBasketInBasketInBasketInBasket\
    \ = mangos.toSet.size\n        val totalFruitsInBasketInBasketInBasketInBasketInBasket\
    \ = fruits.toSet.size\n        val totalApplesInBasketInBasketInBasketInBasketInBasket\
    \ = apples.toSet.size\n        val totalOrangesInBasketInBasketInBasketInBasketInBasket\
    \ = oranges.toSet.size\n        val ", "        val apples = n.toLong - s.toLong\n\
    \        val oranges = s.toLong\n        val mangos = apples - oranges\n     \
    \   mangos", "        val apples = n.toInt\n        val oranges = s.split(\"and\"\
    ).last.split(\" \").last.toInt\n        val mangos = apples - oranges\n      \
    \  mangos", "        val apples = n.toInt\n        val oranges = s.toInt\n   \
    \     val mangos = apples - oranges\n        val fruits = apples + oranges + mangos\n\
    \        fruits", "        val apples = s.split(\" \").map(_.toInt)\n        val\
    \ oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples ++ oranges\n\
    \        val totalFruits = fruits.sum\n        val mangoFruits = fruits.filter(x\
    \ => x % 2 == 1).length\n        val totalMangoFruits = mangoFruits * n\n    \
    \    totalMangoFruits", "        val apples = n.toInt\n        val oranges = s.split(\"\
    \ \")(1).split(\"and\")(1).split(\"oranges\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and\")(1).split(\"apples\")(1).split(\"and\")(1).split(\"apples\")(1).split(\"\
    and", "        val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\"\
    \ \")(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n        val mango\
    \ = apples + oranges - fruits\n        mango", "        val apples = n.toLong\
    \ - s.toLong\n        val oranges = s.toLong\n        val mangos = apples + oranges\n\
    \        mangos", "        val apples = n.toInt\n        val oranges = s.toInt\n\
    \        val mangos = apples - oranges\n        val applesAndOranges = apples\
    \ + oranges\n        val fruits = applesAndOranges * 2\n        val mangoFruits\
    \ = fruits - mangos\n        mangoFruits", "        val apples = n.toLong - s.toLong\n\
    \        val oranges = s.toLong\n        val mango = apples - oranges\n      \
    \  val fruits = apples + oranges + mango\n        fruits", "        val apples\
    \ = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val totalFruits = fruits.sum\n\
    \        val mangoFruits = fruits.filter(_ % 2 == 0).sum\n        val totalMangoFruits\
    \ = mangoFruits + totalFruits - n\n        mangoFruits", "        val apples =\
    \ s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val mangos = fruits.filter(x\
    \ => x % 2 == 0)\n        val total = mangos.sum\n        val numOfMangos = mangos.size\n\
    \        val numOfFruits = fruits.size\n        val numOfApples = apples.size\n\
    \        val numOfOranges = oranges.size\n        val numOfFruitsPerApple = numOfFruits\
    \ / numOfApples\n        val numOfFruitsPerOrange = numOfFruits / numOfOranges\n\
    \        val numOfMangosPerOrange = numOfMangos.size / numOfOranges\n        val\
    \ numOfMangosPerApple = numOfMangos.size / numOfApples\n        val numOfMangosPerFruit\
    \ = numOfMangos.size / numOfFruits\n        val numOfMangosPerFruitPerApple =\
    \ numOfMangosPerFruit / numOfApples\n        val numOfMangosPerFruitPerOrange\
    \ = numOfMangosPerFruit / numOfOranges\n        val numOfMangosPerFruitPerFruitPerApple\
    \ = numOfMangosPerFruitPerFruitPerOrange / numOfApples\n        val numOfMangosPerFruitPerFruitPerOrange\
    \ = numOfMangosPerFruitPerFruitPerOrange / numOfOranges\n        val numOfMangosPerFruitPerFruitPerFruitPerApple\
    \ = numOfMangosPerFruitPerFruitPerFruitPerOrange / numOfFruits\n        val numOfMangosPerFruitPerFruitPerFruitPerOrange\
    \ = numOfMangosPerFruitPerFruitPerFruitPerFruitPerApple / numOfFruits\n      \
    \  val numOfMangosPerFruitPerFruitPerFruitPerFruitPerApple = numOfMangosPerFruitPerFruitPerFruitPerFruitPerOrange\
    \ / numOfFruits\n        val ", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = apples - oranges\n        mangos", "       \
    \ val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n\
    \        val fruits = s.split(\" \")(2).toLong\n        val mangos = fruits -\
    \ apples - oranges\n        mangos", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples\
    \ ++ oranges\n        val appleAndOranges = fruits.filter(f => f >= 0 && f <=\
    \ 6)\n        val mangos = fruits.filter(f => f >= 7 && f <= 10)\n        val\
    \ appleAndOrangesAndMangos = appleAndOranges.filter(f => f >= 0 && f <= 6)\n \
    \       appleAndOrangesAndMangos.length", "        val apples = s.split(\" \"\
    ).map(_.toInt).sum\n        val oranges = s.split(\" \").map(_.toInt).sum\n  \
    \      val fruits = s.split(\" \").map(_.toInt).sum\n        val mangos = n -\
    \ apples - oranges - fruits\n        mangos", "        val apples = s.split(\"\
    apples and \")(1).trim\n        val oranges = s.split(\"oranges and \")(1).trim\n\
    \        val mangos = s.split(\"mango and \")(1).trim\n        val applesAndOranges\
    \ = apples + oranges\n        val mangoAndOranges = mangos + oranges\n       \
    \ val applesAndMangos = apples + mangos\n        val mangoAndApples = mangos +\
    \ apples\n        val applesAndOrangesAndMangos = apples + oranges + mangos\n\
    \        val mangoAndOrangesAndApples = mangos + oranges + apples\n        val\
    \ applesAndOrangesAndMangoAndApples = apples + oranges + mangos + apples\n   \
    \     val mangoAndOrangesAndAppleAndMangos = mangos + oranges + apples + mangos\n\
    \        val applesAndOrangesAndMangoAndAppleAndMangos = apples + oranges + mangos\
    \ + apples + mangos\n        val mangoAndOrangesAndAppleAndMangoAndApples = mangos\
    \ + oranges + apples + mangos + apples\n        val applesAndOrangesAndMangoAndAppleAndMangoAndApples\
    \ = apples + oranges + mangos + apples + mangos + apples\n        val mangoAndOrangesAndAppleAndMangoAndAppleAndMangos\
    \ = mangos + oranges + apples + mangos + apples + mangos\n        val applesAndOrangesAndMangoAndAppleAndMangoAndAppleAndMangos\
    \ = apples + oranges + mangos + apples + mangos + apples + mangos\n        val\
    \ mangoAndOrangesAndAppleAndMangoAndAppleAndMangoAndAppleAndMangos = mangos +\
    \ oranges + apples + mangos + apples + mangos + apples + mangos\n        val applesAndOrangesAndMangoAndAppleAndMangoAndAppleAndMangoAndAppleAndMangos\
    \ = apples + oranges + mangos + apples + mangos + apples + mangos + apples + mangos\
    \ + apples\n        val mangoAndOrangesAndAppleAndMangoAndAppleAndMangoAndAppleAndMangoAndAppleAndMangos\
    \ = mangos + oranges + apples + mangos + apples + mangos + apples + mangos + apples\
    \ + mangos + apples\n        val applesAndOrangesAndMangoAnd", "        val apples\
    \ = n.toInt\n        val oranges = s.toInt\n        val fruits = apples + oranges\n\
    \        val mangos = fruits - apples - oranges\n        mangos", "        val\
    \ apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val mango = apples.filter(_ % 2 == 0).length\n        val totalApples\
    \ = apples.sum\n        val totalOranges = oranges.sum\n        val totalFruits\
    \ = apples.size + oranges.size\n        val totalMango = mango\n        val totalFruitMango\
    \ = totalMango + mango\n        val totalFruitOranges = totalFruits - mango\n\
    \        val totalFruitApples = totalFruits - mango\n        val totalFruitTotal\
    \ = totalFruits + mango\n        val totalFruitTotalMango = totalFruitTotal -\
    \ mango\n        val totalFruitTotalOranges = totalFruitTotal - mango\n      \
    \  val totalFruitTotalApples = totalFruitTotal - mango\n        val totalFruitTotal\
    \ = totalFruitTotal + mango\n        val totalFruitTotalMango = totalFruitTotal\
    \ - mango\n        val totalFruitTotalOranges = totalFruitTotal - mango\n    \
    \    val totalFruitTotalApples = totalFruitTotal - mango\n        val totalFruitTotal\
    \ = totalFruitTotal + mango\n        val totalFruitTotalMango = totalFruitTotal\
    \ - mango\n        val totalFruitTotalOranges = totalFruitTotal - mango\n    \
    \    val totalFruitTotalApples = totalFruitTotal - mango\n        val totalFruitTotal\
    \ = totalFruitTotal + mango\n        val totalFruitTotalMango = totalFruitTotal\
    \ - mango\n        val totalFruitTotalOranges = totalFruitTotal - mango\n    \
    \    val totalFruitTotalApples = totalFruitTotal - mango\n        val totalFruitTotal\
    \ = totalFruitTotal + mango\n        val totalFruitTotalMango = totalFruitTotal\
    \ - mango\n        val totalFruitTotalOranges = totalFruitTotal - mango\n    \
    \    val totalFruitTotalApples = totalFruitTotal - mango\n        val totalFruitTotal\
    \ = totalFruitTotal + mango\n", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges ++ mangos\n       \
    \ val appleCount = apples.sum\n        val orangeCount = oranges.sum\n       \
    \ val mangoCount = mangos.sum\n        val fruitCount = fruits.sum\n        val\
    \ appleSum = apples.sum\n        val orangeSum = oranges.sum\n        val mangoSum\
    \ = mangos.sum\n        val fruitSum = fruits.sum\n        val appleSum = apples.sum\n\
    \        val orangeSum = oranges.sum\n        val mangoSum = mangos.sum\n    \
    \    val fruitSum = fruits.sum\n        val appleSum = apples.sum\n        val\
    \ orangeSum = oranges.sum\n        val mangoSum = mangos.sum\n        val fruitSum\
    \ = fruits.sum\n        val appleSum = apples.sum\n        val orangeSum = oranges.sum\n\
    \        val mangoSum = mangos.sum\n        val fruitSum = fruits.sum\n      \
    \  val appleSum = apples.sum\n        val orangeSum = oranges.sum\n        val\
    \ mangoSum = mangos.sum\n        val fruitSum = fruits.sum\n        val appleSum\
    \ = apples.sum\n        val orangeSum = oranges.sum\n        val mangoSum = mangos.sum\n\
    \        val fruitSum = fruits.sum\n        val appleSum = apples.sum\n      \
    \  val orangeSum = oranges.sum\n        val mangoSum = mangos.sum\n        val\
    \ fruitSum = fruits.sum\n        val appleSum = apples.sum\n        val orangeSum\
    \ = oranges.sum\n        val mangoSum = mangos.sum\n        val fruitSum = fruits.sum\n\
    \        val appleSum = apples.sum\n        val orangeSum = oranges.sum\n    \
    \    val mangoSum = mangos.sum\n        val fruitSum = fruits.sum\n        val\
    \ appleSum = apples.sum\n        val orangeSum = oranges.sum\n        val mangoSum\
    \ = mangos.sum\n        val fruitSum = fruits.sum\n        val appleSum = apples.sum\n\
    \        val orangeSum = oranges.sum\n        val mangoSum = mangos.sum\n    \
    \    val fruitSum = fruits.sum\n        val appleSum = apples.sum\n        val\
    \ orangeSum = oranges.sum\n", "        val apples = s.split(\" \")(0)\n      \
    \  val oranges = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n \
    \       val applesAndOranges = apples + \" \" + oranges\n        val fruitsInBasket\
    \ = fruits.split(\" \")\n        val applesAndOrangesInBasket = applesAndOranges.split(\"\
    \ \")\n        val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n\
    \        val fruitsInBasketCount = fruitsInBasket.length\n        val mangoFruits\
    \ = fruitsInBasketCount - applesAndOrangesInBasketCount\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.length\n        val applesAndOrangesInBasketCount\
    \ = applesAnd", "        val apples = n.toInt\n        val oranges = s.toInt\n\
    \        val fruits = apples + oranges\n        val mangos = fruits - apples -\
    \ oranges\n        mangos", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = apples - oranges\n        val fruits = apples\
    \ + oranges + mangos\n        fruits", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples\
    \ ++ oranges\n        val mangos = fruits.filter(_ % 2 == 0)\n        fruits.size\
    \ - mangos.size", "        val apples = n.toInt\n        val oranges = apples\
    \ - 1\n        val mangos = oranges - 1\n        val fruits = s.split(\" \")\n\
    \        val fruitCount = fruits.count\n        val appleCount = fruits.filter(_.contains(\"\
    apple\")).count\n        val orangeCount = fruits.filter(_.contains(\"orange\"\
    )).count\n        val mangoCount = fruits.filter(_.contains(\"mango\")).count\n\
    \        val totalCount = fruitCount * appleCount + fruitCount * orangeCount +\
    \ fruitCount * mangoCount\n        val mangoFruits = totalCount - fruitCount *\
    \ mangoCount\n        mangoFruits", "        val apples = s.split(\" \")(0)\n\
    \        val oranges = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n\
    \        val appleAndOranges = apples + \" \" + oranges\n        val fruitsInBasket\
    \ = fruits.split(\"and\").length\n        val mangos = fruitsInBasket - fruitsInBasket.toLong\n\
    \        val appleAndOrangesAndMangos = appleAndOranges + \" and \" + mangos\n\
    \        fruitsInBasket.toLong", "        val apples = s.split(\" \")(0)\n   \
    \     val oranges = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n\
    \        val applesAndOranges = apples + \" \" + oranges\n        val fruitsInBasket\
    \ = fruits.split(\"and\").map(_.trim).map(_.toInt)\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.split(\"and\").map(_.trim).map(_.toInt)\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.size\n        val fruitsInBasketCount = fruitsInBasket.size\n\
    \        val mangoFruitsInBasketCount = fruitsInBasketCount - applesAndOrangesInBasketCount\n\
    \        fruitsInBasketCount - applesAndOrangesInBasketCount", "        val apples\
    \ = s.split(\"apples and \")(1).trim\n        val oranges = s.split(\"oranges\
    \ and \")(1).trim\n        val mangos = s.split(\"mango and \")(1).trim\n    \
    \    val applesAndOranges = apples + oranges\n        val applesAndMangos = apples\
    \ + mangos\n        val orangesAndMangos = oranges + mangos\n        val applesAndOrangesAndMangos\
    \ = applesAndOranges + mangos\n        val applesAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOranges + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangosAndOrangesAndMangos + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOranges + mangos\n        val\
    \ applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges =\
    \ applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos + oranges\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos + mangos\n\
    \        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOranges\
    \ + oranges\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ = applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndMangos\
    \ + mangos\n        val applesAndOrangesAndMangosAndOrangesAndMangosAndOrangesAndM",
  "        val apples = n.toLong - s.split(\" \").map(_.toLong).sum\n        val oranges\
    \ = s.split(\" \").map(_.toLong).sum\n        val mangos = apples - oranges\n\
    \        mangos", "        val apples = n.toLong - s.toLong\n        val oranges\
    \ = s.toLong - apples.toLong\n        val mangos = apples.toLong - oranges.toLong\n\
    \        mangos", "        val apples = s.split(\" \").map(_.toInt)\n        val\
    \ oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n\
    \        val basket = new mutable.HashMap[String, Long]()\n        basket += (\"\
    apples\" -> apples.sum)\n        basket += (\"oranges\" -> oranges.sum)\n    \
    \    basket += (\"mangos\" -> mangos.sum)\n        val totalFruits = apples.sum\
    \ + oranges.sum + mangos.sum\n        val totalFruitsCount = apples.sum + oranges.sum\
    \ + mangos.sum\n        val mangoFruits = totalFruits - totalFruitsCount\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n   \
    \     val mango", "        val apples = s.split(\" \")(0)\n        val oranges\
    \ = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n        val applesAndOranges\
    \ = apples + \" \" + oranges\n        val fruitsInBasket = fruits.split(\"and\"\
    ).map(_.trim).map(_.toInt)\n        val applesAndOrangesAndFruits = applesAndOranges\
    \ + \" \" + fruits\n        val applesAndOrangesAndFruitsArray = applesAndOrangesAndFruits.split(\"\
    and\").map(_.trim).map(_.toInt)\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArray.length\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndFruitsArrayLength - 1\n        val applesAndOrangesAndFruitsArrayLength\
    \ = applesAndOrangesAndF", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val fruits = apples + oranges\n        val mangos = fruits\
    \ - apples - oranges\n        mangos", "        val apples = n.toLong - s.split(\"\
    \ \").map(_.toLong).sum\n        val oranges = s.split(\" \").map(_.toLong).sum\n\
    \        val mangos = apples - oranges\n        mangos", "        val apples =\
    \ n.toLong - s.toLong\n        val oranges = s.toLong\n        val mangos = apples\
    \ - oranges\n        mangos", "        val apples = s.split(\" \")(0).toLong\n\
    \        val oranges = s.split(\" \")(1).toLong\n        val fruits = s.split(\"\
    \ \")(2).toLong\n        val applesAndOranges = apples + oranges\n        val\
    \ fruitsInBasket = fruits - applesAndOranges\n        val mangoFruits = fruitsInBasket\
    \ - applesAndOranges\n        mangoFruits", "        val apples = n.toLong - s.toLong\n\
    \        val oranges = s.toLong - apples.toLong\n        val mangos = apples -\
    \ oranges\n        mangos", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val fruits = apples + oranges\n        val mangos = fruits\
    \ - apples - oranges\n        mangos", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val basket = new mutable.HashMap[String, Long]()\n\
    \        basket += (\"apples\" -> apples.sum)\n        basket += (\"oranges\"\
    \ -> oranges.sum)\n        basket += (\"mangos\" -> mangos.sum)\n        val total\
    \ = apples.sum + oranges.sum + mangos.sum\n        val count = basket.filter(_._2\
    \ > 0).map(_._1).sum\n        val mangos = count - total\n        val apples =\
    \ mangos - oranges.sum\n        apples + mangos", "        val apples = n.toInt\n\
    \        val oranges = apples - 1\n        val mangos = oranges - 1\n        val\
    \ fruits = s.split(\" \")\n        val fruitCount = fruits.map(_.toInt).sum\n\
    \        val appleCount = fruits.filter(_.contains(\"apple\")).map(_.toInt).sum\n\
    \        val orangeCount = fruits.filter(_.contains(\"orange\")).map(_.toInt).sum\n\
    \        val mangoCount = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val mangoFruits = fruits.filter(_.contains(\"mango\")).map(_.toInt).sum\n\
    \        val appleFruits = fruits.filter(_.contains(\"apple\")).map(_.toInt).sum\n\
    \        val orangeFruits = fruits.filter(_.contains(\"orange\")).map(_.toInt).sum\n\
    \        val totalFruits = fruitCount * appleCount + fruitCount * orangeCount\
    \ + fruitCount * mangoCount + fruitCount * mangoFruits + fruitCount * appleFruits\
    \ + fruitCount * orangeFruits\n        val mangoFruitCount = fruitCount * mangoFruits\n\
    \        val appleFruitCount = fruitCount * appleFruits\n        val orangeFruitCount\
    \ = fruitCount * orangeFruits\n        val totalFruitCount = fruitCount * appleCount\
    \ + fruitCount * orangeCount + fruitCount * mangoCount + fruitCount * mangoFruits\
    \ + fruitCount * appleFruits + fruitCount * orangeFruits\n        val mangoFruitCount\
    \ = fruitCount * mangoFruits\n        val appleFruitCount = fruitCount * appleFruits\n\
    \        val orangeFruitCount = fruitCount * orangeFruits\n        val totalFruitCount\
    \ = fruitCount * appleCount + fruitCount * orangeCount + fruitCount * mangoCount\
    \ + fruitCount * mangoFruits + fruitCount * appleFruits + fruitCount * orangeFruits\n\
    \        val mangoFruitCount = fruitCount * mangoFruits\n        val appleFruitCount\
    \ = fruitCount * appleFruits\n        val orangeFruitCount = fruitCount * orangeFruits\n\
    \        val totalFruitCount = fruitCount * appleCount + fruitCount * orangeCount\
    \ + fruitCount * mangoCount + fruitCount * mangoFruits + fruitCount * appleFru",
  "        val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\"\
    \ \")(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n        val mangos\
    \ = apples + oranges - fruits\n        mangos", "        val apples = n.toInt\n\
    \        val oranges = s.toInt\n        val fruits = apples + oranges\n      \
    \  val mangos = fruits - apples - oranges\n        mangos", "        val apples\
    \ = n.toInt\n        val oranges = s.toInt\n        val mangos = apples - oranges\n\
    \        val fruits = apples + oranges + mangos\n        fruits", "        val\
    \ apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val appleCount = apples.sum\n\
    \        val orangeCount = oranges.sum\n        val mangoCount = fruits.filter(_\
    \ % 2 == 0).sum\n        val mangoFruits = mangoCount / fruits.sum\n        val\
    \ totalFruits = fruits.sum\n        val mangoFruitCount = mangoCount / totalFruits\n\
    \        val mangoFruitCount = mangoCount / fruits.sum\n        val mangoFruitCount\
    \ = mangoCount / fruits.sum\n        val mangoFruitCount = mangoCount / fruits.sum\n\
    \        val mangoFruitCount = mangoCount / fruits.sum\n        val mangoFruitCount\
    \ = mangoCount / fruits.sum\n        val mangoFruitCount = mangoCount / fruits.sum\n\
    \        val mangoFruitCount = mangoCount / fruits.sum\n        val mangoFruitCount\
    \ = mangoCount / fruits.sum\n        val mangoFruitCount = mangoCount / fruits.sum\n\
    \        val mangoFruitCount = mangoCount / fruits.sum\n        val mangoFruitCount\
    \ = mangoCount / fruits.sum\n        val mangoFruitCount = mangoCount / fruits.sum\n\
    \        val mangoFruitCount = mangoCount / fruits.sum\n        val mangoFruitCount\
    \ = mangoCount / fruits.sum\n        val mangoFruitCount = mangoCount / fruits.sum\n\
    \        val mangoFruitCount = mangoCount / fruits.sum\n        val mangoFruitCount\
    \ = mangoCount / fruits.sum\n        val mangoFruitCount = mangoCount / fruits.sum\n\
    \        val mangoFruitCount = mangoCount / fruits.sum\n        val mangoFruitCount\
    \ = mangoCount / fruits.sum\n        val mangoFruitCount = mangoCount / fruits.sum\n\
    \        val mangoFruitCount = mangoCount / fruits.sum\n        val mangoFruitCount\
    \ = mangoCount / fruits.sum\n        val mangoFruitCount = mangoCount / fruits.sum\n\
    \        val mangoFruitCount = mangoCount / fruits.sum\n        ", "        val\
    \ apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n      \
    \  val mangos = s.split(\" \")(2)\n        val applesAndOranges = apples + \"\
    \ \" + oranges\n        val applesAndOrangesAndMangos = apples + \" \" + oranges\
    \ + \" and \" + mangos\n        val applesAndOrangesAndMangosAndApples = apples\
    \ + \" \" + oranges + \" and \" + mangos + \" and \" + apples\n        val applesAndOrangesAndMangosAndApplesAndOranges\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" and \" + apples + \" \"\
    \ + oranges\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" and \" + apples + \" \"\
    \ + oranges + \" and \" + mangos\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" and \" + apples + \" \"\
    \ + oranges + \" and \" + mangos + \" and \" + apples\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" and \" + apples + \" \"\
    \ + oranges + \" and \" + mangos + \" and \" + apples + \" \" + oranges\n    \
    \    val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangos\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" and \" + apples + \" \"\
    \ + oranges + \" and \" + mangos + \" and \" + apples + \" \" + oranges + \" and\
    \ \" + mangos\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApples\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" and \" + apples + \" \"\
    \ + oranges + \" and \" + mangos + \" and \" + apples + \" \" + oranges + \" and\
    \ \" + mangos + \" and \" + apples\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOranges\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" and \" + apples + \" \"\
    \ + oranges + \" and \" + mangos + \" and \" + apples + \" \" + oranges + \" and\
    \ \" + mangos + \" and \" + apples + \" \" + oranges\n        val applesAndOrangesAndMangosAndApplesAndOrangesAndMangosAndApplesAndOrange",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val mangos = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val applesAndOrangesAndMangos = apples + \" \" +\
    \ oranges + \" and \" + mangos\n        val applesAndOrangesAndMangosInBasket\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" in basket\"\n        val\
    \ applesAndOrangesAndMangosInBasketInBasket = apples + \" \" + oranges + \" and\
    \ \" + mangos + \" in basket in basket\"\n        val applesAndOrangesAndMangosInBasketInBasketInBasket\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" in basket in basket in\
    \ basket\"\n        val applesAndOrangesAndMangosInBasketInBasketInBasketInBasket\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" in basket in basket in\
    \ basket in basket\"\n        val applesAndOrangesAndMangosInBasketInBasketInBasketInBasketInBasket\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" in basket in basket in\
    \ basket in basket in basket\"\n        val applesAndOrangesAndMangosInBasketInBasketInBasketInBasketInBasket\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" in basket in basket in\
    \ basket in basket in basket in basket\"\n        val applesAndOrangesAndMangosInBasketInBasketInBasketInBasketInBasketInBasket\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" in basket in basket in\
    \ basket in basket in basket in basket in basket\"\n        val applesAndOrangesAndMangosInBasketInBasketInBasketInBasketInBasketInBasketInBasket\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" in basket in basket in\
    \ basket in basket in basket in basket in basket in basket\"\n        val applesAndOrangesAndMangosInBasketInBasketInBasketInBasketInBasketInBasketInBasketInBasket\
    \ = apples + \" \" + oranges + \" and \" + mangos + \" in basket in basket in\
    \ basket in basket in basket in basket in ", "        val apples = n.toInt\n \
    \       val oranges = s.toInt\n        val fruits = apples + oranges\n       \
    \ val mangos = fruits - apples - oranges\n        mangos", "        val apples\
    \ = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits\
    \ = s.split(\" \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n\
    \        val fruitsInBasket = fruits.split(\" \").length\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.split(\" \").length\n        val mangoFruits = fruitsInBasket\
    \ - applesAndOrangesInBasket\n        val applesAndOrangesInBasketInt = applesAndOrangesInBasket.toInt\n\
    \        val mangoFruitsInBasket = mangoFruits.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n\
    \        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n\
    \        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n\
    \        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n\
    \        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n\
    \        val mangoFruitsInBasketInt = mangoFruitsInBasket.toInt\n        val mangoFruitsInBasketInt\
    \ = mangoFruitsInBaske", "        val apples = n.toInt\n        val oranges =\
    \ s.split(\" \").map(_.toInt).sum\n        val mangos = apples - oranges\n   \
    \     mangos", "        val apples = s.split(\" \").map(_.toInt)\n        val\
    \ oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples ++ oranges\n\
    \        val totalFruits = fruits.sum\n        val mangoFruits = fruits.filter(x\
    \ => x < totalFruits)\n        val totalMangoFruits = mangoFruits.sum\n      \
    \  mangoFruits", "        val apples = n.toInt\n        val oranges = s.split(\"\
    and\").map(_.toInt).sum\n        val mangos = apples - oranges\n        mangos",
  "        val apples = n.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = apples - oranges\n        val basket = s.split(\" \")\n        val fruits\
    \ = basket.filter(_ != \"apples\" && _ != \"oranges\" && _ != \"mango\")\n   \
    \     fruits.size match {\n            case 0 => mangos\n            case 1 =>\
    \ fruits.head.toLong\n            case _ => fruits.toSet.size match {\n      \
    \          case 0 => mangos\n                case 1 => fruits.head.toLong\n  \
    \              case _ => fruits.toList.size match {\n                    case\
    \ 0 => mangos\n                    case 1 => fruits.head.toLong\n            \
    \        case _ => fruits.toSeq.size match {\n                        case 0 =>\
    \ mangos\n                        case 1 => fruits.head.toLong\n             \
    \           case _ => fruits.toStream.size match {\n                         \
    \   case 0 => mangos\n                            case 1 => fruits.head.toLong\n\
    \                            case _ => fruits.toIterable.size match {\n      \
    \                          case 0 => mangos\n                                case\
    \ 1 => fruits.head.toLong\n                                case _ => fruits.toStream.size\
    \ match {\n                                    case 0 => mangos\n            \
    \                        case 1 => fruits.head.toLong\n                      \
    \              case _ => fruits.toStream.size match {\n                      \
    \                  case 0 => mangos\n                                        case\
    \ 1 => fruits.head.toLong\n                                        case _ => fruits.toStream.size\
    \ match {\n                                            case 0 => mangos\n    \
    \                                        case 1 => fruits.head.toLong\n      \
    \                                      case _ => fruits.toStream.size match {\n\
    \                                                case 0 => mangos\n          \
    \                                      case 1 => fruits.head.toLong\n        \
    \                                        case _ => fruits.toStream.size match\
    \ {\n                                                    case 0 => mangos\n  \
    \                                                  case 1 => fruits.head.toLong\n\
    \                                                    case _ => fruits.toStream.size\
    \ match {\n                                                        case 0 => mangos\n\
    \                                                        case 1 => fruits.head.toLong\n\
    \                                                        case _ => fruits.toStream.size\
    \ match {\n                                                            case 0\
    \ => mangos\n                                                            case\
    \ 1 => fruits.head.toLong\n                                                  \
    \          case _ => fruits.toStream.size match {\n                          \
    \                                      case 0 => mangos\n                    \
    \                                            case 1 => fruits.head.toLong\n  \
    \                                                              case _ => fruits.toStream.size\
    \ match {\n                                                                  \
    \  case 0 => mangos\n                                                        \
    \            case 1 => fruits.head.toLong\n                                  \
    \                                  case _ => fruits.toStream.size match {\n  \
    \                                                                      case 0\
    \ => mangos\n                                                                \
    \        case 1 => fruits.head.to", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val mangos = apples.filter(x\
    \ => x % 2 == 0).sum\n        val totalFruits = apples.sum + oranges.sum + mangos\n\
    \        val fruits = apples.toSet + oranges.toSet + mangos.toSet\n        val\
    \ fruitsCount = fruits.toSet.size\n        val fruitsPerApple = apples.toSet.size\
    \ / totalFruits\n        val fruitsPerOrange = oranges.toSet.size / totalFruits\n\
    \        val fruitsPerMango = mangos.toSet.size / totalFruits\n        val fruitsPerAppleAndOrange\
    \ = fruitsPerApple * fruitsPerOrange\n        val fruitsPerAppleAndMango = fruitsPerApple\
    \ * fruitsPerMango\n        val fruitsPerOrangeAndMango = fruitsPerOrange * fruitsPerMango\n\
    \        val fruitsPerAppleAndOrangeAndMango = fruitsPerAppleAndOrange * fruitsPerAppleAndMango\n\
    \        val fruitsPerOrangeAndAppleAndMango = fruitsPerOrangeAndMango * fruitsPerAppleAndOrange\n\
    \        val fruitsPerAppleAndOrangeAndAppleAndMango = fruitsPerAppleAndOrangeAndMango\
    \ * fruitsPerOrangeAndAppleAndMango\n        val fruitsPerOrangeAndAppleAndOrangeAndMango\
    \ = fruitsPerOrangeAndAppleAndMango * fruitsPerAppleAndOrangeAndMango\n      \
    \  val fruitsPerAppleAndOrangeAndAppleAndOrangeAndMango = fruitsPerAppleAndOrangeAndAppleAndMango\
    \ * fruitsPerOrangeAndOrangeAndMango\n        val fruitsPerOrangeAndAppleAndOrangeAndAppleAndMango\
    \ = fruitsPerOrangeAndAppleAndOrangeAndMango * fruitsPerAppleAndOrangeAndAppleAndMango\n\
    \        val fruitsPerAppleAndOrangeAndAppleAndOrangeAndAppleAndMango = fruitsPerAppleAndOrangeAndAppleAndOrangeAndMango\
    \ * fruitsPerOrangeAndOrangeAndAppleAndMango\n        val fruitsPerOrangeAndAppleAndOrangeAndAppleAndOrange",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val fruitsInBasket = fruits.split(\"and\").map(_.trim).map(_.toInt)\n\
    \        val fruitsInBasketCount = fruitsInBasket.size\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.split(\"and\").map(_.trim).map(_.toInt)\n        val applesAndOrangesInBasketCount\
    \ = applesAndOrangesInBasket.size\n        val mangoFruits = fruitsInBasketCount\
    \ - applesAndOrangesInBasketCount\n        mangoFruits", "        val apples =\
    \ s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits\
    \ = s.split(\" \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n\
    \        val fruitsAndOranges = fruits + \" \" + oranges\n        val fruitsAndApples\
    \ = fruits + \" \" + apples\n        val applesAndMango = apples + \" \" + mango\n\
    \        val fruitsAndMango = fruits + \" \" + mango\n        val fruitsAndMangoAndApples\
    \ = fruits + \" \" + mango + \" \" + apples\n        val applesAndMangoAndOranges\
    \ = apples + \" \" + mango + \" \" + oranges\n        val fruitsAndMangoAndOranges\
    \ = fruits + \" \" + mango + \" \" + oranges\n        val fruitsAndMangoAndOrangesAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApplesAndOranges\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges\n\
    \        val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMango = fruits + \"\
    \ \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges + \" \" + mango\n\
    \        val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMangoAndApples = fruits\
    \ + \" \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges + \" \"\
    \ + mango + \" \" + apples\n        val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMangoAndApplesAndOranges\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges\
    \ + \" \" + mango + \" \" + apples + \" \" + oranges\n        val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMango\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges\
    \ + \" \" + mango + \" \" + apples + \" \" + oranges + \" \" + mango\n       \
    \ val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples\
    \ = fruits + \" \" + mango + \" \" + oranges + \" \" + apples + \" \" + oranges\
    \ + \" \" + mango + \" \" + apples + \" \" + oranges + \" \" + mango + \" \" +\
    \ apples\n        val fruitsAndMangoAndOrangesAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges\
    \ = fruits + \" \" + mang", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = apples - oranges\n        val basket = new mutable.HashMap[String,\
    \ Long]()\n        basket.put(\"apples\", apples)\n        basket.put(\"oranges\"\
    , oranges)\n        basket.put(\"mangos\", mangos)\n        basket.size", "  \
    \      val apples = s.split(\" \").map(_.toInt).sum\n        val oranges = s.split(\"\
    \ \").map(_.toInt).sum\n        val mangos = s.split(\" \").map(_.toInt).sum\n\
    \        val basket = new mutable.HashMap[String, Long]()\n        basket.put(\"\
    apples\", apples)\n        basket.put(\"oranges\", oranges)\n        basket.put(\"\
    mangos\", mangos)\n        val fruits = basket.filter(_._2 > 0).map(_._1)\n  \
    \      fruits.count(_ == \"mangos\")", "        val apples = n.toInt\n       \
    \ val oranges = s.split(\" \").map(_.toInt).sum\n        val mangos = apples -\
    \ oranges\n        mangos", "        val apples = s.split(\" \")(0)\n        val\
    \ oranges = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n      \
    \  val applesAndOranges = apples + \" \" + oranges\n        val fruitsAndApples\
    \ = fruits + \" \" + apples\n        val fruitsAndOranges = fruits + \" \" + oranges\n\
    \        val applesAndOrangesAndMango = apples + \" \" + oranges + \" and \" +\
    \ fruits\n        val fruitsAndApplesAndMango = fruits + \" \" + apples + \" and\
    \ \" + fruits\n        val applesAndOrangesAndMangoAndMango = apples + \" \" +\
    \ oranges + \" and \" + fruits + \" and \" + fruits\n        val fruitsAndApplesAndMangoAndMango\
    \ = fruits + \" \" + apples + \" and \" + fruits + \" and \" + fruits\n      \
    \  val applesAndOrangesAndMangoAndMangoAndMango = apples + \" \" + oranges + \"\
    \ and \" + fruits + \" and \" + fruits + \" and \" + fruits\n        val fruitsAndApplesAndMangoAndMangoAndMango\
    \ = fruits + \" \" + apples + \" and \" + fruits + \" and \" + fruits + \" and\
    \ \" + fruits\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMango =\
    \ apples + \" \" + oranges + \" and \" + fruits + \" and \" + fruits + \" and\
    \ \" + fruits + \" and \" + fruits\n        val fruitsAndApplesAndMangoAndMangoAndMangoAndMango\
    \ = fruits + \" \" + apples + \" and \" + fruits + \" and \" + fruits + \" and\
    \ \" + fruits + \" and \" + fruits\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMango\
    \ = apples + \" \" + oranges + \" and \" + fruits + \" and \" + fruits + \" and\
    \ \" + fruits + \" and \" + fruits + \" and \" + fruits\n        val fruitsAndApplesAndMangoAndMangoAndMangoAndMangoAndMango\
    \ = fruits + \" \" + apples + \" and \" + fruits + \" and \" + fruits + \" and\
    \ \" + fruits + \" and \" + fruits + \" and \" + fruits\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMango\
    \ = apples + \" \" + oranges + \" and \" + fruits + \" and \" + fruits + \" and\
    \ \" + fruits + \" and \" + fruits + \" and \" + fruits\n        val fruitsAndApplesAndMangoAndMangoAnd",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges\n        val basket\
    \ = fruits.toSet\n        val mangos = fruits.filter(_ % 2 == 0)\n        val\
    \ count = mangos.size\n        val totalFruits = fruits.sum\n        val totalMangos\
    \ = mangos.sum\n        val totalMangoFruits = mangos.size\n        val totalMangoFruitsPerApple\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerOrange\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerMango\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerOrangePerApple\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerOrangePerOrange\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerMangoPerApple\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerMangoPerOrange\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerMangoPerMango\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerMangoPerOrangePerApple\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerMangoPerOrangePerOrange\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerMangoPerMangoPerApple\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerMangoPerMangoPerOrange\
    \ = mangos.map(x => x/totalMangoFruits).sum\n        val totalMangoFruitsPerMangoPerMangoPer",
  "        val apples = n.toInt\n        val oranges = apples.toLong - n.toLong\n\
    \        val fruits = apples + oranges\n        val mangoes = fruits.toLong -\
    \ apples.toLong\n        mangoes", "        val apples = s.split(\" \")(0)\n \
    \       val oranges = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n\
    \        val applesAndOranges = apples + \" \" + oranges\n        val fruitsInBasket\
    \ = fruits.split(\" \").length\n        val mangos = fruitsInBasket - oranges\n\
    \        val applesAndOrangesInBasket = applesAndOranges.split(\" \").length\n\
    \        val mangoFruitsInBasket = mangos - applesAndOrangesInBasket\n       \
    \ mangoFruitsInBasket", "        val apples = n.toInt\n        val oranges = s.split(\"\
    \ \").last.toInt\n        val mangos = apples - oranges\n        val fruits =\
    \ apples + oranges + mangos\n        fruits", "        val apples = n.toInt\n\
    \        val oranges = apples - 1\n        val mangos = oranges - 1\n        val\
    \ fruits = s.split(\" \")\n        val appleFruits = fruits.filter(_.contains(\"\
    apples\")).map(_.toInt)\n        val orangeFruits = fruits.filter(_.contains(\"\
    oranges\")).map(_.toInt)\n        val mangoFruits = fruits.filter(_.contains(\"\
    mango\")).map(_.toInt)\n        val appleFruitsSum = appleFruits.sum\n       \
    \ val orangeFruitsSum = orangeFruits.sum\n        val mangoFruitsSum = mangoFruits.sum\n\
    \        val appleFruitsCount = appleFruits.length\n        val orangeFruitsCount\
    \ = orangeFruits.length\n        val mangoFruitsCount = mangoFruits.length\n \
    \       val appleFruitsSum = appleFruits.sum\n        val orangeFruitsSum = orangeFruits.sum\n\
    \        val mangoFruitsSum = mangoFruits.sum\n        val appleFruitsCount =\
    \ appleFruits.length\n        val orangeFruitsCount = orangeFruits.length\n  \
    \      val mangoFruitsCount = mangoFruits.length\n        val appleFruitsSum =\
    \ appleFruits.sum\n        val orangeFruitsSum = orangeFruits.sum\n        val\
    \ mangoFruitsSum = mangoFruits.sum\n        val appleFruitsCount = appleFruits.length\n\
    \        val orangeFruitsCount = orangeFruits.length\n        val mangoFruitsCount\
    \ = mangoFruits.length\n        val appleFruitsSum = appleFruits.sum\n       \
    \ val orangeFruitsSum = orangeFruits.sum\n        val mangoFruitsSum = mangoFruits.sum\n\
    \        val appleFruitsCount = appleFruits.length\n        val orangeFruitsCount\
    \ = orangeFruits.length\n        val mangoFruitsCount = mangoFruits.length\n \
    \       val appleFruitsSum = appleFruits.sum\n        val orangeFruitsSum = orangeFruits.sum\n\
    \        val mangoFruitsSum = mangoFruits.sum\n        val appleFruitsCount =\
    \ appleFruits.length", "        val apples = s.split(\" \").map(_.toInt)\n   \
    \     val oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples ++\
    \ oranges\n        val appleCount = apples.sum\n        val orangeCount = oranges.sum\n\
    \        val mangoCount = fruits.filter(_ % 2 == 0).sum\n        val totalCount\
    \ = appleCount + orangeCount + mangoCount\n        val totalFruits = fruits.sum\n\
    \        val mangoFruits = fruits.filter(_ % 2 == 0).sum\n        val totalMangoFruits\
    \ = fruits.filter(_ % 2 == 1).sum\n        val totalMangoFruitsPercentage = (mangoFruits/totalMangoFruits)*100\n\
    \        val totalMangoFruitsPercentageString = totalMangoFruitsPercentage.toString\n\
    \        val totalMangoFruitsPercentageInt = totalMangoFruitsPercentage.toInt\n\
    \        val totalMangoFruitsPercentageIntString = totalMangoFruitsPercentageInt.toString\n\
    \        val totalMangoFruitsPercentageIntStringWithZeros = totalMangoFruitsPercentageIntString\n\
    \        val totalMangoFruitsPercentageIntStringWithZerosString = totalMangoFruitsPercentageIntStringWithZeros.substring(0,totalMangoFruitsPercentageIntStringWithZeros.length-1)\n\
    \        val totalMangoFruitsPercentageIntStringWithZerosStringWithZeros = totalMangoFruitsPercentageIntStringWithZerosString\
    \ + \"0\"\n        val totalMangoFruitsPercentageIntStringWithZerosStringWithZerosString\
    \ = totalMangoFruitsPercentageIntStringWithZerosStringWithZeros + \"0\"\n    \
    \    val totalMangoFruitsPercentageIntStringWithZerosStringWithZerosStringWithZeros\
    \ = totalMangoFruitsPercentageIntStringWithZerosStringWithZerosString + \"0\"\n\
    \        val totalMangoFruitsPercentageIntStringWithZerosStringWithZerosStringWithZerosString\
    \ = totalMangoFruitsPercentageIntStringWithZerosStringWithZerosStringWithZeros\
    \ + \"0\"\n        val totalMangoFruitsPercentageIntStringWithZerosStringWithZerosStringWithZerosStringWithZeros\
    \ = ", "        val apples = s.split(\" \").map(_.toInt)\n        val oranges\
    \ = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n\
    \        val basket = new mutable.HashMap[String, Long]()\n        basket.put(\"\
    apples\", apples.sum)\n        basket.put(\"oranges\", oranges.sum)\n        basket.put(\"\
    mangos\", mangos.sum)\n        basket.put(\"total\", apples.sum + oranges.sum\
    \ + mangos.sum)\n        basket.get(\"total\")", "        val apples = n.toLong\
    \ - s.replaceAll(\"[^0-9]\", \"\").length\n        val oranges = s.replaceAll(\"\
    [^0-9]\", \"\").length\n        val mangos = apples - oranges\n        mangos",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val fruitsAndOranges = fruits + \" \" + oranges\n\
    \        val applesAndOrangesAndMango = apples + \" \" + oranges + \" and \" +\
    \ fruits\n        val fruitsAndOrangesAndMango = fruits + \" \" + oranges + \"\
    \ and \" + fruits\n        val applesAndOrangesAndMangoAndApples = apples + \"\
    \ \" + oranges + \" and \" + fruits + \" and \" + apples\n        val fruitsAndOrangesAndMangoAndApples\
    \ = fruits + \" \" + oranges + \" and \" + fruits + \" and \" + apples\n     \
    \   val applesAndOrangesAndMangoAndApplesAndOranges = apples + \" \" + oranges\
    \ + \" and \" + fruits + \" and \" + apples + \" \" + oranges\n        val fruitsAndOrangesAndMangoAndApplesAndOranges\
    \ = fruits + \" \" + oranges + \" and \" + fruits + \" and \" + apples + \" \"\
    \ + oranges\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMango =\
    \ apples + \" \" + oranges + \" and \" + fruits + \" and \" + apples + \" \" +\
    \ oranges + \" and \" + fruits\n        val fruitsAndOrangesAndMangoAndApplesAndOrangesAndMango\
    \ = fruits + \" \" + oranges + \" and \" + fruits + \" and \" + apples + \" \"\
    \ + oranges + \" and \" + fruits\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples\
    \ = apples + \" \" + oranges + \" and \" + fruits + \" and \" + apples + \" \"\
    \ + oranges + \" and \" + fruits + \" and \" + apples\n        val fruitsAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples\
    \ = fruits + \" \" + oranges + \" and \" + fruits + \" and \" + apples + \" \"\
    \ + oranges + \" and \" + fruits + \" and \" + apples\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges\
    \ = apples + \" \" + oranges + \" and \" + fruits + \" and \" + apples + \" \"\
    \ + oranges + \" and \" + fruits + \" and \" + apples + \" \" + oranges\n    \
    \    val fruitsAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges\
    \ = fruits + \" \" + oranges + \" and \" + fruits + \" and \" + apples + \" \"\
    \ + oranges + \" and \" + fruits + \" and \" + apples + \" \" + oranges\n    \
    \    val apple", "        val apples = s.split(\" \").map(_.toInt)\n        val\
    \ oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples ++ oranges\n\
    \        val appleCount = apples.sum\n        val orangeCount = oranges.sum\n\
    \        val mangoCount = fruits.filter(_ % 2 == 0).sum\n        val totalCount\
    \ = appleCount + orangeCount + mangoCount\n        val mangoFruits = fruits.filter(_\
    \ % 2 == 1).sum\n        val result = mangoCount * mangoFruits\n        result\
    \ / totalCount", "        val apples = s.split(\" \")(0).toLong\n        val oranges\
    \ = s.split(\" \")(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n\
    \        val totalFruits = apples + oranges + fruits\n        val mangoFruits\
    \ = totalFruits - fruits\n        mangoFruits", "        val apples = s.split(\"\
    \ \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits = s.split(\"\
    \ \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n        val\
    \ fruitsInBasket = fruits.split(\" \").length\n        val mangoFruits = fruitsInBasket\
    \ - applesAndOranges.split(\" \").length\n        val applesAndOrangesInBasket\
    \ = applesAndOranges.split(\" \").length\n        val mangoFruitsInBasket = fruitsInBasket\
    \ - applesAndOrangesInBasket\n        val applesAndOrangesInBasketAndFruits =\
    \ applesAndOrangesInBasket + fruitsInBasket\n        val mangoFruitsInBasketAndFruits\
    \ = fruitsInBasket - applesAndOrangesInBasketAndFruits\n        val mangoFruitsInBasketAndFruitsAndApples\
    \ = applesAndOrangesInBasketAndFruits + fruitsInBasket\n        val mangoFruitsInBasketAndFruitsAndApplesAndOranges\
    \ = applesAndOrangesInBasketAndFruits + fruitsInBasket - applesAndOrangesInBasketAndFruitsAndApples\n\
    \        val mangoFruitsInBasketAndFruitsAndApplesAndOrangesAndMango = applesAndOrangesInBasketAndFruits\
    \ + fruitsInBasket - applesAndOrangesInBasketAndFruitsAndApplesAndOrangesAndMango\n\
    \        val mangoFruitsInBasketAndFruitsAndApplesAndOrangesAndMangoAndOranges\
    \ = applesAndOrangesInBasketAndFruits + fruitsInBasket - applesAndOrangesInBasketAndFruitsAndApplesAndOrangesAndMangoAndOranges\n\
    \        val mangoFruitsInBasketAndFruitsAndApplesAndOrangesAndMangoAndOrangesAndMango\
    \ = applesAndOrangesInBasketAndFruits + fruitsInBasket - applesAndOrangesInBasketAndFruitsAndApplesAndOrangesAndMangoAndOrangesAndMango\n\
    \        val mangoFruitsInBasketAndFruitsAndApplesAndOrangesAndMangoAndOrangesAndMangoAndOranges\
    \ = applesAndOrangesInBasketAndFruits + ", "        val apples = n.toLong - s.toLong\n\
    \        val oranges = s.toLong\n        val mangos = apples - oranges\n     \
    \   mangos", "        val apples = s.split(\" \").map(_.toInt)\n        val oranges\
    \ = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges ++ mangos\n        val basket = fruits.toSet\n\
    \        val count = fruits.count(_ == 1)\n        val totalFruits = fruits.count(_\
    \ > 1)\n        val totalMangos = fruits.count(_ == 2)\n        val totalApples\
    \ = fruits.count(_ == 0)\n        val totalOranges = fruits.count(_ == 3)\n  \
    \      val totalFruitsInBasket = basket.size\n        val totalMangosInBasket\
    \ = basket.count(_ == 2)\n        val totalApplesInBasket = basket.count(_ ==\
    \ 0)\n        val totalOrangesInBasket = basket.count(_ == 3)\n        val totalFruitsAndMangos\
    \ = totalFruits + totalMangos\n        val totalFruitsAndApples = totalFruits\
    \ + totalApples\n        val totalFruitsAndOranges = totalFruits + totalOranges\n\
    \        val totalMangosInBasket = basket.count(_ > 2)\n        val totalApplesInBasket\
    \ = basket.count(_ > 0)\n        val totalOrangesInBasket = basket.count(_ > 3)\n\
    \        val totalFruitsAndMangosInBasket = totalFruitsAndMangos + totalMangosInBasket\n\
    \        val totalFruitsAndApplesInBasket = totalFruitsAndApples + totalApplesInBasket\n\
    \        val totalFruitsAndOrangesInBasket = totalFruitsAndOranges + totalOrangesInBasket\n\
    \        val totalMangosInBasketInBasket = totalMangosInBasket + totalMangosInBasket\n\
    \        val totalApplesInBasketInBasket = totalApplesInBasket + totalApplesInBasket\n\
    \        val totalOrangesInBasketInBasket = totalOrangesInBasket + totalOrangesInBasket\n\
    \        val totalFruitsAndMangosInBasketInBasket = totalFruitsAndMangosInBasket\
    \ + totalMangosInBasketInBasket\n        val totalFruitsAnd", "        val apples\
    \ = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits\
    \ = s.split(\" \")(2)\n        val applesAndOranges = apples + \" \" + oranges\n\
    \        val fruitsInBasket = fruits.split(\"and\").map(_.trim).map(_.toInt)\n\
    \        val applesAndOrangesInBasket = applesAndOranges.split(\"and\").map(_.trim).map(_.toInt)\n\
    \        val mangoFruits = fruitsInBasket.filter(x => x % 2 == 1).sum\n      \
    \  val mangoFruitsInBasket = applesAndOrangesInBasket.filter(x => x % 2 == 1).sum\n\
    \        mangoFruitsInBasket - mangoFruits", "        val apples = s.split(\"\
    \ \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n        val fruits\
    \ = s.split(\" \")(2).toLong\n        val mangos = n - apples - oranges - fruits\n\
    \        mangos", "        val apples = n.toInt\n        val oranges = s.toInt\n\
    \        val fruits = apples + oranges\n        val mangos = fruits - apples -\
    \ oranges\n        mangos", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val applesAndOranges = apples ++ oranges\n       \
    \ val applesAndMangos = apples ++ mangos\n        val orangesAndMangos = oranges\
    \ ++ mangos\n        val applesAndOrangesAndMangos = applesAndOranges ++ applesAndMangos\n\
    \        val applesAndOrangesAndMangosCount = applesAndOrangesAndMangos.size\n\
    \        val applesAndOrangesAndMangosCount2 = applesAndOrangesAndMangos.toSet.size\n\
    \        val applesAndOrangesAndMangosCount3 = applesAndOrangesAndMangos.toSeq.size\n\
    \        val applesAndOrangesAndMangosCount4 = applesAndOrangesAndMangos.toSeq.last.size\n\
    \        val applesAndOrangesAndMangosCount5 = applesAndOrangesAndMangos.toSeq.last.last.size\n\
    \        val applesAndOrangesAndMangosCount6 = applesAndOrangesAndMangos.toSeq.last.last.last.size\n\
    \        val applesAndOrangesAndMangosCount7 = applesAndOrangesAndMangos.toSeq.last.last.last.last.size\n\
    \        val applesAndOrangesAndMangosCount8 = applesAndOrangesAndMangos.toSeq.last.last.last.last.last.size\n\
    \        val applesAndOrangesAndMangosCount9 = applesAndOrangesAndMangos.toSeq.last.last.last.last.last.size\n\
    \        val applesAndOrangesAndMangosCount10 = applesAndOrangesAndMangos.toSeq.last.last.last.last.last.last.size\n\
    \        val applesAndOrangesAndMangosCount11 = applesAndOrangesAndMangos.toSeq.last.last.last.last.last.last.last.size\n\
    \        val applesAndOrangesAndMangosCount12 = applesAndOrangesAndMangos.toSeq.last.last.last.last.last.last.last.size\n\
    \        val applesAndOrangesAndMangosCount13 = applesAndOrangesAndMangos.toSeq.last.last.last.last.last.last.last.last.size\n\
    \        ", "        val apples = n.toLong - s.split(\" \").map(_.toLong).sum\n\
    \        val oranges = s.split(\" \").map(_.toLong).sum\n        val mangos =\
    \ apples - oranges\n        mangos", "        val apples = s.split(\"apples and\
    \ \")\n        val oranges = s.split(\"oranges and \")\n        val fruits = s.split(\"\
    fruits and \")\n        val applesAndOranges = apples.zip(oranges)\n        val\
    \ fruitsAndOranges = fruits.zip(oranges)\n        val applesAndOrangesAndMango\
    \ = apples.zip(oranges).zip(fruits)\n        val fruitsAndOrangesAndMango = fruits.zip(oranges).zip(fruits)\n\
    \        val applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n    \
    \    val applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n        val\
    \ applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n        val applesAndOrangesAndMango\
    \ = apples.zip(oranges).zip(fruits)\n        val applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n\
    \        val applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n    \
    \    val applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n        val\
    \ applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n        val applesAndOrangesAndMango\
    \ = apples.zip(oranges).zip(fruits)\n        val applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n\
    \        val applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n    \
    \    val applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n        val\
    \ applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n        val applesAndOrangesAndMango\
    \ = apples.zip(oranges).zip(fruits)\n        val applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n\
    \        val applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n    \
    \    val applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n        val\
    \ applesAndOrangesAndMango = apples.zip(oranges).zip(fruits)\n        val applesAndOrangesAndMango\
    \ = apples.zip(oranges).zip(fruits)\n        val applesAndOrangesAndMango = apples.zip(oranges).zip(f",
  "        val apples = n.toInt\n        val oranges = s.split(\" \").map(_.toInt).sum\n\
    \        val mangos = apples - oranges\n        mangos", "        val apples =\
    \ n.toInt\n        val oranges = s.toInt\n        val mangos = apples - oranges\n\
    \        val fruits = apples + oranges + mangos\n        fruits", "        val\
    \ apples = n.toLong - s.split(\" \").map(_.toLong).sum\n        val oranges =\
    \ s.split(\" \").map(_.toLong).sum\n        val mango = apples - oranges\n   \
    \     mango", "        val apples = n.toInt\n        val oranges = apples - 1\n\
    \        val mangos = oranges - 1\n        val fruits = s.split(\" \")\n     \
    \   val appleFruits = fruits(0).toInt\n        val orangeFruits = fruits(1).toInt\n\
    \        val mangoFruits = fruits(2).toInt\n        val appleFruitsPerApple =\
    \ appleFruits / apples\n        val orangeFruitsPerOrange = orangeFruits / oranges\n\
    \        val mangoFruitsPerMango = mangoFruits / mangos\n        val appleFruitsPerAppleMango\
    \ = appleFruitsPerApple * mangoFruitsPerMango\n        val orangeFruitsPerOrangeMango\
    \ = orangeFruitsPerOrange * mangoFruitsPerMango\n        val mangoFruitsPerMangoMango\
    \ = mangoFruits * mangoFruitsPerMango\n        val appleFruitsPerAppleOrangeMango\
    \ = appleFruitsPerApple * orangeFruitsPerOrangeMango\n        val orangeFruitsPerOrangeOrangeMango\
    \ = orangeFruitsPerOrange * orangeFruitsPerOrangeMango\n        val mangoFruitsPerMangoOrangeMango\
    \ = mangoFruits * orangeFruitsPerOrangeMango\n        val appleFruitsPerAppleOrangeOrangeMango\
    \ = appleFruitsPerApple * orangeFruitsPerOrangeOrangeMango\n        val orangeFruitsPerOrangeOrangeOrangeMango\
    \ = orangeFruitsPerOrange * orangeFruitsPerOrangeOrangeMango\n        val mangoFruitsPerMangoOrangeOrangeMango\
    \ = mangoFruits * orangeFruitsPerOrangeOrangeMango\n        val appleFruitsPerAppleOrangeOrangeOrangeMango\
    \ = appleFruitsPerApple * orangeFruitsPerOrangeOrangeOrangeMango\n        val\
    \ orangeFruitsPerOrangeOrangeOrangeOrangeMango = orangeFruitsPerOrange * orangeFruitsPerOrangeOrangeOrangeMango\n\
    \        val mangoFruitsPerMangoOrange", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val mangos = n - apples\
    \ - oranges\n        val basket = apples ++ oranges ++ Array[Int](mangos)\n  \
    \      basket.sum", "        val apples = s.split(\" \")(0)\n        val oranges\
    \ = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n        val applesAndOranges\
    \ = apples + \" \" + oranges\n        val fruitsInBasket = fruits.split(\" \"\
    )\n        val applesAndOrangesInBasket = applesAndOranges.split(\" \")\n    \
    \    val applesAndOrangesInBasketCount = applesAndOrangesInBasket.length\n   \
    \     val fruitsInBasketCount = fruitsInBasket.length\n        val mangoFruits\
    \ = fruitsInBasketCount - applesAndOrangesInBasketCount\n        val applesAndOrangesInBasketSum\
    \ = applesAndOrangesInBasket.sum\n        val fruitsInBasketSum = fruitsInBasket.sum\n\
    \        val applesAndOrangesInBasketAverage = applesAndOrangesInBasketSum / applesAndOrangesInBasketCount\n\
    \        val fruitsInBasketAverage = fruitsInBasketSum / fruitsInBasketCount\n\
    \        val mangoFruitsAverage = fruitsInBasketAverage - applesAndOrangesInBasketAverage\n\
    \        val mangoFruitsCount = fruitsInBasketCount - applesAndOrangesInBasketCount\n\
    \        val mangoFruitsSum = fruitsInBasketSum - applesAndOrangesInBasketSum\n\
    \        val mangoFruitsAverage = fruitsInBasketAverage - applesAndOrangesInBasketAverage\n\
    \        val mangoFruitsSum = fruitsInBasketSum - applesAndOrangesInBasketSum\n\
    \        val mangoFruitsCount = fruitsInBasketCount - applesAndOrangesInBasketCount\n\
    \        val mangoFruitsAverage = fruitsInBasketAverage - applesAndOrangesInBasketAverage\n\
    \        val mangoFruitsSum = fruitsInBasketSum - applesAndOrangesInBasketSum\n\
    \        val mangoFruitsCount = fruitsInBasketCount - applesAndOrangesInBasketCount\n\
    \        val mangoFruitsAverage = fruitsInBasketAverage - applesAndOrangesInBasketAverage\n\
    \        val mangoFruitsSum = fruitsInBasketSum - applesAndOrangesInBasketSum\n\
    \        val mangoFruitsCount = fruitsInBasketCount - applesAndOrangesInBasketCount\n\
    \        val mangoFruitsAverage = fruitsInBasketAverage - applesAndOrangesInBasketAverage",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples\
    \ + \" \" + oranges\n        val applesAndOrangesArray = applesAndOranges.split(\"\
    \ \")\n        val applesAndOrangesArrayLength = applesAndOrangesArray.length\n\
    \        val fruitArray = fruits.split(\" \")\n        val fruitArrayLength =\
    \ fruitArray.length\n        val applesAndOrangesArrayLength = applesAndOrangesArrayLength\n\
    \        val fruitArrayLength = fruitArrayLength\n        val applesAndOrangesArrayLength2\
    \ = applesAndOrangesArrayLength * applesAndOrangesArrayLength\n        val fruitArrayLength2\
    \ = fruitArrayLength * fruitArrayLength\n        val applesAndOrangesArrayLength3\
    \ = applesAndOrangesArrayLength2 * applesAndOrangesArrayLength\n        val fruitArrayLength3\
    \ = fruitArrayLength2 * fruitArrayLength\n        val applesAndOrangesArrayLength4\
    \ = applesAndOrangesArrayLength3 * applesAndOrangesArrayLength\n        val fruitArrayLength4\
    \ = fruitArrayLength3 * fruitArrayLength\n        val applesAndOrangesArrayLength5\
    \ = applesAndOrangesArrayLength4 * applesAndOrangesArrayLength\n        val fruitArrayLength5\
    \ = fruitArrayLength4 * fruitArrayLength\n        val applesAndOrangesArrayLength6\
    \ = applesAndOrangesArrayLength5 * applesAndOrangesArrayLength\n        val fruitArrayLength6\
    \ = fruitArrayLength5 * fruitArrayLength\n        val applesAndOrangesArrayLength7\
    \ = applesAndOrangesArrayLength6 * applesAndOrangesArrayLength\n        val fruitArrayLength7\
    \ = fruitArrayLength6 * fruitArrayLength\n        val applesAndOrangesArrayLength8\
    \ = applesAndOrangesArrayLength7 * applesAndOrangesArrayLength\n        val fruitArrayLength8\
    \ = fruitArrayLength7 * fruitArrayLength\n        val applesAndOrangesArrayLength9\
    \ = applesAndOrangesArrayLength8 * applesAndOrangesArrayLength\n        val fruitArrayLength9\
    \ = fruitArrayLength8 * fruitArrayLength\n        val applesAndOrangesArrayLength10\
    \ = applesAndOrangesArrayLength9 * applesAndOrangesArrayLength\n        val fruitArrayLength10\
    \ = fruitArrayLength9 * fruitArrayLength\n        val applesAndOrangesArrayLength11\
    \ = applesAndOrangesArrayLength10 * applesAndOrangesArrayLength\n        val fruitArrayLength11\
    \ = fruitArrayLength", "        val apples = s.split(\" \").map(_.toInt)\n   \
    \     val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val basket = new mutable.HashMap[String, Int]()\n\
    \        basket.put(\"apples\", apples.sum)\n        basket.put(\"oranges\", oranges.sum)\n\
    \        basket.put(\"mangos\", mangos.sum)\n        basket.size", "        val\
    \ apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val appleCount = apples.sum\n\
    \        val orangeCount = oranges.sum\n        val mangoCount = fruits.filter(_\
    \ % 2 == 0).sum\n        val mangoCount = fruits.filter(_ % 2 == 1).sum\n    \
    \    val mangoCount = fruits.filter(_ % 3 == 0).sum\n        val mangoCount =\
    \ fruits.filter(_ % 3 == 1).sum\n        val mangoCount = fruits.filter(_ % 5\
    \ == 0).sum\n        val mangoCount = fruits.filter(_ % 5 == 1).sum\n        val\
    \ mangoCount = fruits.filter(_ % 7 == 0).sum\n        val mangoCount = fruits.filter(_\
    \ % 7 == 1).sum\n        val mangoCount = fruits.filter(_ % 11 == 0).sum\n   \
    \     val mangoCount = fruits.filter(_ % 11 == 1).sum\n        val mangoCount\
    \ = fruits.filter(_ % 13 == 0).sum\n        val mangoCount = fruits.filter(_ %\
    \ 13 == 1).sum\n        val mangoCount = fruits.filter(_ % 17 == 0).sum\n    \
    \    val mangoCount = fruits.filter(_ % 17 == 1).sum\n        val mangoCount =\
    \ fruits.filter(_ % 19 == 0).sum\n        val mangoCount = fruits.filter(_ % 19\
    \ == 1).sum\n        val mangoCount = fruits.filter(_ % 23 == 0).sum\n       \
    \ val mangoCount = fruits.filter(_ % 23 == 1).sum\n        val mangoCount = fruits.filter(_\
    \ % 29 == 0).sum\n        val mangoCount = fruits.filter(_ % 29 == 1).sum\n  \
    \      val mangoCount = fruits.filter(_ % 31 == 0).sum\n        val mangoCount\
    \ = fruits.filter(_ % 31 == 1).sum\n        val mangoCount = fruits.filter(_ %\
    \ 37 == 0).sum\n        val mangoCount = fruits.filter(_ % 37 == 1).sum\n    \
    \    val mangoCount = fruits.filter(_ % 41 == 0).sum\n        val mangoCount =\
    \ fruits.filter(_ % 41 == 1).sum\n        val mangoCount = fruits.filter(_ % 47\
    \ == 0).sum\n        val mangoCount = fruits.filter(_ % 47 == 1).sum\n       \
    \ val mangoCount = fruits.filter(_ % 53 == 0).sum\n        val mangoCount = fruits.filter(_\
    \ % 53 == 1).sum\n        val mangoCount = fruits.filter(_ % 59 == 0).", "   \
    \     val apples = n.toLong - s.toLong\n        val oranges = s.toLong\n     \
    \   val mangos = apples - oranges\n        val basket = s.split(\" \")\n     \
    \   val fruits = basket.filter(_ != \"apples\" && _ != \"oranges\" && _ != \"\
    mango\")\n        fruits.size match {\n            case 0 => mangos\n        \
    \    case 1 => fruits.head.toLong\n            case _ => fruits.toSet.size match\
    \ {\n                case 0 => mangos\n                case 1 => fruits.head.toLong\n\
    \                case _ => fruits.toList.size match {\n                    case\
    \ 0 => mangos\n                    case 1 => fruits.head.toLong\n            \
    \        case _ => fruits.toSeq.size match {\n                        case 0 =>\
    \ mangos\n                        case 1 => fruits.head.toLong\n             \
    \           case _ => fruits.toStream.size match {\n                         \
    \   case 0 => mangos\n                            case 1 => fruits.head.toLong\n\
    \                            case _ => fruits.toIterable.size match {\n      \
    \                          case 0 => mangos\n                                case\
    \ 1 => fruits.head.toLong\n                                case _ => fruits.toStream.size\
    \ match {\n                                    case 0 => mangos\n            \
    \                        case 1 => fruits.head.toLong\n                      \
    \              case _ => fruits.toStream.size match {\n                      \
    \                  case 0 => mangos\n                                        case\
    \ 1 => fruits.head.toLong\n                                        case _ => fruits.toStream.size\
    \ match {\n                                            case 0 => mangos\n    \
    \                                        case 1 => fruits.head.toLong\n      \
    \                                      case _ => fruits.toStream.size match {\n\
    \                                                case 0 => mangos\n          \
    \                                      case 1 => fruits.head.toLong\n        \
    \                                        case _ => fruits.toStream.size match\
    \ {\n                                                    case 0 => mangos\n  \
    \                                                  case 1 => fruits.head.toLong\n\
    \                                                    case _ => fruits.toStream.size\
    \ match {\n                                                        case 0 => mangos\n\
    \                                                        case 1 => fruits.head.toLong\n\
    \                                                        case _ => fruits.toStream.size\
    \ match {\n                                                            case 0\
    \ => mangos\n                                                            case\
    \ 1 => fruits.head.toLong\n                                                  \
    \          case _ => fruits.toStream.size match {\n                          \
    \                                      case 0 => mangos\n                    \
    \                                            case 1 => fruits.head.toLong\n  \
    \                                                              case _ => fruits.toStream.size\
    \ match {\n                                                                  \
    \  case 0 => mangos\n                                                        \
    \            case 1 => fruits.head.toLong\n                                  \
    \                                  case _ => fruits.toStream.size match {\n  \
    \                                                                      case 0\
    \ => mangos\n                                                                \
    \        case 1 => ", "        val apples = n.toInt\n        val oranges = apples\
    \ - 1\n        val mangos = oranges - 1\n        val fruits = s.split(\" \")\n\
    \        val basket = fruits.toList\n        val basketSize = basket.size\n  \
    \      val applesInBasket = basket.filter(_ == \"apples\")\n        val orangesInBasket\
    \ = basket.filter(_ == \"oranges\")\n        val mangosInBasket = basket.filter(_\
    \ == \"mango\")\n        val applesInBasketSize = applesInBasket.size\n      \
    \  val orangesInBasketSize = orangesInBasket.size\n        val mangosInBasketSize\
    \ = mangosInBasket.size\n        val applesInBasketSum = applesInBasket.sum\n\
    \        val orangesInBasketSum = orangesInBasket.sum\n        val mangosInBasketSum\
    \ = mangosInBasket.sum\n        val applesInBasketSumSize = applesInBasketSize\
    \ * applesInBasketSum\n        val orangesInBasketSumSize = orangesInBasketSize\
    \ * orangesInBasketSum\n        val mangosInBasketSumSize = mangosInBasketSize\
    \ * mangosInBasketSum\n        val applesInBasketSumSizeSize = applesInBasketSumSize\
    \ * applesInBasketSum\n        val orangesInBasketSumSizeSize = orangesInBasketSumSize\
    \ * orangesInBasketSum\n        val mangosInBasketSumSizeSize = mangosInBasketSumSize\
    \ * mangosInBasketSumSize\n        val applesInBasketSumSizeSizeSize = applesInBasketSumSizeSize\
    \ * applesInBasketSumSize\n        val orangesInBasketSumSizeSizeSize = orangesInBasketSumSizeSize\
    \ * orangesInBasketSumSize\n        val mangosInBasketSumSizeSizeSize = mangosInBasketSumSizeSize\
    \ * mangosInBasketSumSizeSize\n        val applesInBasketSumSizeSizeSizeSize =\
    \ applesInBasketSumSizeSizeSize * applesInBasketSumSizeSize\n        val orangesInBasketSumSizeSizeSizeSize\
    \ = orangesInBasketSumSizeSizeSize * orangesInBasketSumSizeSize\n        val mangosInBasketSumSizeSizeSizeSize\
    \ = mangosInBasketSumSizeSizeSize * mangosInBasketSumSizeSizeSize\n        val\
    \ applesInBasketSumSizeSizeSizeSize = applesInBasketSum", "        val apples\
    \ = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val appleCount = apples.sum\n\
    \        val orangeCount = oranges.sum\n        val mangoCount = fruits.filter(_\
    \ % 2 == 0).sum\n        val mangoFruits = mangoCount / 2\n        val totalFruits\
    \ = fruits.sum\n        val totalMangoFruits = mangoFruits * 2\n        val result\
    \ = totalMangoFruits / totalFruits\n        result", "        val apples = s.split(\"\
    \ \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n      \
    \  val mangos = s.split(\" \").map(_.toInt)\n        val applesAndOranges = apples\
    \ ++ oranges\n        val applesAndMangos = apples ++ mangos\n        val orangesAndMangos\
    \ = oranges ++ mangos\n        val applesAndOrangesAndMangos = applesAndOranges\
    \ ++ applesAndMangos\n        val applesAndOrangesAndMangosCount = applesAndOrangesAndMangos.size\n\
    \        val applesAndOrangesAndMangosCount2 = applesAndOrangesAndMangos.toSet.size\
    \ // O(n) \n        val applesAndOrangesAndMangosCount3 = applesAndOrangesAndMangos.toSeq.size\
    \ // O(n)\n        val applesAndOrangesAndMangosCount4 = applesAndOrangesAndMangos.toList.size\
    \ // O(n)\n        val applesAndOrangesAndMangosCount5 = applesAndOrangesAndMangos.toArray.size\
    \ // O(n)\n        val applesAndOrangesAndMangosCount6 = applesAndOrangesAndMangos.toIterable.size\
    \ // O(n)\n        val applesAndOrangesAndMangosCount7 = applesAndOrangesAndMangos.toSeq.head\
    \ // O(1)\n        val applesAndOrangesAndMangosCount8 = applesAndOrangesAndMangos.toList.head\
    \ // O(1)\n        val applesAndOrangesAndMangosCount9 = applesAndOrangesAndMangos.toArray.head\
    \ // O(1)\n        val applesAndOrangesAndMangosCount10 = applesAndOrangesAndMangos.toIterable.head\
    \ // O(1)\n        val applesAndOrangesAndMangosCount11 = applesAndOrangesAndMangos.toSeq.last\
    \ // O(1)\n        val applesAndOrangesAndMangosCount12 = applesAndOrangesAndMangos.toList.last\
    \ // O(1)\n        val applesAndOrangesAndMangosCount13 = applesAndOrangesAndMangos.toArray.last\
    \ // O(1)\n        val applesAndOrangesAndMangosCount14 = applesAndOrangesAndMangos.toIterable.last\
    \ // O(1)\n        val applesAndOrangesAndMangosCount15 = applesAndOrangesAndMangos.toSeq.head\
    \ + ", "        val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\"\
    \ \")(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n        val mangos\
    \ = n - apples - oranges - fruits\n        mangos", "        val apples = n.toInt\n\
    \        val oranges = s.toInt\n        val fruits = apples + oranges\n      \
    \  val mangos = fruits - apples - oranges\n        mangos", "        val apples\
    \ = n.toInt\n        val oranges = s.toInt\n        val mangos = apples - oranges\n\
    \        val fruits = apples + oranges + mangos\n        fruits", "        val\
    \ apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n      \
    \  val fruits = s.split(\" \")(2)\n        val applesAndOranges = apples + \"\
    \ \" + oranges\n        val fruitsInBasket = fruits.split(\"and\").map(_.trim).map(_.toInt)\n\
    \        val applesAndOrangesInBasket = applesAndOranges.split(\"and\").map(_.trim).map(_.toInt)\n\
    \        val mangos = fruitsInBasket.filter(_ > 0).sum\n        val mangoFruits\
    \ = fruitsInBasket.filter(_ == 0).sum\n        val mangoFruitsInBasket = fruitsInBasket.filter(_\
    \ == 1).sum\n        val mangoFruitsInBasketAndOranges = fruitsInBasket.filter(_\
    \ > 1).sum\n        val mangoFruitsInBasketAndOrangesInBasket = fruitsInBasket.filter(_\
    \ == 1).filter(_ > 1).sum\n        val mangoFruitsInBasketAndOrangesInBasketAndOranges\
    \ = fruitsInBasket.filter(_ == 1).filter(_ > 1).filter(_ > 1).sum\n        val\
    \ mangoFruitsInBasketAndOrangesInBasketAndOrangesInBasket = fruitsInBasket.filter(_\
    \ == 1).filter(_ > 1).filter(_ > 1).filter(_ > 1).sum\n        val mangoFruitsInBasketAndOrangesInBasketAndOrangesInBasketAndOranges\
    \ = fruitsInBasket.filter(_ == 1).filter(_ > 1).filter(_ > 1).filter(_ > 1).filter(_\
    \ > 1).sum\n        val mangoFruitsInBasketAndOrangesInBasketAndOrangesInBasketAndOrangesInBasket\
    \ = fruitsInBasket.filter(_ == 1).filter(_ > 1).filter(_ > 1).filter(_ > 1).filter(_\
    \ > 1).filter(_ > 1).sum\n        val mangoFruitsInBasketAndOrangesInBasketAndOrangesInBasketAndOrangesInBasketAndOranges\
    \ = fruitsInBasket.filter(_ == 1).filter(_ > 1).filter(_ > 1).filter(_ > 1).filter(_\
    \ > 1).filter(_ > 1).filter(_ > 1).sum\n        val mangoFruitsInBasketAndOrangesInBasketAndOrangesInBasketAndOrangesInBasketAndOrangesInBasket\
    \ = fruitsInBasket.filter(_ == 1).filter(_ > 1).", "        val apples = s.split(\"\
    \ \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n        val mangos\
    \ = s.split(\" \")(2).toLong\n        val basket = new mutable.HashMap[String,\
    \ Long]()\n        basket.put(\"apples\", apples)\n        basket.put(\"oranges\"\
    , oranges)\n        basket.put(\"mangos\", mangos)\n        val totalFruits =\
    \ apples + oranges + mangos\n        val totalFruitsPerApple = apples / totalFruits\n\
    \        val totalFruitsPerOrange = oranges / totalFruits\n        val totalFruitsPerMango\
    \ = mangos / totalFruits\n        val totalFruitsPerAppleAndOrange = apples +\
    \ oranges\n        val totalFruitsPerAppleAndMango = apples + mangos\n       \
    \ val totalFruitsPerOrangeAndMango = oranges + mangos\n        val totalFruitsPerAppleAndOrangeAndMango\
    \ = apples + oranges + mangos\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruits\
    \ = apples + oranges + mangos + totalFruits\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerApple\
    \ = apples + oranges + mangos + totalFruitsPerApple\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerOrange\
    \ = apples + oranges + mangos + totalFruitsPerOrange\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerMango\
    \ = apples + oranges + mangos + totalFruitsPerMango\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerAppleAndOrange\
    \ = apples + oranges + mangos + totalFruitsPerAppleAndOrange\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerAppleAndMango\
    \ = apples + oranges + mangos + totalFruitsPerAppleAndMango\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotalFruitsPerOrangeAndMango\
    \ = apples + oranges + mangos + totalFruitsPerOrangeAndMango\n        val totalFruitsPerAppleAndOrangeAndMango",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mango = apples.filter(_ % 2 == 0).sum\n      \
    \  val basket = apples.filter(_ % 2 == 1).sum\n        val total = apples.sum\
    \ + oranges.sum + mango\n        val count = basket / total\n        val result\
    \ = count * n\n        result"]
stop_tokens:
- "\n    }\n"

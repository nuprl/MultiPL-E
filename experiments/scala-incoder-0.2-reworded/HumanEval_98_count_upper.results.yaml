language: scala
name: HumanEval_98_count_upper
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)((acc,\
    \ i) => acc + s.charAt(i).toUpperCase == 'U')\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp07wxqkae.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb1yyfvcw.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        val\
    \ evenIndices = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n    \
    \        if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2 == 0)\n\
    \                    evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_\
    \ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpsq8531fl.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpsq8531fl.scala:14:26 ------------------------\e[0m\e[0m\n\
    \e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793459
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2\
    \ == 0)\n                    count += 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6cfyhdxj.scala:22)\n\tat Problem.main(tmp6cfyhdxj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793463
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2\
    \ == 0)\n                    count += 1\n                else\n              \
    \      count -= 1\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpg_k9kowb.scala:24)\n\tat Problem.main(tmpg_k9kowb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s(i)) >= 0)\n\
    \                if (s(i).isUpper)\n                    evenIndices += i\n   \
    \     evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8tx_0gvz.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = 0 until s.length\n      \
    \  evenIndices.filter(_ % 2 == 0).map(s.length).count(s => vowels.contains(s.charAt(_)))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpq3ybmul9.scala:15:43\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        evenIndices.filter(_\
    \ % \e[31m2\e[0m == \e[31m0\e[0m).map(s.length).count(\e[36ms\e[0m => vowels.contains(s.charAt(_)))\n\
    \e[31m\e[31m   |\e[0m                                           ^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                           Found:    \e[1m\e[31m(\e\
    [0m\e[1m\e[31m)\e[0m => Int\n\e[31m   |\e[0m                                 \
    \          Required: \e[1m\e[32mInt\e[0m => Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E081] Type Error: /tmp/tmpq3ybmul9.scala:15:89 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        evenIndices.filter(_ % \e[31m2\e[0m == \e[31m0\e\
    [0m).map(s.length).count(\e[36ms\e[0m => vowels.contains(s.charAt(_)))\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \                         ^\e[0m\n\e[31m   |\e[0m   Missing parameter type\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m   I could not infer the type of the parameter _$2\
    \ of expanded function:\n\e[31m   |\e[0m   _$2 => s.charAt(_$2).\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpq3ybmul9.scala:15:82 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        evenIndices.filter(_ % \e[31m2\e[0m == \e[31m0\e\
    [0m).map(s.length).count(\e[36ms\e[0m => vowels.contains(s.charAt(_)))\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \                ^^^^^^^^\e[0m\n\e[31m   |\e[0m                              \
    \       value charAt is not a member of Int\n3 errors found\n"
  stdout: ''
  timestamp: 1659793464
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ > -1)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)((acc, i) => acc + i)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz6xfj459.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        val evenIndices = mutable.Set[Int]()\n     \
    \   for (i <- 0 until s.length)\n            if (vowels(s(i)))\n             \
    \   if (s(i) % 2 == 0)\n                    evenIndices += i\n        evenIndices.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppmebx7of.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i).isUpper)\n   \
    \             if (i % 2 == 0)\n                    evenIndices += i\n        evenIndices.toList.foldLeft(0l)\
    \ { (sum, i) =>\n            if (sum > 0)\n                sum\n            else\n\
    \                sum + vowels(i).length\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl6q30yw5.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowelsSet = vowels.toSet\n        val evenIndices\
    \ = 0 until s.length\n        val evenIndicesWithVowels = evenIndices.filter(i\
    \ => vowelsSet.contains(s(i)))\n        evenIndicesWithVowels.sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdwgjr80e.scala:20)\n\tat Problem.main(tmpdwgjr80e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793464
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb1yyfvcw.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        val evenIndices = mutable.Set[Int]()\n     \
    \   for (i <- 0 until s.length)\n            if (vowels(s(i)))\n             \
    \   evenIndices += i\n        evenIndices.toList.count(i => s(i).isUpper)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw9006quv.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.map(s.length)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqv11mcgp.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = s.toList.zipWithIndex.filter(_._2\
    \ % 2 == 0).map(_._1)\n        evenIndices.count(vowels.contains)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp71l2p_1c.scala:18)\n\tat Problem.main(tmp71l2p_1c.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0L)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_nrfftn3.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        val\
    \ evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        val evenIndices = mutable.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpq397w89h.scala:53:4 ----------------------------\e\
    [0m\e[0m\n\e[31m53 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpq397w89h.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpq397w89h.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpq397w89h.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpq397w89h.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/"
  stdout: ''
  timestamp: 1659793462
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels(s(i)))\n                count += 1\n            else\n\
    \                count += 0\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp506gw1ms.scala:23)\n\tat Problem.main(tmp506gw1ms.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = 0 until s.length\n      \
    \  val evenIndicesWithVowels = evenIndices.filter(_ % 2 == 0)\n        val evenIndicesWithoutVowels\
    \ = evenIndices.filter(_ % 2 != 0)\n        val evenIndicesWithVowelsAndOutVowels\
    \ = evenIndicesWithVowels.filter(_ % 2 == 0)\n        val evenIndicesWithoutVowelsAndOutVowels\
    \ = evenIndicesWithoutVowels.filter(_ % 2 != 0)\n        val evenIndicesWithVowelsAndOutVowelsAndOutVowels\
    \ = evenIndicesWithVowelsAndOutVowels.filter(_ % 2 == 0)\n        val evenIndicesWithoutVowelsAndOutVowelsAndOutVowels\
    \ = evenIndicesWithoutVowelsAndOutVowels.filter(_ % 2 != 0)\n        val evenIndicesWithVowelsAndOutVowelsAndOutVowelsAndOutVowels\
    \ = evenIndicesWithVowelsAndOutVowelsAndOutVowels.filter(_ % 2 == 0)\n       \
    \ val evenIndicesWithoutVowelsAndOutVowelsAndOutVowelsAndOutVowels = evenIndicesWithoutVowelsAndOutVowelsAndOutVowels.filter(_\
    \ % 2 != 0)\n        val evenIndicesWithVowelsAndOutVowelsAndOutVowelsAndOutVowelsAndOutVowels\
    \ = evenIndicesWithVowelsAndOutVowelsAndOutVowelsAndOutVowels.filter(_ % 2 ==\
    \ 0)\n        val evenIndicesWithoutVowelsAndOutVowelsAndOutVowelsAndOutVowelsAndOutVowels\
    \ = evenIndicesWithoutVowelsAndOutVowelsAndOutVowelsAndOutVowels.filter(_ % 2\
    \ != 0)\n        val evenIndicesWithVowelsAndOutVowelsAndOutVowelsAndOutVowelsAndOutVowelsAndOutVowels\
    \ = evenIndicesWithVowelsAndOutVowelsAndOutVowelsAndOutVowelsAndOutVowels.filter(_\
    \ % 2 == 0)\n        val evenIndicesWithoutVowelsAndOutVowelsAndOutVowelsAndOutVowelsAndOutVowelsAndOutVowels\
    \ = evenIndice\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdx3kpnih.scala:26:99 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mevenIndicesWithoutVowelsAndOutVowelsAndOutVowelsAndOutVowelsAndOutVowelsAndOutVowels\e\
    [0m = evenIndice\n\e[31m\e[31m   |\e[0m                                      \
    \                                                             ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                                   Not found: evenIndice\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdx3kpnih.scala:27:5\
    \ ---------------------\e[0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793462
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' && s(i\
    \ + 1) == 'A' && s(i + 2) == 'A')\n                count += 1\n            else\
    \ if (s(i) == 'a' && s(i + 1) == 'b' && s(i + 2) == 'c')\n                count\
    \ += 1\n            else if (s(i) == 'd' && s(i + 1) == 'b' && s(i + 2) == 'e')\n\
    \                count += 1\n            else if (s(i) == 'e' && s(i + 1) == 'f'\
    \ && s(i + 2) == 'g')\n                count += 1\n            else if (s(i) ==\
    \ 'd' && s(i + 1) == 'B' && s(i + 2) == 'E')\n                count += 1\n   \
    \         else if (s(i) == 'e' && s(i + 1) == 'f' && s(i + 2) == 'G')\n      \
    \          count += 1\n            else if (s(i) == 'd' && s(i + 1) == 'b' &&\
    \ s(i + 2) == 'E')\n                count += 1\n            else if (s(i) == 'e'\
    \ && s(i + 1) == 'f' && s(i + 2) == 'g')\n                count += 1\n       \
    \     else if (s(i) == 'd' && s(i + 1) == 'B' && s(i + 2) == 'E')\n          \
    \      count += 1\n            else if (s(i) == 'e' && s(i + 1) == 'f' && s(i\
    \ + 2) == 'G')\n                count += 1\n            else if (s(i) == 'd' &&\
    \ s(i + 1) == 'b' && s(i + 2) == 'E')\n                count += 1\n          \
    \  else if (s(i) == 'e' && s(i + 1) == 'f' && s(i + 2) == 'g')\n             \
    \   count += 1\n            else if (s(i) == 'd' && s(i + 1) == 'B' && s(i + 2)\
    \ == 'E')\n                count += 1\n            else if (s(i) == 'e' && s(i\
    \ + 1) == 'f' && s(i + 2) == 'G')\n                count += 1\n            else\
    \ if (s(i) == 'd' && s(i + 1) == 'b' && s(i + 2) == 'E')\n                count\
    \ += 1\n            else if (s(i) == 'e' && s(i + 1) == 'f' && s(i + 2) == 'g')\n\
    \                count += 1\n            else if (s(i) == 'd' && s(i + 1) == 'B'\
    \ && s(i + 2) == 'E')\n                count += 1\n            else if (s(i) ==\
    \ 'e' && s(i + 1) == 'f' && s(i + 2) == 'G')\n                count += 1\n   \
    \         else if (s(i) == 'd' && s(i + 1) == 'b' && s(i + 2) == 'E')\n      \
    \          count += 1\n            else if (s(i) == 'e' && s(i + 1) == 'f' &&\
    \ s(i + 2) == 'g')\n                count += 1\n            else if (s(i) == 'd'\
    \ && s(i + 1) == 'B' && s(i + 2) == 'E')\n                count += 1\n       \
    \     else if (s(i) == 'e' && s(i + 1) == 'f' && s(i + 2) == 'G')\n          \
    \      count += 1\n            else if (s(i) == 'd' && s(i + 1) == 'b' && s(i\
    \ + 2) == 'E')\n\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgspf1c0w.scala:61:4 ----------------------------\e\
    [0m\e[0m\n\e[31m61 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    'then' expected, but unindent found\n1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' && s(i+1)\
    \ == 'A')\n                count += 1\n            else if (s(i) == 'a' && s(i+1)\
    \ == 'a')\n                count += 1\n            else if (s(i) == 'B' && s(i+1)\
    \ == 'B')\n                count += 1\n            else if (s(i) == 'b' && s(i+1)\
    \ == 'b')\n                count += 1\n            else if (s(i) == 'C' && s(i+1)\
    \ == 'C')\n                count += 1\n            else if (s(i) == 'c' && s(i+1)\
    \ == 'c')\n                count += 1\n            else if (s(i) == 'D' && s(i+1)\
    \ == 'D')\n                count += 1\n            else if (s(i) == 'd' && s(i+1)\
    \ == 'd')\n                count += 1\n            else if (s(i) == 'E' && s(i+1)\
    \ == 'E')\n                count += 1\n            else if (s(i) == 'e' && s(i+1)\
    \ == 'e')\n                count += 1\n            else if (s(i) == 'F' && s(i+1)\
    \ == 'F')\n                count += 1\n            else if (s(i) == 'f' && s(i+1)\
    \ == 'f')\n                count += 1\n            else if (s(i) == 'G' && s(i+1)\
    \ == 'G')\n                count += 1\n            else if (s(i) == 'g' && s(i+1)\
    \ == 'g')\n                count += 1\n            else if (s(i) == 'H' && s(i+1)\
    \ == 'H')\n                count += 1\n            else if (s(i) == 'h' && s(i+1)\
    \ == 'h')\n                count += 1\n            else if (s(i) == 'I' && s(i+1)\
    \ == 'I')\n                count += 1\n            else if (s(i) == 'i' && s(i+1)\
    \ == 'i')\n                count += 1\n            else if (s(i) == 'J' && s(i+1)\
    \ == 'J')\n                count += 1\n            else if (s(i) == 'j' && s(i+1)\
    \ == 'j')\n                count += 1\n            else if (s(i) == 'K' && s(i+1)\
    \ == 'K')\n                count += 1\n            else if (s(i) == 'k' && s(i+1)\
    \ == 'k')\n                count += 1\n            else if (s(i) == 'L' && s(i+1)\
    \ == 'L')\n                count += 1\n            else if (s(i) == 'l' && s(i+1)\
    \ == 'l')\n                count += 1\n            else if (s(i) == 'M' && s(i+1)\
    \ == 'M')\n                count += 1\n            else if (s(i) == 'm' && s(i+1)\
    \ == 'm')\n                count += 1\n            else if (s(i) == 'N' && s(i+1)\
    \ == 'N')\n                count += 1\n            else if (s(i) == 'n' && s(i+1)\
    \ == 'n')\n                count += 1\n            else if (s(i) == 'O' && s(i+1)\
    \ == 'O')\n                count += 1\n            else if (s(i) == 'o' && s(i+1)\
    \ == 'o')\n\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgfltd5ma.scala:75:4 ----------------------------\e\
    [0m\e[0m\n\e[31m75 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    'then' expected, but unindent found\n1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' || s(i)\
    \ == 'a') count += 1\n            if (s(i) == 'B' || s(i) == 'b') count += 1\n\
    \            if (s(i) == 'C' || s(i) == 'c') count += 1\n            if (s(i)\
    \ == 'D' || s(i) == 'd') count += 1\n            if (s(i) == 'E' || s(i) == 'e')\
    \ count += 1\n            if (s(i) == 'F' || s(i) == 'f') count += 1\n       \
    \     if (s(i) == 'G' || s(i) == 'g') count += 1\n        if (count % 2 == 0)\
    \ 1 else 0\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3c9i9cyd.scala:27)\n\tat Problem.main(tmp3c9i9cyd.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793464
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s(i)) >= 0)\n      \
    \          if (s(i).toUpperCase == s(i))\n                    evenIndices += i\n\
    \        evenIndices.size\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz41q5do7.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpz41q5do7.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                \e[33mif\e[0m (s(i).toUpperCase == s(i))\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                    value toUpperCase is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s(i)) >= 0)\n\
    \                if (s(i).toUpperCase == \"A\" || s(i).toUpperCase == \"E\" ||\
    \ s(i).toUpperCase == \"I\" || s(i).toUpperCase == \"O\" || s(i).toUpperCase ==\
    \ \"U\")\n                    evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_\
    \ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3djn4y7k.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp3djn4y7k.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                \e[33mif\e[0m (s(i).toUpperCase == \e\
    [31m\"A\"\e[0m || s(i).toUpperCase == \e[31m\"E\"\e[0m || s(i).toUpperCase ==\
    \ \e[31m\"I\"\e[0m || s(i).toUpperCase == \e[31m\"O\"\e[0m || s(i).toUpperCase\
    \ == \e[31m\"U\"\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    value toUpperCase is not a member of Char\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793462
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"A\", \"E\", \"I\", \"O\", \"U\")\n        var count = 0\n        for\
    \ (i <- 0 until s.length)\n            if (vowels(s(i)) && s(i) % 2 == 0)\n  \
    \              count += 1\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpikjy0b3b.scala:16:24\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i))\
    \ && s(i) % \e[31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m             \
    \          ^^^^\e[0m\n\e[31m   |\e[0m                       Found:    Char\n\e\
    [31m   |\e[0m                       Required: String\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"A\", \"E\", \"I\", \"O\", \"U\")\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(s(i)) && s(i) % 2\
    \ == 0)\n                evenIndices += i\n        evenIndices.length\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) ==\
    \ (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi0x3lipc.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi0x3lipc.scala:16:24 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i)) && s(i) % \e\
    [31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                       ^^^^\e\
    [0m\n\e[31m   |\e[0m                       Found:    Char\n\e[31m   |\e[0m   \
    \                    Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb1yyfvcw.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"A\", \"E\", \"I\", \"O\", \"U\")\n        val evenIndices = mutable.Set[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(s(i)) && s(i) % 2\
    \ == 0)\n                evenIndices += i\n        evenIndices.size\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) ==\
    \ (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbz5909w7.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbz5909w7.scala:16:24 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i)) && s(i) % \e\
    [31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                       ^^^^\e\
    [0m\n\e[31m   |\e[0m                       Found:    Char\n\e[31m   |\e[0m   \
    \                    Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793469
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2\
    \ == 0)\n                    count += 1\n                else\n              \
    \      count -= 1\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpg_k9kowb.scala:24)\n\tat Problem.main(tmpg_k9kowb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = mutable.Set[Char]('a', 'e', 'i', 'o', 'u')\n        val evenIndices = mutable.Set[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(s(i)) && s(i) % 2\
    \ == 0)\n                evenIndices += i\n        evenIndices.toList.size\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgh_1m80g.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m, \e[31m'e'\e[0m, \e[31m'i'\e[0m, \e[31m'o'\e[0m,\
    \ \e[31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpgh_1m80g.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\".toList\n        val evenIndices = 0 until s.length\n      \
    \  evenIndices.filter(i => vowels(i).contains(s(i)))\n            .map(i => s(i).toUpperCase\
    \ == s(i).toLowerCase)\n            .count(_)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E081] Type Error: /tmp/tmpl2gd0ymr.scala:17:19 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            .count(_)\n\e[31m\e[31m   |\e[0m        \
    \           ^\e[0m\n\e[31m   |\e[0m   Missing parameter type\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m   I could not infer the type of the parameter _$1 of expanded\
    \ function:\n\e[31m   |\e[0m   _$1 => \n\e[31m   |\e[0m     evenIndices.filter(i\
    \ => vowels(i).contains(s(i))).map(\n\e[31m   |\e[0m       i => s(i).toUpperCase\
    \ == s(i).toLowerCase\n\e[31m   |\e[0m     ).count(_$1).\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpl2gd0ymr.scala:15:42 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        evenIndices.filter(\e[36mi\e[0m => vowels(i).contains(s(i)))\n\
    \e[31m\e[31m   |\e[0m                                ^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                value contains is not a member\
    \ of Char\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl2gd0ymr.scala:16:27\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            .map(i => s(i).toUpperCase\
    \ == s(i).toLowerCase)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      value toUpperCase is not a member of\
    \ Char\n3 errors found\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        var count = 0\n        for (i <- 0 until\
    \ s.length)\n            if (vowels(i) % 2 == 0)\n                count += s.charAt(i).toUpperCase\
    \ == s.charAt(i)\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptfx40bjb.scala:17:22 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                count += s.charAt(i).toUpperCase == s.charAt(i)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \      value += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmptfx40bjb.scala:17:37 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                count += s.charAt(i).toUpperCase == s.charAt(i)\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         value toUpperCase is not a member of Char\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793470
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = 0 until s.length\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.map(i => vowels(i))\n        evenIndices.count(vowels.contains)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpe0fty0a_.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ % \e[31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpe0fty0a_.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.map(\e\
    [36mi\e[0m => vowels(i))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659793467
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2\
    \ == 0)\n                    count += 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkirajp01.scala:22)\n\tat Problem.main(tmpkirajp01.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb1yyfvcw.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb1yyfvcw.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.contains(s(i)))\n          \
    \      if (s(i).toUpperCase == \"A\")\n                    evenIndices += i\n\
    \        evenIndices.length\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk3xavd8p.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpk3xavd8p.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                \e[33mif\e[0m (s(i).toUpperCase == \e\
    [31m\"A\"\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                    value toUpperCase is not a member of Char\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793470
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s(i)) >= 0)\n\
    \                evenIndices += i\n        evenIndices.toList.foldLeft(0l) { (sum,\
    \ index) =>\n            if (index % 2 == 0)\n                sum + vowels.indexOf(s(index))\n\
    \            else sum\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp7asqcip.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793467
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val evenIndices = mutable.Set[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(s(i)))\n        \
    \        if (s(i) % 2 == 0)\n                    evenIndices += i\n        evenIndices.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqtxu5b_6.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqtxu5b_6.scala:16:24 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i)))\n\e[31m\e[31m\
    \   |\e[0m                       ^^^^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    Char\n\e[31m   |\e[0m                       Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793470
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.count(i => s(i) ==\
    \ 'U')\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp62pvy1uy.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l) { (sum,\
    \ index) => sum + vowels(index) }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5c6xwb15.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb1yyfvcw.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = s filter (_ % 2 == 0)\n \
    \       val evenIndices_vowels = evenIndices filter (vowels.contains)\n      \
    \  evenIndices_vowels.size match {\n            case 0 => 0\n            case\
    \ _ => evenIndices_vowels.sum\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzaqy6obw.scala:22)\n\tat Problem.main(tmpzaqy6obw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowelsSet = vowels.toSet\n        val vowelsCount\
    \ = s.toCharArray.filter(vowelsSet.contains).length\n        val evenIndices =\
    \ s.toCharArray.filter(vowelsSet.contains)\n            .zipWithIndex.filter(_._2\
    \ % 2 == 0).map(_._1)\n        evenIndices.foldLeft(0l) { (sum, index) => sum\
    \ + vowelsCount(index) }\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpqq5nj_4l.scala:18:57 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        evenIndices.foldLeft(\e[31m0l\e[0m) { (\e[36msum\e\
    [0m, \e[36mindex\e[0m) => sum + vowelsCount(index) }\n\e[31m\e[31m   |\e[0m  \
    \                                                       ^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                              \e[33mvalue\e[0m \e[35mvowelsCount\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793470
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length) evenIndices += if (s(i).isUpper) 1 else 0\n\
    \        evenIndices.sum\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpkkwmexss.scala:15:51 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until s.length)\
    \ evenIndices += \e[33mif\e[0m (s(i).isUpper) \e[31m1\e[0m \e[33melse\e[0m \e\
    [31m0\e[0m\n\e[31m\e[31m   |\e[0m                                            \
    \       ^^\e[0m\n\e[31m   |\e[0m                                        expression\
    \ expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpkkwmexss.scala:14:26 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659793470
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) >= 0)\n\
    \                evenIndices += i\n        evenIndices.toList.count(i => s.charAt(i).toUpper\
    \ == s.charAt(i))\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz8t72x2s.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3nn683j.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        var count = 0\n        for (i <- 0 until\
    \ s.length)\n            if (vowels(i) % 2 == 0) count += 1\n        count\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppsq20mvo.scala:20)\n\tat Problem.main(tmppsq20mvo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' && s(i+1)\
    \ == 'A')\n                count += 1\n            else if (s(i) == 'a' && s(i+1)\
    \ == 'a')\n                count += 1\n            else if (s(i) == 'B' && s(i+1)\
    \ == 'B')\n                count += 1\n            else if (s(i) == 'b' && s(i+1)\
    \ == 'b')\n                count += 1\n            else if (s(i) == 'C' && s(i+1)\
    \ == 'C')\n                count += 1\n            else if (s(i) == 'c' && s(i+1)\
    \ == 'c')\n                count += 1\n            else if (s(i) == 'D' && s(i+1)\
    \ == 'D')\n                count += 1\n            else if (s(i) == 'd' && s(i+1)\
    \ == 'd')\n                count += 1\n            else if (s(i) == 'E' && s(i+1)\
    \ == 'E')\n                count += 1\n            else if (s(i) == 'e' && s(i+1)\
    \ == 'e')\n                count += 1\n            else if (s(i) == 'F' && s(i+1)\
    \ == 'F')\n                count += 1\n            else if (s(i) == 'f' && s(i+1)\
    \ == 'f')\n                count += 1\n            else if (s(i) == 'G' && s(i+1)\
    \ == 'G')\n                count += 1\n            else if (s(i) == 'g' && s(i+1)\
    \ == 'g')\n                count += 1\n            else if (s(i) == 'H' && s(i+1)\
    \ == 'H')\n                count += 1\n            else if (s(i) == 'h' && s(i+1)\
    \ == 'h')\n                count += 1\n            else if (s(i) == 'I' && s(i+1)\
    \ == 'I')\n                count += 1\n            else if (s(i) == 'i' && s(i+1)\
    \ == 'i')\n                count += 1\n            else if (s(i) == 'J' && s(i+1)\
    \ == 'J')\n                count += 1\n            else if (s(i) == 'j' && s(i+1)\
    \ == 'j')\n                count += 1\n            else if (s(i) == 'K' && s(i+1)\
    \ == 'K')\n                count += 1\n            else if (s(i) == 'k' && s(i+1)\
    \ == 'k')\n                count += 1\n            else if (s(i) == 'L' && s(i+1)\
    \ == 'L')\n                count += 1\n            else if (s(i) == 'l' && s(i+1)\
    \ == 'l')\n                count += 1\n            else if (s(i) == 'M' && s(i+1)\
    \ == 'M')\n                count += 1\n            else if (s(i) == 'm' && s(i+1)\
    \ == 'm')\n                count += 1\n            else if (s(i) == 'N' && s(i+1)\
    \ == 'N')\n                count += 1\n            else if (s(i) == 'n' && s(i+1)\
    \ == 'n')\n                count += 1\n            else if (s(i) == 'O' && s(i+1)\
    \ == 'O')\n                count += 1\n            else if (s(i) == 'o' && s(i+1)\
    \ == 'o')\n\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgfltd5ma.scala:75:4 ----------------------------\e\
    [0m\e[0m\n\e[31m75 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    'then' expected, but unindent found\n1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length if s(i) == 'A') {\n            count\
    \ += 1\n        }\n        for (i <- 0 until s.length if s(i) == 'E') {\n    \
    \        count += 1\n        }\n        for (i <- 0 until s.length if s(i) ==\
    \ 'I') {\n            count += 1\n        }\n        for (i <- 0 until s.length\
    \ if s(i) == 'O') {\n            count += 1\n        }\n        for (i <- 0 until\
    \ s.length if s(i) == 'U') {\n            count += 1\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzxeq9u9a.scala:34)\n\tat Problem.main(tmpzxeq9u9a.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = 0 until s.length\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.filter(_ % 2 == 0)\n        val evenIndices = evenIndices.filter(_\
    \ % 2 == 0)\n        val evenIndices = evenIndices.filter(_ % 2 == 0)\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.filter(_ % 2 == 0)\n        val evenIndices = evenIndices.filter(_\
    \ % 2 == 0)\n        val evenIndices = evenIndices.filter(_ % 2 == 0)\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.filter(_ % 2 == 0)\n        val evenIndices = evenIndices.filter(_\
    \ % 2 == 0)\n        val evenIndices = evenIndices.filter(_ % 2 == 0)\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.filter(_ % 2 == 0)\n        val evenIndices = evenIndices.filter(_\
    \ % 2 == 0)\n        val evenIndices = evenIndices.filter(_ % 2 == 0)\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.filter(_ % 2 == 0)\n        val evenIndices = evenIndices.filter(_\
    \ % 2 == 0)\n        val evenIndices = evenIndices.filter(_ % 2 == 0)\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.filter(_ % 2 == 0)\n        val evenIndices = evenIndices.filter(_\
    \ % 2 == 0)\n        val evenIndices = evenIndices.filter(_ % 2 == 0)\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.filter(_ % 2 == 0)\n        val evenIndices = evenIndices.filter(_\
    \ % 2 == 0)\n        val evenIndices = evenIndices.filter(_ % 2 == 0)\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.filter(_ % 2 == 0)\n        val evenIndices = evenIndices.filter(_\
    \ % 2 == 0)\n        val evenIndices = evenIndices.filter(_ % 2 == 0)\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.filter(_ % 2 == 0)\n        val evenIndices = evenIndices.filter(_\
    \ % 2 == 0)\n\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4b2735yc.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ % \e[31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4b2735yc.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ % \e[31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4b2735yc.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ % \e[31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4b2735yc.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ % \e[31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4b2735yc.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |"
  stdout: ''
  timestamp: 1659793474
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                count += 1\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp88zhfx8t.scala:21)\n\tat Problem.main(tmp88zhfx8t.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length) if (s(i).isUpper) evenIndices += i\n        evenIndices.toList.map(i\
    \ => vowels.indexOf((s(i).toLowerCase))).sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvir7ayi3.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"A\", \"E\", \"I\", \"O\", \"U\")\n        val evenIndices = mutable.Set[Int]()\n\
    \        for (i <- 0 until s.length) evenIndices += if (i % 2 == 0) i else i +\
    \ 1\n        evenIndices.toList.map(vowels.contains).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpexxkz1kq.scala:15:51 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until s.length)\
    \ evenIndices += \e[33mif\e[0m (i % \e[31m2\e[0m == \e[31m0\e[0m) i \e[33melse\e\
    [0m i + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                                  \
    \                 ^^\e[0m\n\e[31m   |\e[0m                                   \
    \     expression expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpexxkz1kq.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\".toCharArray\n        val evenIndices = mutable.ArrayBuffer.empty[Int]\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3f7dbpod.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"A\", \"E\", \"I\", \"O\", \"U\")\n        val evenIndices = mutable.Set[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(s(i)))\n        \
    \        if (s(i) % 2 == 0)\n                    evenIndices += i\n        evenIndices.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpymm9urh1.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpymm9urh1.scala:16:24 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i)))\n\e[31m\e[31m\
    \   |\e[0m                       ^^^^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    Char\n\e[31m   |\e[0m                       Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) >= 0)\n\
    \                if (i % 2 == 0)\n                    evenIndices += i\n     \
    \   evenIndices.size\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7hlggd6u.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length) if (vowels(i) % 2 == 0) evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l) { (sum, index) =>\n            if (index\
    \ % 2 == 0) sum + vowels(index)\n            else sum\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphdj6ia9i.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        val\
    \ upperIndices = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n   \
    \         if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2 ==\
    \ 0)\n                    evenIndices += i\n                else\n           \
    \         upperIndices += i\n        evenIndices.toSet.count(i => vowels.indexOf(s.charAt(i))\
    \ >= 0)\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz4mi_ill.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpz4mi_ill.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mupperIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0L\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' && s(i+1)\
    \ == 'A' && s(i+2) == 'A')\n                count += 1\n            else if (s(i)\
    \ == 'a' && s(i+1) == 'a' && s(i+2) == 'a')\n                count += 1\n    \
    \        else if (s(i) == 'B' && s(i+1) == 'B' && s(i+2) == 'B')\n           \
    \     count += 1\n            else if (s(i) == 'b' && s(i+1) == 'b' && s(i+2)\
    \ == 'b')\n                count += 1\n            else if (s(i) == 'C' && s(i+1)\
    \ == 'C' && s(i+2) == 'C')\n                count += 1\n            else if (s(i)\
    \ == 'c' && s(i+1) == 'c' && s(i+2) == 'c')\n                count += 1\n    \
    \        else if (s(i) == 'D' && s(i+1) == 'D' && s(i+2) == 'D')\n           \
    \     count += 1\n            else if (s(i) == 'd' && s(i+1) == 'd' && s(i+2)\
    \ == 'd')\n                count += 1\n            else if (s(i) == 'E' && s(i+1)\
    \ == 'E' && s(i+2) == 'E')\n                count += 1\n            else if (s(i)\
    \ == 'e' && s(i+1) == 'e' && s(i+2) == 'e')\n                count += 1\n    \
    \        else if (s(i) == 'F' && s(i+1) == 'F' && s(i+2) == 'F')\n           \
    \     count += 1\n            else if (s(i) == 'f' && s(i+1) == 'f' && s(i+2)\
    \ == 'f')\n                count += 1\n            else if (s(i) == 'G' && s(i+1)\
    \ == 'G' && s(i+2) == 'G')\n                count += 1\n            else if (s(i)\
    \ == 'g' && s(i+1) == 'g' && s(i+2) == 'g')\n                count += 1\n    \
    \        else if (s(i) == 'H' && s(i+1) == 'H' && s(i+2) == 'H')\n           \
    \     count += 1\n            else if (s(i) == 'h' && s(i+1) == 'h' && s(i+2)\
    \ == 'h')\n                count += 1\n            else if (s(i) == 'I' && s(i+1)\
    \ == 'I' && s(i+2) == 'I')\n                count += 1\n            else if (s(i)\
    \ == 'i' && s(i+1) == 'i' && s(i+2) == 'i')\n                count += 1\n    \
    \        else if (s(i) == 'J' && s(i+1) == 'J' && s(i+2) == 'J')\n           \
    \     count += 1\n            else if (s(i) == 'j' && s(i+1) == 'j' && s(i+2)\
    \ == 'j')\n                count += 1\n            else if (s(i) == 'K' && s(i+1)\
    \ == 'K' && s(i+2) == 'K')\n                count += 1\n            else if (s(i)\
    \ == 'k' && s(i+1) == 'k' && s(i+2) == 'k')\n                count += 1\n\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzos7gy3q.scala:14:8\
    \ ---------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m until s.length)\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m  \
    \ |\e[0m        Found:    Unit\n\e[31m   |\e[0m        Required: Long\n\e[31m15\
    \ |\e[0m            \e[33mif\e[0m (s(i) == \e[31m'A'\e[0m && s(i+\e[31m1\e[0m)\
    \ == \e[31m'A'\e[0m && s(i+\e[31m2\e[0m) == \e[31m'A'\e[0m)\n\e[31m16 |\e[0m \
    \               count += \e[31m1\e[0m\n\e[31m17 |\e[0m            \e[33melse\e\
    [0m \e[33mif\e[0m (s(i) == \e[31m'a'\e[0m && s(i+\e[31m1\e[0m) == \e[31m'a'\e\
    [0m && s(i+\e[31m2\e[0m) == \e[31m'a'\e[0m)\n\e[31m18 |\e[0m                count\
    \ += \e[31m1\e[0m\n\e[31m19 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (s(i)\
    \ == \e[31m'B'\e[0m && s(i+\e[31m1\e[0m) == \e[31m'B'\e[0m && s(i+\e[31m2\e[0m)\
    \ == \e[31m'B'\e[0m)\n\e[31m20 |\e[0m                count += \e[31m1\e[0m\n\e\
    [31m21 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (s(i) == \e[31m'b'\e[0m\
    \ && s(i+\e[31m1\e[0m) == \e[31m'b'\e[0m && s(i+\e[31m2\e[0m) == \e[31m'b'\e[0m)\n\
    \e[31m22 |\e[0m                count += \e[31m1\e[0m\n\e[31m23 |\e[0m        \
    \    \e[33melse\e[0m \e[33mif\e[0m (s(i) == \e[31m'C'\e[0m && s(i+\e[31m1\e[0m)\
    \ == \e[31m'C'\e[0m && s(i+\e[31m2\e[0m) == \e[31m'C'\e[0m)\n\e[31m24 |\e[0m \
    \               count += \e[31m1\e[0m\n\e[31m25 |\e[0m            \e[33melse\e\
    [0m \e[33mif\e[0m (s(i) == \e[31m'c'\e[0m && s(i+\e[31m1\e[0m) == \e[31m'c'\e\
    [0m && s(i+\e[31m2\e[0m) == \e[31m'c'\e[0m)\n\e[31m26 |\e[0m                count\
    \ += \e[31m1\e[0m\n\e[31m27 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (s(i)\
    \ == \e[31m'D'\e[0m && s(i+\e[31m1\e[0m) == \e[31m'D'\e[0m && s(i+\e[31m2\e[0m)\
    \ == \e[31m'D'\e[0m)\n\e[31m28 |\e[0m                count += \e[31m1\e[0m\n\e\
    [31m29 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (s(i) == \e[31m'd'\e[0m\
    \ && s(i+\e[31m1\e[0m) == \e[31m'd'\e[0m && s(i+\e[31m2\e[0m) == \e[31m'd'\e[0m)\n\
    \e[31m30 |\e[0m                count += \e[31m1\e[0m\n\e[31m31 |\e[0m        \
    \    \e[33melse\e[0m \e[33mif\e[0m (s(i) == \e[31m'E'\e[0m && s(i+\e[31m1\e[0m)\
    \ == \e[31m'E'\e[0m && s(i+\e[31m2\e[0m) == \e[31m'E'\e[0m)\n\e[31m32 |\e[0m \
    \               count += \e[31m1\e[0m\n\e[31m33 |\e[0m            \e[33melse\e\
    [0m \e[33mif\e[0m (s(i"
  stdout: ''
  timestamp: 1659793480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                if (i % 2 == 0)\n                    evenIndices += i\n     \
    \   evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj07kzco7.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        val evenIndices = mutable.Set[Int]()\n     \
    \   val evenIndices_ = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n\
    \            if (vowels(s(i)))\n                if (s(i) % 2 == 0)\n         \
    \           evenIndices += i\n                else\n                    evenIndices_\
    \ += i\n        evenIndices.size + (evenIndices_.size - evenIndices.size)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3jdyqalu.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp3jdyqalu.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices_\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ > -1)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpze2c3rle.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                count += 1\n\
    \        count * 2\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyompfjlh.scala:21)\n\tat Problem.main(tmpyompfjlh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\".toSet\n        val evenIndices = mutable.Set[Int]()\n     \
    \   for (i <- 0 until s.length)\n            if (vowels(s(i)))\n             \
    \   if (s(i) % 2 == 0)\n                    evenIndices += i\n        evenIndices.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeg4vh95_.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' || s(i)\
    \ == 'a' || s(i) == 'E' || s(i) == 'e' || s(i) == 'I' || s(i) == 'i' || s(i) ==\
    \ 'O' || s(i) == 'o' || s(i) == 'U' || s(i) == 'u')\n                count +=\
    \ 1\n        count \n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7vz69jfa.scala:20)\n\tat Problem.main(tmp7vz69jfa.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ArrayBuffer.empty[Int]\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp32de3ggn.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) > -1)\n\
    \                if (i % 2 == 0)\n                    evenIndices += i\n     \
    \   evenIndices.size\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7i_f3nce.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = 0 until s.length\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_ <\
    \ s.length)\n        val evenIndices = evenIndices.filter(_ > 0)\n        val\
    \ evenIndices = evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndices = evenIndices.filter(_ < s.length)\n        val\
    \ evenIndices = evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_\
    \ < s.length)\n        val evenIndices = evenIndices.filter(_ > 0)\n        val\
    \ evenIndices = evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndices = evenIndices.filter(_ < s.length)\n        val\
    \ evenIndices = evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_\
    \ < s.length)\n        val evenIndices = evenIndices.filter(_ > 0)\n        val\
    \ evenIndices = evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndices = evenIndices.filter(_ < s.length)\n        val\
    \ evenIndices = evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_\
    \ < s.length)\n        val evenIndices = evenIndices.filter(_ > 0)\n        val\
    \ evenIndices = evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndices = evenIndices.filter(_ < s.length)\n        val\
    \ evenIndices = evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_\
    \ < s.length)\n        val evenIndices = evenIndices.filter(_ > 0)\n        val\
    \ evenIndices = evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndices = evenIndices.filter(_ < s.length)\n        val\
    \ evenIndices = evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_\
    \ < s.length)\n        val evenIndices = evenIndices.filter(_ > 0)\n        val\
    \ evenIndices = evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndice\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpydp68xyf.scala:52:4 ----------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpydp68xyf.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenIndices\e[0m = evenIndices.filter(_ % \e[31m2\e[0m == \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpydp68xyf.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ > \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpydp68xyf.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ < s.length)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpydp68xyf.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ > \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same"
  stdout: ''
  timestamp: 1659793481
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2\
    \ == 0)\n                    count += 1\n                else\n              \
    \      count -= 1\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpg_k9kowb.scala:24)\n\tat Problem.main(tmpg_k9kowb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) >= 0)\n\
    \                if (i % 2 == 0)\n                    evenIndices += i\n     \
    \   evenIndices.size\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7hlggd6u.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = 0 until s.length\n      \
    \  val evenIndicesWithVowels = evenIndices.filter(i => vowels(i) % 2 == 0)\n \
    \       evenIndicesWithVowels.count(i => s(i) == s(i).toUpper)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf65jwuaa.scala:19)\n\tat Problem.main(tmpf65jwuaa.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793483
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)((acc, i) => acc + i)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgovcob0a.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) >= 0)\n\
    \                evenIndices += i\n        evenIndices.count(_ % 2 == 0)\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu5442a2e.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s(i)) >= 0)\n\
    \                if (s(i).toUpper == s(i).toLower)\n                    evenIndices\
    \ += i\n        evenIndices.toList.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx91wjrak.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        val\
    \ upperIndices = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n   \
    \         if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2 ==\
    \ 0)\n                    evenIndices += i\n                else\n           \
    \         upperIndices += i\n        evenIndices.toSet.size + (upperIndices.toSet.size\
    \ - evenIndices.toSet.size) * vowels.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp29z2q2m5.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp29z2q2m5.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mupperIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3nn683j.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        val\
    \ evenIndices = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n    \
    \        if (vowels.indexOf(s.charAt(i)) > -1)\n                if (i % 2 == 0)\n\
    \                    evenIndices += i\n        evenIndices.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvz_fhkvx.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpvz_fhkvx.scala:14:26 ------------------------\e[0m\e[0m\n\
    \e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) >= 0)\n\
    \                if (i % 2 == 0)\n                    evenIndices += i\n     \
    \   evenIndices.size\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7hlggd6u.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0L\n        var evenIndex = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s(i).isUpper)\n                if (evenIndex % 2 == 0)\n         \
    \           count += 1\n                evenIndex += 1\n        evenIndex = 0\n\
    \        for (i <- 0 until s.length)\n            if (s(i).isUpper)\n        \
    \        if (evenIndex % 2 == 1)\n                    count += 1\n           \
    \     evenIndex += 1\n        count * 2\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpq7qmvaml.scala:29)\n\tat Problem.main(tmpq7qmvaml.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793486
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0L\n        var even = 0\n        var odd = 0\n        for (i <- 0 until s.length)\n\
    \            if (s(i).isUpper)\n                if (even % 2 == 0)\n         \
    \           count += 1\n                even += 1\n            else\n        \
    \        if (odd % 2 == 0)\n                    count += 1\n                odd\
    \ += 1\n        even\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp99nymesb.scala:28)\n\tat Problem.main(tmp99nymesb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowelsSet = vowels.toSet\n        val evenIndices\
    \ = 0 until s.length\n        val evenIndices_set = evenIndices.toSet\n      \
    \  val evenIndices_set_size = evenIndices_set.size\n        val evenIndices_set_iterator\
    \ = evenIndices_set.iterator\n        val evenIndices_set_iterator_next = evenIndices_set_iterator.next\n\
    \        val evenIndices_set_iterator_next_value = evenIndices_set_iterator.next\n\
    \        val evenIndices_set_iterator_next_next_value = evenIndices_set_iterator.next\n\
    \        val evenIndices_set_iterator_next_next_next_value = evenIndices_set_iterator.next\n\
    \        val evenIndices_set_iterator_next_next_next_next_value = evenIndices_set_iterator.next\n\
    \        val evenIndices_set_iterator_next_next_next_next_next_value = evenIndices_set_iterator.next\n\
    \        val evenIndices_set_iterator_next_next_next_next_next_next_value = evenIndices_set_iterator.next\n\
    \        val evenIndices_set_iterator_next_next_next_next_next_next_next_value\
    \ = evenIndices_set_iterator.next\n        val evenIndices_set_iterator_next_next_next_next_next_next_next_next_value\
    \ = evenIndices_set_iterator.next\n        val evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_value\
    \ = evenIndices_set_iterator.next\n        val evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_value\
    \ = evenIndices_set_iterator.next\n        val evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_value\
    \ = evenIndices_set_iterator.next\n        val evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_value\
    \ = evenIndices_set_iterator.next\n        val evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_next_value\
    \ = evenIndices_set_iterator.next\n        val evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_next_next_value\
    \ = evenIndices_set_iterator.next\n        val evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_next_next_value\
    \ = evenIndices_set_iterator.next\n        val evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_next_next_value\
    \ = evenIndices_set_iterator.next\n        val evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_next_next_value\
    \ = evenIndices_set_iterator.next\n        val evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_next_next_value\
    \ = \n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpm2qb_e_a.scala:37:104 --------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m        \e[33mval\e[0m \e[36mevenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_next_next_value\e\
    [0m = \n\e[31m\e[31m   |\e[0m                                                \
    \                                                        ^\e[0m\n\e[31m   |\e\
    [0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpm2qb_e_a.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_value\e\
    [0m = evenIndices_set_iterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_value\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_value\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpm2qb_e_a.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mevenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_value\e\
    [0m = evenIndices_set_iterator.next\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_value\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  evenIndices_set_iterator_next_next_next_next_next_next_next_next_next_next_value\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined i"
  stdout: ''
  timestamp: 1659793485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for(i <- 0 until s.length)\n            if(vowels.contains(s(i)))\n \
    \               if(i % 2 == 0)\n                    evenIndices += i\n       \
    \ evenIndices.toList.size\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdgn96spc.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    val upperIndices = mutable.ListBuffer[Int]()\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2\
    \ == 0)\n                    evenIndices += i\n                else\n        \
    \            upperIndices += i\n        evenIndices.toList.map(evenIndices.indexOf(_)).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzjctk8p9.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpzjctk8p9.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mupperIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793483
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' || s(i)\
    \ == 'E' || s(i) == 'I' || s(i) == 'O' || s(i) == 'U')\n                count\
    \ += 1\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprqown60l.scala:22)\n\tat Problem.main(tmprqown60l.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcjva9uk2.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for(i\
    \ <- 0 until s.length) if(vowels.contains(s.charAt(i)) && i % 2 == 0) evenIndices\
    \ += i\n        evenIndices.size\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvzveg43z.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        val evenIndices = mutable.Set[Int]()\n     \
    \   for (i <- 0 until s.length)\n            if (vowels(s(i)))\n             \
    \   if (s(i) % 2 == 0)\n                    evenIndices += i\n        evenIndices.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppmebx7of.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l) { (sum,\
    \ i) =>\n            if (sum % 2 == 0)\n                sum + vowels(i)\n    \
    \        else sum\n        }\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvoa6ze20.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        val\
    \ evenIndices_ = mutable.Set[Int]()\n        val evenIndices_2 = mutable.Set[Int]()\n\
    \        val evenIndices_3 = mutable.Set[Int]()\n        val evenIndices_4 = mutable.Set[Int]()\n\
    \        val evenIndices_5 = mutable.Set[Int]()\n        val evenIndices_6 = mutable.Set[Int]()\n\
    \        val evenIndices_7 = mutable.Set[Int]()\n        val evenIndices_8 = mutable.Set[Int]()\n\
    \        val evenIndices_9 = mutable.Set[Int]()\n        val evenIndices_10 =\
    \ mutable.Set[Int]()\n        val evenIndices_11 = mutable.Set[Int]()\n      \
    \  val evenIndices_12 = mutable.Set[Int]()\n        val evenIndices_13 = mutable.Set[Int]()\n\
    \        val evenIndices_14 = mutable.Set[Int]()\n        val evenIndices_15 =\
    \ mutable.Set[Int]()\n        val evenIndices_16 = mutable.Set[Int]()\n      \
    \  val evenIndices_17 = mutable.Set[Int]()\n        val evenIndices_18 = mutable.Set[Int]()\n\
    \        val evenIndices_19 = mutable.Set[Int]()\n        val evenIndices_20 =\
    \ mutable.Set[Int]()\n        val evenIndices_21 = mutable.Set[Int]()\n      \
    \  val evenIndices_22 = mutable.Set[Int]()\n        val evenIndices_23 = mutable.Set[Int]()\n\
    \        val evenIndices_24 = mutable.Set[Int]()\n        val evenIndices_25 =\
    \ mutable.Set[Int]()\n        val evenIndices_26 = mutable.Set[Int]()\n      \
    \  val evenIndices_27 = mutable.Set[Int]()\n        val evenIndices_28 = mutable.Set[Int]()\n\
    \        val evenIndices_29 = mutable.Set[Int]()\n        val evenIndices_30 =\
    \ mutable.Set[Int]()\n        val evenIndices_31 = mutable.Set[Int]()\n      \
    \  val evenIndices_32 = mutable.Set[Int]()\n        val evenIndices_33 = mutable.Set[Int]()\n\
    \        val evenIndices_\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbuef5aoo.scala:49:4 ----------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbuef5aoo.scala:14:26\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mevenIndices\e[0m = mutable.Set[\e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbuef5aoo.scala:15:27\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mevenIndices_\e[0m = mutable.Set[\e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                          ^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpbuef5aoo.scala:16:28 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36mevenIndices_2\e[0m = mutable.Set[\e[35mInt\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpbuef5aoo.scala:17:28 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mevenIndices_3\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpbuef5aoo.scala:18:28 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mevenIndices_4\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mu"
  stdout: ''
  timestamp: 1659793487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                evenIndices += i\n        evenIndices.toList.filter(i\
    \ => i % 2 == 0).length\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp73tx1paa.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3nn683j.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        var evenIndex = 0\n        for (i <- 0 until s.length)\n      \
    \      if (s(i).isUpper)\n                if (evenIndex % 2 == 0)\n          \
    \          count += 1\n                evenIndex += 1\n        count \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) ==\
    \ (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxayo094q.scala:23)\n\tat Problem.main(tmpxayo094q.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.contains(s(i)))\n          \
    \      if (s(i).toUpper == s(i))\n                    evenIndices += i\n     \
    \   evenIndices.size\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeui7_zhs.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"A\", \"E\", \"I\", \"O\", \"U\")\n        val evenIndices = mutable.Set[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(s(i)) && s(i) % 2\
    \ == 0)\n                evenIndices += i\n        evenIndices.size\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) ==\
    \ (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbz5909w7.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbz5909w7.scala:16:24 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i)) && s(i) % \e\
    [31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                       ^^^^\e\
    [0m\n\e[31m   |\e[0m                       Found:    Char\n\e[31m   |\e[0m   \
    \                    Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\".toList\n        var count = 0\n        for (i <- 0 until s.length)\
    \ count += vowels.count(s.charAt(i).toUpper)\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1b1uxfru.scala:15:42 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until s.length)\
    \ count += vowels.count(s.charAt(i).toUpper)\n\e[31m\e[31m   |\e[0m          \
    \                          ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  value\
    \ += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmp1b1uxfru.scala:15:70 --------------------\e[0m\e[0m\n\
    \e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until s.length) count\
    \ += vowels.count(s.charAt(i).toUpper)\n\e[31m\e[31m   |\e[0m                \
    \                                          ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                                               Found:    Char\n\e[31m\
    \   |\e[0m                                               Required: Char => Boolean\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793490
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i).equals(s.charAt(i))\
    \ && i % 2 == 0)\n                evenIndices += i\n        evenIndices.toList.foldLeft(0l)((acc,\
    \ i) => acc + i)\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp10dw9isk.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"A\", \"E\", \"I\", \"O\", \"U\")\n        var count = 0\n        for\
    \ (i <- 0 until s.length if i % 2 == 0) {\n            if (vowels(s(i)) && s(i)\
    \ != \"U\") {\n                count += 1\n            }\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuv7p2vhp.scala:16:24\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i))\
    \ && s(i) != \e[31m\"U\"\e[0m) {\n\e[31m\e[31m   |\e[0m                      \
    \ ^^^^\e[0m\n\e[31m   |\e[0m                       Found:    Char\n\e[31m   |\e\
    [0m                       Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- Error:\
    \ /tmp/tmpuv7p2vhp.scala:16:32 -----------------------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i)) && s(i) != \e[31m\"\
    U\"\e[0m) {\n\e[31m\e[31m   |\e[0m                                ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n2 errors found\n"
  stdout: ''
  timestamp: 1659793492
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        val\
    \ evenIndices_ = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n   \
    \         if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2 ==\
    \ 0)\n                    evenIndices += i\n                else\n           \
    \         evenIndices_ += i\n        evenIndices.toSet.size + (evenIndices_.toSet.size\
    \ - evenIndices.toSet.size) * vowels.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9oo3lhdb.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9oo3lhdb.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices_\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        val\
    \ evenIndices = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n    \
    \        if (vowels.contains(s.charAt(i)))\n                if (i % 2 == 0)\n\
    \                    evenIndices += i\n        evenIndices.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmppv5rdh47.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmppv5rdh47.scala:14:26 ------------------------\e[0m\e[0m\n\
    \e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        var count = 0\n        for (i <- 0 until\
    \ s.length) count += vowels(i).toUpper == s(i)\n        count\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplb6blxfw.scala:15:42 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until s.length)\
    \ count += vowels(i).toUpper == s(i)\n\e[31m\e[31m   |\e[0m                  \
    \                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  value += is\
    \ not a member of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793491
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) >= 0)\n\
    \                evenIndices += i\n        evenIndices.toList.count(_ % 2 == 0)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxna7_bep.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        val\
    \ evenIndices_ = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n   \
    \         if (vowels.indexOf(s.charAt(i)) > -1)\n                if (i % 2 ==\
    \ 0)\n                    evenIndices += i\n                else\n           \
    \         evenIndices_ += i\n        evenIndices.size match {\n            case\
    \ 0 => 0\n            case 1 => evenIndices_.head\n            case _ => evenIndices_.count(i\
    \ => vowels.indexOf(s.charAt(i)) > -1)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi31mek75.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpi31mek75.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices_\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowelsSet = vowels.toSet\n        val vowelsSetIterator\
    \ = vowelsSet.iterator\n        val vowelsSetIteratorNext = vowelsSetIterator.next\n\
    \        val vowelsSetIteratorNextNext = vowelsSetIteratorNext.next\n        val\
    \ vowelsSetIteratorNextNextNext = vowelsSetIteratorNextNext.next\n        val\
    \ vowelsSetIteratorNextNextNextNext = vowelsSetIteratorNextNextNext.next\n   \
    \     val vowelsSetIteratorNextNextNextNextNext = vowelsSetIteratorNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n     \
    \   val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val vowelsSetIteratorNextNextNextNextNextNextNext\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpty9pfis8.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpty9pfis8.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e[0m\
    \ = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpty9pfis8.scala:29:12 ---------------------------\e[0m\e[0m\n\e\
    [31m29 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpty9pfis8.scala:30:12 ---------------------------\e[0m\e[0m\n\e\
    [31m30 |\e[0m        \e[33mval\e[0m \e[36mvowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext\e\
    [0m = vowelsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659793493
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = s filter (x => x % 2 == 0)\
    \ map (x => vowels.indexOf(x))\n        evenIndices.toSet.size + (evenIndices.toSet.size\
    \ % 2)\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6f3akvg_.scala:18)\n\tat Problem.main(tmp6f3akvg_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793494
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\".toList\n        val evenIndices = 0 until s.length\n      \
    \  evenIndices.filter(i => vowels(i).isUpper).count(i => s(i).isUpper)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) ==\
    \ (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbr47i9if.scala:18)\n\tat Problem.main(tmpbr47i9if.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = 0 until s.length\n      \
    \  evenIndices.foreach(i => if (s(i).isUpper) vowels.count(_ == s(i)) else 0)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplbagcv9z.scala:15:27\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        evenIndices.foreach(\e\
    [36mi\e[0m => \e[33mif\e[0m (s(i).isUpper) vowels.count(_ == s(i)) \e[33melse\e\
    [0m \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    Unit\n\e[31m   |\e[0m        Required: Long\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        val evenIndices = mutable.Set[Int]()\n     \
    \   for (i <- 0 until s.length)\n            if (vowels(s(i)))\n             \
    \   evenIndices += i\n        evenIndices.toList.count(i => s(i) == 'U')\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu9_r7unt.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793491
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0L\n        for (i <- 0 until s.length if s(i) == 'A') {\n            count\
    \ += 1L\n        }\n        for (i <- 0 until s.length if s(i) == 'E') {\n   \
    \         count += 1L\n        }\n        for (i <- 0 until s.length if s(i) ==\
    \ 'I') {\n            count += 1L\n        }\n        for (i <- 0 until s.length\
    \ if s(i) == 'O') {\n            count += 1L\n        }\n        for (i <- 0 until\
    \ s.length if s(i) == 'U') {\n            count += 1L\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf1wwq78k.scala:34)\n\tat Problem.main(tmpf1wwq78k.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793496
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = 0 until s.length\n      \
    \  evenIndices.filter(_ % 2 == 0).map(s.length).count(s => vowels.contains(s.charAt(_)))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpq3ybmul9.scala:15:43\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        evenIndices.filter(_\
    \ % \e[31m2\e[0m == \e[31m0\e[0m).map(s.length).count(\e[36ms\e[0m => vowels.contains(s.charAt(_)))\n\
    \e[31m\e[31m   |\e[0m                                           ^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                           Found:    \e[1m\e[31m(\e\
    [0m\e[1m\e[31m)\e[0m => Int\n\e[31m   |\e[0m                                 \
    \          Required: \e[1m\e[32mInt\e[0m => Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E081] Type Error: /tmp/tmpq3ybmul9.scala:15:89 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        evenIndices.filter(_ % \e[31m2\e[0m == \e[31m0\e\
    [0m).map(s.length).count(\e[36ms\e[0m => vowels.contains(s.charAt(_)))\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \                         ^\e[0m\n\e[31m   |\e[0m   Missing parameter type\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m   I could not infer the type of the parameter _$2\
    \ of expanded function:\n\e[31m   |\e[0m   _$2 => s.charAt(_$2).\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpq3ybmul9.scala:15:82 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        evenIndices.filter(_ % \e[31m2\e[0m == \e[31m0\e\
    [0m).map(s.length).count(\e[36ms\e[0m => vowels.contains(s.charAt(_)))\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \                ^^^^^^^^\e[0m\n\e[31m   |\e[0m                              \
    \       value charAt is not a member of Int\n3 errors found\n"
  stdout: ''
  timestamp: 1659793464
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels(i).isUpper)\n                count += 1\n            else\n\
    \                if (i % 2 == 0)\n                    count += 1\n           \
    \     else\n                    count += 0\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmps_2mhpwb.scala:26)\n\tat Problem.main(tmps_2mhpwb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793495
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2\
    \ == 0)\n                    count += 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkirajp01.scala:22)\n\tat Problem.main(tmpkirajp01.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        val evenIndices = mutable.Set[Int]()\n     \
    \   for (i <- 0 until s.length)\n            if (vowels(s(i)))\n             \
    \   if (s(i) % 2 == 0)\n                    evenIndices += i\n        evenIndices.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppmebx7of.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s(i)) >= 0)\n\
    \                if (s(i).toUpper == s(i))\n                    evenIndices +=\
    \ i\n        evenIndices.toList.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwe_nvomg.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793492
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowelCounts = mutable.Map[Char, Long]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelCounts(s.charAt(i)) = vowelCounts.getOrElse(s.charAt(i),\
    \ 0) + 1\n        vowelCounts.filter(_._2 % 2 == 0).map(_._1).sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4x7o_9cn.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelCounts\e[0m = mutable.Map[\e\
    [35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793491
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length) evenIndices += if (i % 2 == 0) vowels.indexOf(s(i))\
    \ else 0\n        evenIndices.sum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmph64yujeb.scala:15:51 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until s.length)\
    \ evenIndices += \e[33mif\e[0m (i % \e[31m2\e[0m == \e[31m0\e[0m) vowels.indexOf(s(i))\
    \ \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m                        \
    \                           ^^\e[0m\n\e[31m   |\e[0m                         \
    \               expression expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmph64yujeb.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.Set[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.count(i => s(i) ==\
    \ 'U')\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg5nho7bu.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    val upperIndices = mutable.ListBuffer[Int]()\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2\
    \ == 0)\n                    evenIndices += i\n                else\n        \
    \            upperIndices += i\n        evenIndices.toList.map(evenIndices.indexOf(_)).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzjctk8p9.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpzjctk8p9.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mupperIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793483
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) >= 0)\n\
    \                if (i % 2 == 0)\n                    evenIndices += i\n     \
    \   evenIndices.size\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7hlggd6u.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l) { (sum,\
    \ i) =>\n            if (sum % 2 == 0)\n                sum + vowels(i)\n    \
    \        else sum\n        }\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvoa6ze20.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793484
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' || s(i)\
    \ == 'a') count += 1\n            if (s(i) == 'B' || s(i) == 'b') count += 1\n\
    \            if (s(i) == 'C' || s(i) == 'c') count += 1\n            if (s(i)\
    \ == 'D' || s(i) == 'd') count += 1\n            if (s(i) == 'E' || s(i) == 'e')\
    \ count += 1\n            if (s(i) == 'F' || s(i) == 'f') count += 1\n       \
    \     if (s(i) == 'G' || s(i) == 'g') count += 1\n        if (count % 2 == 0)\n\
    \            count\n        else\n            0\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkczywo02.scala:28)\n\tat Problem.main(tmpkczywo02.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793498
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        var count = 0L\n        var i = 0\n       \
    \ while (i < s.length)\n            if (vowels(i) % 2 == 0)\n                count\
    \ += 1\n            i += 1\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpekp1_vj6.scala:23)\n\tat Problem.main(tmpekp1_vj6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793498
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i).isUpper)\n  \
    \              count += 1\n        if (count % 2 == 0)\n            count\n  \
    \      else\n            0\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpd0m0zj6z.scala:23)\n\tat Problem.main(tmpd0m0zj6z.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3nn683j.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3nn683j.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s(i)) >= 0)\n\
    \                if (s(i).toUpperCase == \"A\" || s(i).toUpperCase == \"E\" ||\
    \ s(i).toUpperCase == \"I\" || s(i).toUpperCase == \"O\" || s(i).toUpperCase ==\
    \ \"U\")\n                    evenIndices += i\n        evenIndices.toList.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo9x0bybl.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpo9x0bybl.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                \e[33mif\e[0m (s(i).toUpperCase == \e\
    [31m\"A\"\e[0m || s(i).toUpperCase == \e[31m\"E\"\e[0m || s(i).toUpperCase ==\
    \ \e[31m\"I\"\e[0m || s(i).toUpperCase == \e[31m\"O\"\e[0m || s(i).toUpperCase\
    \ == \e[31m\"U\"\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    value toUpperCase is not a member of Char\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = 0 until s.length\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndices = evenIndices.filter(_ < s.length)\n        val\
    \ evenIndices = evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_\
    \ < s.length)\n        val evenIndices = evenIndices.filter(_ > 0)\n        val\
    \ evenIndices = evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndices = evenIndices.filter(_ < s.length)\n        val\
    \ evenIndices = evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_\
    \ < s.length)\n        val evenIndices = evenIndices.filter(_ > 0)\n        val\
    \ evenIndices = evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndices = evenIndices.filter(_ < s.length)\n        val\
    \ evenIndices = evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_\
    \ < s.length)\n        val evenIndices = evenIndices.filter(_ > 0)\n        val\
    \ evenIndices = evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndices = evenIndices.filter(_ < s.length)\n        val\
    \ evenIndices = evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_\
    \ < s.length)\n        val evenIndices = evenIndices.filter(_ > 0)\n        val\
    \ evenIndices = evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndices = evenIndices.filter(_ < s.length)\n        val\
    \ evenIndices = evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_\
    \ < s.length)\n        val evenIndices = evenIndices.filter(_ > 0)\n        val\
    \ evenIndices = evenIndices.filter(_ < s.length)\n        val evenIndices = evenIndices.filter(_\
    \ > 0)\n        val evenIndices = evenIndices.filter(_ < s.length)\n        val\
    \ evenIndices = evenIndices.filter(_ > 0)\n        val evenIndices = evenIndices.filter(_\
    \ < s.length)\n        val even\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr7q3xqhw.scala:52:4 ----------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpr7q3xqhw.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenIndices\e[0m = evenIndices.filter(_ % \e[31m2\e[0m == \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr7q3xqhw.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ < s.length)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr7q3xqhw.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ > \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr7q3xqhw.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ < s.length)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the"
  stdout: ''
  timestamp: 1659793498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0) evenIndices\
    \ += i\n        evenIndices.toList.foldLeft(0l) { (acc, i) => acc + s.charAt(i).toUpperCase\
    \ }\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd_zaa342.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = 0 until s.length\n \
    \       val evenIndices = evenIndices.filter(i => s(i).isUpper)\n        val evenIndices\
    \ = evenIndices.filter(i => vowels(i).isEven)\n        evenIndices.length\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmt288bk8.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(\e\
    [36mi\e[0m => s(i).isUpper)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmt288bk8.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(\e\
    [36mi\e[0m => vowels(i).isEven)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659793497
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        var index = 0\n        while (index < s.length()) {\n         \
    \   if (s(index).isUpper) {\n                count += 1\n            }\n     \
    \       index += 1\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzq_yrngw.scala:24)\n\tat Problem.main(tmpzq_yrngw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for(i\
    \ <- 0 until s.length)\n            if(vowels.indexOf(s.charAt(i)) > -1)\n   \
    \             if(i % 2 == 0)\n                    evenIndices += i\n        evenIndices.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx32v17ri.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length) if (vowels(i) % 2 == 0) evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l) { (sum, index) => sum + s.length - index\
    \ }\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqz5m76wb.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"A\", \"E\", \"I\", \"O\", \"U\")\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(s(i)) && s(i) % 2\
    \ == 0)\n                evenIndices += i\n        evenIndices.toList.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfl02xdwr.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfl02xdwr.scala:16:24 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i)) && s(i) % \e\
    [31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                       ^^^^\e\
    [0m\n\e[31m   |\e[0m                       Found:    Char\n\e[31m   |\e[0m   \
    \                    Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793501
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i).isUpper)\n  \
    \              count += 1\n            else\n                if (s(i).isUpper)\n\
    \                    count -= 1\n                else\n                    count\
    \ += 2\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpi0uafkxj.scala:25)\n\tat Problem.main(tmpi0uafkxj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793502
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i).equals(s.charAt(i))\
    \ && i % 2 == 0)\n                evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_\
    \ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp53tskk8t.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s(i).toChar)\
    \ != -1)\n                if (s(i).toChar != 'A')\n                    evenIndices\
    \ += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuv4c_njm.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = mutable.Set(\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"o\", \"U\"\
    , \"u\")\n        val evenIndices = mutable.Set(0, 2, 4, 6, 8)\n        val counts\
    \ = mutable.Map[Int, Long]()\n        for (i <- 0 until s.length)\n          \
    \  if (vowels(s(i)) && evenIndices(i))\n                counts(evenIndices(i))\
    \ += 1\n        counts.values.sum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphyn4fj1d.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set(\e\
    [31m\"A\"\e[0m, \e[31m\"a\"\e[0m, \e[31m\"E\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"\
    I\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"O\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"U\"\e\
    [0m, \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmphyn4fj1d.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set(\e\
    [31m0\e[0m, \e[31m2\e[0m, \e[31m4\e[0m, \e[31m6\e[0m, \e[31m8\e[0m)\n\e[31m\e\
    [31m   |\e[0m                          ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmphyn4fj1d.scala:15:21 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.Map[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659793499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n\
    \            if (vowels(s(i)))\n                if (s(i) % 2 == 0)\n         \
    \           evenIndices += i\n        evenIndices.toList.map(i => s(i)).count(c\
    \ => c.toUpper == 'A')\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9r7e83ny.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp9r7e83ny.scala:14:26 ------------------------\e[0m\e[0m\n\
    \e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9r7e83ny.scala:17:24 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(s(i)))\n\e[31m\e[31m\
    \   |\e[0m                       ^^^^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    Char\n\e[31m   |\e[0m                       Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793502
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' || s(i)\
    \ == 'a') count += 1\n            if (s(i) == 'E' || s(i) == 'e') count += 1\n\
    \            if (s(i) == 'I' || s(i) == 'i') count += 1\n            if (s(i)\
    \ == 'O' || s(i) == 'o') count += 1\n            if (s(i) == 'U' || s(i) == 'u')\
    \ count += 1\n        if (count % 2 == 0) 1 else 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw_1vb1dx.scala:24)\n\tat Problem.main(tmpw_1vb1dx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793505
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        val\
    \ evenIndices = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n    \
    \        if (vowels.indexOf(s.charAt(i).toLowerCase) != -1)\n                if\
    \ (i % 2 == 0)\n                    evenIndices += i\n        evenIndices.toList.foldLeft(0l)\
    \ { (sum, index) =>\n            if (index % 2 == 0)\n                sum + s.length\
    \ - index\n            else\n                sum\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp38gjwewb.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp38gjwewb.scala:14:26 ------------------------\e[0m\e[0m\n\
    \e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp38gjwewb.scala:17:43 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.indexOf(s.charAt(i).toLowerCase)\
    \ != -\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               value toLowerCase is not a\
    \ member of Char\n3 errors found\n"
  stdout: ''
  timestamp: 1659793502
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i).equals(s.charAt(i)))\
    \ {\n                evenIndices += i\n            }\n        evenIndices.toList.count(_\
    \ % 2 == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcra45dci.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793501
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) > -1)\n\
    \                if (i % 2 == 0)\n                    evenIndices += i\n     \
    \   evenIndices.toList.length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyfp3k_0x.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793501
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0L\n        for (i <- 0 until s.length)\n            if (s(i).isUpper)\n \
    \               if (s(i).isEven)\n                    count += 1\n           \
    \     else\n                    count -= 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpw3kzfouq.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                \e[33mif\e[0m (s(i).isEven)\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \         value isEven is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793504
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = mutable.Set[Char]('a','e','i','o','u')\n        val evenIndices = mutable.Set[Int]()\n\
    \        val evenIndices_ = mutable.Set[Int]()\n        for(i <- 0 until s.length){\n\
    \            if(vowels(s(i)) && s(i).isUpper){\n                evenIndices_ +=\
    \ i\n            }\n            if(s(i).isUpper){\n                evenIndices\
    \ += i\n            }\n        }\n        evenIndices_.count(_ % 2 == 0)\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp041kmtsq.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp041kmtsq.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp041kmtsq.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices_\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659793503
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i).toUpper) != -1)\n                if\
    \ (i % 2 == 0)\n                    count += 1\n                else\n       \
    \             count -= 1\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp03q6bjvm.scala:24)\n\tat Problem.main(tmp03q6bjvm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793507
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val evenIndices = mutable.Set[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(s(i)))\n        \
    \        if (s(i) % 2 == 0)\n                    evenIndices += i\n        evenIndices.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqtxu5b_6.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqtxu5b_6.scala:16:24 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i)))\n\e[31m\e[31m\
    \   |\e[0m                       ^^^^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    Char\n\e[31m   |\e[0m                       Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793470
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' || s(i)\
    \ == 'E' || s(i) == 'I' || s(i) == 'O' || s(i) == 'U')\n                count\
    \ += 1\n        count * 2\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8xht6hot.scala:20)\n\tat Problem.main(tmp8xht6hot.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793507
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3nn683j.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length) if (vowels(i) % 2 == 0) evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpre4riq2v.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793504
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) >= 0)\n\
    \                if (i % 2 == 0)\n                    evenIndices += i\n     \
    \   evenIndices.toList.count(_ % 2 == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqxysjqzr.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793505
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' || s(i)\
    \ == 'E' || s(i) == 'I' || s(i) == 'O' || s(i) == 'U')\n                count\
    \ += 1\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprqown60l.scala:22)\n\tat Problem.main(tmprqown60l.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793486
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels(s(i)))\n                count += 1\n            else\n\
    \                count += 0\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp506gw1ms.scala:23)\n\tat Problem.main(tmp506gw1ms.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\".toList\n        val evenIndices = s filter (x => x % 2 == 0)\
    \ map (x => vowels.indexOf(x))\n        evenIndices.toList.size + (evenIndices.toList.size\
    \ % 2 == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpgovyjwbj.scala:15:32 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        evenIndices.toList.size + (evenIndices.toList.size\
    \ % \e[31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m None of the overloaded alternatives of \e[33mmethod\e[0m\
    \ \e[35m+\e[0m in \e[33mclass\e[0m \e[35mInt\e[0m with types\n\e[31m   |\e[0m\
    \  (x: Double): Double\n\e[31m   |\e[0m  (x: Float): Float\n\e[31m   |\e[0m  (x:\
    \ Long): Long\n\e[31m   |\e[0m  (x: Int): Int\n\e[31m   |\e[0m  (x: Char): Int\n\
    \e[31m   |\e[0m  (x: Short): Int\n\e[31m   |\e[0m  (x: Byte): Int\n\e[31m   |\e\
    [0m  (x: String): String\n\e[31m   |\e[0m match arguments (Boolean)\n1 error found\n"
  stdout: ''
  timestamp: 1659793505
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) > -1)\n\
    \                if (i % 2 == 0)\n                    evenIndices += i\n     \
    \   evenIndices.size\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7i_f3nce.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowelsSet = vowels.toSet\n        val vowelsCount\
    \ = s.toCharArray.zipWithIndex.filter(c => vowelsSet.contains(c._1)).count\n \
    \       vowelsCount / s.length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1jlb4l8s.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        vowelsCount / s.length\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue / is not a member of (((Char,\
    \ Int)) => Boolean) => Int, but could be made available as an extension method.\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might make progress\
    \ towards fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m\n1 error found\n"
  stdout: ''
  timestamp: 1659793508
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"o\", \"U\", \"u\")\n\
    \        var count = 0\n        for (i <- 0 until s.length)\n            if (vowels(s(i)))\n\
    \                if (s(i) % 2 == 0)\n                    count += 1\n        \
    \        else\n                    count -= 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpddsy4mh6.scala:16:24\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i)))\n\
    \e[31m\e[31m   |\e[0m                       ^^^^\e[0m\n\e[31m   |\e[0m       \
    \                Found:    Char\n\e[31m   |\e[0m                       Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793508
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ > -1)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpze2c3rle.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l) { (sum,\
    \ index) => sum + vowels(index) }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr53crjn6.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793505
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"A\", \"E\", \"I\", \"O\", \"U\")\n        val evenIndices = mutable.Set[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(s(i)))\n        \
    \        if (s(i) % 2 == 0)\n                    evenIndices += i\n        evenIndices.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpymm9urh1.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpymm9urh1.scala:16:24 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i)))\n\e[31m\e[31m\
    \   |\e[0m                       ^^^^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    Char\n\e[31m   |\e[0m                       Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        val evenIndices = 0 until s.length\n       \
    \ evenIndices.foldLeft(0l)( (acc, i) => acc + (if (i % 2 == 0) vowels(s(i)) else\
    \ 0l) )\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpqlcmu2ql.scala:15:50 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        evenIndices.foldLeft(\e[31m0l\e[0m)( (\e[36macc\e\
    [0m, \e[36mi\e[0m) => acc + (\e[33mif\e[0m (i % \e[31m2\e[0m == \e[31m0\e[0m)\
    \ vowels(s(i)) \e[33melse\e[0m \e[31m0l\e[0m) )\n\e[31m\e[31m   |\e[0m       \
    \                                       ^^^^^\e[0m\n\e[31m   |\e[0mNone of the\
    \ overloaded alternatives of \e[33mmethod\e[0m \e[35m+\e[0m in \e[33mclass\e[0m\
    \ \e[35mLong\e[0m with types\n\e[31m   |\e[0m (x: Double): Double\n\e[31m   |\e\
    [0m (x: Float): Float\n\e[31m   |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x: Int):\
    \ Long\n\e[31m   |\e[0m (x: Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\e\
    [31m   |\e[0m (x: Byte): Long\n\e[31m   |\e[0m (x: String): String\n\e[31m   |\e\
    [0mmatch arguments (Boolean | (\e[31m0L\e[0m : Long))\n1 error found\n"
  stdout: ''
  timestamp: 1659793505
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i)) >= 0)\n\
    \                if (i % 2 == 0)\n                    evenIndices += i\n     \
    \   evenIndices.size\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7hlggd6u.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowelsSet = vowels.toSet\n        val evenIndices\
    \ = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n            if (vowelsSet(s(i)))\
    \ evenIndices += i\n        evenIndices.toList.count(_ % 2 == 0)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpps3hq9u_.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793506
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = s filter (_ % 2 == 0)\n \
    \       val evenIndices_vowels = evenIndices filter (vowels.contains)\n      \
    \  evenIndices_vowels.length\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnxrkyka_.scala:19)\n\tat Problem.main(tmpnxrkyka_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793511
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' && s(i+1)\
    \ == 'A')\n                count += 1\n            if (s(i) == 'a' && s(i+1) ==\
    \ 'a')\n                count += 1\n            if (s(i) == 'B' && s(i+1) == 'B')\n\
    \                count += 1\n            if (s(i) == 'b' && s(i+1) == 'b')\n \
    \               count += 1\n            if (s(i) == 'C' && s(i+1) == 'C')\n  \
    \              count += 1\n            if (s(i) == 'c' && s(i+1) == 'c')\n   \
    \             count += 1\n            if (s(i) == 'D' && s(i+1) == 'D')\n    \
    \            count += 1\n            if (s(i) == 'd' && s(i+1) == 'd')\n     \
    \           count += 1\n            if (s(i) == 'E' && s(i+1) == 'E')\n      \
    \          count += 1\n            if (s(i) == 'e' && s(i+1) == 'e')\n       \
    \         count += 1\n            if (s(i) == 'F' && s(i+1) == 'F')\n        \
    \        count += 1\n            if (s(i) == 'f' && s(i+1) == 'f')\n         \
    \       count += 1\n            if (s(i) == 'G' && s(i+1) == 'G')\n          \
    \      count += 1\n            if (s(i) == 'g' && s(i+1) == 'g')\n           \
    \     count += 1\n            if (s(i) == 'H' && s(i+1) == 'H')\n            \
    \    count += 1\n            if (s(i) == 'h' && s(i+1) == 'h')\n             \
    \   count += 1\n            if (s(i) == 'I' && s(i+1) == 'I')\n              \
    \  count += 1\n            if (s(i) == 'i' && s(i+1) == 'i')\n               \
    \ count += 1\n            if (s(i) == 'J' && s(i+1) == 'J')\n                count\
    \ += 1\n            if (s(i) == 'j' && s(i+1) == 'j')\n                count +=\
    \ 1\n            if (s(i) == 'K' && s(i+1) == 'K')\n                count += 1\n\
    \            if (s(i) == 'k' && s(i+1) == 'k')\n                count += 1\n \
    \           if (s(i) == 'L' && s(i+1) == 'L')\n                count += 1\n  \
    \          if (s(i) == 'l' && s(i+1) == 'l')\n                count += 1\n   \
    \         if (s(i) == 'M' && s(i+1) == 'M')\n                count += 1\n    \
    \        if (s(i) == 'm' && s(i+1) == 'm')\n                count += 1\n     \
    \       if (s(i) == 'N' && s(i+1) == 'N')\n                count += 1\n      \
    \      if (s(i) == 'n' && s(i+1) == 'n')\n                count += 1\n       \
    \     if (s(i) == 'O' && s(i+1) == 'O')\n                count += 1\n        \
    \    if (s(i) == 'o' && s(i+1) == 'o')\n                count += 1\n         \
    \   if (s(i) == 'P' && s(i+1) == 'P')\n                count += 1\n          \
    \  if (s(i) == 'p' && s(i+1) == '\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp8vlq91cs.scala:77:41 -----------------------------------------\e\
    [0m\e[0m\n\e[31m77 |\e[0m            \e[33mif\e[0m (s(i) == \e[31m'p'\e[0m &&\
    \ s(i+\e[31m1\e[0m) == '\n\e[31m\e[31m   |\e[0m                              \
    \           ^\e[0m\n\e[31m   |\e[0m                                         unclosed\
    \ character literal\n\e[33m\e[33m-- [E129] Potential Issue Warning: /tmp/tmp8vlq91cs.scala:78:4\
    \ -----------------\e[0m\e[0m\n\e[33m77 |\e[0m            \e[33mif\e[0m (s(i)\
    \ == \e[31m'p'\e[0m && s(i+\e[31m1\e[0m) == '\n\e[33m78 |\e[0m    }\n\e[33m\e\
    [33m   |\e[0m                                          ^\e[0m\n\e[33m   |\e[0mA\
    \ pure expression does nothing in statement position; you may be omitting necessary\
    \ parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 warning found\n1 error found\n"
  stdout: ''
  timestamp: 1659793507
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowelsSet = vowels.toSet\n        val evenIndices\
    \ = mutable.Set[Int]()\n        val evenIndices_ = mutable.Set[Int]()\n      \
    \  for (i <- 0 until s.length)\n            if (vowelsSet(s(i)) && s(i) % 2 ==\
    \ 0)\n                evenIndices += i\n            if (vowelsSet(s(i)) && s(i)\
    \ % 2 != 0)\n                evenIndices_ += i\n        evenIndices.size match\
    \ {\n            case 0 => 0\n            case 1 => evenIndices_.size match {\n\
    \                case 0 => 0\n                case 1 => 1\n                case\
    \ _ => evenIndices_.size match {\n                    case 0 => 0\n          \
    \          case 1 => 1\n                    case _ => evenIndices_.size match\
    \ {\n                        case 0 => 0\n                        case 1 => 1\n\
    \                        case _ => evenIndices_.size match {\n               \
    \             case 0 => 0\n                            case 1 => 1\n         \
    \                   case _ => evenIndices_.size match {\n                    \
    \            case 0 => 0\n                                case 1 => 1\n      \
    \                          case _ => evenIndices_.size match {\n             \
    \                       case 0 => 0\n                                    case\
    \ 1 => 1\n                                    case _ => evenIndices_.size match\
    \ {\n                                        case 0 => 0\n                   \
    \                     case 1 => 1\n                                        case\
    \ _ => evenIndices_.size match {\n                                           \
    \ case 0 => 0\n                                            case 1 => 1\n     \
    \                                       case _ => evenIndices_.size match {\n\
    \                                                case 0 => 0\n               \
    \                                 case 1 => 1\n                              \
    \                  case _ => evenIndices_.size match {\n                     \
    \                               case 0 => 0\n                                \
    \                    case 1 => 1\n                                           \
    \         case _ => evenIndices_.size match {\n                              \
    \                          case 0 => 0\n                                     \
    \                   case 1 => 1\n                                            \
    \            case _ => evenIndices_.size match {\n                           \
    \                                 case 0 => 0\n                              \
    \                              case 1 => 1\n                                 \
    \                           case _ => evenIndices_.size match {\n            \
    \                                                    case 0 => 0\n           \
    \                                                     case 1 => 1\n          \
    \                                                      case _ => evenIndices_.size\
    \ match {\n                                                                  \
    \  case 0 => 0\n                                                             \
    \       case 1 => 1\n                                                        \
    \            case _ => evenIndices_.size match {\n                           \
    \                                             case 0 => 0\n                  \
    \                                                      case 1 => 1\n         \
    \                                                               case _ => evenIndices_.size\
    \ match {\n                                                                  \
    \          case 0 => 0\n                                                     \
    \                       case 1 => 1\n                                        \
    \                                    case _ => evenIndices_.size match {\n   \
    \                                                                            \
    \ case 0 => 0\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5splsfyy.scala:86:0 ----------------------------\e\
    [0m\e[0m\n\e[31m86 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5splsfyy.scala:15:26\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mevenIndices\e[0m = mutable.Set[\e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5splsfyy.scala:16:27\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mevenIndices_\e[0m = mutable.Set[\e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                          ^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp5splsfyy.scala:83:5 ---------------------\e[0m\e[0m\n\e[31m83\
    \ |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:  \
    \  Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[33m\e[33m--\
    \ Warning: /tmp/tmp5splsfyy.scala:75:4 ----------------------------------------\e\
    [0m\e[0m\n\e[33m75 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m\
    \   |\e[0m    Line is indented too far to the left, or a `}` is missing\n1 warning\
    \ found\n4 errors found\n"
  stdout: ''
  timestamp: 1659793510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        val evenIndices = mutable.Set[Int]()\n     \
    \   for (i <- 0 until s.length)\n            if (vowels(s(i)))\n             \
    \   if (s(i) % 2 == 0)\n                    evenIndices += i\n        evenIndices.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppmebx7of.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0L\n        for (i <- 0 until s.length)\n            if (s(i).isUpper)\n \
    \               if (s(i).isEven)\n                    count += 1\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbh1wkgkt.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                \e[33mif\e[0m (s(i).isEven)\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \         value isEven is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0L\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' && s(i+1)\
    \ == 'a') count += 1\n            if (s(i) == 'B' && s(i+1) == 'b') count += 1\n\
    \            if (s(i) == 'C' && s(i+1) == 'c') count += 1\n            if (s(i)\
    \ == 'D' && s(i+1) == 'd') count += 1\n            if (s(i) == 'E' && s(i+1) ==\
    \ 'e') count += 1\n            if (s(i) == 'F' && s(i+1) == 'f') count += 1\n\
    \            if (s(i) == 'G' && s(i+1) == 'g') count += 1\n            if (s(i)\
    \ == 'H' && s(i+1) == 'h') count += 1\n            if (s(i) == 'I' && s(i+1) ==\
    \ 'i') count += 1\n            if (s(i) == 'J' && s(i+1) == 'j') count += 1\n\
    \            if (s(i) == 'K' && s(i+1) == 'k') count += 1\n            if (s(i)\
    \ == 'L' && s(i+1) == 'l') count += 1\n            if (s(i) == 'M' && s(i+1) ==\
    \ 'm') count += 1\n            if (s(i) == 'N' && s(i+1) == 'n') count += 1\n\
    \            if (s(i) == 'O' && s(i+1) == 'o') count += 1\n            if (s(i)\
    \ == 'P' && s(i+1) == 'p') count += 1\n            if (s(i) == 'Q' && s(i+1) ==\
    \ 'q') count += 1\n            if (s(i) == 'R' && s(i+1) == 'r') count += 1\n\
    \            if (s(i) == 'S' && s(i+1) == 's') count += 1\n            if (s(i)\
    \ == 'T' && s(i+1) == 't') count += 1\n            if (s(i) == 'U' && s(i+1) ==\
    \ 'u') count += 1\n            if (s(i) == 'V' && s(i+1) == 'v') count += 1\n\
    \            if (s(i) == 'W' && s(i+1) == 'w') count += 1\n            if (s(i)\
    \ == 'X' && s(i+1) == 'x') count += 1\n            if (s(i) == 'Y' && s(i+1) ==\
    \ 'y') count += 1\n            if (s(i) == 'Z' && s(i+1) == 'z') count += 1\n\
    \            if (s(i) == 'a' && s(i+1) == 'a') count += 1\n            if (s(i)\
    \ == 'b' && s(i+1) == 'b') count += 1\n            if (s(i) == 'c' && s(i+1) ==\
    \ 'c') count += 1\n            if (s(i) == 'd' && s(i+1) == 'd') count += 1\n\
    \            if (s(i) == 'e' && s(i+1) == 'e') count += 1\n            if (s(i)\
    \ == 'f' && s(i+1) == 'f') count += 1\n            if (s(i) == 'g' && s(i+1) ==\
    \ 'g') count += 1\n            if (s(i) == 'h' && s(i+1) == 'h') count += 1\n\
    \            if (s(i) == 'i' && s(i+1) == 'i') count += 1\n            if (s(i)\
    \ == 'j' && s(i+1) == '\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpajd46aog.scala:50:41 -----------------------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m            \e[33mif\e[0m (s(i) == \e[31m'j'\e[0m &&\
    \ s(i+\e[31m1\e[0m) == '\n\e[31m\e[31m   |\e[0m                              \
    \           ^\e[0m\n\e[31m   |\e[0m                                         unclosed\
    \ character literal\n\e[33m\e[33m-- [E129] Potential Issue Warning: /tmp/tmpajd46aog.scala:51:4\
    \ -----------------\e[0m\e[0m\n\e[33m50 |\e[0m            \e[33mif\e[0m (s(i)\
    \ == \e[31m'j'\e[0m && s(i+\e[31m1\e[0m) == '\n\e[33m51 |\e[0m    }\n\e[33m\e\
    [33m   |\e[0m                                          ^\e[0m\n\e[33m   |\e[0mA\
    \ pure expression does nothing in statement position; you may be omitting necessary\
    \ parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 warning found\n1 error found\n"
  stdout: ''
  timestamp: 1659793509
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n   \
    \             if (i % 2 == 0)\n                    evenIndices += i\n        evenIndices.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpthl6hkvz.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793509
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\".toCharArray\n        var count = 0L\n        for (i <- 0 until\
    \ s.length)\n            if (vowels(i) % 2 == 0)\n                count += s.charAt(i).toUpperCase\
    \ == s.charAt(i)\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8d090eck.scala:17:22 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                count += s.charAt(i).toUpperCase == s.charAt(i)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \      value += is not a member of Long - did you mean Long.!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp8d090eck.scala:17:37 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                count += s.charAt(i).toUpperCase == s.charAt(i)\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         value toUpperCase is not a member of Char\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i).toUpper) != -1)\n                count\
    \ += 1\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4ti7dw2q.scala:21)\n\tat Problem.main(tmp4ti7dw2q.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793513
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0L\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' || s(i)\
    \ == 'a') count += 1\n            if (s(i) == 'E' || s(i) == 'e') count += 1\n\
    \            if (s(i) == 'I' || s(i) == 'i') count += 1\n            if (s(i)\
    \ == 'O' || s(i) == 'o') count += 1\n            if (s(i) == 'U' || s(i) == 'u')\
    \ count += 1\n        if (count % 2 == 0) count else 0L\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpksnr8hrw.scala:23)\n\tat Problem.main(tmpksnr8hrw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793513
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.indexOf(s(i)) >= 0)\n      \
    \          evenIndices += i\n        evenIndices.toList.count(_ % 2 == 0)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbk61ti_r.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l) { (sum,\
    \ i) =>\n            if (sum % 2 == 0)\n                sum + vowels(i)\n    \
    \        else sum\n        }\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvoa6ze20.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcjva9uk2.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793484
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels(i).equals(s.charAt(i))) {\n                if (i % 2 ==\
    \ 0)\n                    count += 1\n            }\n        count\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9wyqyyn3.scala:24)\n\tat Problem.main(tmp9wyqyyn3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793513
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s(i)) >= 0)\n\
    \                evenIndices += i\n        evenIndices.count(_ % 2 == 0)\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuostec5o.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        var i = 0\n        while (i < s.length)\n            if (s(i).isUpper)\n\
    \                count += 1\n            i += 1\n        count \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpht2uz44x.scala:22)\n\tat Problem.main(tmpht2uz44x.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793514
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = 0 until s.length\n      \
    \  evenIndices.filter(i => vowels(i).isUpper).count(i => s(i).toUpperCase == s(i))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7289kq7t.scala:15:67 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        evenIndices.filter(\e[36mi\e[0m => vowels(i).isUpper).count(\e\
    [36mi\e[0m => s(i).toUpperCase == s(i))\n\e[31m\e[31m   |\e[0m               \
    \                                               ^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               value toUpperCase is not a member of\
    \ Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793514
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        for(i\
    \ <- 0 until s.length){\n            if(vowels.indexOf(s.charAt(i)) > -1){\n \
    \               if(i % 2 == 0){\n                    evenIndices += i\n      \
    \          }\n            }\n        }\n        evenIndices.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n\
    \    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\"\
    )) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk9b6tfvr.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793512
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = mutable.Set[Char]('a', 'e', 'i', 'o', 'u')\n        val evenIndices = mutable.Set[Int]()\n\
    \        val oddIndices = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n\
    \            if (vowels(s(i)))\n                if (s(i) % 2 == 0)\n         \
    \           evenIndices += i\n                else\n                    oddIndices\
    \ += i\n        evenIndices.toSet.size + (oddIndices.toSet.size - evenIndices.toSet.size)\
    \ * vowels.toSet.size\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3e6i83hy.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m, \e[31m'e'\e[0m, \e[31m'i'\e[0m, \e[31m'o'\e[0m,\
    \ \e[31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3e6i83hy.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp3e6i83hy.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36moddIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659793512
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk13jk5ft.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793513
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s(i)))\n\
    \                if (s(i).toUpper == 'A')\n                    evenIndices +=\
    \ i\n        evenIndices.length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz04nlzor.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793513
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.Set[Int]()\n        val\
    \ upperIndices = mutable.Set[Int]()\n        for (i <- 0 until s.length)\n   \
    \         if (vowels.indexOf(s.charAt(i)) >= 0)\n                if (i % 2 ==\
    \ 0)\n                    evenIndices += i\n                else\n           \
    \         upperIndices += i\n        evenIndices.toSet.size + (upperIndices.toSet.size\
    \ - evenIndices.toSet.size) * vowels.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp29z2q2m5.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp29z2q2m5.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mupperIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb1yyfvcw.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = s filter (_ % 2 == 0)\n \
    \       val evenIndices = evenIndices.toList\n        val vowelCount = evenIndices\
    \ filter (vowels contains _)\n        vowelCount.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0ug1fq7m.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.toList\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659793513
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = 0 until s.length\n      \
    \  val evenIndices = evenIndices.filter(_ % 2 == 0)\n        val evenIndices =\
    \ evenIndices.map(i => vowels(i))\n        evenIndices.count(i => s(i).toUpperCase\
    \ == \"A\")\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptutt5n1b.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.filter(_\
    \ % \e[31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptutt5n1b.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = evenIndices.map(\e\
    [36mi\e[0m => vowels(i))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenIndices is already defined as \e[33mvalue\e[0m \e[35mevenIndices\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmptutt5n1b.scala:17:36 ------------------------\e[0m\e[0m\n\
    \e[31m17 |\e[0m        evenIndices.count(\e[36mi\e[0m => s(i).toUpperCase == \e\
    [31m\"A\"\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               value toUpperCase is not a\
    \ member of Char\n3 errors found\n"
  stdout: ''
  timestamp: 1659793515
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3nn683j.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3nn683j.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.foldLeft(0l) { (sum,\
    \ i) =>\n            if (sum % 2 == 0)\n                sum + vowels(i)\n    \
    \        else sum\n        }\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\"\
    )) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvoa6ze20.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val vowelCount = mutable.Map.empty[String, Long]\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelCount(s.charAt(i)) += 1\n        vowelCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptx100pf8.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelCount\e[0m = mutable.Map.empty[\e\
    [35mString\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793514
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s(i) == 'A' || s(i)\
    \ == 'E' || s(i) == 'I' || s(i) == 'O' || s(i) == 'U')\n                count\
    \ += 1\n            else\n                break\n        \n        count / s.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg8vt3e9d.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793514
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s(i)) >= 0)\n                if (s(i).toUpperCase\
    \ == s(i).toLowerCase && s(i) != \"A\" && s(i) != \"E\" && s(i) != \"I\" && s(i)\
    \ != \"O\" && s(i) != \"U\")\n                    count += 1\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqnfujzms.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                \e[33mif\e[0m (s(i).toUpperCase == s(i).toLowerCase\
    \ && s(i) != \e[31m\"A\"\e[0m && s(i) != \e[31m\"E\"\e[0m && s(i) != \e[31m\"\
    I\"\e[0m && s(i) != \e[31m\"O\"\e[0m && s(i) != \e[31m\"U\"\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                    ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           value toUpperCase is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793515
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val evenIndices = mutable.Set[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(s(i)) && s(i) % 2\
    \ == 0)\n                evenIndices += i\n        evenIndices.size\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\")) ==\
    \ (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8yz58abb.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8yz58abb.scala:16:24 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (vowels(s(i)) && s(i) % \e\
    [31m2\e[0m == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                       ^^^^\e\
    [0m\n\e[31m   |\e[0m                       Found:    Char\n\e[31m   |\e[0m   \
    \                    Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793515
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length) evenIndices += if (i % 2 == 0) vowels.indexOfAt(i)\
    \ else 0\n        evenIndices.sum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmppnvwa7xh.scala:15:51 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until s.length)\
    \ evenIndices += \e[33mif\e[0m (i % \e[31m2\e[0m == \e[31m0\e[0m) vowels.indexOfAt(i)\
    \ \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m                        \
    \                           ^^\e[0m\n\e[31m   |\e[0m                         \
    \               expression expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmppnvwa7xh.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793514
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toCharArray\n        var count = 0\n        for (i <- 0 until\
    \ s.length)\n            if (vowels(i) % 2 == 0) count += 1\n        count\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppsq20mvo.scala:20)\n\tat Problem.main(tmppsq20mvo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i).isUpper)\n   \
    \             evenIndices += i\n        evenIndices.toList.foldLeft(0l)(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkmirn_an.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793515
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"aeiouAEIOU\"\n        val evenIndices = mutable.ListBuffer[Int]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                if (i % 2 == 0)\n                    evenIndices += i\n\
    \        evenIndices.toList.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(countUpper((\"aBCdEf\")) == (1l));\n    assert(countUpper((\"\
    abcdefg\")) == (0l));\n    assert(countUpper((\"dBBE\")) == (0l));\n    assert(countUpper((\"\
    B\")) == (0l));\n    assert(countUpper((\"U\")) == (1l));\n    assert(countUpper((\"\
    \")) == (0l));\n    assert(countUpper((\"EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb1yyfvcw.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793460
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        val vowels\
    \ = \"AEIOUaeiou\".toList\n        val evenIndices = mutable.ListBuffer[Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) % 2 == 0)\n  \
    \              evenIndices += i\n        evenIndices.toList.count(i => s(i) ==\
    \ 'U')\n    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"\
    aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp62pvy1uy.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenIndices\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string s, count the number of uppercase vowels in even indices.\n\
    \    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    // (1l)\n    //\
    \ >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"dBBE\"\
    ))\n    // (0l)\n    def countUpper(s : String) : Long = {\n        var count\
    \ = 0L\n        for (i <- 0 until s.length)\n            if (s(i).isUpper)\n \
    \               if (s(i).isEven)\n                    count += 1\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
    )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
    dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
    U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
    EEEE\")) == (2l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbh1wkgkt.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                \e[33mif\e[0m (s(i).isEven)\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \         value isEven is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793510

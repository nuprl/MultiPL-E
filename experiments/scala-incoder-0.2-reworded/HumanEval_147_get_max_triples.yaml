name: HumanEval_147_get_max_triples
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a positive integer n. You have to create an integer list a\
  \ of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
  \ i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a where\
  \ i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example\
  \ :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation: \n    // a\
  \ = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    def getMaxTriples(n\
  \ : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
  \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
  \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
completions: ["        var a = scala.collection.mutable.ListBuffer.empty[Long]\n \
    \       var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    while(j < n) {\n            a.append(i * i - i + 1)\n            j += 1\n\
    \        }\n        while(k <n) {\n            a.append(i * i - i + 1)\n     \
    \       k += 1\n        }\n        val count = a.count(_ % 3 == 0)\n        a.clear()\n\
    \        return count", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    a(i) = i * i - i + 1\n                    a(j)\
    \ = i * i - j + 1\n                    a(k) = i * i - k + 1\n                \
    \    count = count + 1\n                    k = k + 1\n                }\n   \
    \             j = j + 1\n                k = k + 1\n            }\n          \
    \  i = i + 1\n            k = k + 1\n        }\n        a.toList.length", "  \
    \      val a = mutable.ArrayBuffer.fill(n)(0)\n        var i = 0\n        var\
    \ j = 0\n        var k = 0\n        var count = 0\n        while(i < n && j <\
    \ n && k < n) {\n            if(i + j + k == n) count += 1\n            if(a(i)\
    \ + a(j) + a(k) == 3) count += 1\n            i += 1\n            j += 1\n   \
    \         k += 1\n        }\n        count", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + i + j\n            a += i\n            a += j\n            a +=\
    \ k\n        }\n        a.max", "        var a = new Array[Long](n)\n        for(\
    \ i <- 0 until n ) {\n            a(i) = i * i - i + 1\n        }\n        val\
    \ count = a.count(_ % 3 == 0)\n        count match {\n            case 0 => 1\n\
    \            case _ => count\n        }", "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val res = scala.collection.mutable.ArrayBuffer.empty[Long]\n        val\
    \ max = scala.math.max(scala.math.pow(3, a.length), scala.math.pow(3, a.length\
    \ - 1))\n        val max2 = scala.math.pow(3, a.length - 2)\n        val max3\
    \ = scala.math.pow(3, a.length - 3)\n        val max4 = scala.math.pow(3, a.length\
    \ - 4)\n        val max5 = scala.math.pow(3, a.length - 5)\n        val max6 =\
    \ scala.math.pow(3, a.length - 6)\n        val max7 = scala.math.pow(3, a.length\
    \ - 7)\n        val max8 = scala.math.pow(3, a.length - 8)\n        val max9 =\
    \ scala.math.pow(3, a.length - 9)\n        val max10 = scala.math.pow(3, a.length\
    \ - 10)\n        val max11 = scala.math.pow(3, a.length - 11)\n        val max12\
    \ = scala.math.pow(3, a.length - 12)\n        val max13 = scala.math.pow(3, a.length\
    \ - 13)\n        val max14 = scala.math.pow(3, a.length - 14)\n        val max15\
    \ = scala.math.pow(3, a.length - 15)\n        val max16 = scala.math.pow(3, a.length\
    \ - 16)\n        val max17 = scala.math.pow(3, a.length - 17)\n        val max18\
    \ = scala.math.pow(3, a.length - 18)\n        val max19 = scala.math.pow(3, a.length\
    \ - 19)\n        val max20 = scala.math.pow(3, a.length - 20)\n        val max21\
    \ = scala.math.pow(3, a.length - 21)\n        val max22 = scala.math.pow(3, a.length\
    \ - 22)\n        val max23 = scala.math.pow(3, a.length - 23)\n        val max24\
    \ = scala.math.pow(3, a.length - 24)\n        val max25 = scala.math.pow(3, a.length\
    \ - 25)\n        val max26 = scala.math.pow(3, a.length - 26)\n        val max27\
    \ = scala.math.pow(3, a.length - 27)\n        val max28 = scala.math.pow(3, a.length\
    \ - 28)\n        val max29 = scala.math.pow(3, a.length - 29)\n        val max30\
    \ = scala.math.pow(3, a.length - 30)\n        val max31 = scala.math.pow(3, a.length\
    \ - 31)\n        val max32 = scala.math.pow(3, a.length - 32)\n        val max33\
    \ = scala.math.pow(3, a.length - 33)\n        val max34 = scala.math.pow(3, a.length\
    \ - 34", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val max = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt", "        val a =\
    \ mutable.ArrayBuffer.fill(n)(0l)\n        val result = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val max = 0l\n        val min = 0l\n        val mid = 0l\n        val\
    \ sum = 0l\n        val num = 0l\n        val num2 = 0l\n        val num3 = 0l\n\
    \        val num4 = 0l\n        val num5 = 0l\n        val num6 = 0l\n       \
    \ val num7 = 0l\n        val num8 = 0l\n        val num9 = 0l\n        val num10\
    \ = 0l\n        val num11 = 0l\n        val num12 = 0l\n        val num13 = 0l\n\
    \        val num14 = 0l\n        val num15 = 0l\n        val num16 = 0l\n    \
    \    val num17 = 0l\n        val num18 = 0l\n        val num19 = 0l\n        val\
    \ num20 = 0l\n        val num21 = 0l\n        val num22 = 0l\n        val num23\
    \ = 0l\n        val num24 = 0l\n        val num25 = 0l\n        val num26 = 0l\n\
    \        val num27 = 0l\n        val num28 = 0l\n        val num29 = 0l\n    \
    \    val num30 = 0l\n        val num31 = 0l\n        val num32 = 0l\n        val\
    \ num33 = 0l\n        val num34 = 0l\n        val num35 = 0l\n        val num36\
    \ = 0l\n        val num37 = 0l\n        val num38 = 0l\n        val num39 = 0l\n\
    \        val num40 = 0l\n        val num41 = 0l\n        val num42 = 0l\n    \
    \    val num43 = 0l\n        val num44 = 0l\n        val num45 = 0l\n        val\
    \ num46 = 0l\n        val num47 = 0l\n        val num48 = 0l\n        val num49\
    \ = 0l\n        val num50 = 0l\n        val num51 = 0l\n        val num52 = 0l\n\
    \        val num53 = 0l\n        val num54 = 0l\n        val num55 = 0l\n    \
    \    val num56 = 0l\n        val num57 = 0l\n        val num58 = 0l\n        val\
    \ num59 = 0l\n        val num60 = 0l\n        val num61 = 0l\n        val num62\
    \ = 0l\n        val num63 = 0l\n        val num64 = 0l\n        val num65 = 0l\n\
    \        val num66 = 0l\n        ", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    if (i + j + k == n) {\n                     \
    \   a += (i * i - i + 1)\n                        count += 1\n               \
    \     }\n                    k += 1\n                }\n                j += 1\n\
    \            }\n            i += 1\n        }\n        a.toList.sortWith((x, y)\
    \ => x < y).length", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            while(j < n) {\n                while(k\
    \ <= n) {\n                    if(i+j+k == n) {\n                        count\
    \ += 1\n                        a.add(i)\n                        a.add(j)\n \
    \                       a.add(k)\n                    }\n                    k\
    \ += 1\n                }\n                j += 1\n            }\n           \
    \ i += 1\n        }\n        a.toList.length", "        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)",
  "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            while(j < n) {\n                while(k\
    \ <= n) {\n                    if(i + j + k == n) {\n                        count\
    \ = count + 1\n                    }\n                    k = k + 1\n        \
    \        }\n                k = k - 1\n                j = j + 1\n           \
    \ }\n            i = i + 1\n            j = j - 1\n        }\n        count =\
    \ count + 1\n        return count", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + j\n            a += i\n            a += j\n            a += k\n\
    \        }\n        a.maxBy(_ % 3 == 0)", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    val triple = i + j + k\n                    if\
    \ (triple % 3 == 0) {\n                        a += triple\n                 \
    \       count += 1\n                    }\n                    k += 1\n      \
    \          }\n                j += 1\n            }\n            i += 1\n    \
    \    }\n        a.toList.sortWith(_ < _)\n            .last\n            .foldLeft(0)((a,\
    \ b) => if (b == 0) a else a + b)", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(", "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0l)\n\
    \        for(i<-0 until n){\n            a(i) = i * i - i + 1\n        }\n   \
    \     val result = scala.collection.mutable.ArrayBuffer.empty[Long]\n        for(i<-0\
    \ until n){\n            for(j<-0 until n){\n                for(k <- 0 until\
    \ n){\n                    if(i<j && i<k && j<k){\n                        val\
    \ sum = i * a(i) + j * a(j) + k * a(k)\n                        if(sum % 3 ==\
    \ 0){\n                            result += 1\n                        }\n  \
    \                  }\n                }\n            }\n        }\n        result.length",
  "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n)(0)\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        ", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            while(j < n) {\n                while(k\
    \ <n) {\n                    if(i+j+k == n) {\n                        count +=\
    \ 1\n                        a.add(i)\n                        a.add(j)\n    \
    \                    a.add(k)\n                        k = 0\n               \
    \     }\n                    k += 1\n                }\n                j += 1\n\
    \            }\n            i += 1\n        }\n        a.toList.length", "   \
    \     val a = mutable.ArrayBuffer(1l)\n        var i = 0\n        var j = 0\n\
    \        var k = 0\n        var count = 0\n        while(i < n) {\n          \
    \  while(j < n) {\n                while(k <n) {\n                    if(i+j+k\
    \ == n){\n                        count += 1\n                        a.update(i)\n\
    \                        a.update(j)\n                        a.update(k)\n  \
    \                  }\n                    k += 1\n                }\n        \
    \        j += 1\n            }\n            i += 1\n        }\n        a.toList.sum",
  "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x => x * x\
    \ - x + 1).toArray\n        val b = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val c = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val d = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val e = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val f = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val g = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val h = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val i = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val j = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val k = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val l = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val m = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val n = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val o = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val p = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val q = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val r = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val s = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val t = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x ",
  "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val result\
    \ = scala.collection.mutable.ArrayBuffer.empty[Long]\n        val max = scala.math.max(scala.math.pow(3,\
    \ a.length), n)\n        val counter = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            a(i) = i * i - i + 1\n        }\n\
    \        for (i <- 0 until n) {\n            val j = i + 1\n            val k\
    \ = i + 2\n            if (a(i) + a(j) + a(k) == max) {\n                result\
    \ += (i -> j -> k)\n                counter += i\n            }\n        }\n \
    \       result.length", "        val a = mutable.ArrayBuffer(1l)\n        val\
    \ b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n     \
    \   val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            a.append(i * i - i + 1)\n          \
    \  i += 1\n        }\n        while (j < n) {\n            b.append(i * i - i\
    \ + 1)\n            j += 1\n        }\n        while (k < n) {\n            c.append(i\
    \ * i - i + 1)\n            k += 1\n        }\n        while (i < n && j < n &&\
    \ k < n) {\n            triples.append(a(i) + a(j) + a(k))\n            i += 1\n\
    \            j += 1\n            k += 1\n        }\n        count = triples.sum\n\
    \        count += triples.filter(_ % 3 == 0).sum\n        count += triples.filter(_\
    \ % 3 == 1).sum\n        count += triples.filter(_ % 3 == 2).sum\n        count\
    \ += triples.filter(_ % 3 == 3).sum\n        count += triples.filter(_ % 3 ==\
    \ 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).sum\n        count\
    \ += triples.filter(_ % 3 == 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_\
    \ % 3 == 3).filter(_ % 3 == 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_\
    \ % 3 == 3).sum\n        count += triples.filter(_ % 3 == 0).filter(_ % 3 == 1).filter(_\
    \ % 3 == 2).filter(_ % 3 == 3).filter(_ % 3 == 0).filter(_ % 3 == 1).filter(_\
    \ % 3 == 2).filter(_ % 3 == 3).filter(_ % 3 == 0).filter(_ % 3 == 1).filter(_\
    \ % 3 == 2).filter(_ % 3 == 3).sum\n        count += triples.filter(_ % 3 == 0).filter(_\
    \ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_ % 3 == 0).filter(_\
    \ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_ % 3 == 0).filter(_\
    \ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_ % 3 == 0).filter(_\
    \ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).sum\n        count += triples.filter(_\
    \ % 3 == 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_\
    \ % 3 == 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_\
    \ % 3 == 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_\
    \ % 3 == 0).filter(_ % 3 == 1).", "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ c = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val d = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ f = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val g = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ i = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val j = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ l = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val m = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ o = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val p = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ r = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val s = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ u = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val v = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val w = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ x = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val y = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val b = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ d = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val e = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ g = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val h = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val ", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        while (i < n) {\n            val j = i + i\n     \
    \       val k = i + j\n            if (j > k) {\n                a.append(i)\n\
    \                a.append(j)\n                a.append(k)\n                i =\
    \ k\n            } else {\n                i = j\n            }\n        }\n \
    \       a.length", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n   \
    \     var i = 0\n        var j = 0\n        var k = 0\n        while(i < n &&\
    \ j < n && k < n) {\n            if(i == j && i == k) {\n                a(i)\
    \ = a(i) + 1\n            }\n            else if(j == k) {\n                a(j)\
    \ = a(j) + 1\n            }\n            else {\n                a(i) = a(i) +\
    \ 1\n                a(j) = a(j) + 1\n                a(k) = a(k) + 1\n      \
    \      }\n            i = i + 1\n            j = j + 1\n            k = k + 1\n\
    \        }\n        val triples = a.filter(_ % 3 == 0).length\n        triples.toLong",
  "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        var i\
    \ = 0\n        var j = 0\n        var k = 0\n        while (i < n) {\n       \
    \     a.append(i * i - i + 1)\n            i += 1\n        }\n        var count\
    \ = 0\n        while (i + j < n) {\n            while (j < n) {\n            \
    \    j += i\n                count += 1\n            }\n            while (k <\
    \ n) {\n                k += j\n                count += 1\n            }\n  \
    \          while (k < n) {\n                k += j\n                count += 1\n\
    \            }\n            while (j < n) {\n                j += i\n        \
    \        count += 1\n            }\n            i += 1\n        }\n        return\
    \ count", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    while(j < n) {\n            while(j < n) {\n                while(j < n)\
    \ {\n                    while(j < n) {\n                        while(j < n)\
    \ {\n                            while(j < n) {\n                            \
    \    while(j < n) {\n                                    while(j < n) {\n    \
    \                                    while(j < n) {\n                        \
    \                    while(j < n) {\n                                        \
    \        while(j < n) {\n                                                    while(j\
    \ < n) {\n                                                        while(j < n)\
    \ {\n                                                            while(j < n)\
    \ {\n                                                                while(j <\
    \ n) {\n                                                                    while(j\
    \ < n) {\n                                                                   \
    \     while(j < n) {\n                                                       \
    \                     while(j < n) {\n                                       \
    \                                         while(j < n) {\n                   \
    \                                                                 while(j < n)\
    \ {\n                                                                        \
    \                while(j < n) {\n                                            \
    \                                                while(j < n) {\n            \
    \                                                                            \
    \        while(j < n) {\n                                                    \
    \                                                while(j < n) {\n            \
    \                                                                            \
    \                while(j < n) {\n                                            \
    \                                                                while(j < n)\
    \ {\n                                                                        \
    \                                        while(j < n) {\n                    \
    \                                                                            \
    \                    while(j < n) {\n                                        \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                    while(j <\
    \ n) {\n                                                                     \
    \                                                           while(j < n) {\n \
    \                                                                            \
    \                                                       while(j < n) {\n     \
    \                                                                            \
    \                                                       while(j < n) {\n     \
    \                                                                            \
    \                                                           while(j < n) {\n \
    \                                                                            \
    \                                                                   while(j <\
    \ n) {\n                                                                     \
    \                                                                            \
    \   while(j < n) {\n                                                         \
    \                                                                            \
    \                   while(j < n) {\n                                         \
    \                                                                            \
    \                                       while(j < n) {\n                     \
    \                                                                            \
    \                                                               while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \                                    while(j < n) {\n                        \
    \                                                                            \
    \                                                                            \
    \                while(j < n) {\n                                            \
    \                                                                            \
    \                                                                            while(j\
    \ < n) {\n                                                                   \
    \                                                                            \
    \                                                         while(j < n) {\n   \
    \                                                                            \
    \                                                                            \
    \                                                 while(j < n) {\n           \
    \                                                                            \
    \                                                                            \
    \                                             while(j < n) {\n               \
    \                                                                            \
    \                                                                            \
    \                                             while(j < n) {\n               \
    \                                                                            \
    \                                                                            \
    \                                                 while(j < n) {\n           \
    \                                                                            \
    \                                                                            \
    \                                                         while(j < n) {\n   \
    \                                                                            \
    \                                                                            \
    \                                                                     while(j\
    \ < n) {\n                                                                   \
    \                                                                            \
    \                                                                            \
    \         while(j < n) {\n                                                   \
    \                                                                            \
    \                                                                            \
    \                             while(j < n) {\n                               \
    \                                                                            \
    \                                                                            \
    \                                                     while(j < n) {\n       \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \     while(j < n) {\n                                                       \
    \                                                                            \
    \                                                                            \
    \                                     while(j < n) {\n                       \
    \                                                                            \
    \                                                                            \
    \                                                                         while(j\
    \ < n) {\n                                                                   \
    \                                                                            \
    \                                                                            \
    \                                 while(j < n) {\n                           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \ while(j < n) {\n                                                           \
    \                                                                            \
    \                                                                            \
    \                                                 while(j < n) {\n           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                         while(j < n) {\n                                   \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \     while(j < n) {\n                                                       \
    \                                                                            \
    \                                                                            \
    \                                                                 while(j < n)\
    \ {\n                                                                        \
    \                                                                            \
    \                                                                            \
    \                                                    while(j < n) {\n        \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            ", "        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val z = mutable.ArrayBuffer(1l)\n\
    \        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val ", "        val a = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val triples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill",
  "        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val z = mutable.ArrayBuffer(1l)\n\
    \        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val ", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            val j = i * i - i + 1\n            val\
    \ k = i * i + j\n            a.append(i)\n            a.append(j)\n          \
    \  a.append(k)\n        }\n        val count = a.filter(_ % 3 == 0).length\n \
    \       a.clear()\n        count", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            while(j < n) {\n                while(k <n) {\n             \
    \       if(i+j+k == n){\n                        a.append(i*i*i - i*i + i*j +\
    \ i*k)\n                        i = j = 0\n                        k = n\n   \
    \                 }\n                    k += 1\n                }\n         \
    \       j += 1\n            }\n            i += 1\n        }\n        a.max",
  "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n)(0)\n        val f = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n)(0)\n        val h = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n)(0)\n        val p = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = mutable.ArrayBuffer.fill(n)(0)\n        val r = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val s = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val u = mutable.ArrayBuffer.fill(n)(0)\n        val v = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val w = mutable.ArrayBuffer.fill(n)(0)\n        val x = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val y = mutable.ArrayBuffer.fill(n)(0)\n        val z = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n)(0)\n        val f = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n)(0)\n        val h = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n)(0)\n        val p = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = mutable.ArrayBuffer.fill", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(n)\n\
    \        for (i <- 1 to n) {\n            val x = i * i - i + 1\n            a.append(x)\n\
    \        }\n        val l = a.length\n        val r = scala.math.BigInt(l)\n \
    \       for (i <- 1 to l) {\n            val x = a(i) - a(i-1) + a(i-2)\n    \
    \        if (x.mod(m).equals(0)) {\n                return i\n            }\n\
    \        }\n        return 0", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val q = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val r = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val s = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val t = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val u = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val v = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val w = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val x = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val y = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val z = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val a = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val e = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val f = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val g = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val h = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val l = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val o = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val p = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val q = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val r = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val s = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val t = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val u = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val ", "     \
    \   val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val result = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.", "        val a = Array.fill(n.toInt)(0l)\n        val\
    \ count = mutable.ArrayBuffer.empty[Long]\n        val max = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxCount = mutable.ArrayBuffer.empty[Long]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        ", "    \
    \    val a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n)(0)\n        val triple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple2 = mutable.ArrayBuffer.fill(n)(0)\n        val triple3 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple4 = mutable.ArrayBuffer.fill(n)(0)\n        val triple5 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple6 = mutable.ArrayBuffer.fill(n)(0)\n        val triple7 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple8 = mutable.ArrayBuffer.fill(n)(0)\n        val triple9 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple10 = mutable.ArrayBuffer.fill(n)(0)\n        val triple11 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple12 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple13 = mutable.ArrayBuffer.fill(n)(0)\n        val triple14 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple15 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple16 = mutable.ArrayBuffer.fill(n)(0)\n        val triple17 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple18 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple19 = mutable.ArrayBuffer.fill(n)(0)\n        val triple20 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple21 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple22 = mutable.ArrayBuffer.fill(n)(0)\n        val triple23 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple24 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple25 = mutable.ArrayBuffer.fill(n)(0)\n        val triple26 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple27 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple28 = mutable.ArrayBuffer.fill(n)(0)\n        val triple29 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple30 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple31 = mutable.ArrayBuffer.fill(n)(0)\n        val triple32 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple33 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        ", "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n)(0)\n        val f = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n)(0)\n        val h = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n)(0)\n        val p = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = mutable.ArrayBuffer.fill(n)(0)\n        val r = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val s = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val u = mutable.ArrayBuffer.fill(n)(0)\n        val v = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val w = mutable.ArrayBuffer.fill(n)(0)\n        val x = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val y = mutable.ArrayBuffer.fill(n)(0)\n        val z = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n)(0)\n        val f = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n)(0)\n        val h = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n)(0)\n        val p = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = mutable.ArrayBuffer.fill", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val count = mutable.ArrayBuffer.fill(n)(0)\n        val max = 0\n   \
    \     val min = 0\n        val sum = 0\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val minTriples = mutable.ArrayBuffer.fill(n)(0)\n        val sumTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = 0\n        val minTriple\
    \ = 0\n        val sumTriple = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val sumTriples = 0\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val ", "        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val ", "        val a = Array.fill(n.toInt)(0)\n        val m = n.toInt\n\
    \        val n = m\n        val i = 1 \n        val j = 1\n        val k = 1\n\
    \        val sum = 0\n        while(i <= n && j <= n && k <= n) {\n          \
    \  val temp = a(i) + a(j) + a(k) \n            if(temp % 3 == 0) {\n         \
    \       sum += temp\n                i += 1\n                j += 1\n        \
    \        k += 1\n            }\n            else {\n                i += 1\n \
    \               j += 1\n                k += 1\n            }\n        }\n   \
    \     sum", "        val a = mutable.ArrayBuffer(1l)\n        for (i <- 1 to n)\
    \ {\n            val j = i * i - i + 1\n            val k = i * i + i + 1\n  \
    \          if (j < k) {\n                a.update(i)\n                a.update(j)\n\
    \                a.update(k)\n            }\n        }\n        a.toList.length",
  "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        for(i\
    \ <- 1 to n){\n            for(j <- 1 to n){\n                for(k <- 1 to n){\n\
    \                    if(i<j && i<k && j<k){\n                        a += (i*i\
    \ - i + 1)\n                    }\n                }\n            }\n        }\n\
    \        val result = a.filter(_ % 3 == 0).length\n        return result", " \
    \       val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n      \
    \  val m = scala.math.BigInt(3)\n        var i = 0\n        var j = 0\n      \
    \  var k = 0\n        while(i < n && j < n && k < n) {\n            a(i) = i *\
    \ i - i + 1\n            i += 1\n            j += 1\n            k += 1\n    \
    \    }\n        var count = 0\n        while(i < n) {\n            val temp =\
    \ a(i) + a(j) + a(k) \n            if(temp % m == 0) {\n                count\
    \ += 1\n            }\n            i += 1\n            j += 1\n            k +=\
    \ 1\n        }\n        count", "        val a = mutable.ArrayBuffer(1l)\n   \
    \     for(i <- 1l to n){\n            val j = i * i - i + 1\n            val k\
    \ = i * i + i + j\n            val m = k * k\n            if(m == 3) {\n     \
    \           a.update(i)\n                a.update(j)\n                a.update(k)\n\
    \            }\n        }\n        a.size", "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = scala.math.pow(3, n).toInt\n        var i = 0\n        var j\
    \ = 0\n        var k = 0\n        var count = 0\n        while(i < n) {\n    \
    \        a(i) = i * i - i + 1\n            i += 1\n        }\n        while(j\
    \ < n) {\n            a(j) = a(j) + a(j) + 1\n            j += 1\n        }\n\
    \        while(k < (n - 1)) {\n            if(a(k) == a(k)+a(k)+1) {\n       \
    \         count += 1\n            }\n            k += 1\n        }\n        count\
    \ * m", "        val a = Array.ofDim[Long](n)\n        val count = mutable.Map[Long,\
    \ Long]()\n        val max = 0\n        val maxCount = 0\n        val maxCountIndex\
    \ = 0\n        val maxCountIndex2 = 0\n        val maxCountIndex3 = 0\n      \
    \  val maxCountIndex4 = 0\n        val maxCountIndex5 = 0\n        val maxCountIndex6\
    \ = 0\n        val maxCountIndex7 = 0\n        val maxCountIndex8 = 0\n      \
    \  val maxCountIndex9 = 0\n        val maxCountIndex10 = 0\n        val maxCountIndex11\
    \ = 0\n        val maxCountIndex12 = 0\n        val maxCountIndex13 = 0\n    \
    \    val maxCountIndex14 = 0\n        val maxCountIndex15 = 0\n        val maxCountIndex16\
    \ = 0\n        val maxCountIndex17 = 0\n        val maxCountIndex18 = 0\n    \
    \    val maxCountIndex19 = 0\n        val maxCountIndex20 = 0\n        val maxCountIndex21\
    \ = 0\n        val maxCountIndex22 = 0\n        val maxCountIndex23 = 0\n    \
    \    val maxCountIndex24 = 0\n        val maxCountIndex25 = 0\n        val maxCountIndex26\
    \ = 0\n        val maxCountIndex27 = 0\n        val maxCountIndex28 = 0\n    \
    \    val maxCountIndex29 = 0\n        val maxCountIndex30 = 0\n        val maxCountIndex31\
    \ = 0\n        val maxCountIndex32 = 0\n        val maxCountIndex33 = 0\n    \
    \    val maxCountIndex34 = 0\n        val maxCountIndex35 = 0\n        val maxCountIndex36\
    \ = 0\n        val maxCountIndex37 = 0\n        val maxCountIndex38 = 0\n    \
    \    val maxCountIndex39 = 0\n        val maxCountIndex40 = 0\n        val maxCountIndex41\
    \ = 0\n        val maxCountIndex42 = 0\n        val maxCountIndex43 = 0\n    \
    \    val maxCountIndex44 = 0\n        val maxCountIndex45 = 0\n        val maxCountIndex46\
    \ = 0\n        val maxCountIndex47 = 0\n        val maxCountIndex48 = 0\n    \
    \    val maxCountIndex49 = 0\n        val maxCountIndex50 = 0\n        val maxCountIndex51\
    \ = 0\n        val maxCountIndex52 = 0\n        val maxCountIndex53 = 0\n    \
    \    val maxCountIndex54 = 0\n        val maxCountIndex55 = 0\n        val maxCountIndex56\
    \ = 0\n        val maxCountIndex57 = 0\n        val maxCountIndex58 = 0\n    \
    \    val maxCountIndex59 = 0\n        val maxCountIndex60 = 0", "        val a\
    \ = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n       \
    \ val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n \
    \       val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val z = mutable.ArrayBuffer(1l)\n\
    \        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val ", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            for(j <- 1 to\
    \ n) {\n                for(k <- 1 to n) {\n                    if(i+j+k == 3\
    \ && i*i + j*j == k*k) {\n                        a += (i+j+k)\n             \
    \           count += 1\n                    }\n                }\n           \
    \ }\n        }\n        a.toList.sortWith(_ < _)\n        a.last", "        var\
    \ a = scala.collection.mutable.ListBuffer[Long]()\n        var i = 0\n       \
    \ var j = 0\n        var k = 0\n        var count = 0\n        while(i < n) {\n\
    \            while(j < n) {\n                while(k <= n) {\n               \
    \     if(i + j + k == n) {\n                        count = count + 1\n      \
    \                  a.add(i * i - i + 1)\n                        a.add(j * j -\
    \ j + 1)\n                        a.add(k * k - k + 1)\n                     \
    \   i = j\n                        j = k\n                        k = 0\n    \
    \                } else {\n                        k = k + 1\n               \
    \     }\n                }\n                j = j + 1\n            }\n       \
    \     i = i + 1\n        }\n        a.toList.sortWith(_ < _)\n        a.toList.last",
  "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill",
  "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val b\
    \ = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val c = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ e = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val f = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val g = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ h = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val i = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ k = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val l = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ n = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val o = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ q = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val r = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val s = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ t = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val u = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ w = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val x = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val y = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ z = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ c = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val d = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ f = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val g = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val ",
  "        var a = mutable.ArrayBuffer(1l)\n        var count = 0\n        for (i\
    \ <- 1l to n){\n            val j = i * i - i + 1\n            val k = i * i +\
    \ i + 1\n            val m = j * j + k * k\n            if (m == 3) {\n      \
    \          count += 1\n                a.update(i)\n                a.update(j)\n\
    \                a.update(k)\n            }\n        }\n        a.toList.length",
  "        val a = Array.fill(n.toInt)(0l)\n        val m = n.toInt\n        val n\
    \ = n.toInt\n        val i = n - 1\n        val j = n - 1\n        val k = n -\
    \ 1\n        a(i) = i * i - i + 1\n        a(j) = i * i - j + 1\n        a(k)\
    \ = i * i - k + 1\n        val sum = a(i) + a(j) + a(k) \n        val triples\
    \ = sum / 3\n        val triple = triples.toLong\n        triple", "        val\
    \ a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i * i\n            a += j\n            a += k\n        }\n        a.max",
  "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.", "        val a = mutable.ArrayBuffer(1l)\n \
    \       for(i <- 1l to n){\n            for(j <- 1l to n){\n                for(k\
    \ <- 1l to n){\n                    if(i<j && j<k && a(i) + a(j) + a(k) == 3*(i+j+k)){\n\
    \                        a += (i+j+k)\n                    }\n               \
    \ }\n            }\n        }\n        a.length", "        var a = scala.collection.mutable.ListBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    if (a(i) + a(j) + a(k) == (3 * i) + (3 * j) +\
    \ (3 * k)) {\n                        count += 1\n                    }\n    \
    \                k += 1\n                }\n                j += 1\n         \
    \   }\n            i += 1\n        }\n        a.toList", "        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = ",
  "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.", "        val a = mutable.ArrayBuffer(1l)\n \
    \       for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + i + 1\n            val l = i * i * i\n            a += j\n     \
    \       a += k\n            a += l\n        }\n        a.toList.sortWith(_ < _).length",
  "        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val z = mutable.ArrayBuffer(1l)\n\
    \        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val ", "        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val ", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while (i < n)\
    \ {\n            while (j < n) {\n                while (k < n) {\n          \
    \          if (a(i) + a(j) + a(k) % 3 == 0) {\n                        a += a(i)\
    \ + a(j) + a(k) // a = [1, 3, 7, 13, 21]\n                        i += 1\n   \
    \                     j += 1\n                        k += 1\n               \
    \     }\n                    k += 1\n                }\n                j += 1\n\
    \            }\n            i += 1\n        }\n        a.length", "        val\
    \ a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n)(0)\n        val f = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n)(0)\n        val h = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n)(0)\n        val p = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = mutable.ArrayBuffer.fill(n)(0)\n        val r = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val s = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val u = mutable.ArrayBuffer.fill(n)(0)\n        val v = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val w = mutable.ArrayBuffer.fill(n)(0)\n        val x = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val y = mutable.ArrayBuffer.fill(n)(0)\n        val z = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n)(0)\n        val f = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n)(0)\n        val h = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n)(0)\n        val p = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = mutable.ArrayBuffer.fill", "        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(3l)\n        val c = mutable.ArrayBuffer(3l)\n\
    \        val d = mutable.ArrayBuffer(3l)\n        val e = mutable.ArrayBuffer(3l)\n\
    \        val f = mutable.ArrayBuffer(3l)\n        val g = mutable.ArrayBuffer(3l)\n\
    \        val h = mutable.ArrayBuffer(3l)\n        val i = mutable.ArrayBuffer(3l)\n\
    \        val j = mutable.ArrayBuffer(3l)\n        val k = mutable.ArrayBuffer(3l)\n\
    \        val l = mutable.ArrayBuffer(3l)\n        val m = mutable.ArrayBuffer(3l)\n\
    \        val n = mutable.ArrayBuffer(3l)\n        val o = mutable.ArrayBuffer(3l)\n\
    \        val p = mutable.ArrayBuffer(3l)\n        val q = mutable.ArrayBuffer(3l)\n\
    \        val r = mutable.ArrayBuffer(3l)\n        val s = mutable.ArrayBuffer(3l)\n\
    \        val t = mutable.ArrayBuffer(3l)\n        val u = mutable.ArrayBuffer(3l)\n\
    \        val v = mutable.ArrayBuffer(3l)\n        val w = mutable.ArrayBuffer(3l)\n\
    \        val x = mutable.ArrayBuffer(3l)\n        val y = mutable.ArrayBuffer(3l)\n\
    \        val z = mutable.ArrayBuffer(3l)\n        val a = mutable.ArrayBuffer(3l)\n\
    \        val b = mutable.ArrayBuffer(3l)\n        val c = mutable.ArrayBuffer(3l)\n\
    \        val d = mutable.ArrayBuffer(3l)\n        val e = mutable.ArrayBuffer(3l)\n\
    \        val f = mutable.ArrayBuffer(3l)\n        val g = mutable.ArrayBuffer(3l)\n\
    \        val h = mutable.ArrayBuffer(3l)\n        val i = mutable.ArrayBuffer(3l)\n\
    \        val j = mutable.ArrayBuffer(3l)\n        val k = mutable.ArrayBuffer(3l)\n\
    \        val l = mutable.ArrayBuffer(3l)\n        val m = mutable.ArrayBuffer(3l)\n\
    \        val n = mutable.ArrayBuffer(3l)\n        val o = mutable.ArrayBuffer(3l)\n\
    \        val p = mutable.ArrayBuffer(3l)\n        val q = mutable.ArrayBuffer(3l)\n\
    \        val r = mutable.ArrayBuffer(3l)\n        val s = mutable.ArrayBuffer(3l)\n\
    \        val t = mutable.ArrayBuffer(3l)\n        val u = mutable.ArrayBuffer(3l)\n\
    \        val v = mutable.ArrayBuffer(3l)\n        val w = mutable.ArrayBuffer(3l)\n\
    \        val x = mutable.ArrayBuffer(3l)\n        val y = mutable.ArrayBuffer(3l)\n\
    \        val ", "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val result\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val max = 0\n        val maxIndex\
    \ = 0\n        val maxTriples = 0\n        val maxTripleIndex = 0\n        val\
    \ maxTripleValue = 0\n        val maxTripleValueIndex = 0\n        val maxTripleValueIndex2\
    \ = 0\n        val maxTripleValueIndex3 = 0\n        val maxTripleValueIndex4\
    \ = 0\n        val maxTripleValueIndex5 = 0\n        val maxTripleValueIndex6\
    \ = 0\n        val maxTripleValueIndex7 = 0\n        val maxTripleValueIndex8\
    \ = 0\n        val maxTripleValueIndex9 = 0\n        val maxTripleValueIndex10\
    \ = 0\n        val maxTripleValueIndex11 = 0\n        val maxTripleValueIndex12\
    \ = 0\n        val maxTripleValueIndex13 = 0\n        val maxTripleValueIndex14\
    \ = 0\n        val maxTripleValueIndex15 = 0\n        val maxTripleValueIndex16\
    \ = 0\n        val maxTripleValueIndex17 = 0\n        val maxTripleValueIndex18\
    \ = 0\n        val maxTripleValueIndex19 = 0\n        val maxTripleValueIndex20\
    \ = 0\n        val maxTripleValueIndex21 = 0\n        val maxTripleValueIndex22\
    \ = 0\n        val maxTripleValueIndex23 = 0\n        val maxTripleValueIndex24\
    \ = 0\n        val maxTripleValueIndex25 = 0\n        val maxTripleValueIndex26\
    \ = 0\n        val maxTripleValueIndex27 = 0\n        val maxTripleValueIndex28\
    \ = 0\n        val maxTripleValueIndex29 = 0\n        val maxTripleValueIndex30\
    \ = 0\n        val maxTripleValueIndex31 = 0\n        val maxTripleValueIndex32\
    \ = 0\n        val maxTripleValueIndex33 = 0\n        val maxTripleValueIndex34\
    \ = 0\n        val maxTripleValueIndex35 = 0\n        val maxTripleValueIndex36\
    \ = 0\n        val maxTripleValueIndex37 = 0\n        val maxTripleValueIndex38\
    \ = 0\n        val maxTripleValueIndex39 = 0\n        val maxTripleValueIndex40\
    \ = 0\n        val maxTripleValueIndex41 = 0\n        val maxTripleValueIndex42\
    \ = 0\n        val maxTripleValueIndex43 = 0\n        val maxTripleValueIndex44\
    \ = 0\n        val maxTripleValueIndex45 = 0\n        val maxTriple", "      \
    \  var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        var i = 0\n\
    \        var j = 0\n        var k = 0\n        while (i < n) {\n            a.append(i\
    \ * i - i + 1)\n            i += 1\n        }\n        val count = a.count(x =>\
    \ x < 3)\n        if (count > 0) {\n            val maxTriples = a.max\n     \
    \       val maxTripleIndex = a.indexWhere(x => x < 3)\n            val maxTriple\
    \ = a.apply(maxTripleIndex)\n            val maxTripleIndex = a.indexWhere(x =>\
    \ x > maxTriple)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            val maxTripleIndex = a.indexWhere(x => x > maxTriple\
    \ && x < 3)\n            ", "        val a = mutable.ArrayBuffer(1l)\n       \
    \ var i = 0\n        while (i < n) {\n            val j = i + 1\n            val\
    \ k = i + 2\n            val triple = if (i < j && j < k) (i + 1, j, k) else (i,\
    \ j, k)\n            a.updated(triple, triple)\n            i += 1\n        }\n\
    \        a.toList.length", "        val a = mutable.ArrayBuffer.fill(n)(0)\n \
    \       val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill",
  "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        for(i\
    \ <- 1 to n){\n            for(j <- 1 to n){\n                for(k <- 1 to n){\n\
    \                    if(i<j && j<k && a(i)+a(j)+a(k) == 3*(i+j+k)){\n        \
    \                a += (i+j+k)\n                    }\n                }\n    \
    \        }\n        }\n        a.length", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            for(j <- 1 to n){\n                for(k\
    \ <- 1 to n){\n                    if(i<j && j<k && a(i) + a(j) + a(k) == 3*(i+j+k)){\n\
    \                        a += (i+j+k)\n                    }\n               \
    \ }\n            }\n        }\n        a.length", "        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val ", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    if (a(i) == a(j) + a(k)\n                   \
    \     && a(i) < a(j)) {\n                        count += 1\n                \
    \    }\n                    k += 1\n                }\n                j += 1\n\
    \            }\n            i += 1\n        }\n        count", "        val a\
    \ = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n       \
    \ val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n \
    \       val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val z = mutable.ArrayBuffer(1l)\n\
    \        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val ", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill",
  "        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        var i = 0\n        var\
    \ j = 0\n        var k = 0\n        var count = 0\n        while(i < n) {\n  \
    \          a.append(i * i - i + 1)\n            i += 1\n        }\n        while(j\
    \ < n) {\n            b.append(i * i - i + 1)\n            j += 1\n        }\n\
    \        while(k < (n - 1)) {\n            c.append(i * i - i + 1)\n         \
    \   k += 1\n        }\n        while(i < n) {\n            d.append(i * i - i\
    \ + 1)\n            i += 1\n        }\n        while(i < n) {\n            triples.append(a(i)\
    \ + a(j) + a(k))\n            i += 1\n            j += 1\n            k += 1\n\
    \        }\n        while(i < n) {\n            triples.append(a(i) + a(j) + a(k))\n\
    \            i += 1\n            j += 1\n            k += 1\n        }\n     \
    \   while(i < n) {\n            triples.append(a(i) + a(j) + a(k))\n         \
    \   i += 1\n            j += 1\n            k += 1\n        }\n        while(i\
    \ < n) {\n            triples.append(a(i) + a(j) + a(k))\n            i += 1\n\
    \            j += 1\n            k += 1\n        }\n        while(i < n) {\n \
    \           triples.append(a(i) + a(j) + a(k))\n            i += 1\n         \
    \   j += 1\n            k += 1\n        }\n        while(i < n) {\n          \
    \  triples.append(a(i) + a(j) + a(k))\n            i += 1\n            j += 1\n\
    \            k += 1\n        }\n        while(i < n) {\n            triples.append(a(i)\
    \ + a(j) + a(k))\n            i += 1\n            j += 1\n            k += 1\n\
    \        }\n        while(i < n) {\n            triples.append(a(i) + a(j) + a(k))\n\
    \            i += 1\n            j += 1\n            k += 1\n        }\n     \
    \   while(i < n) {\n            triples.append(a(i) + a(j) + a(k))\n         \
    \   i += 1\n            j += 1\n            k += 1\n        }\n        while(i\
    \ < n) {\n            triples.append(a(i) + a(j) + a(k))\n            i += 1\n\
    \            j += 1\n            k += 1\n        }\n        while(i < n) {\n \
    \           triples.append(a(i) + a(j) + a(k))\n            i += 1\n         \
    \   j += 1\n            k += 1\n        }\n        while(i < n) {\n          \
    \  triples.append(a(i) + a(j) + a(k))\n            i += 1\n            j += 1\n\
    \            k += 1\n        }", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val result = mutable.ArrayBuffer.empty[Long]\n        val max = (3 *\
    \ n) - 1\n        val maxTriples = mutable.ArrayBuffer.empty[Long]\n        val\
    \ maxTriple = mutable.ArrayBuffer.empty[Long]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            a.append(i * i - i + 1)\n           \
    \ i += 1\n        }\n        while(j < n) {\n            while(j < n) {\n    \
    \            while(j < n) {\n                    while(j < n) {\n            \
    \            while(j < n) {\n                            while(j < n) {\n    \
    \                            while(j < n) {\n                                \
    \    while(j < n) {\n                                        while(j < n) {\n\
    \                                            while(j < n) {\n                \
    \                                while(j < n) {\n                            \
    \                        while(j < n) {\n                                    \
    \                    while(j < n) {\n                                        \
    \                    while(j < n) {\n                                        \
    \                        while(j < n) {\n                                    \
    \                                while(j < n) {\n                            \
    \                                            while(j < n) {\n                \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                            while(j < n) {\n                                \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                while(j < n) {\n            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \                            while(j < n) {\n                                \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                while(j < n) {\n                            \
    \                                                                            \
    \                        while(j < n) {\n                                    \
    \                                                                            \
    \                    while(j < n) {\n                                        \
    \                                                                            \
    \                    while(j < n) {\n                                        \
    \                                                                            \
    \                        while(j < n) {\n                                    \
    \                                                                            \
    \                                while(j < n) {\n                            \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                            \
    \                            while(j < n) {\n                                \
    \                                                                            \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                                while(j < n) {\n            \
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \                                                                            \
    \                            while(j < n) {\n                                \
    \                                                                            \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                            \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \                                while(j < n) {\n                            \
    \                                                                            \
    \                                                                            \
    \                        while(j < n) {\n                                    \
    \                                                                            \
    \                                                                            \
    \                    while(j < n) {\n                                        \
    \                                                                            \
    \                                                                            \
    \                    while(j < n) {\n                                        \
    \                                                                            \
    \                                                                            \
    \                        while(j < n) {\n                                    \
    \                                                                            \
    \                                                                            \
    \                                while(j < n) {\n                            \
    \                                                                            \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                            \
    \                                                                            \
    \                            while(j < n) {\n                                \
    \                                                                            \
    \                                                                            \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                                                            \
    \                                                while(j < n) {\n            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                                                            \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                            while(j < n) {\n                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                            \
    \                                                                            \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                while(j < n) {\n                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                        while(j < n) {\n                                    \
    \                            ", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val count = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triple2 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple3 = mutable.ArrayBuffer.fill(n)(0)\n        val triple4 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple5 = mutable.ArrayBuffer.fill(n)(0)\n        val triple6 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple7 = mutable.ArrayBuffer.fill(n)(0)\n        val triple8 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple9 = mutable.ArrayBuffer.fill(n)(0)\n        val triple10 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple11 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple12 = mutable.ArrayBuffer.fill(n)(0)\n        val triple13 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple14 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple15 = mutable.ArrayBuffer.fill(n)(0)\n        val triple16 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple17 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple18 = mutable.ArrayBuffer.fill(n)(0)\n        val triple19 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple20 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple21 = mutable.ArrayBuffer.fill(n)(0)\n        val triple22 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple23 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple24 = mutable.ArrayBuffer.fill(n)(0)\n        val triple25 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple26 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple27 = mutable.ArrayBuffer.fill(n)(0)\n        val triple28 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple29 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple30 = mutable.ArrayBuffer.fill(n)(0)\n        val triple31 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple32 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple33 = mutable.ArrayBuffer.fill(n)(0)\n        val triple34 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple35 = mutable.ArrayBuffer.fill(n",
  "        val a = Array.ofDim[Long](n)\n        val m = a.length\n        val n =\
    \ a.length\n        val max = 0\n        var i = 0\n        var j = 0\n      \
    \  var k = 0\n        var count = 0\n        while (i < n) {\n            a(i)\
    \ = i * i - i + 1\n            i += 1\n        }\n        val triples = a.filter(_\
    \ % 3 == 0)\n        val tripleCount = triples.count()\n        while (j < m)\
    \ {\n            while (k < n) {\n                if (triples(j) == triples(k))\
    \ {\n                    count += 1\n                }\n                k += 1\n\
    \            }\n            j += 1\n            count = 0\n        }\n       \
    \ max = tripleCount * 3\n        return max", "        val a = mutable.ArrayBuffer(1l)\n\
    \        for(i <- 1 to n){\n            val x = i * i - i + 1\n            a.append(x)\n\
    \        }\n        val res = a.filter(_ % 3 == 0).size\n        res", "     \
    \   val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill",
  "        val a = mutable.ArrayBuffer.fill(n)(0l)\n        val b = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0l)\n        val d = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val triples = mutable.ArrayBuffer.fill(n)(0l)\n        val triple = 0\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var tripleCount\
    \ = 0\n        while(i < n && j < n && k < n) {\n            triple = i * i -\
    \ i + 1\n            if((triple % 3) == 0) {\n                a(i) = triple\n\
    \                b(j) = triple\n                c(k) = triple\n              \
    \  tripleCount += 1\n            }\n            i += 1\n            j += 1\n \
    \           k += 1\n        }\n        while(i < n) {\n            triple = i\
    \ * i - i + 1\n            a(i) = triple\n            i += 1\n            tripleCount\
    \ += 1\n        }\n        while(j < n) {\n            triple = i * i - i + 1\n\
    \            b(j) = triple\n            j += 1\n            tripleCount += 1\n\
    \        }\n        while(k < n) {\n            triple = i * i - i + 1\n     \
    \       c(k) = triple\n            k += 1\n            tripleCount += 1\n    \
    \    }\n        for(i <- 0 until tripleCount) {\n            val triple = a(i)\
    \ + b(i) + c(i)\n            if(triple % 3 == 0) {\n                triples(i)\
    \ = triple\n            }\n        }\n        triples.toList.max", "        val\
    \ a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val y = mutable.ArrayBuffer.fill(", "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(n)\n\
    \        val i = scala.math.BigInt(1)\n        val j = scala.math.BigInt(2)\n\
    \        val k = scala.math.BigInt(3)\n        while(i < n) {\n            a(i)\
    \ = i * i - i + 1\n            i += 1\n        }\n        val triples = a.zipWithIndex.filter(_._2\
    \ % 3 == 0).map(_._1).sum\n        return triples * m", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while (i < n)\
    \ {\n            a += (i * i - i + 1)\n            i += 1\n        }\n       \
    \ var count = 0\n        while (j < n) {\n            while (k < n) {\n      \
    \          while (j < n && k < n && a[j] < a[k]) {\n                    k += 1\n\
    \                }\n                if (k == n) {\n                    count +=\
    \ 1\n                    k = 0\n                }\n                k += 1\n  \
    \          }\n            j += 1\n        }\n        return count", "        var\
    \ a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        var i = 0\n  \
    \      var j = 0\n        var k = 0\n        var count = 0\n        while(i <\
    \ n) {\n            while(j < n) {\n                while(k <= n) {\n        \
    \            if(i + j + k == n) {\n                        count += 1\n      \
    \                  a.add(i * i - i + 1)\n                        a.add(j * j -\
    \ j + 1)\n                        a.add(k * k - k + 1)\n                    }\n\
    \                    k += 1\n                }\n                j += 1\n     \
    \       }\n            i += 1\n        }\n        a.toList.sortWith(_ < _)\n \
    \       a.toList.last", "        val a = mutable.ArrayBuffer(1l)\n        val\
    \ b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n     \
    \   val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            a.append(i * i - i + 1)\n          \
    \  i += 1\n        }\n        while (j < n) {\n            b.append(i * i - i\
    \ + 1)\n            j += 1\n        }\n        while (k < n) {\n            c.append(i\
    \ * i - i + 1)\n            k += 1\n        }\n        while (i < n && j < n &&\
    \ k < n) {\n            triples.append(a(i) + a(j) + a(k))\n            i += 1\n\
    \            j += 1\n            k += 1\n        }\n        while (i < n) {\n\
    \            a.append(i * i - i + 1)\n            i += 1\n        }\n        while\
    \ (j < n) {\n            b.append(i * i - i + 1)\n            j += 1\n       \
    \ }\n        while (k < n) {\n            c.append(i * i - i + 1)\n          \
    \  k += 1\n        }\n        while (i < n && j < n) {\n            triples.append(a(i)\
    \ + a(j))\n            i += 1\n            j += 1\n        }\n        while (i\
    \ < n) {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n\
    \        while (j < n) {\n            b.append(i * i - i + 1)\n            j +=\
    \ 1\n        }\n        while (i < n && k < n) {\n            triples.append(a(i)\
    \ + a(j) + a(k))\n            i += 1\n            j += 1\n            k += 1\n\
    \        }\n        while (i < n) {\n            a.append(i * i - i + 1)\n   \
    \         i += 1\n        }\n        while (j < n) {\n            b.append(i *\
    \ i - i + 1)\n            j += 1\n        }\n        while (i < n && k < n) {\n\
    \            triples.append(a(i) + a(j) + a(k))\n            i += 1\n        \
    \    j += 1\n            k += 1\n        }\n        while (i < n) {\n        \
    \    a.append(i * i - i + 1)\n            i += 1\n        }\n        while (j\
    \ < n) {\n            b.append(i * i - i + 1)\n            j += 1\n        }\n\
    \        while (i < n && k < n) {\n            triples.append(a(i) + a(j) + a(k))\n\
    \            i += 1\n            j += 1\n            k += 1\n        }\n     \
    \   while (i < n) {\n            a.append(i * i - i + 1)\n            i += 1\n\
    \        }\n        while (j < n) {\n            b.append(i * i - i + 1)\n   \
    \         j += 1\n        }\n        while (i < n && k < n) {\n            triples.append(a(i)\
    \ + a(j) + a(k))\n            i += 1\n            j += 1\n            k += 1\n\
    \        }\n        while (i < n) {\n            ", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val max = 0l\n        val maxTriples = 0l\n        for(i <- 1 to n) {\n\
    \            for(j <- i to n) {\n                for(k <- j to n) {\n        \
    \            if(i+j+k > max) {\n                        max = i+j+k\n        \
    \                maxTriples = i+j+k\n                    }\n                }\n\
    \            }\n            a(i) = i*i-1\n            m(i) = i*i\n           \
    \ n(i) = i\n        }\n        for(i <- 1 to n) {\n            if(a(i) + a(i)\
    \ + a(i) > maxTriples) {\n                maxTriples = a(i) + a(i) + a(i)\n  \
    \          }\n        }\n        maxTriples", "        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val ", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        while (i < n) {\n            a += i * i - i + 1\n\
    \            i += 1\n        }\n        val count = a.count(_ % 3 == 0)\n    \
    \    a.clear()\n        count", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while (i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    var count = 0\n        while (j < n) {\n            while (k < n) {\n   \
    \             if (a(k) == a(k) + a(k) + 3) {\n                    count += 1\n\
    \                }\n                k += 1\n            }\n            j += 1\n\
    \        }\n        count", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(",
  "        val a = mutable.ArrayBuffer(1l)\n        var i = 0\n        var j = 0\n\
    \        var k = 0\n        while(i < n) {\n            val temp = i * i - i +\
    \ 1\n            a.append(temp)\n            i += 1\n        }\n        val maxTriples\
    \ = a.max\n        while(j < n) {\n            val temp = j * j - j + 1\n    \
    \        a.append(temp)\n            j += 1\n        }\n        val maxTriples2\
    \ = a.max\n        while(k < n) {\n            val temp = k * k - k + 1\n    \
    \        a.append(temp)\n            k += 1\n        }\n        val maxTriples3\
    \ = a.max\n        if(maxTriples == maxTriples2) {\n            if(maxTriples\
    \ == maxTriples3) {\n                return 1l\n            }\n            return\
    \ 0l\n        }\n        return 1l", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = 0\n        var i = 0\n        var j = 0\n        var k =\
    \ 0\n        var count = 0\n        while(i < n) {\n            a(i) = i * i -\
    \ i + 1\n            i += 1\n        }\n        while(j < n) {\n            b(j)\
    \ = i * j - j + 1\n            j += 1\n        }\n        while(k <n) {\n    \
    \        c(k) = i * k - k + 1\n            k += 1\n        }\n        while(i\
    \ < n && j < n && k < n) {\n            if(a(i) + a(j) + a(k) = 3) {\n       \
    \         triples += 1\n                triple = a(i) + a(j) + a(k)\n        \
    \        while(i < n && j < n && k < n && a(i) + a(j) + a(k) = 3) {\n        \
    \            i += 1\n                    j += 1 \n                    k += 1\n\
    \                }\n                while(i < n && j < n && k < n && a(i) + a(j)\
    \ + a(k) = 3) {\n                    i += 1\n                    k -= 1\n    \
    \            }\n                while(i < n && j < n && k < n && a(i) + a(j) +\
    \ a(k) = 3) {\n                    j -= 1\n                    k += 1\n      \
    \          }\n                while(i < n && j < n && k < n && a(i) + a(j) + a(k)\
    \ = 3) {\n                    k -= 1\n                    k += 1\n           \
    \     }\n                while(i < n && j < n && k < n && a(i) + a(j) + a(k) =\
    \ 3) {\n                    i += 1\n                    j += 1\n             \
    \       k += 1\n                }\n                while(i < n && j < n && k <\
    \ n && a(i) + a(j) + a(k) = 3) {\n                    j += 1\n               \
    \     k -= 1\n                }\n                while(i < n && j < n && k < n\
    \ && a(i) + a(j) + a(k) = 3) {\n                    k -= 1\n                 \
    \   k += 1\n                }\n                while(i < n && j < n && k < n &&\
    \ a(i) + a(j) + a(k) = 3) {\n                    i += 1\n                    j\
    \ += 1\n                    k += 1\n                }\n                while(i\
    \ < n && j < n && k < n && a(i) + a(j) + a(k) = 3) {\n                    j +=\
    \ 1\n                    k -= 1\n                }\n                while(i <\
    \ n && j < n && k < n && a(i) + a(j) + a(k) = 3) {\n                    k -= 1\n\
    \                    k += 1\n                }\n                while(i < n &&\
    \ j < n && k < n && a(i) + a(", "        val a = Array.ofDim[Long](n)\n      \
    \  var i = 0\n        var j = 0\n        var k = 0\n        var count = 0\n  \
    \      while (i < n && j < n && k < n) {\n            a(i) = i * i - i + 1\n \
    \           i += 1\n            j += 1\n            k += 1\n        }\n      \
    \  val max = a.max\n        val min = a.min\n        val sum = a(0) + a(1) + a(2)\
    \ \n        while (i < n) {\n            if (a(i) > max) {\n                max\
    \ = a(i)\n            }\n            i += 1\n        }\n        while (j < n)\
    \ {\n            if (a(j) > max) {\n                max = a(j)\n            }\n\
    \            j += 1\n        }\n        while (k < n) {\n            if (a(k)\
    \ > max) {\n                max = a(k) \n            }\n            k += 1\n \
    \       }\n        while (i < n) {\n            if (a(i) < min) {\n          \
    \      min = a(i)\n            }\n            i += 1\n        }\n        while\
    \ (j < n) {\n            if (a(j) < min) {\n                min = a(j)\n     \
    \       }\n            j += 1\n        }\n        while (k < n) {\n          \
    \  if (a(k) < min) {\n                min = a(k)\n            }\n            k\
    \ += 1\n        }\n        val sum2 = sum + sum\n        if (sum2 % 3 == 0) {\n\
    \            count = count + 1\n        }\n        count", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mut", "   \
    \     val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)",
  "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        val m\
    \ = scala.math.pow(3, n).toLong\n        for(i <- 1 to n) {\n            val j\
    \ = i * i - i + 1\n            val k = i * i + i + 1\n            a.append(i *\
    \ i - i + 1)\n            a.append(i * i + i + 1)\n            a.append(i * i\
    \ + i + 1)\n        }\n        a.filter(_ % 3 == 0).length", "        var a :\
    \ mutable.MutableList[Long] = mutable.MutableList(1)\n        var i = 0\n    \
    \    var j = 0\n        var k = 0\n        while(i < n) {\n            if(i ==\
    \ 0 || i == n) {\n                a(i) = i * i - i + 1\n                i += 1\n\
    \            } else {\n                j = 0\n                while(j < i) {\n\
    \                    if(j == 0 || j == i) {\n                        a(j) = i\
    \ * i - i + 1\n                        j += 1\n                    } else {\n\
    \                        k = 0\n                        while(k <= j) {\n    \
    \                        if(k == 0 || k == j || k == i) {\n                  \
    \              a(k) = i * i - i + 1\n                                k += 1\n\
    \                            } else {\n                                break\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n        var count = 0\n   \
    \     for(i<-0 until a.size) {\n            if(a(i) % 3 == 0) {\n            \
    \    count += 1\n            }\n        }\n        count", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            while(j < n) {\n                while(k <n) {\n             \
    \       if(i+j+k == n){\n                        a.add(i*i-i+1)\n            \
    \            a.add(j*j-j)\n                        a.add(k*k-k)\n            \
    \            i = j = 0\n                        k = n\n                    }\n\
    \                    k += 1\n                }\n                j += 1\n     \
    \       }\n            i += 1\n        }\n        a.toList.sortWith(_ < _).length",
  "        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val z = mutable.ArrayBuffer(1l)\n\
    \        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val ", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val max = 0\n        val maxTriples = 0\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.", "        val a = Array.ofDim[Long](n)\n\
    \        val count = mutable.Map[Long, Long]()\n        for( i <- 0 until n )\
    \ {\n            val j = i * i - i + 1\n            if( j > 0 ) {\n          \
    \      val k = i * i + j\n                if( k > 0 ) {\n                    if(\
    \ k > j ) {\n                        val k2 = k - j\n                        if(\
    \ k2 % 3 == 0 ) {\n                            val count = count(k2)\n       \
    \                     if( count > 0 ) {\n                                count(k2)\
    \ = count(k2) + 1\n                            } else {\n                    \
    \            count(k2) = 1\n                            }\n                  \
    \      }\n                    }\n                }\n            }\n        }\n\
    \        count(a.max)", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        val m = scala.math.max(scala.math.abs(n), 1l)\n        for(i <- 1 to\
    \ m){\n            for(j <- 1 to m){\n                for(k <- 1 to m){\n    \
    \                if(i+j+k == n){\n                        a += (i*i*i - i*i +\
    \ i*j + i*k + j*k + k*k).toLong\n                    }\n                }\n  \
    \          }\n        }\n        a.toList.max", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = 0\n        val triples = 0\n        val triple = 0\n   \
    \     val triples = 0\n        val triple = 0\n        val triples = 0\n     \
    \   val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        ", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill",
  "        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n       \
    \ var i = 0\n        var j = 0\n        var k = 0\n        while(i < n && j <\
    \ n && k < n) {\n            a(i) = i * i - i + 1\n            i += 1\n      \
    \      j += 1\n            k += 1\n        }\n        val triples = a.filter(_\
    \ % 3 == 0).length\n        (triples * 3).toLong", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill",
  "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(", "        val a = Array.ofDim[Long](n)\n\
    \        val m = a.length\n        val n = a.length\n        val d = new mutable.HashMap[Long,\
    \ Long]()\n        val s = scala.math.BigInt(3)\n        val t = scala.math.BigInt(2)\n\
    \        val r = scala.math.BigInt(1)\n        val f = scala.math.BigInt(0)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(3)\n\
    \        val d = scala.math.BigInt(3)\n        val s = scala.math.BigInt(3)\n\
    \        val t = scala.math.BigInt(3)\n        val r = scala.math.BigInt(3)\n\
    \        val f = scala.math.BigInt(3)\n        val m = scala.math.BigInt(3)\n\
    \        val n = scala.math.BigInt(3)\n        val d = scala.math.BigInt(3)\n\
    \        val s = scala.math.BigInt(3)\n        val t = scala.math.BigInt(3)\n\
    \        val r = scala.math.BigInt(3)\n        val f = scala.math.BigInt(3)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(3)\n\
    \        val d = scala.math.BigInt(3)\n        val s = scala.math.BigInt(3)\n\
    \        val t = scala.math.BigInt(3)\n        val r = scala.math.BigInt(3)\n\
    \        val f = scala.math.BigInt(3)\n        val m = scala.math.BigInt(3)\n\
    \        val n = scala.math.BigInt(3)\n        val d = scala.math.BigInt(3)\n\
    \        val s = scala.math.BigInt(3)\n        val t = scala.math.BigInt(3)\n\
    \        val r = scala.math.BigInt(3)\n        val f = scala.math.BigInt(3)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(3)\n\
    \        val d = scala.math.BigInt(3)\n        val s = scala.math.BigInt(3)\n\
    \        val t = scala.math.BigInt(3)\n        val r = scala.math.BigInt(3)\n\
    \        val f = scala.math.BigInt(3)\n        val m = scala.math.BigInt(3)\n\
    \        val n = scala.math.BigInt(3)\n        val d = scala.math.BigInt(3)\n\
    \        val s = scala.math.BigInt(3)\n        val t = scala.math.BigInt(3)\n\
    \        val r = scala.math.BigInt(3)\n        val f = scala.math.BigInt(3)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.", "        val a\
    \ = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val m = scala.math.max(scala.math.abs(n),\
    \ scala.math.abs(a.last))\n        val r = scala.math.abs(a.last)\n        val\
    \ s = scala.math.abs(a.last)\n        val t = scala.math.abs(a.last)\n       \
    \ val u = scala.math.abs(a.last)\n        val v = scala.math.abs(a.last)\n   \
    \     val w = scala.math.abs(a.last)\n        val x = scala.math.abs(a.last)\n\
    \        val y = scala.math.abs(a.last)\n        val z = scala.math.abs(a.last)\n\
    \        val t = scala.math.abs(a.last)\n        val u = scala.math.abs(a.last)\n\
    \        val v = scala.math.abs(a.last)\n        val w = scala.math.abs(a.last)\n\
    \        val x = scala.math.abs(a.last)\n        val y = scala.math.abs(a.last)\n\
    \        val z = scala.math.abs(a.last)\n        val t = scala.math.abs(a.last)\n\
    \        val u = scala.math.abs(a.last)\n        val v = scala.math.abs(a.last)\n\
    \        val w = scala.math.abs(a.last)\n        val x = scala.math.abs(a.last)\n\
    \        val y = scala.math.abs(a.last)\n        val z = scala.math.abs(a.last)\n\
    \        val t = scala.math.abs(a.last)\n        val u = scala.math.abs(a.last)\n\
    \        val v = scala.math.abs(a.last)\n        val w = scala.math.abs(a.last)\n\
    \        val x = scala.math.abs(a.last)\n        val y = scala.math.abs(a.last)\n\
    \        val z = scala.math.abs(a.last)\n        val t = scala.math.abs(a.last)\n\
    \        val u = scala.math.abs(a.last)\n        val v = scala.math.abs(a.last)\n\
    \        val w = scala.math.abs(a.last)\n        val x = scala.math.abs(a.last)\n\
    \        val y = scala.math.abs(a.last)\n        val z = scala.math.abs(a.last)\n\
    \        val t = scala.math.abs(a.last)\n        val u = scala.math.abs(a.last)\n\
    \        val v = scala.math.abs(a.last)\n        val w = scala.math.abs(a.last)\n\
    \        val x = scala.math.abs(a.last)\n        val y = scala.math.abs(a.last)\n\
    \        val z = ", "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill",
  "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        for(i\
    \ <- 1 to n){\n            for(j <- 1 to n){\n                for(k <- 1 to n){\n\
    \                    if(i<j && j<k && a(i)+a(j)+a(k) == i*i*i){\n            \
    \            a += i*i*i\n                    }\n                }\n          \
    \  }\n        }\n        a.length", "        val a = mutable.ArrayBuffer(1l)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    if (a(i) + a(j) + a(k) == 3) {\n            \
    \            count += 1\n                    }\n                    k += 1\n \
    \               }\n                j += 1\n            }\n            i += 1\n\
    \        }\n        count", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + i + j\n            a += i\n            a += j\n            a +=\
    \ k\n        }\n        a.toList.sortWith(_ < _).length", "        val a = mutable.ArrayBuffer(1l)\n\
    \        for(i <- 1l to n){\n            val j = i * i - i + 1\n            val\
    \ k = i * i * i\n            val l = i * i * i * i\n            val m = i * i\
    \ * i * i * i\n            val n = i * i * i * i * i * i\n            val o =\
    \ i * i * i * i * i * i * i\n            val p = i * i * i * i * i * i * i * i\n\
    \            val q = i * i * i * i * i * i * i * i * i * i\n            val r\
    \ = i * i * i * i * i * i * i * i * i * i * i * i\n            val s = i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i\n            val t = i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i * i\n            val u = i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\n        \
    \    val v = i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\
    \ * i * i * i\n            val w = i * i * i * i * i * i * i * i * i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i\n            val x = i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\
    \ * i\n            val y = i * i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i\n            val z = i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\
    \ * i * i\n            val a = i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\n            val b\
    \ = i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\
    \ * i * i * i * i * i * i * i * i\n            val c = i * i * i * i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i\n            val d = i * i * i * i * i * i * i * i * i * i * i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i\n            val e = i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i * i * i * i * i * i\n            val f = i * i * i * i * i * i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\n  \
    \          val g = i * i * i * i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i * ", "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n  \
    \      val b = new Array[Int](n)\n        val c = new Array[Int](n)\n        val\
    \ d = new Array[Int](n)\n        val e = new Array[Int](n)\n        val f = new\
    \ Array[Int](n)\n        val g = new Array[Int](n)\n        val h = new Array[Int](n)\n\
    \        val i = new Array[Int](n)\n        val j = new Array[Int](n)\n      \
    \  val k = new Array[Int](n)\n        val l = new Array[Int](n)\n        val m\
    \ = new Array[Int](n)\n        val n = new Array[Int](n)\n        val o = new\
    \ Array[Int](n)\n        val p = new Array[Int](n)\n        val q = new Array[Int](n)\n\
    \        val r = new Array[Int](n)\n        val s = new Array[Int](n)\n      \
    \  val t = new Array[Int](n)\n        val u = new Array[Int](n)\n        val v\
    \ = new Array[Int](n)\n        val w = new Array[Int](n)\n        val x = new\
    \ Array[Int](n)\n        val y = new Array[Int](n)\n        val z = new Array[Int](n)\n\
    \        val a = new Array[Int](n)\n        val b = new Array[Int](n)\n      \
    \  val c = new Array[Int](n)\n        val d = new Array[Int](n)\n        val e\
    \ = new Array[Int](n)\n        val f = new Array[Int](n)\n        val g = new\
    \ Array[Int](n)\n        val h = new Array[Int](n)\n        val i = new Array[Int](n)\n\
    \        val j = new Array[Int](n)\n        val k = new Array[Int](n)\n      \
    \  val l = new Array[Int](n)\n        val m = new Array[Int](n)\n        val n\
    \ = new Array[Int](n)\n        val o = new Array[Int](n)\n        val p = new\
    \ Array[Int](n)\n        val q = new Array[Int](n)\n        val r = new Array[Int](n)\n\
    \        val s = new Array[Int](n)\n        val t = new Array[Int](n)\n      \
    \  val u = new Array[Int](n)\n        val v = new Array[Int](n)\n        val w\
    \ = new Array[Int](n)\n        val x = new Array[Int](n)\n        val y = new\
    \ Array[Int](n)", "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ count = mutable.ArrayBuffer.fill(n)(0)\n        val max = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill", "        val a = mutable.ArrayBuffer(1l)\n    \
    \    val b = mutable.ArrayBuffer(3l)\n        val c = mutable.ArrayBuffer(3l)\n\
    \        val d = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)",
  "        val a = mutable.ArrayBuffer(1l)\n        for (i <- 1 to n) {\n        \
    \    val j = i * i - i + 1\n            val k = i * i + j\n            if (j >\
    \ k) {\n                val tmp = j\n                j = k\n                k\
    \ = tmp\n            }\n            a.update(0, k)\n        }\n        a.sum",
  "        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        var i = 0\n        while\
    \ (i < n) {\n            a.append(i * i - i + 1)\n            b.append(i * i -\
    \ i + 1)\n            c.append(i * i - i + 1)\n            d.append((i * i - i\
    \ + 1) / 3)\n            i += 1\n        }\n        val triple = a.zip(b.zip(c.zip(d.zip(a)))).filter(_._1.sum\
    \ % 3 == 0).length\n        triples += triple\n        triples.toLong", "    \
    \    val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        for (i\
    \ <- 1 to n) {\n            val j = i * i - i + 1\n            val k = i * i *\
    \ i\n            a += j\n            a += k\n        }\n        val result = a.filter(_\
    \ % 3 == 0).length\n        result", "        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val ", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n      \
    \  val count = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.to", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        val m = scala.math.pow(3, n)\n        for(i <- 1 to n) {\n          \
    \  for(j <- 1 to n) {\n                for(k <- 1 to n) {\n                  \
    \  if(i+j+k == m) {\n                        a += (i*i*i) + (j*j*j) + (k*k*k)\n\
    \                    }\n                }\n            }\n        }\n        a.toList.max",
  "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill", "        var a = Array.ofDim[Long](n)\n\
    \        var count = 0\n        var i = 0\n        var j = 0\n        var k =\
    \ 0\n        while(i < n && j < n && k < n) {\n            a(i) = i * i - i +\
    \ 1\n            i += 1\n            j += 1\n            k += 1\n        }\n \
    \       while(i < n) {\n            a(i) = i * i - i + 1\n            i += 1\n\
    \        }\n        while(j < n) {\n            a(j) = i * i - i + 1\n       \
    \     j += 1\n        }\n        while(k < n) {\n            a(k) = i * i - i\
    \ + 1\n            k += 1\n        }\n        for(i<-0 until a.length) {\n   \
    \         for(j<-0 until a.length) {\n                for(k<-0 until a.length)\
    \ {\n                    if(a(i) + a(j) + a(k) % 3 == 0) {\n                 \
    \       count += 1\n                    }\n                }\n            }\n\
    \        }\n        count", "        val a = mutable.ArrayBuffer(1l)\n       \
    \ val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n \
    \       val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val ", "        val a = mutable.ArrayBuffer(1l)\n        for(i <- 1l\
    \ to n){\n            for(j <- i to n){\n                for(k <- i to n){\n \
    \                   if(i+j+k == i*i*k){\n                        a += (i*i*k).toLong\n\
    \                    }\n                }\n            }\n        }\n        a.max",
  "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        for(i\
    \ <- 1 to n) {\n            a += i * i - i + 1\n        }\n        val maxTriples\
    \ = a.filter(_ % 3 == 0).length\n        return maxTriples", "        var a =\
    \ scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        var i = 0\n       \
    \ var j = 0\n        var k = 0\n        var count = 0\n        while(i < n &&\
    \ j < n && k < n) {\n            if(a(i) + a(j) + a(k) = 3) {\n              \
    \  count += 1\n            }\n            i += 1\n            j += 1\n       \
    \     k += 1\n        }\n        count", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.", " \
    \       val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill", "        val a = Array.ofDim[Long](n)\n\
    \        val b = Array.ofDim[Long](n)\n        val c = Array.ofDim[Long](n)\n\
    \        val d = Array.ofDim[Long](n)\n        val e = Array.ofDim[Long](n)\n\
    \        val f = Array.ofDim[Long](n)\n        val g = Array.ofDim[Long](n)\n\
    \        val h = Array.ofDim[Long](n)\n        val i = Array.ofDim[Long](n)\n\
    \        val j = Array.ofDim[Long](n)\n        val k = Array.ofDim[Long](n)\n\
    \        val l = Array.ofDim[Long](n)\n        val m = Array.ofDim[Long](n)\n\
    \        val n = Array.ofDim[Long](n)\n        val o = Array.ofDim[Long](n)\n\
    \        val p = Array.ofDim[Long](n)\n        val q = Array.ofDim[Long](n)\n\
    \        val r = Array.ofDim[Long](n)\n        val s = Array.ofDim[Long](n)\n\
    \        val t = Array.ofDim[Long](n)\n        val u = Array.ofDim[Long](n)\n\
    \        val v = Array.ofDim[Long](n)\n        val w = Array.ofDim[Long](n)\n\
    \        val x = Array.ofDim[Long](n)\n        val y = Array.ofDim[Long](n)\n\
    \        val z = Array.ofDim[Long](n)\n        val a = Array.ofDim[Long](n)\n\
    \        val b = Array.ofDim[Long](n)\n        val c = Array.ofDim[Long](n)\n\
    \        val d = Array.ofDim[Long](n)\n        val e = Array.ofDim[Long](n)\n\
    \        val f = Array.ofDim[Long](n)\n        val g = Array.ofDim[Long](n)\n\
    \        val h = Array.ofDim[Long](n)\n        val i = Array.ofDim[Long](n)\n\
    \        val j = Array.ofDim[Long](n)\n        val k = Array.ofDim[Long](n)\n\
    \        val l = Array.ofDim[Long](n)\n        val m = Array.ofDim[Long](n)\n\
    \        val n = Array.ofDim[Long](n)\n        val o = Array.ofDim[Long](n)\n\
    \        val p = Array.ofDim[Long](n)\n        val q = Array.ofDim[Long](n)\n\
    \        val r = Array.ofDim[Long](n)\n        val s = Array.ofDim[Long](n)\n\
    \        val t = Array.ofDim[Long](n)\n        val u = Array.ofDim", "       \
    \ val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + i + 1\n            a += j\n            a += k\n        }\n     \
    \   val max = a.reduceLeft(_ + _)\n        if (max % 3 == 0) 1\n        else 0",
  "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val r = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val s = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val u = mutable.ArrayBuffer.fill(n)(0)\n        val v = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val w = mutable.ArrayBuffer.fill(n)(0)\n        val x = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val y = mutable.ArrayBuffer.fill(n)(0)\n        val z = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n)(0)\n        val f = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n)(0)\n        val h = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n)(0)\n        val p = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = mutable.ArrayBuffer.fill(n)(0)\n        val r = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val s = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val u = mutable.ArrayBuffer.fill(n)(0)\n        val v = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val w = mutable.ArrayBuffer.fill(n)(0)\n        val x = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val y = mutable.ArrayBuffer.fill(n)(0)\n        val z = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = mutable.ArrayBuffer.fill", "        val a = mutable.ArrayBuffer(1l)\n\
    \        for(i <- 1 until n){\n            val j = i * i - i + 1\n           \
    \ val k = i * i + j\n            val l = i * i - j\n            val m = i * i\
    \ + k\n            val n = i * i - k\n            val o = i * i + l\n        \
    \    val p = i * i - m\n            val q = i * i + n\n            val r = i *\
    \ i - o\n            val s = i * i + p\n            val t = i * i - q\n      \
    \      val u = i * i + r\n            val v = i * i - s\n            val w = i\
    \ * i + t\n            val x = i * i - u\n            val y = i * i + v\n    \
    \        val z = i * i - w\n            val a = a + 1\n            a.update(0,\
    \ i)\n            a.update(1, j)\n            a.update(2, k)\n            a.update(3,\
    \ l)\n            a.update(4, m)\n            a.update(5, n)\n            a.update(6,\
    \ o)\n            a.update(7, p)\n            a.update(8, q)\n            a.update(9,\
    \ r)\n            a.update(10, s)\n            a.update(11, t)\n            a.update(12,\
    \ u)\n            a.update(13, v)\n            a.update(14, w)\n            a.update(15,\
    \ x)\n            a.update(16, y)\n            a.update(17, z)\n        }\n  \
    \      a.toList.max", "        val a = mutable.ArrayBuffer(1l)\n        for(i\
    \ <- 1l to n){\n            val j = i * i - i + 1\n            val k = i * i +\
    \ i + j\n            val m = k * k\n            if(m == n){\n                a.append(i)\n\
    \                a.append(j)\n                a.append(k)\n            }\n   \
    \     }\n        a.toList.sortWith((a, b) => b - a).last", "        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val ", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        while (i < n) {\n            a += i * i - i + 1\n\
    \            i += 1\n        }\n        val n = a.length\n        var i = 0\n\
    \        var j = 0\n        var k = 0\n        var count = 0\n        while (i\
    \ < n) {\n            while (j < n) {\n                while (k < n) {\n     \
    \               if (a(i) + a(j) + a(k) % 3 == 0) {\n                        count\
    \ += 1\n                    }\n                    k += 1\n                }\n\
    \                j += 1\n            }\n            i += 1\n        }\n      \
    \  count", "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            for (j <- 1 to\
    \ n) {\n                if (i != j && j != i) {\n                    for (k <-\
    \ 1 to n) {\n                        if (i != k && j != k && k != i) {\n     \
    \                       if (a(i) + a(j) + a(k) == 3) {\n                     \
    \           count += 1\n                                a(i) = a(j) = a(k) = i\n\
    \                                a(k) = i\n                            }\n   \
    \                     }\n                    }\n                }\n          \
    \  }\n        }\n        a.toList.length", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples", "        val\
    \ a = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0l)\n        val m = mutable.", " \
    \       val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill", "        val a = Array.ofDim[Long](n)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        ", "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i * i\n            a += j\n            a += k\n        }\n        val\
    \ result = a.filter(_ % 3 == 0).length\n        result", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val result = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val max =\
    \ (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.",
  "        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.", "        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = new Array[Long](n)\n        val c = new Array[Long](n)\n    \
    \    val d = new Array[Long](n)\n        val e = new Array[Long](n)\n        val\
    \ f = new Array[Long](n)\n        val g = new Array[Long](n)\n        val h =\
    \ new Array[Long](n)\n        val i = new Array[Long](n)\n        val j = new\
    \ Array[Long](n)\n        val k = new Array[Long](n)\n        val l = new Array[Long](n)\n\
    \        val m = new Array[Long](n)\n        val n = new Array[Long](n)\n    \
    \    val o = new Array[Long](n)\n        val p = new Array[Long](n)\n        val\
    \ q = new Array[Long](n)\n        val r = new Array[Long](n)\n        val s =\
    \ new Array[Long](n)\n        val t = new Array[Long](n)\n        val u = new\
    \ Array[Long](n)\n        val v = new Array[Long](n)\n        val w = new Array[Long](n)\n\
    \        val x = new Array[Long](n)\n        val y = new Array[Long](n)\n    \
    \    val z = new Array[Long](n)\n        val a = new Array[Long](n)\n        val\
    \ b = new Array[Long](n)\n        val c = new Array[Long](n)\n        val d =\
    \ new Array[Long](n)\n        val e = new Array[Long](n)\n        val f = new\
    \ Array[Long](n)\n        val g = new Array[Long](n)\n        val h = new Array[Long](n)\n\
    \        val i = new Array[Long](n)\n        val j = new Array[Long](n)\n    \
    \    val k = new Array[Long](n)\n        val l = new Array[Long](n)\n        val\
    \ m = new Array[Long](n)\n        val n = new Array[Long](n)\n        val o =\
    \ new Array[Long](n)\n        val p = new Array[Long](n)\n        val q = new\
    \ Array[Long](n)\n        val r = new Array[Long](n)\n        val s = new Array[Long](n)\n\
    \        val t = new Array[Long](n)\n        val u = new Array[Long](n)\n    \
    \    val v = new Array[Long](n)\n        val w = new Array[Long](n)\n        val\
    \ x = new Array[Long](n)\n        val y = new Array[Long](n)\n        val ", " \
    \       val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val z = mutable.ArrayBuffer(1l)\n\
    \        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val ", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val max = 0\n        val min = (n + 1).toInt\n        val maxTriples\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n) {\n           \
    \ val j = i\n            val k = n - i\n            val sum = a(i) + a(j) + a(k)\
    \ - 3\n            if (sum > max) {\n                max = sum\n             \
    \   maxTriples = maxTriples.updated(i, sum)\n            }\n            if (sum\
    \ < min) {\n                min = sum\n                maxTriples = maxTriples.updated(i,\
    \ sum)\n            }\n        }\n        max match {\n            case 0 => 0\n\
    \            case _ => maxTriples.toList.length\n        }", "        val a =\
    \ scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val m = scala.math.BigInt(3)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.BigInt(n)\n        val m = scala.math.BigInt(m)\n\
    \        val n = scala.math.Big", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    while(j < n) {\n            a.append(j * j - j + 1)\n            j += 1\n\
    \        }\n        while(k < (n - 1)) {\n            a.append(k * k - k + 1)\n\
    \            k += 1\n        }\n        val count = a.count(_ % 3 == 0)\n    \
    \    return count", "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill",
  "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        var i\
    \ = 0\n        var j = 0\n        var k = 0\n        var count = 0\n        while(i\
    \ < n) {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n\
    \        while(j < n) {\n            while(j < n && k < 3) {\n               \
    \ k += 1\n                j += 1\n            }\n            count += k\n    \
    \        k += 1\n            j += 1\n        }\n        count += k\n        count\
    \ += j\n        count += i\n        count += a.size - 1\n        count += a.size\
    \ - 2\n        count += a.size - 3\n        count += a.size - 4\n        count\
    \ += a.size - 5\n        count += a.size - 6\n        count += a.size - 7\n  \
    \      count += a.size - 8\n        count += a.size - 9\n        count += a.size\
    \ - 10\n        count += a.size - 11\n        count += a.size - 12\n        count\
    \ += a.size - 13\n        count += a.size - 14\n        count += a.size - 15\n\
    \        count += a.size - 16\n        count += a.size - 17\n        count +=\
    \ a.size - 18\n        count += a.size - 19\n        count += a.size - 20\n  \
    \      count += a.size - 21\n        count += a.size - 22\n        count += a.size\
    \ - 23\n        count += a.size - 24\n        count += a.size - 25\n        count\
    \ += a.size - 26\n        count += a.size - 27\n        count += a.size - 28\n\
    \        count += a.size - 29\n        count += a.size - 30\n        count +=\
    \ a.size - 31\n        count += a.size - 32\n        count += a.size - 33\n  \
    \      count += a.size - 34\n        count += a.size - 35\n        count += a.size\
    \ - 36\n        count += a.size - 37\n        count += a.size - 38\n        count\
    \ += a.size - 39\n        count += a.size - 40\n        count += a.size - 41\n\
    \        count += a.size - 42\n        count += a.size - 43\n        count +=\
    \ a.size - 44\n        count += a.size - 45\n        count += a.size - 46\n  \
    \      count += a.size - 47\n        count += a.size - 48\n        count += a.size\
    \ - 49\n        count += a.size - 50\n        count += a.size - 51\n        count\
    \ += a.size - 52\n        count += a.size - 53\n        count += a.size - 54\n\
    \        count += a.size - 55\n        count += a.size - 56\n        count +=\
    \ a.size - 57\n        count += a.size - 58\n        count += a.size - 59", " \
    \       val a = mutable.ArrayBuffer(1l)\n        for (i <- 1l to n) a += i * i\
    \ - i + 1\n        val count = a.filter(_ % 3 == 0).size\n        a.clear()\n\
    \        count", "        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n        ",
  "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        var i\
    \ = 0\n        var j = 0\n        var k = 0\n        var count = 0\n        while\
    \ (i < n) {\n            while (j < n) {\n                while (k < n) {\n  \
    \                  a(i) = i * i - i + 1\n                    a(j) = i * i - j\
    \ + 1\n                    a(k) = i * i - k + 1\n                    count +=\
    \ 1\n                    k += 1\n                }\n                j += 1\n \
    \           }\n            i += 1\n        }\n        a.toList.length", "    \
    \    val a = mutable.ArrayBuffer.fill(n)(0)\n        val max = 0\n        val\
    \ maxTriples = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n) {\n\
    \            val j = i - 1\n            val k = i + 1\n            val sum = i\
    \ * i - i + 1\n            val triples = if (sum % 3 == 0) 1 else 0\n        \
    \    val triple = if (sum > max) triples else 0\n            val triples = if\
    \ (sum > max) 1 else 0\n            val triple = if (sum > max) 1 else 0\n   \
    \         val triples = if (sum > max) 1 else 0\n            val triple = if (sum\
    \ > max) 1 else 0\n            val triples = if (sum > max) 1 else 0\n       \
    \     val triple = if (sum > max) 1 else 0\n            val triples = if (sum\
    \ > max) 1 else 0\n            val triple = if (sum > max) 1 else 0\n        \
    \    val triples = if (sum > max) 1 else 0\n            val triple = if (sum >\
    \ max) 1 else 0\n            val triples = if (sum > max) 1 else 0\n         \
    \   val triple = if (sum > max) 1 else 0\n            val triples = if (sum >\
    \ max) 1 else 0\n            val triple = if (sum > max) 1 else 0\n          \
    \  val triples = if (sum > max) 1 else 0\n            val triple = if (sum > max)\
    \ 1 else 0\n            val triples = if (sum > max) 1 else 0\n            val\
    \ triple = if (sum > max) 1 else 0\n            val triples = if (sum > max) 1\
    \ else 0\n            val triple = if (sum > max) 1 else 0\n            val triples\
    \ = if (sum > max) 1 else 0\n            val triple = if (sum > max) 1 else 0\n\
    \            val triples = if (sum > max) 1 else 0\n            val triple = if\
    \ (sum > max) 1 else 0\n            val triples = if (sum > max) 1 else 0\n  \
    \          val triple = if (sum > max) 1 else 0\n            val triples = if\
    \ (sum > max) 1 else 0\n            val triple = if (sum > max) 1 else 0\n   \
    \         val triples = if (sum > max) 1 else 0\n            val triple = if (sum\
    \ > max) 1 else 0\n            val triples = if (sum > max) 1 else 0\n       \
    \     val triple = if (sum > max) 1 else 0\n            val triples = if (sum\
    \ > max) 1 else 0\n            val triple = if (sum > max) 1 else 0\n        \
    \    val triples = if (sum > max) 1 else 0\n            val triple = if (sum >\
    \ max) 1 else ", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        while (i < n) {\n            a += i * i - i + 1\n\
    \            i += 1\n        }\n        val n = a.length\n        var count =\
    \ 0\n        var j = 0\n        while (j < n) {\n            var k = 0\n     \
    \       while (k < n) {\n                if (j > k) {\n                    if\
    \ (a[j] + a[k] == 0) {\n                        count += 1\n                 \
    \   }\n                }\n                k += 1\n            }\n            j\
    \ += 1\n        }\n        count", "        val a = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            a.append(i * i - i + 1)\n          \
    \  i += 1\n        }\n        while (j < n) {\n            while (k < n) {\n \
    \               count += 1\n                k += 1\n            }\n          \
    \  j += 1\n        }\n        val triples = a.filter(_ % 3 == 0)\n        val\
    \ tripleCount = triples.count(_ % 3 == 0)\n        tripleCount", "        val\
    \ a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(", "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            while(j < n) {\n                while(k\
    \ <= n) {\n                    if(i+j+k == n) {\n                        count\
    \ += 1\n                    }\n                    k += 1\n                }\n\
    \                j += 1\n            }\n            i += 1\n        }\n      \
    \  a.toList.length", "        val a = mutable.ArrayBuffer.fill(n)(0l)\n      \
    \  val count = mutable.ArrayBuffer.fill(n)(0l)\n        val triples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.", "    \
    \    val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mut", "        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val z = mutable.ArrayBuffer(1l)\n\
    \        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val e = mutable.ArrayBuffer(1l)\n        val f = mutable.ArrayBuffer(1l)\n\
    \        val g = mutable.ArrayBuffer(1l)\n        val h = mutable.ArrayBuffer(1l)\n\
    \        val i = mutable.ArrayBuffer(1l)\n        val j = mutable.ArrayBuffer(1l)\n\
    \        val k = mutable.ArrayBuffer(1l)\n        val l = mutable.ArrayBuffer(1l)\n\
    \        val m = mutable.ArrayBuffer(1l)\n        val n = mutable.ArrayBuffer(1l)\n\
    \        val o = mutable.ArrayBuffer(1l)\n        val p = mutable.ArrayBuffer(1l)\n\
    \        val q = mutable.ArrayBuffer(1l)\n        val r = mutable.ArrayBuffer(1l)\n\
    \        val s = mutable.ArrayBuffer(1l)\n        val t = mutable.ArrayBuffer(1l)\n\
    \        val u = mutable.ArrayBuffer(1l)\n        val v = mutable.ArrayBuffer(1l)\n\
    \        val w = mutable.ArrayBuffer(1l)\n        val x = mutable.ArrayBuffer(1l)\n\
    \        val y = mutable.ArrayBuffer(1l)\n        val ", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    while(j < n) {\n            a.append(j * j - j + 1)\n            j += 1\n\
    \        }\n        while(k <n) {\n            a.append(k * k - k + 1)\n     \
    \       k += 1\n        }\n        val count = a.filter(_ % 3 == 0).length\n \
    \       return count", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            a += i * i - i + 1\n            i += 1\n        }\n        while(j\
    \ < n) {\n            a += j * j - j + 1\n            j += 1\n        }\n    \
    \    while(k < n) {\n            a += k * k - k + 1\n            k += 1\n    \
    \    }\n        val count = a.filter(_ % 3 == 0).length\n        return count",
  "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        val m\
    \ = scala.math.BigInt(n)\n        val i = scala.math.BigInt(1)\n        val j\
    \ = scala.math.BigInt(2)\n        val k = scala.math.BigInt(3)\n        while(i\
    \ <= m) {\n            a.append(i)\n            i = i * i - i + 1\n        }\n\
    \        a.toList.sortWith((a, b) => a < b).takeWhile(x => x < m).foreach(x =>\
    \ \n            a.append(x))\n        a.toList.sortWith((a, b) => a < b).takeWhile(x\
    \ => x < m).foreach(x => \n            a.append(x))\n        a.toList.sortWith((a,\
    \ b) => a < b).takeWhile(x => x < m).foreach(x => \n            a.append(x))\n\
    \        a.toList.sortWith((a, b) => a < b).takeWhile(x => x < m).foreach(x =>\
    \ \n            a.append(x))\n        a.toList.sortWith((a, b) => a < b).takeWhile(x\
    \ => x < m).foreach(x => \n            a.append(x))\n        a.toList.sortWith((a,\
    \ b) => a < b).takeWhile(x => x < m).foreach(x => \n            a.append(x))\n\
    \        a.toList.sortWith((a, b) => a < b).takeWhile(x => x < m).foreach(x =>\
    \ \n            a.append(x))\n        a.toList.sortWith((a, b) => a < b).takeWhile(x\
    \ => x < m).foreach(x => \n            a.append(x))\n        a.toList.sortWith((a,\
    \ b) => a < b).takeWhile(x => x < m).foreach(x => \n            a.append(x))\n\
    \        a.toList.sortWith((a, b) => a < b).takeWhile(x => x < m).foreach(x =>\
    \ \n            a.append(x))\n        a.toList.sortWith((a, b) => a < b).takeWhile(x\
    \ => x < m).foreach(x => \n            a.append(x))\n        a.toList.sortWith((a,\
    \ b) => a < b).takeWhile(x => x < m).foreach(x => \n            a.append(x))\n\
    \        a.toList.sortWith((a, b) => a < b).takeWhile(x => x < m).foreach(x =>\
    \ \n            a.append(x))\n        a.toList.sortWith((a, b) => a < b).takeWhile(x\
    \ => x < m).foreach(x => \n            a.append(x))\n        a.toList.", "   \
    \     val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(3l)\n\
    \        val c = mutable.ArrayBuffer(3l)\n        val d = mutable.ArrayBuffer(3l)\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n     \
    \   val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val\
    \ triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples\
    \ = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n     \
    \   val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val\
    \ triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple\
    \ = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n     \
    \   val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val\
    \ triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples\
    \ = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n     \
    \   val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val\
    \ triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple\
    \ = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n     \
    \   val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val\
    \ triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples\
    \ = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n     \
    \   val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val\
    \ triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple\
    \ = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n     \
    \   val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val\
    \ triples = mutable.ArrayBuffer(", "        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val ", "        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val c = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ d = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val g = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ h = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val k = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ l = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val o = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ p = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val q = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val r = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val s = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ t = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val u = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val v = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val w = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ x = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val y = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val z = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ b = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val ", "        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val ", "   \
    \     val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n        for (i\
    \ <- 1 to n) {\n            val j = i * i - i + 1\n            val k = i * i +\
    \ j\n            a += i\n            a += j\n            a += k\n        }\n \
    \       val res = a.filter(_ % 3 == 0).length\n        a.clear()\n        res",
  "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n)(0)\n        val f = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n)(0)\n        val h = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n)(0)\n        val p = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = mutable.ArrayBuffer.fill(n)(0)\n        val r = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val s = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val u = mutable.ArrayBuffer.fill(n)(0)\n        val v = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val w = mutable.ArrayBuffer.fill(n)(0)\n        val x = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val y = mutable.ArrayBuffer.fill(n)(0)\n        val z = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val b = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = mutable.ArrayBuffer.fill(n)(0)\n        val d = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = mutable.ArrayBuffer.fill(n)(0)\n        val f = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val g = mutable.ArrayBuffer.fill(n)(0)\n        val h = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val o = mutable.ArrayBuffer.fill(n)(0)\n        val p = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = mutable.ArrayBuffer.fill", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(",
  "        val a = mutable.ArrayBuffer(1l)\n        val b = mutable.ArrayBuffer(1l)\n\
    \        val c = mutable.ArrayBuffer(1l)\n        val d = mutable.ArrayBuffer(1l)\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n        ",
  "        val a = mutable.ArrayBuffer(1l)\n        for(i <- 1 until n){\n       \
    \     val j = i * i - i + 1\n            val k = i * i + j\n            val l\
    \ = i * i + k\n            a += i\n            a += j\n            a += k\n  \
    \          a += l\n        }\n        val triples = a.toList\n        triples.sortWith(_\
    \ < _)\n        triples.count(_ % 3 == 0)", "        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        val m = scala.math.max(scala.math.pow(n, 2), scala.math.pow(n, 3))\n\
    \        val n = scala.math.pow(n, 3)\n        val i = scala.math.pow(n, 2)\n\
    \        val j = scala.math.pow(n, 3)\n        val k = scala.math.pow(n, 4)\n\
    \        val l = scala.math.pow(n, 5)\n        val m = scala.math.pow(n, 6)\n\
    \        val n = scala.math.pow(n, 7)\n        val i = scala.math.pow(n, 8)\n\
    \        val j = scala.math.pow(n, 9)\n        val k = scala.math.pow(n, 10)\n\
    \        val l = scala.math.pow(n, 11)\n        val m = scala.math.pow(n, 12)\n\
    \        val n = scala.math.pow(n, 13)\n        val i = scala.math.pow(n, 14)\n\
    \        val j = scala.math.pow(n, 15)\n        val k = scala.math.pow(n, 16)\n\
    \        val l = scala.math.pow(n, 17)\n        val m = scala.math.pow(n, 18)\n\
    \        val n = scala.math.pow(n, 19)\n        val i = scala.math.pow(n, 20)\n\
    \        val j = scala.math.pow(n, 21)\n        val k = scala.math.pow(n, 22)\n\
    \        val l = scala.math.pow(n, 23)\n        val m = scala.math.pow(n, 24)\n\
    \        val n = scala.math.pow(n, 25)\n        val i = scala.math.pow(n, 26)\n\
    \        val j = scala.math.pow(n, 27)\n        val k = scala.math.pow(n, 28)\n\
    \        val l = scala.math.pow(n, 29)\n        val m = scala.math.pow(n, 30)\n\
    \        val n = scala.math.pow(n, 31)\n        val i = scala.math.pow(n, 32)\n\
    \        val j = scala.math.pow(n, 33)\n        val k = scala.math.pow(n, 34)\n\
    \        val l = scala.math.pow(n, 35)\n        val m = scala.math.pow(n, 36)\n\
    \        val n = scala.math.pow(n, 37)\n        val i = scala.math.pow(n, 38)\n\
    \        val j = scala.math.pow(n, 39)\n        val k = scala.math.pow(n, 40)\n\
    \        val l = scala.math.pow(n, 41)\n        val m = scala.math.pow(n, 42)\n\
    \        val n = scala.math.pow(n, 43)\n        val i = scala.math.pow(n, 44)\n\
    \        val j = scala.math.pow(n, 45)\n        val k = scala.math.pow(n, 46",
  "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            while(j < n) {\n                while(k <n) {\n             \
    \       if(i+j+k == n*n*n) \n                        a.add(i*n - i*i + i*j - i*k\
    \ + k*k*k)\n                    k++\n                }\n                j++\n\
    \            }\n            i++\n        }\n        a.toList.sortWith(_ < _)\n\
    \        a.length", "        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    if (a(i) + a(j) + a(k) == 3) {\n            \
    \            count += 1\n                    }\n                    k += 1\n \
    \               }\n                j += 1\n            }\n            i += 1\n\
    \        }\n        count", "        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(",
  "        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill", "        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val ", "        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = scala.math.max(scala.math.abs(n))\n        val i = scala.math.min(scala.math.abs(n),\
    \ m)\n        val j = scala.math.min(scala.math.abs(n), m)\n        val k = scala.math.min(scala.math.abs(n),\
    \ m)\n        a(i) = i\n        a(j) = j\n        a(k) = k\n        val triples\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val triple2 = scala.collection.mutable.ArrayBuffer.empty[Int]\n     \
    \   val triple3 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ triple4 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple5\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple6 = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val triple7 = scala.collection.mutable.ArrayBuffer.empty[Int]\n     \
    \   val triple8 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ triple9 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple10\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple11 = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val triple12 = scala.collection.mutable.ArrayBuffer.empty[Int]\n    \
    \    val triple13 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ triple14 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple15\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple16 = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val triple17 = scala.collection.mutable.ArrayBuffer.empty[Int]\n    \
    \    val triple18 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ triple19 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple20\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple21 = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val triple22 = scala.collection.mutable.ArrayBuffer.empty[Int]\n    \
    \    val triple23 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ triple24 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple25\
    \ = scala.collection.", "        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = scala.math.max(scala.math.abs(n))\n        val i = scala.math.min(scala.math.ceil(m),\
    \ a.length - 1)\n        val j = scala.math.min(scala.math.ceil(m), a.length -\
    \ 1)\n        val k = scala.math.min(scala.math.ceil(m), a.length - 1)\n     \
    \   a(i) = i * i - i + 1\n        a(j) = i * i - j + 1\n        a(k) = i * i -\
    \ k + 1\n        val triples = a.filter(_ % 3 == 0).size\n        triples.toLong",
  "        val a = Array.ofDim[Long](n)\n        val result = mutable.ListBuffer[Long]()\n\
    \        val max = (3 * n) - 1\n        val min = (3 * n) / 2\n        for(i <-\
    \ 1 to n) {\n            val j = i - 1\n            val k = i + 1\n          \
    \  val sum = i * i - i + 1\n            val sum2 = sum * sum\n            val\
    \ sum3 = sum2 * sum\n            val sum4 = sum3 * sum\n            val sum5 =\
    \ sum4 * sum\n            val sum6 = sum5 * sum\n            val sum7 = sum6 *\
    \ sum\n            val sum8 = sum7 * sum\n            val sum9 = sum8 * sum\n\
    \            val sum10 = sum9 * sum\n            val sum11 = sum10 * sum\n   \
    \         val sum12 = sum11 * sum\n            val sum13 = sum12 * sum\n     \
    \       val sum14 = sum13 * sum\n            val sum15 = sum14 * sum\n       \
    \     val sum16 = sum15 * sum\n            val sum17 = sum16 * sum\n         \
    \   val sum18 = sum17 * sum\n            val sum19 = sum18 * sum\n           \
    \ val sum20 = sum19 * sum\n            val sum21 = sum20 * sum\n            val\
    \ sum22 = sum21 * sum\n            val sum23 = sum22 * sum\n            val sum24\
    \ = sum23 * sum\n            val sum25 = sum24 * sum\n            val sum26 =\
    \ sum25 * sum\n            val sum27 = sum26 * sum\n            val sum28 = sum27\
    \ * sum\n            val sum29 = sum28 * sum\n            val sum30 = sum29 *\
    \ sum\n            val sum31 = sum30 * sum\n            val sum32 = sum31 * sum\n\
    \            val sum33 = sum32 * sum\n            val sum34 = sum33 * sum\n  \
    \          val sum35 = sum34 * sum\n            val sum36 = sum35 * sum\n    \
    \        val sum37 = sum36 * sum\n            val sum38 = sum37 * sum\n      \
    \      val sum39 = sum38 * sum\n            val sum40 = sum39 * sum\n        \
    \    val sum41 = sum40 * sum\n            val sum42 = sum41 * sum\n          \
    \  val sum43 = sum42 * sum\n            val sum44 = sum43 * sum\n            val\
    \ sum45 = sum44 * sum\n            val sum46 = sum45 * sum\n            val sum47\
    \ = sum46 * sum\n            val sum48 = "]
stop_tokens:
- "\n    }\n"

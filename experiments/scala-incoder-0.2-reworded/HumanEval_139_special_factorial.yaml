name: HumanEval_139_special_factorial
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // The Brazilian factorial is defined as:\n    // brazilian_factorial(n) =\
  \ n! * (n-1)! * (n-2)! * ... * 1!\n    // where n > 0\n    // For example:\n   \
  \ // >>> specialFactorial((4l))\n    // (288l)\n    // The function will receive\
  \ an integer as input and should return the special\n    // factorial of this integer.\n\
  \    def specialFactorial(n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(specialFactorial((4l))\
  \ == (288l));\n    assert(specialFactorial((5l)) == (34560l));\n    assert(specialFactorial((7l))\
  \ == (125411328000l));\n    assert(specialFactorial((1l)) == (1l));\n    }\n\n}\n"
completions: ["        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials\
    \ += n\n        factorials += factorials(0) * factorials(1)\n        factorials\
    \ += factorials(0) * factorials(1)\n        factorials += factorials(0) * factorials(1)\n\
    \        factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factori", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        var factorial = 1\n        while (n > 1) {\n            factorial *=\
    \ n\n            factorials += factorial\n            n -= 1\n        }\n    \
    \    factorials.last", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factori", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += n * factorials(n - 1)\n      \
    \  factorials += n * factorials(n - 2)\n        factorials += n * factorials(n\
    \ - 3)\n        factorials += n * factorials(n - 4)\n        factorials += n *\
    \ factorials(n - 5)\n        factorials += n * factorials(n - 6)\n        factorials\
    \ += n * factorials(n - 7)\n        factorials += n * factorials(n - 8)\n    \
    \    factorials += n * factorials(n - 9)\n        factorials += n * factorials(n\
    \ - 10)\n        factorials += n * factorials(n - 11)\n        factorials += n\
    \ * factorials(n - 12)\n        factorials += n * factorials(n - 13)\n       \
    \ factorials += n * factorials(n - 14)\n        factorials += n * factorials(n\
    \ - 15)\n        factorials += n * factorials(n - 16)\n        factorials += n\
    \ * factorials(n - 17)\n        factorials += n * factorials(n - 18)\n       \
    \ factorials += n * factorials(n - 19)\n        factorials += n * factorials(n\
    \ - 20)\n        factorials += n * factorials(n - 21)\n        factorials += n\
    \ * factorials(n - 22)\n        factorials += n * factorials(n - 23)\n       \
    \ factorials += n * factorials(n - 24)\n        factorials += n * factorials(n\
    \ - 25)\n        factorials += n * factorials(n - 26)\n        factorials += n\
    \ * factorials(n - 27)\n        factorials += n * factorials(n - 28)\n       \
    \ factorials += n * factorials(n - 29)\n        factorials += n * factorials(n\
    \ - 30)\n        factorials += n * factorials(n - 31)\n        factorials += n\
    \ * factorials(n - 32)\n        factorials += n * factorials(n - 33)\n       \
    \ factorials += n * factorials(n - 34)\n        factorials += n * factorials(n\
    \ - 35)\n        factorials += n * factorials(n - 36)\n        factorials += n\
    \ * factorials(n - 37)\n        factorials += n * factorials(n - 38)\n       \
    \ factorials += n * factorials(n - 39)\n        factorials += n * factorials(n\
    \ - 40)\n        factorials += n * factorials(n - 41)\n        factorials += n\
    \ * factorials(n - 42)\n        factorials += n * factorials(n - 43)\n       \
    \ factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n    \
    \    factorials += 1\n        factorials += n * (n-1) * (n-2) * ... * 1\n    \
    \    factorials.sum", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factori", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials(n - 1)\n        factorials\
    \ += factorials(n - 2)\n        factorials += factorials(n - 3)\n        factorials\
    \ += factorials(n - 4)\n        factorials += factorials(n - 5)\n        factorials\
    \ += factorials(n - 6)\n        factorials += factorials(n - 7)\n        factorials\
    \ += factorials(n - 8)\n        factorials += factorials(n - 9)\n        factorials\
    \ += factorials(n - 10)\n        factorials += factorials(n - 11)\n        factorials\
    \ += factorials(n - 12)\n        factorials += factorials(n - 13)\n        factorials\
    \ += factorials(n - 14)\n        factorials += factorials(n - 15)\n        factorials\
    \ += factorials(n - 16)\n        factorials += factorials(n - 17)\n        factorials\
    \ += factorials(n - 18)\n        factorials += factorials(n - 19)\n        factorials\
    \ += factorials(n - 20)\n        factorials += factorials(n - 21)\n        factorials\
    \ += factorials(n - 22)\n        factorials += factorials(n - 23)\n        factorials\
    \ += factorials(n - 24)\n        factorials += factorials(n - 25)\n        factorials\
    \ += factorials(n - 26)\n        factorials += factorials(n - 27)\n        factorials\
    \ += factorials(n - 28)\n        factorials += factorials(n - 29)\n        factorials\
    \ += factorials(n - 30)\n        factorials += factorials(n - 31)\n        factorials\
    \ += factorials(n - 32)\n        factorials += factorials(n - 33)\n        factorials\
    \ += factorials(n - 34)\n        factorials += factorials(n - 35)\n        factorials\
    \ += factorials(n - 36)\n        factorials += factorials(n - 37)\n        factorials\
    \ += factorials(n - 38)\n        factorials += factorials(n - 39)\n        factorials\
    \ += factorials(n - 40)\n        factorials += factorials(n - 41)\n        factorials\
    \ += factorials(n - 42)\n        factorials += factorials(n - 43)\n        factorials\
    \ += factorials(n - 44)\n        factorials += factorials(n - 45)\n        factorials\
    \ += factorials(n - 46)\n        factorials += factorials(n - 47)\n        factori",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ 1\n        factorials += n * factorials(n - 1)\n        factorials += n * factorials(n\
    \ - 2)\n        factorials += n * factorials(n - 3)\n        factorials += n *\
    \ factorials(n - 4)\n        factorials += n * factorials(n - 5)\n        factorials\
    \ += n * factorials(n - 6)\n        factorials += n * factorials(n - 7)\n    \
    \    factorials += n * factorials(n - 8)\n        factorials += n * factorials(n\
    \ - 9)\n        factorials += n * factorials(n - 10)\n        factorials += n\
    \ * factorials(n - 11)\n        factorials += n * factorials(n - 12)\n       \
    \ factorials += n * factorials(n - 13)\n        factorials += n * factorials(n\
    \ - 14)\n        factorials += n * factorials(n - 15)\n        factorials += n\
    \ * factorials(n - 16)\n        factorials += n * factorials(n - 17)\n       \
    \ factorials += n * factorials(n - 18)\n        factorials += n * factorials(n\
    \ - 19)\n        factorials += n * factorials(n - 20)\n        factorials += n\
    \ * factorials(n - 21)\n        factorials += n * factorials(n - 22)\n       \
    \ factorials += n * factorials(n - 23)\n        factorials += n * factorials(n\
    \ - 24)\n        factorials += n * factorials(n - 25)\n        factorials += n\
    \ * factorials(n - 26)\n        factorials += n * factorials(n - 27)\n       \
    \ factorials += n * factorials(n - 28)\n        factorials += n * factorials(n\
    \ - 29)\n        factorials += n * factorials(n - 30)\n        factorials += n\
    \ * factorials(n - 31)\n        factorials += n * factorials(n - 32)\n       \
    \ factorials += n * factorials(n - 33)\n        factorials += n * factorials(n\
    \ - 34)\n        factorials += n * factorials(n - 35)\n        factorials += n\
    \ * factorials(n - 36)\n        factorials += n * factorials(n - 37)\n       \
    \ factorials += n * factorials(n - 38)\n        factorials += n * factorials(n\
    \ - 39)\n        factorials += n * factorials(n - 40)\n        factorials += n\
    \ * factorials(n - 41)\n        factorials += n * factorials(n - 42)\n       \
    \ factorials += n * factorials(n - 43)\n        factorial", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        factorials += 1\n        factorials\
    \ += factorials(n-1)\n        factorials += factorials(n-2)\n        factorials\
    \ += factorials(n-3)\n        factorials += factorials(n-4)\n        factorials\
    \ += factorials(n-5)\n        factorials += factorials(n-6)\n        factorials\
    \ += factorials(n-7)\n        factorials += factorials(n-8)\n        factorials\
    \ += factorials(n-9)\n        factorials += factorials(n-10)\n        factorials\
    \ += factorials(n-11)\n        factorials += factorials(n-12)\n        factorials\
    \ += factorials(n-13)\n        factorials += factorials(n-14)\n        factorials\
    \ += factorials(n-15)\n        factorials += factorials(n-16)\n        factorials\
    \ += factorials(n-17)\n        factorials += factorials(n-18)\n        factorials\
    \ += factorials(n-19)\n        factorials += factorials(n-20)\n        factorials\
    \ += factorials(n-21)\n        factorials += factorials(n-22)\n        factorials\
    \ += factorials(n-23)\n        factorials += factorials(n-24)\n        factorials\
    \ += factorials(n-25)\n        factorials += factorials(n-26)\n        factorials\
    \ += factorials(n-27)\n        factorials += factorials(n-28)\n        factorials\
    \ += factorials(n-29)\n        factorials += factorials(n-30)\n        factorials\
    \ += factorials(n-31)\n        factorials += factorials(n-32)\n        factorials\
    \ += factorials(n-33)\n        factorials += factorials(n-34)\n        factorials\
    \ += factorials(n-35)\n        factorials += factorials(n-36)\n        factorials\
    \ += factorials(n-37)\n        factorials += factorials(n-38)\n        factorials\
    \ += factorials(n-39)\n        factorials += factorials(n-40)\n        factorials\
    \ += factorials(n-41)\n        factorials += factorials(n-42)\n        factorials\
    \ += factorials(n-43)\n        factorials += factorials(n-44)\n        factorials\
    \ += factorials(n-45)\n        factorials += factorials(n-46)\n        factorials\
    \ += factorials(n-47)", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += n\n        factorials += factorials(0) * factorials(1)\n\
    \        factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factori", "        val\
    \ factorials = mutable.ArrayBuffer.empty[Long]\n        var factorial = 1\n  \
    \      while (n > 1) {\n            factorial *= n\n            factorials +=\
    \ factorial\n            n -= 1\n        }\n        factorials.last", "      \
    \  val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials += 1\n\
    \        factorials += n * factorials(n - 1)\n        factorials += n * factorials(n\
    \ - 2)\n        factorials += n * factorials(n - 3)\n        factorials += n *\
    \ factorials(n - 4)\n        factorials += n * factorials(n - 5)\n        factorials\
    \ += n * factorials(n - 6)\n        factorials += n * factorials(n - 7)\n    \
    \    factorials += n * factorials(n - 8)\n        factorials += n * factorials(n\
    \ - 9)\n        factorials += n * factorials(n - 10)\n        factorials += n\
    \ * factorials(n - 11)\n        factorials += n * factorials(n - 12)\n       \
    \ factorials += n * factorials(n - 13)\n        factorials += n * factorials(n\
    \ - 14)\n        factorials += n * factorials(n - 15)\n        factorials += n\
    \ * factorials(n - 16)\n        factorials += n * factorials(n - 17)\n       \
    \ factorials += n * factorials(n - 18)\n        factorials += n * factorials(n\
    \ - 19)\n        factorials += n * factorials(n - 20)\n        factorials += n\
    \ * factorials(n - 21)\n        factorials += n * factorials(n - 22)\n       \
    \ factorials += n * factorials(n - 23)\n        factorials += n * factorials(n\
    \ - 24)\n        factorials += n * factorials(n - 25)\n        factorials += n\
    \ * factorials(n - 26)\n        factorials += n * factorials(n - 27)\n       \
    \ factorials += n * factorials(n - 28)\n        factorials += n * factorials(n\
    \ - 29)\n        factorials += n * factorials(n - 30)\n        factorials += n\
    \ * factorials(n - 31)\n        factorials += n * factorials(n - 32)\n       \
    \ factorials += n * factorials(n - 33)\n        factorials += n * factorials(n\
    \ - 34)\n        factorials += n * factorials(n - 35)\n        factorials += n\
    \ * factorials(n - 36)\n        factorials += n * factorials(n - 37)\n       \
    \ factorials += n * factorials(n - 38)\n        factorials += n * factorials(n\
    \ - 39)\n        factorials += n * factorials(n - 40)\n        factorials += n\
    \ * factorials(n - 41)\n        factorials += n * factorials(n - 42)\n       \
    \ factorials += n * factorials(n - 43)\n        factorial", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        factorials += 1\n        factorials\
    \ += factorials(n-1)\n        factorials += factorials(n-2)\n        factorials\
    \ += factorials(n-3)\n        factorials += factorials(n-4)\n        factorials\
    \ += factorials(n-5)\n        factorials += factorials(n-6)\n        factorials\
    \ += factorials(n-7)\n        factorials += factorials(n-8)\n        factorials\
    \ += factorials(n-9)\n        factorials += factorials(n-10)\n        factorials\
    \ += factorials(n-11)\n        factorials += factorials(n-12)\n        factorials\
    \ += factorials(n-13)\n        factorials += factorials(n-14)\n        factorials\
    \ += factorials(n-15)\n        factorials += factorials(n-16)\n        factorials\
    \ += factorials(n-17)\n        factorials += factorials(n-18)\n        factorials\
    \ += factorials(n-19)\n        factorials += factorials(n-20)\n        factorials\
    \ += factorials(n-21)\n        factorials += factorials(n-22)\n        factorials\
    \ += factorials(n-23)\n        factorials += factorials(n-24)\n        factorials\
    \ += factorials(n-25)\n        factorials += factorials(n-26)\n        factorials\
    \ += factorials(n-27)\n        factorials += factorials(n-28)\n        factorials\
    \ += factorials(n-29)\n        factorials += factorials(n-30)\n        factorials\
    \ += factorials(n-31)\n        factorials += factorials(n-32)\n        factorials\
    \ += factorials(n-33)\n        factorials += factorials(n-34)\n        factorials\
    \ += factorials(n-35)\n        factorials += factorials(n-36)\n        factorials\
    \ += factorials(n-37)\n        factorials += factorials(n-38)\n        factorials\
    \ += factorials(n-39)\n        factorials += factorials(n-40)\n        factorials\
    \ += factorials(n-41)\n        factorials += factorials(n-42)\n        factorials\
    \ += factorials(n-43)\n        factorials += factorials(n-44)\n        factorials\
    \ += factorials(n-45)\n        factorials += factorials(n-46)\n        factorials\
    \ += factorials(n-47)", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials(n-1)\n        factorials\
    \ += factorials(n-2)\n        factorials += factorials(n-3)\n        factorials\
    \ += factorials(n-4)\n        factorials += factorials(n-5)\n        factorials\
    \ += factorials(n-6)\n        factorials += factorials(n-7)\n        factorials\
    \ += factorials(n-8)\n        factorials += factorials(n-9)\n        factorials\
    \ += factorials(n-10)\n        factorials += factorials(n-11)\n        factorials\
    \ += factorials(n-12)\n        factorials += factorials(n-13)\n        factorials\
    \ += factorials(n-14)\n        factorials += factorials(n-15)\n        factorials\
    \ += factorials(n-16)\n        factorials += factorials(n-17)\n        factorials\
    \ += factorials(n-18)\n        factorials += factorials(n-19)\n        factorials\
    \ += factorials(n-20)\n        factorials += factorials(n-21)\n        factorials\
    \ += factorials(n-22)\n        factorials += factorials(n-23)\n        factorials\
    \ += factorials(n-24)\n        factorials += factorials(n-25)\n        factorials\
    \ += factorials(n-26)\n        factorials += factorials(n-27)\n        factorials\
    \ += factorials(n-28)\n        factorials += factorials(n-29)\n        factorials\
    \ += factorials(n-30)\n        factorials += factorials(n-31)\n        factorials\
    \ += factorials(n-32)\n        factorials += factorials(n-33)\n        factorials\
    \ += factorials(n-34)\n        factorials += factorials(n-35)\n        factorials\
    \ += factorials(n-36)\n        factorials += factorials(n-37)\n        factorials\
    \ += factorials(n-38)\n        factorials += factorials(n-39)\n        factorials\
    \ += factorials(n-40)\n        factorials += factorials(n-41)\n        factorials\
    \ += factorials(n-42)\n        factorials += factorials(n-43)\n        factorials\
    \ += factorials(n-44)\n        factorials += factorials(n-45)\n        factorials\
    \ += factorials(n-46)\n        factorials += factorials(n-47)", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        factorials += 1\n        factorials\
    \ += factorials(n-1)\n        factorials += factorials(n-2)\n        factorials\
    \ += factorials(n-3)\n        factorials += factorials(n-4)\n        factorials\
    \ += factorials(n-5)\n        factorials += factorials(n-6)\n        factorials\
    \ += factorials(n-7)\n        factorials += factorials(n-8)\n        factorials\
    \ += factorials(n-9)\n        factorials += factorials(n-10)\n        factorials\
    \ += factorials(n-11)\n        factorials += factorials(n-12)\n        factorials\
    \ += factorials(n-13)\n        factorials += factorials(n-14)\n        factorials\
    \ += factorials(n-15)\n        factorials += factorials(n-16)\n        factorials\
    \ += factorials(n-17)\n        factorials += factorials(n-18)\n        factorials\
    \ += factorials(n-19)\n        factorials += factorials(n-20)\n        factorials\
    \ += factorials(n-21)\n        factorials += factorials(n-22)\n        factorials\
    \ += factorials(n-23)\n        factorials += factorials(n-24)\n        factorials\
    \ += factorials(n-25)\n        factorials += factorials(n-26)\n        factorials\
    \ += factorials(n-27)\n        factorials += factorials(n-28)\n        factorials\
    \ += factorials(n-29)\n        factorials += factorials(n-30)\n        factorials\
    \ += factorials(n-31)\n        factorials += factorials(n-32)\n        factorials\
    \ += factorials(n-33)\n        factorials += factorials(n-34)\n        factorials\
    \ += factorials(n-35)\n        factorials += factorials(n-36)\n        factorials\
    \ += factorials(n-37)\n        factorials += factorials(n-38)\n        factorials\
    \ += factorials(n-39)\n        factorials += factorials(n-40)\n        factorials\
    \ += factorials(n-41)\n        factorials += factorials(n-42)\n        factorials\
    \ += factorials(n-43)\n        factorials += factorials(n-44)\n        factorials\
    \ += factorials(n-45)\n        factorials += factorials(n-46)\n        factorials\
    \ += factorials(n-47)", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += n * factorials(n - 1)\n      \
    \  factorials += n * factorials(n - 2)\n        factorials += n * factorials(n\
    \ - 3)\n        factorials += n * factorials(n - 4)\n        factorials += n *\
    \ factorials(n - 5)\n        factorials += n * factorials(n - 6)\n        factorials\
    \ += n * factorials(n - 7)\n        factorials += n * factorials(n - 8)\n    \
    \    factorials += n * factorials(n - 9)\n        factorials += n * factorials(n\
    \ - 10)\n        factorials += n * factorials(n - 11)\n        factorials += n\
    \ * factorials(n - 12)\n        factorials += n * factorials(n - 13)\n       \
    \ factorials += n * factorials(n - 14)\n        factorials += n * factorials(n\
    \ - 15)\n        factorials += n * factorials(n - 16)\n        factorials += n\
    \ * factorials(n - 17)\n        factorials += n * factorials(n - 18)\n       \
    \ factorials += n * factorials(n - 19)\n        factorials += n * factorials(n\
    \ - 20)\n        factorials += n * factorials(n - 21)\n        factorials += n\
    \ * factorials(n - 22)\n        factorials += n * factorials(n - 23)\n       \
    \ factorials += n * factorials(n - 24)\n        factorials += n * factorials(n\
    \ - 25)\n        factorials += n * factorials(n - 26)\n        factorials += n\
    \ * factorials(n - 27)\n        factorials += n * factorials(n - 28)\n       \
    \ factorials += n * factorials(n - 29)\n        factorials += n * factorials(n\
    \ - 30)\n        factorials += n * factorials(n - 31)\n        factorials += n\
    \ * factorials(n - 32)\n        factorials += n * factorials(n - 33)\n       \
    \ factorials += n * factorials(n - 34)\n        factorials += n * factorials(n\
    \ - 35)\n        factorials += n * factorials(n - 36)\n        factorials += n\
    \ * factorials(n - 37)\n        factorials += n * factorials(n - 38)\n       \
    \ factorials += n * factorials(n - 39)\n        factorials += n * factorials(n\
    \ - 40)\n        factorials += n * factorials(n - 41)\n        factorials += n\
    \ * factorials(n - 42)\n        factorials += n * factorials(n - 43)\n       \
    \ factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n    \
    \    factorials += 1\n        factorials += factorials(n-1)\n        factorials\
    \ += factorials(n-2)\n        factorials += factorials(n-3)\n        factorials\
    \ += factorials(n-4)\n        factorials += factorials(n-5)\n        factorials\
    \ += factorials(n-6)\n        factorials += factorials(n-7)\n        factorials\
    \ += factorials(n-8)\n        factorials += factorials(n-9)\n        factorials\
    \ += factorials(n-10)\n        factorials += factorials(n-11)\n        factorials\
    \ += factorials(n-12)\n        factorials += factorials(n-13)\n        factorials\
    \ += factorials(n-14)\n        factorials += factorials(n-15)\n        factorials\
    \ += factorials(n-16)\n        factorials += factorials(n-17)\n        factorials\
    \ += factorials(n-18)\n        factorials += factorials(n-19)\n        factorials\
    \ += factorials(n-20)\n        factorials += factorials(n-21)\n        factorials\
    \ += factorials(n-22)\n        factorials += factorials(n-23)\n        factorials\
    \ += factorials(n-24)\n        factorials += factorials(n-25)\n        factorials\
    \ += factorials(n-26)\n        factorials += factorials(n-27)\n        factorials\
    \ += factorials(n-28)\n        factorials += factorials(n-29)\n        factorials\
    \ += factorials(n-30)\n        factorials += factorials(n-31)\n        factorials\
    \ += factorials(n-32)\n        factorials += factorials(n-33)\n        factorials\
    \ += factorials(n-34)\n        factorials += factorials(n-35)\n        factorials\
    \ += factorials(n-36)\n        factorials += factorials(n-37)\n        factorials\
    \ += factorials(n-38)\n        factorials += factorials(n-39)\n        factorials\
    \ += factorials(n-40)\n        factorials += factorials(n-41)\n        factorials\
    \ += factorials(n-42)\n        factorials += factorials(n-43)\n        factorials\
    \ += factorials(n-44)\n        factorials += factorials(n-45)\n        factorials\
    \ += factorials(n-46)\n        factorials += factorials(n-47)", "        if (n\
    \ == 0L) 1L\n        else n * specialFactorial(n-1L)", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        factorials += 1\n        factorials\
    \ += n * factorials(n - 1)\n        factorials += n * factorials(n - 2)\n    \
    \    factorials += n * factorials(n - 3)\n        factorials += n * factorials(n\
    \ - 4)\n        factorials += n * factorials(n - 5)\n        factorials += n *\
    \ factorials(n - 6)\n        factorials += n * factorials(n - 7)\n        factorials\
    \ += n * factorials(n - 8)\n        factorials += n * factorials(n - 9)\n    \
    \    factorials += n * factorials(n - 10)\n        factorials += n * factorials(n\
    \ - 11)\n        factorials += n * factorials(n - 12)\n        factorials += n\
    \ * factorials(n - 13)\n        factorials += n * factorials(n - 14)\n       \
    \ factorials += n * factorials(n - 15)\n        factorials += n * factorials(n\
    \ - 16)\n        factorials += n * factorials(n - 17)\n        factorials += n\
    \ * factorials(n - 18)\n        factorials += n * factorials(n - 19)\n       \
    \ factorials += n * factorials(n - 20)\n        factorials += n * factorials(n\
    \ - 21)\n        factorials += n * factorials(n - 22)\n        factorials += n\
    \ * factorials(n - 23)\n        factorials += n * factorials(n - 24)\n       \
    \ factorials += n * factorials(n - 25)\n        factorials += n * factorials(n\
    \ - 26)\n        factorials += n * factorials(n - 27)\n        factorials += n\
    \ * factorials(n - 28)\n        factorials += n * factorials(n - 29)\n       \
    \ factorials += n * factorials(n - 30)\n        factorials += n * factorials(n\
    \ - 31)\n        factorials += n * factorials(n - 32)\n        factorials += n\
    \ * factorials(n - 33)\n        factorials += n * factorials(n - 34)\n       \
    \ factorials += n * factorials(n - 35)\n        factorials += n * factorials(n\
    \ - 36)\n        factorials += n * factorials(n - 37)\n        factorials += n\
    \ * factorials(n - 38)\n        factorials += n * factorials(n - 39)\n       \
    \ factorials += n * factorials(n - 40)\n        factorials += n * factorials(n\
    \ - 41)\n        factorials += n * factorials(n - 42)\n        factorials += n\
    \ * factorials(n - 43)\n        factorial", "        var factorial = 1\n     \
    \   var factorial2 = 1\n        var factorial3 = 1\n        var factorial4 = 1\n\
    \        var factorial5 = 1\n        var factorial6 = 1\n        var factorial7\
    \ = 1\n        var factorial8 = 1\n        var factorial9 = 1\n        var factorial10\
    \ = 1\n        var factorial11 = 1\n        var factorial12 = 1\n        var factorial13\
    \ = 1\n        var factorial14 = 1\n        var factorial15 = 1\n        var factorial16\
    \ = 1\n        var factorial17 = 1\n        var factorial18 = 1\n        var factorial19\
    \ = 1\n        var factorial20 = 1\n        var factorial21 = 1\n        var factorial22\
    \ = 1\n        var factorial23 = 1\n        var factorial24 = 1\n        var factorial25\
    \ = 1\n        var factorial26 = 1\n        var factorial27 = 1\n        var factorial28\
    \ = 1\n        var factorial29 = 1\n        var factorial30 = 1\n        var factorial31\
    \ = 1\n        var factorial32 = 1\n        var factorial33 = 1\n        var factorial34\
    \ = 1\n        var factorial35 = 1\n        var factorial36 = 1\n        var factorial37\
    \ = 1\n        var factorial38 = 1\n        var factorial39 = 1\n        var factorial40\
    \ = 1\n        var factorial41 = 1\n        var factorial42 = 1\n        var factorial43\
    \ = 1\n        var factorial44 = 1\n        var factorial45 = 1\n        var factorial46\
    \ = 1\n        var factorial47 = 1\n        var factorial48 = 1\n        var factorial49\
    \ = 1\n        var factorial50 = 1\n        var factorial51 = 1\n        var factorial52\
    \ = 1\n        var factorial53 = 1\n        var factorial54 = 1\n        var factorial55\
    \ = 1\n        var factorial56 = 1\n        var factorial57 = 1\n        var factorial58\
    \ = 1\n        var factorial59 = 1\n        var factorial60 = 1\n        var factorial61\
    \ = 1\n        var factorial62 = 1\n        var factorial63 = 1\n        var factorial64\
    \ = 1\n        var factorial65 = 1\n        var factorial66 = 1\n        var factorial67\
    \ = 1\n        var factorial68 = 1\n        var factorial69 = 1\n        var factorial70\
    \ = 1\n        var factorial71 = 1\n        var factorial72 = 1\n        var factorial73\
    \ = 1\n        var factorial74 = 1\n        var factorial75 = 1\n        var factorial76\
    \ = 1\n        var factorial77 = 1\n        var factorial78 = 1\n        var factorial79\
    \ = 1\n        var factorial80 = 1\n        var factorial81 = 1\n        var factorial82\
    \ = 1\n        var factori", "        if (n == 1l) 1l\n        else n * specialFactorial(n-1l)",
  "        var factorial = 1\n        var factorial2 = 1\n        var factorial3 =\
    \ 1\n        var factorial4 = n\n        while (factorial4 > 1) {\n          \
    \  factorial *= factorial4\n            factorial2 *= factorial4\n           \
    \ factorial3 *= factorial4\n            factorial4 -= 1\n        }\n        factorial",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ 1\n        factorials += n * (n-1) * ... * 1\n        factorials.reduceLeft(_\
    \ * _)", "        var result : Long = 1\n        for(i <- 0 until n) {\n     \
    \       result *= i\n        }\n        result", "        var factorial = 1\n\
    \        var counter = 1\n        while (counter <= n) {\n            factorial\
    \ *= counter\n            counter += 1\n        }\n        return factorial",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        var factorial\
    \ = 1\n        var i = 1\n        while (i <= n) {\n            factorial *= i\n\
    \            factorials += factorial\n            i += 1\n        }\n        factorials.last",
  "        var factorial = 1\n        var factorial2 = 1\n        var factorial3 =\
    \ 1\n        var factorial4 = n\n        while (factorial4 > 1) {\n          \
    \  factorial *= factorial4\n            factorial2 *= factorial4\n           \
    \ factorial3 *= factorial4\n            factorial4 -= 1\n        }\n        factorial",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        var factorial\
    \ = 1\n        while(n > 1) {\n            factorial *= n\n            factorials\
    \ += factorial\n            n -= 1\n        }\n        factorials.last", "   \
    \     val factorial = mutable.Stack[Long]()\n        factorial.push(n)\n     \
    \   factorial += n\n        factorial += n-1\n        factorial += n-2\n     \
    \   factorial += n-3\n        factorial += n-4\n        factorial += n-5\n   \
    \     factorial += n-6\n        factorial += n-7\n        factorial += n-8\n \
    \       factorial += n-9\n        factorial += n-10\n        factorial += n-11\n\
    \        factorial += n-12\n        factorial += n-13\n        factorial += n-14\n\
    \        factorial += n-15\n        factorial += n-16\n        factorial += n-17\n\
    \        factorial += n-18\n        factorial += n-19\n        factorial += n-20\n\
    \        factorial += n-21\n        factorial += n-22\n        factorial += n-23\n\
    \        factorial += n-24\n        factorial += n-25\n        factorial += n-26\n\
    \        factorial += n-27\n        factorial += n-28\n        factorial += n-29\n\
    \        factorial += n-30\n        factorial += n-31\n        factorial += n-32\n\
    \        factorial += n-33\n        factorial += n-34\n        factorial += n-35\n\
    \        factorial += n-36\n        factorial += n-37\n        factorial += n-38\n\
    \        factorial += n-39\n        factorial += n-40\n        factorial += n-41\n\
    \        factorial += n-42\n        factorial += n-43\n        factorial += n-44\n\
    \        factorial += n-45\n        factorial += n-46\n        factorial += n-47\n\
    \        factorial += n-48\n        factorial += n-49\n        factorial += n-50\n\
    \        factorial += n-51\n        factorial += n-52\n        factorial += n-53\n\
    \        factorial += n-54\n        factorial += n-55\n        factorial += n-56\n\
    \        factorial += n-57\n        factorial += n-58\n        factorial += n-59\n\
    \        factorial += n-60\n        factorial += n-61\n        factorial += n-62\n\
    \        factorial += n-63\n        factorial += n-64\n        factorial += n-65\n\
    \        factorial += n-66\n        factorial += n-67\n        factorial += n-68\n\
    \        factorial += n-69\n        factori", "        val factorial = mutable.ArrayBuffer.empty[Long]\n\
    \        factorial += n\n        factorial += n-1\n        factorial += n-2\n\
    \        factorial += n-3\n        factorial += n-4\n        factorial += n-5\n\
    \        factorial += n-6\n        factorial += n-7\n        factorial += n-8\n\
    \        factorial += n-9\n        factorial += n-10\n        factorial += n-11\n\
    \        factorial += n-12\n        factorial += n-13\n        factorial += n-14\n\
    \        factorial += n-15\n        factorial += n-16\n        factorial += n-17\n\
    \        factorial += n-18\n        factorial += n-19\n        factorial += n-20\n\
    \        factorial += n-21\n        factorial += n-22\n        factorial += n-23\n\
    \        factorial += n-24\n        factorial += n-25\n        factorial += n-26\n\
    \        factorial += n-27\n        factorial += n-28\n        factorial += n-29\n\
    \        factorial += n-30\n        factorial += n-31\n        factorial += n-32\n\
    \        factorial += n-33\n        factorial += n-34\n        factorial += n-35\n\
    \        factorial += n-36\n        factorial += n-37\n        factorial += n-38\n\
    \        factorial += n-39\n        factorial += n-40\n        factorial += n-41\n\
    \        factorial += n-42\n        factorial += n-43\n        factorial += n-44\n\
    \        factorial += n-45\n        factorial += n-46\n        factorial += n-47\n\
    \        factorial += n-48\n        factorial += n-49\n        factorial += n-50\n\
    \        factorial += n-51\n        factorial += n-52\n        factorial += n-53\n\
    \        factorial += n-54\n        factorial += n-55\n        factorial += n-56\n\
    \        factorial += n-57\n        factorial += n-58\n        factorial += n-59\n\
    \        factorial += n-60\n        factorial += n-61\n        factorial += n-62\n\
    \        factorial += n-63\n        factorial += n-64\n        factorial += n-65\n\
    \        factorial += n-66\n        factorial += n-67\n        factorial += n-68\n\
    \        factorial += n-69\n        factorial += n-70\n", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n        while\
    \ (n > 1) {\n            factorials += factorial\n            factorial *= n\n\
    \            n -= 1\n        }\n        factorials.last", "        var factorial\
    \ = 1\n        var factorial2 = 1\n        var factorial3 = 1\n        var factorial4\
    \ = 1 // the factorial of n!\n        var factorial5 = 1 // the factorial of (n-1)!\n\
    \        var factorial6 = 1 // the factorial of (n-2)!\n        var factorial7\
    \ = 1 // the factorial of (n-3)!\n        var factorial8 = 1 // the factorial\
    \ of (n-4)!\n        var factorial9 = 1 // the factorial of (n-5)!\n        var\
    \ factorial10 = 1 // the factorial of (n-6)!\n        var factorial11 = 1 // the\
    \ factorial of (n-7)!\n        var factorial12 = 1 // the factorial of (n-8)!\n\
    \        var factorial13 = 1 // the factorial of (n-9)!\n        var factorial14\
    \ = 1 // the factorial of (n-10)!\n        var factorial15 = 1 // the factorial\
    \ of (n-11)!\n        var factorial16 = 1 // the factorial of (n-12)!\n      \
    \  var factorial17 = 1 // the factorial of (n-13)!\n        var factorial18 =\
    \ 1 // the factorial of (n-14)!\n        var factorial19 = 1 // the factorial\
    \ of (n-15)!\n        var factorial20 = 1 // the factorial of (n-16)!\n      \
    \  var factorial21 = 1 // the factorial of (n-17)!\n        var factorial22 =\
    \ 1 // the factorial of (n-18)!\n        var factorial23 = 1 // the factorial\
    \ of (n-19)!\n        var factorial24 = 1 // the factorial of (n-20)!\n      \
    \  var factorial25 = 1 // the factorial of (n-21)!\n        var factorial26 =\
    \ 1 // the factorial of (n-22)!\n        var factorial27 = 1 // the factorial\
    \ of (n-23)!\n        var factorial28 = 1 // the factorial of (n-24)!\n      \
    \  var factorial29 = 1 // the factorial of (n-25)!\n        var factorial30 =\
    \ 1 // the factorial of (n-26)!\n        var factorial31 = 1 // the factorial\
    \ of (n-27)!\n        var factorial32 = 1 // the factorial of (n-28)!\n      \
    \  var factorial33 = 1 // the factorial of (n-29)!\n        var factorial34 =\
    \ 1 // the factorial of (n-30)!\n        var factorial35 = 1 // the factorial\
    \ of (n-31)!\n        var factorial36 = 1 // the factorial of (n", "        val\
    \ factorials = mutable.ListBuffer[Long]()\n        factorials += n\n        factorials\
    \ += factorials.head * factorials.tail\n        factorials.last", "        val\
    \ factorials = mutable.ArrayBuffer.empty[Long]\n        factorials += 1\n    \
    \    factorials += n * factorials(n - 1)\n        factorials += n * factorials(n\
    \ - 2)\n        factorials += n * factorials(n - 3)\n        factorials += n *\
    \ factorials(n - 4)\n        factorials += n * factorials(n - 5)\n        factorials\
    \ += n * factorials(n - 6)\n        factorials += n * factorials(n - 7)\n    \
    \    factorials += n * factorials(n - 8)\n        factorials += n * factorials(n\
    \ - 9)\n        factorials += n * factorials(n - 10)\n        factorials += n\
    \ * factorials(n - 11)\n        factorials += n * factorials(n - 12)\n       \
    \ factorials += n * factorials(n - 13)\n        factorials += n * factorials(n\
    \ - 14)\n        factorials += n * factorials(n - 15)\n        factorials += n\
    \ * factorials(n - 16)\n        factorials += n * factorials(n - 17)\n       \
    \ factorials += n * factorials(n - 18)\n        factorials += n * factorials(n\
    \ - 19)\n        factorials += n * factorials(n - 20)\n        factorials += n\
    \ * factorials(n - 21)\n        factorials += n * factorials(n - 22)\n       \
    \ factorials += n * factorials(n - 23)\n        factorials += n * factorials(n\
    \ - 24)\n        factorials += n * factorials(n - 25)\n        factorials += n\
    \ * factorials(n - 26)\n        factorials += n * factorials(n - 27)\n       \
    \ factorials += n * factorials(n - 28)\n        factorials += n * factorials(n\
    \ - 29)\n        factorials += n * factorials(n - 30)\n        factorials += n\
    \ * factorials(n - 31)\n        factorials += n * factorials(n - 32)\n       \
    \ factorials += n * factorials(n - 33)\n        factorials += n * factorials(n\
    \ - 34)\n        factorials += n * factorials(n - 35)\n        factorials += n\
    \ * factorials(n - 36)\n        factorials += n * factorials(n - 37)\n       \
    \ factorials += n * factorials(n - 38)\n        factorials += n * factorials(n\
    \ - 39)\n        factorials += n * factorials(n - 40)\n        factorials += n\
    \ * factorials(n - 41)\n        factorials += n * factorials(n - 42)\n       \
    \ factorials += n * factorials(n - 43)\n        factorial", "        var factorial\
    \ = 1\n        for (i <- 1 to n) {\n            factorial *= i\n        }\n  \
    \      return factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        for(i <- 0 until n){\n            factorials\
    \ += factorial\n            factorial *= i\n        }\n        factorials.last",
  "        var factorial = 1\n        var factorial2 = 1\n        var factorial3 =\
    \ 1\n        var factorial4 = n\n        while (factorial4 > 0) {\n          \
    \  factorial *= factorial4\n            factorial2 *= factorial4\n           \
    \ factorial3 *= factorial4\n            factorial4 -= 1\n        }\n        factorial",
  "        val factorial = mutable.Stack[Long]()\n        factorial.push(n)\n    \
    \    factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long",
  "        var factorial = 1\n        var factorial2 = 1\n        var factorial3 =\
    \ 1\n        var factorial4 = n\n        while (factorial4 > 1) {\n          \
    \  factorial *= factorial4\n            factorial2 *= factorial4\n           \
    \ factorial3 *= factorial4\n            factorial4 -= 1\n        }\n        factorial",
  "        val factorial = mutable.ListBuffer[Long]()\n        factorial.append(1)\n\
    \        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n\
    \ * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n * (factorial(n-1)\
    \ * factorial(n-2)))\n        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n\
    \        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n\
    \ * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n * (factorial(n-1)\
    \ * factorial(n-2)))\n        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n\
    \        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n\
    \ * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n * (factorial(n-1)\
    \ * factorial(n-2)))\n        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n\
    \        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n\
    \ * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n * (factorial(n-1)\
    \ * factorial(n-2)))\n        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n\
    \        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n\
    \ * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n * (factorial(n-1)\
    \ * factorial(n-2)))\n        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n\
    \        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n\
    \ * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n * (factorial(n-1)\
    \ * factorial(n-2)))\n        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n\
    \        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n\
    \ * (factorial(n-1) * factorial(n-2)))\n        factorial.append(n * (factorial(n-1)\
    \ * factorial(n-2)))\n        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n\
    \        factorial.append(n * (factorial(n-1) * factorial(n-2)))\n", "       \
    \ val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial = (n-1l)\
    \ match {\n            case 0 => 1l\n            case _ => n * factorial(n-1)\n\
    \        }\n        factorials += factorial\n        factorials", "        val\
    \ factorials = mutable.ListBuffer[Long]()\n        val factorial = factorials.foldLeft(1L)\
    \ { (acc, i) => acc * i}\n        factorials += factorial\n        factorials.takeWhile(x\
    \ => x < n).last", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        for(i <- 0 until n){\n            factorials\
    \ += factorial\n            factorial *= i\n        }\n        factorials.last",
  "        val factorial = mutable.ArrayBuffer.empty[Long]\n        factorial += n\n\
    \        factorial += n-1\n        factorial += n-2\n        factorial += n-3\n\
    \        factorial += n-4\n        factorial += n-5\n        factorial += n-6\n\
    \        factorial += n-7\n        factorial += n-8\n        factorial += n-9\n\
    \        factorial += n-10\n        factorial += n-11\n        factorial += n-12\n\
    \        factorial += n-13\n        factorial += n-14\n        factorial += n-15\n\
    \        factorial += n-16\n        factorial += n-17\n        factorial += n-18\n\
    \        factorial += n-19\n        factorial += n-20\n        factorial += n-21\n\
    \        factorial += n-22\n        factorial += n-23\n        factorial += n-24\n\
    \        factorial += n-25\n        factorial += n-26\n        factorial += n-27\n\
    \        factorial += n-28\n        factorial += n-29\n        factorial += n-30\n\
    \        factorial += n-31\n        factorial += n-32\n        factorial += n-33\n\
    \        factorial += n-34\n        factorial += n-35\n        factorial += n-36\n\
    \        factorial += n-37\n        factorial += n-38\n        factorial += n-39\n\
    \        factorial += n-40\n        factorial += n-41\n        factorial += n-42\n\
    \        factorial += n-43\n        factorial += n-44\n        factorial += n-45\n\
    \        factorial += n-46\n        factorial += n-47\n        factorial += n-48\n\
    \        factorial += n-49\n        factorial += n-50\n        factorial += n-51\n\
    \        factorial += n-52\n        factorial += n-53\n        factorial += n-54\n\
    \        factorial += n-55\n        factorial += n-56\n        factorial += n-57\n\
    \        factorial += n-58\n        factorial += n-59\n        factorial += n-60\n\
    \        factorial += n-61\n        factorial += n-62\n        factorial += n-63\n\
    \        factorial += n-64\n        factorial += n-65\n        factorial += n-66\n\
    \        factorial += n-67\n        factorial += n-68\n        factorial += n-69\n\
    \        factorial += n-70\n", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        for(i <- 0 until n){\n            factorial\
    \ *= i\n            factorials += factorial\n        }\n        factorials.last",
  "        if (n == 0) 1\n        else n * specialFactorial(n-1)", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n        for(i\
    \ <- 0 until n){\n            factorial *= i\n            factorials += factorial\n\
    \        }\n        factorials.sum", "        val factorials = mutable.ListBuffer[Long]()\n\
    \        factorials += n\n        factorials += factorials(0) * factorials(1)\
    \ * factorials(2) * factorials(3) * factorials(4)\n        factorials.sum", " \
    \       if (n == 1l) 1l\n        else n * specialFactorial(n-1l)", "        val\
    \ factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n  \
    \      val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factori", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long",
  "        if (n == 0) 1\n        else n * specialFactorial(n-1)", "        var fact\
    \ = 1\n        var i = 2\n        while (i <= n) {\n            fact *= i\n  \
    \          i += 1\n        }\n        fact", "        var factorial = 1\n    \
    \    for(i <- 0 until n) {\n            factorial *= i\n        }\n        return\
    \ factorial", "        if (n == 0) 1\n        else n * specialFactorial(n-1)",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long", "        val\
    \ factorials = mutable.ArrayBuffer.empty[Long]\n        factorials += 1\n    \
    \    factorials += factorials(n - 1)\n        factorials += factorials(n - 2)\n\
    \        factorials += factorials(n - 3)\n        factorials += factorials(n -\
    \ 4)\n        factorials += factorials(n - 5)\n        factorials += factorials(n\
    \ - 6)\n        factorials += factorials(n - 7)\n        factorials += factorials(n\
    \ - 8)\n        factorials += factorials(n - 9)\n        factorials += factorials(n\
    \ - 10)\n        factorials += factorials(n - 11)\n        factorials += factorials(n\
    \ - 12)\n        factorials += factorials(n - 13)\n        factorials += factorials(n\
    \ - 14)\n        factorials += factorials(n - 15)\n        factorials += factorials(n\
    \ - 16)\n        factorials += factorials(n - 17)\n        factorials += factorials(n\
    \ - 18)\n        factorials += factorials(n - 19)\n        factorials += factorials(n\
    \ - 20)\n        factorials += factorials(n - 21)\n        factorials += factorials(n\
    \ - 22)\n        factorials += factorials(n - 23)\n        factorials += factorials(n\
    \ - 24)\n        factorials += factorials(n - 25)\n        factorials += factorials(n\
    \ - 26)\n        factorials += factorials(n - 27)\n        factorials += factorials(n\
    \ - 28)\n        factorials += factorials(n - 29)\n        factorials += factorials(n\
    \ - 30)\n        factorials += factorials(n - 31)\n        factorials += factorials(n\
    \ - 32)\n        factorials += factorials(n - 33)\n        factorials += factorials(n\
    \ - 34)\n        factorials += factorials(n - 35)\n        factorials += factorials(n\
    \ - 36)\n        factorials += factorials(n - 37)\n        factorials += factorials(n\
    \ - 38)\n        factorials += factorials(n - 39)\n        factorials += factorials(n\
    \ - 40)\n        factorials += factorials(n - 41)\n        factorials += factorials(n\
    \ - 42)\n        factorials += factorials(n - 43)\n        factorials += factorials(n\
    \ - 44)\n        factorials += factorials(n - 45)\n        factorials += factorials(n\
    \ - 46)\n        factorials += factorials(n - 47)\n        factori", "       \
    \ var factorial = 1\n        for(i <- 0 until n){\n            factorial *= i\n\
    \        }\n        return factorial", "        val factorial = mutable.Stack[Long]()\n\
    \        factorial.push(n)\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n        factorial.push(factorial.pop()\
    \ * factorial.pop())\n        factorial.push(factorial.pop() * factorial.pop())\n\
    \        factorial.push(factorial.pop() * factorial.pop())\n", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        factorials += 1\n        factorials\
    \ += n * factorials(n - 1)\n        factorials += n * factorials(n - 2)\n    \
    \    factorials += n * factorials(n - 3)\n        factorials += n * factorials(n\
    \ - 4)\n        factorials += n * factorials(n - 5)\n        factorials += n *\
    \ factorials(n - 6)\n        factorials += n * factorials(n - 7)\n        factorials\
    \ += n * factorials(n - 8)\n        factorials += n * factorials(n - 9)\n    \
    \    factorials += n * factorials(n - 10)\n        factorials += n * factorials(n\
    \ - 11)\n        factorials += n * factorials(n - 12)\n        factorials += n\
    \ * factorials(n - 13)\n        factorials += n * factorials(n - 14)\n       \
    \ factorials += n * factorials(n - 15)\n        factorials += n * factorials(n\
    \ - 16)\n        factorials += n * factorials(n - 17)\n        factorials += n\
    \ * factorials(n - 18)\n        factorials += n * factorials(n - 19)\n       \
    \ factorials += n * factorials(n - 20)\n        factorials += n * factorials(n\
    \ - 21)\n        factorials += n * factorials(n - 22)\n        factorials += n\
    \ * factorials(n - 23)\n        factorials += n * factorials(n - 24)\n       \
    \ factorials += n * factorials(n - 25)\n        factorials += n * factorials(n\
    \ - 26)\n        factorials += n * factorials(n - 27)\n        factorials += n\
    \ * factorials(n - 28)\n        factorials += n * factorials(n - 29)\n       \
    \ factorials += n * factorials(n - 30)\n        factorials += n * factorials(n\
    \ - 31)\n        factorials += n * factorials(n - 32)\n        factorials += n\
    \ * factorials(n - 33)\n        factorials += n * factorials(n - 34)\n       \
    \ factorials += n * factorials(n - 35)\n        factorials += n * factorials(n\
    \ - 36)\n        factorials += n * factorials(n - 37)\n        factorials += n\
    \ * factorials(n - 38)\n        factorials += n * factorials(n - 39)\n       \
    \ factorials += n * factorials(n - 40)\n        factorials += n * factorials(n\
    \ - 41)\n        factorials += n * factorials(n - 42)\n        factorials += n\
    \ * factorials(n - 43)\n        factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ 1\n        factorials += factorials(n-1)\n        factorials += factorials(n-2)\n\
    \        factorials += factorials(n-3)\n        factorials += factorials(n-4)\n\
    \        factorials += factorials(n-5)\n        factorials += factorials(n-6)\n\
    \        factorials += factorials(n-7)\n        factorials += factorials(n-8)\n\
    \        factorials += factorials(n-9)\n        factorials += factorials(n-10)\n\
    \        factorials += factorials(n-11)\n        factorials += factorials(n-12)\n\
    \        factorials += factorials(n-13)\n        factorials += factorials(n-14)\n\
    \        factorials += factorials(n-15)\n        factorials += factorials(n-16)\n\
    \        factorials += factorials(n-17)\n        factorials += factorials(n-18)\n\
    \        factorials += factorials(n-19)\n        factorials += factorials(n-20)\n\
    \        factorials += factorials(n-21)\n        factorials += factorials(n-22)\n\
    \        factorials += factorials(n-23)\n        factorials += factorials(n-24)\n\
    \        factorials += factorials(n-25)\n        factorials += factorials(n-26)\n\
    \        factorials += factorials(n-27)\n        factorials += factorials(n-28)\n\
    \        factorials += factorials(n-29)\n        factorials += factorials(n-30)\n\
    \        factorials += factorials(n-31)\n        factorials += factorials(n-32)\n\
    \        factorials += factorials(n-33)\n        factorials += factorials(n-34)\n\
    \        factorials += factorials(n-35)\n        factorials += factorials(n-36)\n\
    \        factorials += factorials(n-37)\n        factorials += factorials(n-38)\n\
    \        factorials += factorials(n-39)\n        factorials += factorials(n-40)\n\
    \        factorials += factorials(n-41)\n        factorials += factorials(n-42)\n\
    \        factorials += factorials(n-43)\n        factorials += factorials(n-44)\n\
    \        factorials += factorials(n-45)\n        factorials += factorials(n-46)\n\
    \        factorials += factorials(n-47)", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        for(i <- 1 to n){\n            factorial *=\
    \ i\n            factorials += factorial\n        }\n        factorials.last",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ 1\n        factorials += n * (n-1) * (n-2) * ... * 1\n        factorials.sum",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factori", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        var factorial = 1\n        while(n > 1) {\n            factorial *= n\n\
    \            factorials += factorial\n            n -= 1\n        }\n        factorials.last",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        var factorial\
    \ = 1\n        var i = 0\n        while (i <= n) {\n            factorials +=\
    \ factorial\n            factorial *= i\n            i += 1\n        }\n     \
    \   factorials.last", "        var factorial = 1\n        for(i <- 1 to n){\n\
    \            factorial *= i\n        }\n        return factorial", "        val\
    \ factorials = mutable.ArrayBuffer.empty[Long]\n        var factorial = 1\n  \
    \      for(i <- 0 until n){\n            factorial *= i\n            factorials\
    \ += factorial\n        }\n        factorials.sum", "        val factorials =\
    \ mutable.ArrayBuffer.empty[Long]\n        var factorial = 1\n        for(i <-\
    \ 1 to n){\n            factorial *= i\n            factorials += factorial\n\
    \        }\n        factorials.last", "        if (n == 0) 1\n        else n *\
    \ specialFactorial(n-1)", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = (n : Long) => {\n            if (n == 1l) 1l\n      \
    \      else {\n                factorials += n\n                factorial(n-1l)\n\
    \            }\n        }\n        factorial(0)", "        var factorial = 1\n\
    \        var factorial2 = 1\n        var factorial3 = 1\n        var factorial4\
    \ = n\n        while(factorial4 > 1) {\n            factorial *= factorial4\n\
    \            factorial2 *= factorial4\n            factorial3 *= factorial4\n\
    \            factorial4 -= 1\n        }\n        factorial", "        var factorial\
    \ = 1\n        var factorial2 = 1\n        var factorial3 = 1\n        var factorial4\
    \ = n\n        while (factorial4 > 1) {\n            factorial *= factorial4\n\
    \            factorial2 *= factorial4\n            factorial3 *= factorial4\n\
    \            factorial4 -= 1\n        }\n        factorial", "        var factorial\
    \ = 1\n        for(i <- 0 until n) {\n            factorial *= i\n        }\n\
    \        return factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        var factorial = 1\n        while (n > 1) {\n            factorial *=\
    \ n\n            factorials += factorial\n            n -= 1\n        }\n    \
    \    factorials.last", "        var factorial = 1\n        var factorial2 = 1\n\
    \        var factorial3 = 1\n        var factorial4 = 1 // We will use this to\
    \ calculate the factorial of n!\n        var factorial5 = 1 // We will use this\
    \ to calculate the factorial of n!\n        var factorial6 = 1 // We will use\
    \ this to calculate the factorial of n!\n        var factorial7 = 1 // We will\
    \ use this to calculate the factorial of n!\n        var factorial8 = 1 // We\
    \ will use this to calculate the factorial of n!\n        var factorial9 = 1 //\
    \ We will use this to calculate the factorial of n!\n        var factorial10 =\
    \ 1 // We will use this to calculate the factorial of n!\n        var factorial11\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial12\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial13\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial14\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial15\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial16\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial17\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial18\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial19\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial20\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial21\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial22\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial23\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial24\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial25\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial26\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial27\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial28\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial29\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial30\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial31\
    \ = 1 // We will use this to calculate the factorial of n!\n        var factorial32\
    \ = 1 // We will use this to calculate the factorial of n!\n", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        factorials += n\n        factorials\
    \ += factorials(0) * factorials(1)\n        factorials += factorials(0) * factorials(1)\n\
    \        factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factori", "        var factorial = 1\n        var factorial2 = 1\n       \
    \ var factorial3 = 1\n        var factorial4 = n\n        while (factorial4 >\
    \ 1) {\n            factorial *= factorial4\n            factorial2 *= factorial4\n\
    \            factorial3 *= factorial4\n            factorial4 -= 1\n        }\n\
    \        factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        for(i <- 1 to n){\n            factorials\
    \ += factorial\n            factorial *= i\n        }\n        factorials.last",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ 1\n        factorials += n * factorials(n - 1)\n        factorials += n * factorials(n\
    \ - 2)\n        factorials += n * factorials(n - 3)\n        factorials += n *\
    \ factorials(n - 4)\n        factorials += n * factorials(n - 5)\n        factorials\
    \ += n * factorials(n - 6)\n        factorials += n * factorials(n - 7)\n    \
    \    factorials += n * factorials(n - 8)\n        factorials += n * factorials(n\
    \ - 9)\n        factorials += n * factorials(n - 10)\n        factorials += n\
    \ * factorials(n - 11)\n        factorials += n * factorials(n - 12)\n       \
    \ factorials += n * factorials(n - 13)\n        factorials += n * factorials(n\
    \ - 14)\n        factorials += n * factorials(n - 15)\n        factorials += n\
    \ * factorials(n - 16)\n        factorials += n * factorials(n - 17)\n       \
    \ factorials += n * factorials(n - 18)\n        factorials += n * factorials(n\
    \ - 19)\n        factorials += n * factorials(n - 20)\n        factorials += n\
    \ * factorials(n - 21)\n        factorials += n * factorials(n - 22)\n       \
    \ factorials += n * factorials(n - 23)\n        factorials += n * factorials(n\
    \ - 24)\n        factorials += n * factorials(n - 25)\n        factorials += n\
    \ * factorials(n - 26)\n        factorials += n * factorials(n - 27)\n       \
    \ factorials += n * factorials(n - 28)\n        factorials += n * factorials(n\
    \ - 29)\n        factorials += n * factorials(n - 30)\n        factorials += n\
    \ * factorials(n - 31)\n        factorials += n * factorials(n - 32)\n       \
    \ factorials += n * factorials(n - 33)\n        factorials += n * factorials(n\
    \ - 34)\n        factorials += n * factorials(n - 35)\n        factorials += n\
    \ * factorials(n - 36)\n        factorials += n * factorials(n - 37)\n       \
    \ factorials += n * factorials(n - 38)\n        factorials += n * factorials(n\
    \ - 39)\n        factorials += n * factorials(n - 40)\n        factorials += n\
    \ * factorials(n - 41)\n        factorials += n * factorials(n - 42)\n       \
    \ factorials += n * factorials(n - 43)\n        factorial", "        var factorial\
    \ = 1\n        var factorial2 = 1\n        var factorial3 = 1\n        var factorial4\
    \ = n\n        while (factorial4 > 1) {\n            factorial *= factorial4\n\
    \            factorial2 *= factorial4\n            factorial3 *= factorial4\n\
    \            factorial4 -= 1\n        }\n        factorial", "        var factorial\
    \ = 1\n        for(i <- 1 to n) {\n            factorial *= i\n        }\n   \
    \     return factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += n * factorials(n - 1)\n      \
    \  factorials += n * factorials(n - 2)\n        factorials += n * factorials(n\
    \ - 3)\n        factorials += n * factorials(n - 4)\n        factorials += n *\
    \ factorials(n - 5)\n        factorials += n * factorials(n - 6)\n        factorials\
    \ += n * factorials(n - 7)\n        factorials += n * factorials(n - 8)\n    \
    \    factorials += n * factorials(n - 9)\n        factorials += n * factorials(n\
    \ - 10)\n        factorials += n * factorials(n - 11)\n        factorials += n\
    \ * factorials(n - 12)\n        factorials += n * factorials(n - 13)\n       \
    \ factorials += n * factorials(n - 14)\n        factorials += n * factorials(n\
    \ - 15)\n        factorials += n * factorials(n - 16)\n        factorials += n\
    \ * factorials(n - 17)\n        factorials += n * factorials(n - 18)\n       \
    \ factorials += n * factorials(n - 19)\n        factorials += n * factorials(n\
    \ - 20)\n        factorials += n * factorials(n - 21)\n        factorials += n\
    \ * factorials(n - 22)\n        factorials += n * factorials(n - 23)\n       \
    \ factorials += n * factorials(n - 24)\n        factorials += n * factorials(n\
    \ - 25)\n        factorials += n * factorials(n - 26)\n        factorials += n\
    \ * factorials(n - 27)\n        factorials += n * factorials(n - 28)\n       \
    \ factorials += n * factorials(n - 29)\n        factorials += n * factorials(n\
    \ - 30)\n        factorials += n * factorials(n - 31)\n        factorials += n\
    \ * factorials(n - 32)\n        factorials += n * factorials(n - 33)\n       \
    \ factorials += n * factorials(n - 34)\n        factorials += n * factorials(n\
    \ - 35)\n        factorials += n * factorials(n - 36)\n        factorials += n\
    \ * factorials(n - 37)\n        factorials += n * factorials(n - 38)\n       \
    \ factorials += n * factorials(n - 39)\n        factorials += n * factorials(n\
    \ - 40)\n        factorials += n * factorials(n - 41)\n        factorials += n\
    \ * factorials(n - 42)\n        factorials += n * factorials(n - 43)\n       \
    \ factorial", "        var factorial = 1\n        var factorial2 = 1\n       \
    \ var factorial3 = 1\n        var factorial4 = 1 \n        var factorial5 = 1\
    \ \n        var factorial6 = 1 \n        var factorial7 = 1 \n        var factorial8\
    \ = 1 \n        var factorial9 = 1 \n        var factorial10 = 1 \n        var\
    \ factorial11 = 1 \n        var factorial12 = 1 \n        var factorial13 = 1\
    \ \n        var factorial14 = 1 \n        var factorial15 = 1 \n        var factorial16\
    \ = 1 \n        var factorial17 = 1 \n        var factorial18 = 1 \n        var\
    \ factorial19 = 1 \n        var factorial20 = 1 \n        var factorial21 = 1\
    \ \n        var factorial22 = 1 \n        var factorial23 = 1 \n        var factorial24\
    \ = 1 \n        var factorial25 = 1 \n        var factorial26 = 1 \n        var\
    \ factorial27 = 1 \n        var factorial28 = 1 \n        var factorial29 = 1\
    \ \n        var factorial30 = 1 \n        var factorial31 = 1 \n        var factorial32\
    \ = 1 \n        var factorial33 = 1 \n        var factorial34 = 1 \n        var\
    \ factorial35 = 1 \n        var factorial36 = 1 \n        var factorial37 = 1\
    \ \n        var factorial38 = 1 \n        var factorial39 = 1 \n        var factorial40\
    \ = 1 \n        var factorial41 = 1 \n        var factorial42 = 1 \n        var\
    \ factorial43 = 1 \n        var factorial44 = 1 \n        var factorial45 = 1\
    \ \n        var factorial46 = 1 \n        var factorial47 = 1 \n        var factorial48\
    \ = 1 \n        var factorial49 = 1 \n        var factorial50 = 1 \n        var\
    \ factorial51 = 1 \n        var factorial52 = 1 \n        var factorial53 = 1\
    \ \n        var factorial54 = 1 \n        var factorial55 = 1 \n        var factorial56\
    \ = 1 \n        var factorial57 = 1 \n        var factorial58 = 1 \n        var\
    \ factorial59 = 1 \n        var factorial60 = 1 \n        var factorial61 = 1\
    \ \n        var factorial62 = 1 \n        var factorial63 = 1 \n        var factorial64\
    \ = 1 \n        var factorial65 = 1 \n        var factorial66 = 1 \n        var\
    \ factorial67 = 1 \n        var factorial68 = 1 \n        var factorial69 = 1\
    \ \n        var factorial70 = 1 \n        var factorial71 = 1 \n        var factorial72\
    \ = 1 \n        var factorial73 = 1 \n        var factorial74 = 1 \n        var\
    \ factorial75 = 1 \n        var factorial76 = 1 \n        var factorial77 = 1\
    \ \n        var factorial78 = 1 \n        var factorial79 = 1 \n        var factorial80\
    \ = 1 \n        var factorial81 = 1 \n        var factorial82 = 1 \n        var\
    \ factori", "        val factorials = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorial = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factori", "        var factorial = 1\n        for(i <-\
    \ 1 to n){\n            factorial *= i\n        }\n        return factorial",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factori", "        var factorial = 1\n        var factorial2 = 1\n  \
    \      var factorial3 = 1\n        var factorial4 = 1\n        var factorial5\
    \ = 1\n        var factorial6 = 1\n        var factorial7 = 1\n        var factorial8\
    \ = 1\n        var factorial9 = 1\n        var factorial10 = 1\n        var factorial11\
    \ = 1\n        var factorial12 = 1\n        var factorial13 = 1\n        var factorial14\
    \ = 1\n        var factorial15 = 1\n        var factorial16 = 1\n        var factorial17\
    \ = 1\n        var factorial18 = 1\n        var factorial19 = 1\n        var factorial20\
    \ = 1\n        var factorial21 = 1\n        var factorial22 = 1\n        var factorial23\
    \ = 1\n        var factorial24 = 1\n        var factorial25 = 1\n        var factorial26\
    \ = 1\n        var factorial27 = 1\n        var factorial28 = 1\n        var factorial29\
    \ = 1\n        var factorial30 = 1\n        var factorial31 = 1\n        var factorial32\
    \ = 1\n        var factorial33 = 1\n        var factorial34 = 1\n        var factorial35\
    \ = 1\n        var factorial36 = 1\n        var factorial37 = 1\n        var factorial38\
    \ = 1\n        var factorial39 = 1\n        var factorial40 = 1\n        var factorial41\
    \ = 1\n        var factorial42 = 1\n        var factorial43 = 1\n        var factorial44\
    \ = 1\n        var factorial45 = 1\n        var factorial46 = 1\n        var factorial47\
    \ = 1\n        var factorial48 = 1\n        var factorial49 = 1\n        var factorial50\
    \ = 1\n        var factorial51 = 1\n        var factorial52 = 1\n        var factorial53\
    \ = 1\n        var factorial54 = 1\n        var factorial55 = 1\n        var factorial56\
    \ = 1\n        var factorial57 = 1\n        var factorial58 = 1\n        var factorial59\
    \ = 1\n        var factorial60 = 1\n        var factorial61 = 1\n        var factorial62\
    \ = 1\n        var factorial63 = 1\n        var factorial64 = 1\n        var factorial65\
    \ = 1\n        var factorial66 = 1\n        var factorial67 = 1\n        var factorial68\
    \ = 1\n        var factorial69 = 1\n        var factorial70 = 1\n        var factorial71\
    \ = 1\n        var factorial72 = 1\n        var factorial73 = 1\n        var factorial74\
    \ = 1\n        var factorial75 = 1\n        var factorial76 = 1\n        var factorial77\
    \ = 1\n        var factorial78 = 1\n        var factorial79 = 1\n        var factorial80\
    \ = 1\n        var factorial81 = 1\n        var factorial82 = 1\n        var factori",
  "        var fact = 1\n        var i = 2\n        while (i <= n) {\n           \
    \ fact *= i\n            i += 1\n        }\n        return fact", "        if\
    \ (n == 0) 1\n        else n * specialFactorial(n-1)", "        val factorial\
    \ = mutable.ArrayBuffer.empty[Long]\n        factorial += n\n        factorial\
    \ += n-1\n        factorial += n-2\n        factorial += n-3\n        factorial\
    \ += n-4\n        factorial += n-5\n        factorial += n-6\n        factorial\
    \ += n-7\n        factorial += n-8\n        factorial += n-9\n        factorial\
    \ += n-10\n        factorial += n-11\n        factorial += n-12\n        factorial\
    \ += n-13\n        factorial += n-14\n        factorial += n-15\n        factorial\
    \ += n-16\n        factorial += n-17\n        factorial += n-18\n        factorial\
    \ += n-19\n        factorial += n-20\n        factorial += n-21\n        factorial\
    \ += n-22\n        factorial += n-23\n        factorial += n-24\n        factorial\
    \ += n-25\n        factorial += n-26\n        factorial += n-27\n        factorial\
    \ += n-28\n        factorial += n-29\n        factorial += n-30\n        factorial\
    \ += n-31\n        factorial += n-32\n        factorial += n-33\n        factorial\
    \ += n-34\n        factorial += n-35\n        factorial += n-36\n        factorial\
    \ += n-37\n        factorial += n-38\n        factorial += n-39\n        factorial\
    \ += n-40\n        factorial += n-41\n        factorial += n-42\n        factorial\
    \ += n-43\n        factorial += n-44\n        factorial += n-45\n        factorial\
    \ += n-46\n        factorial += n-47\n        factorial += n-48\n        factorial\
    \ += n-49\n        factorial += n-50\n        factorial += n-51\n        factorial\
    \ += n-52\n        factorial += n-53\n        factorial += n-54\n        factorial\
    \ += n-55\n        factorial += n-56\n        factorial += n-57\n        factorial\
    \ += n-58\n        factorial += n-59\n        factorial += n-60\n        factorial\
    \ += n-61\n        factorial += n-62\n        factorial += n-63\n        factorial\
    \ += n-64\n        factorial += n-65\n        factorial += n-66\n        factorial\
    \ += n-67\n        factorial += n-68\n        factorial += n-69\n        factorial\
    \ += n-70\n", "        val factorials = mutable.ArrayBuffer.empty[Long]\n    \
    \    factorials += 1\n        factorials += n * factorials(n - 1)\n        factorials\
    \ += n * factorials(n - 2)\n        factorials += n * factorials(n - 3)\n    \
    \    factorials += n * factorials(n - 4)\n        factorials += n * factorials(n\
    \ - 5)\n        factorials += n * factorials(n - 6)\n        factorials += n *\
    \ factorials(n - 7)\n        factorials += n * factorials(n - 8)\n        factorials\
    \ += n * factorials(n - 9)\n        factorials += n * factorials(n - 10)\n   \
    \     factorials += n * factorials(n - 11)\n        factorials += n * factorials(n\
    \ - 12)\n        factorials += n * factorials(n - 13)\n        factorials += n\
    \ * factorials(n - 14)\n        factorials += n * factorials(n - 15)\n       \
    \ factorials += n * factorials(n - 16)\n        factorials += n * factorials(n\
    \ - 17)\n        factorials += n * factorials(n - 18)\n        factorials += n\
    \ * factorials(n - 19)\n        factorials += n * factorials(n - 20)\n       \
    \ factorials += n * factorials(n - 21)\n        factorials += n * factorials(n\
    \ - 22)\n        factorials += n * factorials(n - 23)\n        factorials += n\
    \ * factorials(n - 24)\n        factorials += n * factorials(n - 25)\n       \
    \ factorials += n * factorials(n - 26)\n        factorials += n * factorials(n\
    \ - 27)\n        factorials += n * factorials(n - 28)\n        factorials += n\
    \ * factorials(n - 29)\n        factorials += n * factorials(n - 30)\n       \
    \ factorials += n * factorials(n - 31)\n        factorials += n * factorials(n\
    \ - 32)\n        factorials += n * factorials(n - 33)\n        factorials += n\
    \ * factorials(n - 34)\n        factorials += n * factorials(n - 35)\n       \
    \ factorials += n * factorials(n - 36)\n        factorials += n * factorials(n\
    \ - 37)\n        factorials += n * factorials(n - 38)\n        factorials += n\
    \ * factorials(n - 39)\n        factorials += n * factorials(n - 40)\n       \
    \ factorials += n * factorials(n - 41)\n        factorials += n * factorials(n\
    \ - 42)\n        factorials += n * factorials(n - 43)\n        factorial", " \
    \       val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        factorials += factorial\n        val factorials = factorials.toList\n\
    \        factorials.reverse.foldLeft(factorial)((acc, x) => acc * x)", "     \
    \   val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials += 1\n\
    \        factorials += n * factorials(n - 1)\n        factorials += n * factorials(n\
    \ - 2)\n        factorials += n * factorials(n - 3)\n        factorials += n *\
    \ factorials(n - 4)\n        factorials += n * factorials(n - 5)\n        factorials\
    \ += n * factorials(n - 6)\n        factorials += n * factorials(n - 7)\n    \
    \    factorials += n * factorials(n - 8)\n        factorials += n * factorials(n\
    \ - 9)\n        factorials += n * factorials(n - 10)\n        factorials += n\
    \ * factorials(n - 11)\n        factorials += n * factorials(n - 12)\n       \
    \ factorials += n * factorials(n - 13)\n        factorials += n * factorials(n\
    \ - 14)\n        factorials += n * factorials(n - 15)\n        factorials += n\
    \ * factorials(n - 16)\n        factorials += n * factorials(n - 17)\n       \
    \ factorials += n * factorials(n - 18)\n        factorials += n * factorials(n\
    \ - 19)\n        factorials += n * factorials(n - 20)\n        factorials += n\
    \ * factorials(n - 21)\n        factorials += n * factorials(n - 22)\n       \
    \ factorials += n * factorials(n - 23)\n        factorials += n * factorials(n\
    \ - 24)\n        factorials += n * factorials(n - 25)\n        factorials += n\
    \ * factorials(n - 26)\n        factorials += n * factorials(n - 27)\n       \
    \ factorials += n * factorials(n - 28)\n        factorials += n * factorials(n\
    \ - 29)\n        factorials += n * factorials(n - 30)\n        factorials += n\
    \ * factorials(n - 31)\n        factorials += n * factorials(n - 32)\n       \
    \ factorials += n * factorials(n - 33)\n        factorials += n * factorials(n\
    \ - 34)\n        factorials += n * factorials(n - 35)\n        factorials += n\
    \ * factorials(n - 36)\n        factorials += n * factorials(n - 37)\n       \
    \ factorials += n * factorials(n - 38)\n        factorials += n * factorials(n\
    \ - 39)\n        factorials += n * factorials(n - 40)\n        factorials += n\
    \ * factorials(n - 41)\n        factorials += n * factorials(n - 42)\n       \
    \ factorials += n * factorials(n - 43)\n        factorial", "        if (n ==\
    \ 1L) {\n            return 1L\n        }\n        if (n == 0L) {\n          \
    \  return 0L\n        }\n        val factorial = (1L to n).foldLeft(1L) { (acc,\
    \ x) =>\n            acc * x\n        }\n        factorial", "        var factorial\
    \ = 1\n        var factorial2 = 1\n        var factorial3 = 1\n        var factorial4\
    \ = 1 \n        var factorial5 = 1 \n        var factorial6 = 1 \n        var\
    \ factorial7 = 1 \n        var factorial8 = 1 \n        var factorial9 = 1 \n\
    \        var factorial10 = 1 \n        var factorial11 = 1 \n        var factorial12\
    \ = 1 \n        var factorial13 = 1 \n        var factorial14 = 1 \n        var\
    \ factorial15 = 1 \n        var factorial16 = 1 \n        var factorial17 = 1\
    \ \n        var factorial18 = 1 \n        var factorial19 = 1 \n        var factorial20\
    \ = 1 \n        var factorial21 = 1 \n        var factorial22 = 1 \n        var\
    \ factorial23 = 1 \n        var factorial24 = 1 \n        var factorial25 = 1\
    \ \n        var factorial26 = 1 \n        var factorial27 = 1 \n        var factorial28\
    \ = 1 \n        var factorial29 = 1 \n        var factorial30 = 1 \n        var\
    \ factorial31 = 1 \n        var factorial32 = 1 \n        var factorial33 = 1\
    \ \n        var factorial34 = 1 \n        var factorial35 = 1 \n        var factorial36\
    \ = 1 \n        var factorial37 = 1 \n        var factorial38 = 1 \n        var\
    \ factorial39 = 1 \n        var factorial40 = 1 \n        var factorial41 = 1\
    \ \n        var factorial42 = 1 \n        var factorial43 = 1 \n        var factorial44\
    \ = 1 \n        var factorial45 = 1 \n        var factorial46 = 1 \n        var\
    \ factorial47 = 1 \n        var factorial48 = 1 \n        var factorial49 = 1\
    \ \n        var factorial50 = 1 \n        var factorial51 = 1 \n        var factorial52\
    \ = 1 \n        var factorial53 = 1 \n        var factorial54 = 1 \n        var\
    \ factorial55 = 1 \n        var factorial56 = 1 \n        var factorial57 = 1\
    \ \n        var factorial58 = 1 \n        var factorial59 = 1 \n        var factorial60\
    \ = 1 \n        var factorial61 = 1 \n        var factorial62 = 1 \n        var\
    \ factorial63 = 1 \n        var factorial64 = 1 \n        var factorial65 = 1\
    \ \n        var factorial66 = 1 \n        var factorial67 = 1 \n        var factorial68\
    \ = 1 \n        var factorial69 = 1 \n        var factorial70 = 1 \n        var\
    \ factorial71 = 1 \n        var factorial72 = 1 \n        var factorial73 = 1\
    \ \n        var factorial74 = 1 \n        var factorial75 = 1 \n        var factorial76\
    \ = 1 \n        var factorial77 = 1 \n        var factorial78 = 1 \n        var\
    \ factorial79 = 1 \n        var factorial80 = 1 \n        var factorial81 = 1\
    \ \n        var factorial82 = 1 \n        var factori", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n        for(i\
    \ <- 1 to n){\n            factorials += factorial\n            factorial = factorial\
    \ * (i-1)\n        }\n        factorials.last", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += n * factorials(n - 1)\n      \
    \  factorials += n * factorials(n - 2)\n        factorials += n * factorials(n\
    \ - 3)\n        factorials += n * factorials(n - 4)\n        factorials += n *\
    \ factorials(n - 5)\n        factorials += n * factorials(n - 6)\n        factorials\
    \ += n * factorials(n - 7)\n        factorials += n * factorials(n - 8)\n    \
    \    factorials += n * factorials(n - 9)\n        factorials += n * factorials(n\
    \ - 10)\n        factorials += n * factorials(n - 11)\n        factorials += n\
    \ * factorials(n - 12)\n        factorials += n * factorials(n - 13)\n       \
    \ factorials += n * factorials(n - 14)\n        factorials += n * factorials(n\
    \ - 15)\n        factorials += n * factorials(n - 16)\n        factorials += n\
    \ * factorials(n - 17)\n        factorials += n * factorials(n - 18)\n       \
    \ factorials += n * factorials(n - 19)\n        factorials += n * factorials(n\
    \ - 20)\n        factorials += n * factorials(n - 21)\n        factorials += n\
    \ * factorials(n - 22)\n        factorials += n * factorials(n - 23)\n       \
    \ factorials += n * factorials(n - 24)\n        factorials += n * factorials(n\
    \ - 25)\n        factorials += n * factorials(n - 26)\n        factorials += n\
    \ * factorials(n - 27)\n        factorials += n * factorials(n - 28)\n       \
    \ factorials += n * factorials(n - 29)\n        factorials += n * factorials(n\
    \ - 30)\n        factorials += n * factorials(n - 31)\n        factorials += n\
    \ * factorials(n - 32)\n        factorials += n * factorials(n - 33)\n       \
    \ factorials += n * factorials(n - 34)\n        factorials += n * factorials(n\
    \ - 35)\n        factorials += n * factorials(n - 36)\n        factorials += n\
    \ * factorials(n - 37)\n        factorials += n * factorials(n - 38)\n       \
    \ factorials += n * factorials(n - 39)\n        factorials += n * factorials(n\
    \ - 40)\n        factorials += n * factorials(n - 41)\n        factorials += n\
    \ * factorials(n - 42)\n        factorials += n * factorials(n - 43)\n       \
    \ factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorial = 1\n        for(i <- 1 to n) {\n            factorials +=\
    \ factorial\n            factorial *= i\n        }\n        factorials.last",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        factorials += factorial\n        factorials += factorial * (n -\
    \ 1)\n        factorials += factorial * (n - 2)\n        factorials += factorial\
    \ * (n - 3)\n        factorials += factorial * (n - 4)\n        factorials +=\
    \ factorial * (n - 5)\n        factorials += factorial * (n - 6)\n        factorials\
    \ += factorial * (n - 7)\n        factorials += factorial * (n - 8)\n        factorials\
    \ += factorial * (n - 9)\n        factorials += factorial * (n - 10)\n       \
    \ factorials += factorial * (n - 11)\n        factorials += factorial * (n - 12)\n\
    \        factorials += factorial * (n - 13)\n        factorials += factorial *\
    \ (n - 14)\n        factorials += factorial * (n - 15)\n        factorials +=\
    \ factorial * (n - 16)\n        factorials += factorial * (n - 17)\n        factorials\
    \ += factorial * (n - 18)\n        factorials += factorial * (n - 19)\n      \
    \  factorials += factorial * (n - 20)\n        factorials += factorial * (n -\
    \ 21)\n        factorials += factorial * (n - 22)\n        factorials += factorial\
    \ * (n - 23)\n        factorials += factorial * (n - 24)\n        factorials +=\
    \ factorial * (n - 25)\n        factorials += factorial * (n - 26)\n        factorials\
    \ += factorial * (n - 27)\n        factorials += factorial * (n - 28)\n      \
    \  factorials += factorial * (n - 29)\n        factorials += factorial * (n -\
    \ 30)\n        factorials += factorial * (n - 31)\n        factorials += factorial\
    \ * (n - 32)\n        factorials += factorial * (n - 33)\n        factorials +=\
    \ factorial * (n - 34)\n        factorials += factorial * (n - 35)\n        factorials\
    \ += factorial * (n - 36)\n        factorials += factorial * (n - 37)\n      \
    \  factorials += factorial * (n - 38)\n        factorials += factorial * (n -\
    \ 39)\n        factorials += factorial * (n - 40)\n        factorials += factorial\
    \ * (n - 41)\n        factorials += factorial * (n - 42)\n        factorials +=\
    \ factorial * (n - 43)\n        factorials += factorial * (n - 44)\n        factorials\
    \ += factorial * (n - 45)\n        factorials += factorial * (n - 46)\n      \
    \  factorials += factorial", "        var factorial = 1\n        for(i <- 0 until\
    \ n) {\n            factorial *= i\n        }\n        return factorial", "  \
    \      val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ 1\n        factorials += n * (n-1) * (n-2) * ... * 1\n        factorials.reduceLeft(_\
    \ * _)", "        val factorials = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n \
    \       factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        ", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += n * factorials(n - 1)\n      \
    \  factorials += n * factorials(n - 2)\n        factorials += n * factorials(n\
    \ - 3)\n        factorials += n * factorials(n - 4)\n        factorials += n *\
    \ factorials(n - 5)\n        factorials += n * factorials(n - 6)\n        factorials\
    \ += n * factorials(n - 7)\n        factorials += n * factorials(n - 8)\n    \
    \    factorials += n * factorials(n - 9)\n        factorials += n * factorials(n\
    \ - 10)\n        factorials += n * factorials(n - 11)\n        factorials += n\
    \ * factorials(n - 12)\n        factorials += n * factorials(n - 13)\n       \
    \ factorials += n * factorials(n - 14)\n        factorials += n * factorials(n\
    \ - 15)\n        factorials += n * factorials(n - 16)\n        factorials += n\
    \ * factorials(n - 17)\n        factorials += n * factorials(n - 18)\n       \
    \ factorials += n * factorials(n - 19)\n        factorials += n * factorials(n\
    \ - 20)\n        factorials += n * factorials(n - 21)\n        factorials += n\
    \ * factorials(n - 22)\n        factorials += n * factorials(n - 23)\n       \
    \ factorials += n * factorials(n - 24)\n        factorials += n * factorials(n\
    \ - 25)\n        factorials += n * factorials(n - 26)\n        factorials += n\
    \ * factorials(n - 27)\n        factorials += n * factorials(n - 28)\n       \
    \ factorials += n * factorials(n - 29)\n        factorials += n * factorials(n\
    \ - 30)\n        factorials += n * factorials(n - 31)\n        factorials += n\
    \ * factorials(n - 32)\n        factorials += n * factorials(n - 33)\n       \
    \ factorials += n * factorials(n - 34)\n        factorials += n * factorials(n\
    \ - 35)\n        factorials += n * factorials(n - 36)\n        factorials += n\
    \ * factorials(n - 37)\n        factorials += n * factorials(n - 38)\n       \
    \ factorials += n * factorials(n - 39)\n        factorials += n * factorials(n\
    \ - 40)\n        factorials += n * factorials(n - 41)\n        factorials += n\
    \ * factorials(n - 42)\n        factorials += n * factorials(n - 43)\n       \
    \ factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        ", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = (1l, n)\n        while (factorial._2 > 0) {\n       \
    \     factorials += factorial._1\n            factorial._1 = factorial._2\n  \
    \          factorial._2 = factorial._2-1\n        }\n        factorials.last",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        for(i <- 1 to n){\n            factorial *= i\n            factorials\
    \ += factorial\n        }\n        factorials.last", "        val factorials =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n        while(n\
    \ > 1) {\n            factorials += factorial\n            factorial *= n\n  \
    \          n -= 1\n        }\n        factorials.last", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1l\n        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        factorials += factorial\n       \
    \ factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        ",
  "        var result : Long = 1\n        for(i <- 0 until n){\n            result\
    \ *= i\n        }\n        result", "        var factorial = 1\n        var factorial2\
    \ = 1\n        var factorial3 = 1\n        var factorial4 = 1\n        var factorial5\
    \ = 1\n        var factorial6 = 1\n        var factorial7 = 1\n        var factorial8\
    \ = 1\n        var factorial9 = 1\n        var factorial10 = 1\n        var factorial11\
    \ = 1\n        var factorial12 = 1\n        var factorial13 = 1\n        var factorial14\
    \ = 1\n        var factorial15 = 1\n        var factorial16 = 1\n        var factorial17\
    \ = 1\n        var factorial18 = 1\n        var factorial19 = 1\n        var factorial20\
    \ = 1\n        var factorial21 = 1\n        var factorial22 = 1\n        var factorial23\
    \ = 1\n        var factorial24 = 1\n        var factorial25 = 1\n        var factorial26\
    \ = 1\n        var factorial27 = 1\n        var factorial28 = 1\n        var factorial29\
    \ = 1\n        var factorial30 = 1\n        var factorial31 = 1\n        var factorial32\
    \ = 1\n        var factorial33 = 1\n        var factorial34 = 1\n        var factorial35\
    \ = 1\n        var factorial36 = 1\n        var factorial37 = 1\n        var factorial38\
    \ = 1\n        var factorial39 = 1\n        var factorial40 = 1\n        var factorial41\
    \ = 1\n        var factorial42 = 1\n        var factorial43 = 1\n        var factorial44\
    \ = 1\n        var factorial45 = 1\n        var factorial46 = 1\n        var factorial47\
    \ = 1\n        var factorial48 = 1\n        var factorial49 = 1\n        var factorial50\
    \ = 1\n        var factorial51 = 1\n        var factorial52 = 1\n        var factorial53\
    \ = 1\n        var factorial54 = 1\n        var factorial55 = 1\n        var factorial56\
    \ = 1\n        var factorial57 = 1\n        var factorial58 = 1\n        var factorial59\
    \ = 1\n        var factorial60 = 1\n        var factorial61 = 1\n        var factorial62\
    \ = 1\n        var factorial63 = 1\n        var factorial64 = 1\n        var factorial65\
    \ = 1\n        var factorial66 = 1\n        var factorial67 = 1\n        var factorial68\
    \ = 1\n        var factorial69 = 1\n        var factorial70 = 1\n        var factorial71\
    \ = 1\n        var factorial72 = 1\n        var factorial73 = 1\n        var factorial74\
    \ = 1\n        var factorial75 = 1\n        var factorial76 = 1\n        var factorial77\
    \ = 1\n        var factorial78 = 1\n        var factorial79 = 1\n        var factorial80\
    \ = 1\n        var factorial81 = 1\n        var factorial82 = 1\n        var factori",
  "        val factorials = mutable.ListBuffer[Long]()\n        factorials += n\n\
    \        factorials += factorials(0l) * factorials(1l) * factorials(2l)\n    \
    \    factorials += factorials(0l) * factorials(1l) * factorials(2l) * factorials(3l)\n\
    \        factorials += factorials(0l) * factorials(1l) * factorials(2l) * factorials(3l)\
    \ * factorials(4l)\n        factorials += factorials(0l) * factorials(1l) * factorials(2l)\
    \ * factorials(3l) * factorials(4l) * factorials(5l)\n        factorials += factorials(0l)\
    \ * factorials(1l) * factorials(2l) * factorials(3l) * factorials(4l) * factorials(5l)\
    \ * factorials(6l)\n        factorials += factorials(0l) * factorials(1l) * factorials(2l)\
    \ * factorials(3l) * factorials(4l) * factorials(5l) * factorials(6l) * factorials(7l)\n\
    \        factorials += factorials(0l) * factorials(1l) * factorials(2l) * factorials(3l)\
    \ * factorials(4l) * factorials(5l) * factorials(6l) * factorials(7l) * factorials(8l)\n\
    \        factorials += factorials(0l) * factorials(1l) * factorials(2l) * factorials(3l)\
    \ * factorials(4l) * factorials(5l) * factorials(6l) * factorials(7l) * factorials(8l)\
    \ * factorials(9l)\n        factorials += factorials(0l) * factorials(1l) * factorials(2l)\
    \ * factorials(3l) * factorials(4l) * factorials(5l) * factorials(6l) * factorials(7l)\
    \ * factorials(8l) * factorials(9l) * factorials(10l)\n        factorials += factorials(0l)\
    \ * factorials(1l) * factorials(2l) * factorials(3l) * factorials(4l) * factorials(5l)\
    \ * factorials(6l) * factorials(7l) * factorials(8l) * factorials(9l) * factorials(10l)\
    \ * factorials(11l)\n        factori", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = (n) match {\n            case 0 => 1\n            case\
    \ 1 => n\n            case _ => {\n                val factorial = (n-1) * specialFactorial(n-1)\n\
    \                factorials += factorial\n                factorial\n        \
    \    }\n        }\n        factorials += factorial\n        factorials.sum", " \
    \       var factorial = 1\n        var counter = 1\n        while (counter <=\
    \ n) {\n            factorial *= counter\n            counter += 1\n        }\n\
    \        return factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        while (n > 1) {\n            factorials +=\
    \ factorial\n            factorial *= n\n            n -= 1\n        }\n     \
    \   factorials.last", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += n * factorials(n - 1)\n      \
    \  factorials += n * factorials(n - 2)\n        factorials += n * factorials(n\
    \ - 3)\n        factorials += n * factorials(n - 4)\n        factorials += n *\
    \ factorials(n - 5)\n        factorials += n * factorials(n - 6)\n        factorials\
    \ += n * factorials(n - 7)\n        factorials += n * factorials(n - 8)\n    \
    \    factorials += n * factorials(n - 9)\n        factorials += n * factorials(n\
    \ - 10)\n        factorials += n * factorials(n - 11)\n        factorials += n\
    \ * factorials(n - 12)\n        factorials += n * factorials(n - 13)\n       \
    \ factorials += n * factorials(n - 14)\n        factorials += n * factorials(n\
    \ - 15)\n        factorials += n * factorials(n - 16)\n        factorials += n\
    \ * factorials(n - 17)\n        factorials += n * factorials(n - 18)\n       \
    \ factorials += n * factorials(n - 19)\n        factorials += n * factorials(n\
    \ - 20)\n        factorials += n * factorials(n - 21)\n        factorials += n\
    \ * factorials(n - 22)\n        factorials += n * factorials(n - 23)\n       \
    \ factorials += n * factorials(n - 24)\n        factorials += n * factorials(n\
    \ - 25)\n        factorials += n * factorials(n - 26)\n        factorials += n\
    \ * factorials(n - 27)\n        factorials += n * factorials(n - 28)\n       \
    \ factorials += n * factorials(n - 29)\n        factorials += n * factorials(n\
    \ - 30)\n        factorials += n * factorials(n - 31)\n        factorials += n\
    \ * factorials(n - 32)\n        factorials += n * factorials(n - 33)\n       \
    \ factorials += n * factorials(n - 34)\n        factorials += n * factorials(n\
    \ - 35)\n        factorials += n * factorials(n - 36)\n        factorials += n\
    \ * factorials(n - 37)\n        factorials += n * factorials(n - 38)\n       \
    \ factorials += n * factorials(n - 39)\n        factorials += n * factorials(n\
    \ - 40)\n        factorials += n * factorials(n - 41)\n        factorials += n\
    \ * factorials(n - 42)\n        factorials += n * factorials(n - 43)\n       \
    \ factorial", "        var factorial = 1\n        var factorial2 = 1\n       \
    \ var factorial3 = 1\n        var factorial4 = n\n        while (factorial4 >\
    \ 1) {\n            factorial *= factorial4\n            factorial2 *= factorial4\n\
    \            factorial3 *= factorial4\n            factorial4 -= 1\n        }\n\
    \        factorial", "        var factorial = 1\n        var factorial2 = 1\n\
    \        var factorial3 = 1\n        var factorial4 = 1\n        var factorial5\
    \ = 1\n        var factorial6 = 1\n        var factorial7 = 1\n        var factorial8\
    \ = 1\n        var factorial9 = 1\n        var factorial10 = 1\n        var factorial11\
    \ = 1\n        var factorial12 = 1\n        var factorial13 = 1\n        var factorial14\
    \ = 1\n        var factorial15 = 1\n        var factorial16 = 1\n        var factorial17\
    \ = 1\n        var factorial18 = 1\n        var factorial19 = 1\n        var factorial20\
    \ = 1\n        var factorial21 = 1\n        var factorial22 = 1\n        var factorial23\
    \ = 1\n        var factorial24 = 1\n        var factorial25 = 1\n        var factorial26\
    \ = 1\n        var factorial27 = 1\n        var factorial28 = 1\n        var factorial29\
    \ = 1\n        var factorial30 = 1\n        var factorial31 = 1\n        var factorial32\
    \ = 1\n        var factorial33 = 1\n        var factorial34 = 1\n        var factorial35\
    \ = 1\n        var factorial36 = 1\n        var factorial37 = 1\n        var factorial38\
    \ = 1\n        var factorial39 = 1\n        var factorial40 = 1\n        var factorial41\
    \ = 1\n        var factorial42 = 1\n        var factorial43 = 1\n        var factorial44\
    \ = 1\n        var factorial45 = 1\n        var factorial46 = 1\n        var factorial47\
    \ = 1\n        var factorial48 = 1\n        var factorial49 = 1\n        var factorial50\
    \ = 1\n        var factorial51 = 1\n        var factorial52 = 1\n        var factorial53\
    \ = 1\n        var factorial54 = 1\n        var factorial55 = 1\n        var factorial56\
    \ = 1\n        var factorial57 = 1\n        var factorial58 = 1\n        var factorial59\
    \ = 1\n        var factorial60 = 1\n        var factorial61 = 1\n        var factorial62\
    \ = 1\n        var factorial63 = 1\n        var factorial64 = 1\n        var factorial65\
    \ = 1\n        var factorial66 = 1\n        var factorial67 = 1\n        var factorial68\
    \ = 1\n        var factorial69 = 1\n        var factorial70 = 1\n        var factorial71\
    \ = 1\n        var factorial72 = 1\n        var factorial73 = 1\n        var factorial74\
    \ = 1\n        var factorial75 = 1\n        var factorial76 = 1\n        var factorial77\
    \ = 1\n        var factorial78 = 1\n        var factorial79 = 1\n        var factorial80\
    \ = 1\n        var factorial81 = 1\n        var factorial82 = 1\n        var factori",
  "        if (n == 0) 1\n        else n * specialFactorial(n - 1)", "        val\
    \ factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n  \
    \      for(i <- 0 until n){\n            factorials += factorial\n           \
    \ factorial *= i\n        }\n        factorials.last", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1l\n        for(i\
    \ <- 0 until n){\n            factorials += factorial\n            factorial *=\
    \ i\n        }\n        factorials.last", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        factorials += factorial\n        factorials\
    \ += factorial * (n - 1l)\n        factorials += factorial * (n - 2l)\n      \
    \  factorials += factorial * (n - 3l)\n        factorials += factorial * (n -\
    \ 4l)\n        factorials += factorial * (n - 5l)\n        factorials += factorial\
    \ * (n - 6l)\n        factorials += factorial * (n - 7l)\n        factorials +=\
    \ factorial * (n - 8l)\n        factorials += factorial * (n - 9l)\n        factorials\
    \ += factorial * (n - 10l)\n        factorials += factorial * (n - 11l)\n    \
    \    factorials += factorial * (n - 12l)\n        factorials += factorial * (n\
    \ - 13l)\n        factorials += factorial * (n - 14l)\n        factorials += factorial\
    \ * (n - 15l)\n        factorials += factorial * (n - 16l)\n        factorials\
    \ += factorial * (n - 17l)\n        factorials += factorial * (n - 18l)\n    \
    \    factorials += factorial * (n - 19l)\n        factorials += factorial * (n\
    \ - 20l)\n        factorials += factorial * (n - 21l)\n        factorials += factorial\
    \ * (n - 22l)\n        factorials += factorial * (n - 23l)\n        factorials\
    \ += factorial * (n - 24l)\n        factorials += factorial * (n - 25l)\n    \
    \    factorials += factorial * (n - 26l)\n        factorials += factorial * (n\
    \ - 27l)\n        factorials += factorial * (n - 28l)\n        factorials += factorial\
    \ * (n - 29l)\n        factorials += factorial * (n - 30l)\n        factorials\
    \ += factorial * (n - 31l)\n        factorials += factorial * (n - 32l)\n    \
    \    factorials += factorial * (n - 33l)\n        factorials += factorial * (n\
    \ - 34l)\n        factorials += factorial * (n - 35l)\n        factorials += factorial\
    \ * (n - 36l)\n        factorials += factorial * (n - 37l)\n        factorials\
    \ += factorial * (n - 38l)\n        factorials += factorial * (n - 39l)\n    \
    \    factorials += factorial * (n - 40l)\n        factorials += factorial * (n\
    \ - 41l)\n        factorials += factorial * (n - 42l)\n        factorials += factorial\
    \ * (n - 43l)\n        factorials += factorial * (n - 44l)\n", "        if (n\
    \ == 0) 1\n        else n * specialFactorial(n-1)", "        var factorial = 1\n\
    \        for(i <- 0 until n) {\n            factorial *= i\n        }\n      \
    \  return factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1l\n        val factorials = mutable.Array", "      \
    \  val factorial = mutable.ArrayBuffer.empty[Long]\n        factorial(0) = 1\n\
    \        factorial(1) = 1\n        factorial(2) = 1\n        factorial(3) = 1\n\
    \        factorial(4) = 1\n        factorial(5) = 1\n        factorial(6) = 1\n\
    \        factorial(7) = 1\n        factorial(8) = 1\n        factorial(9) = 1\n\
    \        factorial(10) = 1\n        factorial(11) = 1\n        factorial(12) =\
    \ 1\n        factorial(13) = 1\n        factorial(14) = 1\n        factorial(15)\
    \ = 1\n        factorial(16) = 1\n        factorial(17) = 1\n        factorial(18)\
    \ = 1\n        factorial(19) = 1\n        factorial(20) = 1\n        factorial(21)\
    \ = 1\n        factorial(22) = 1\n        factorial(23) = 1\n        factorial(24)\
    \ = 1\n        factorial(25) = 1\n        factorial(26) = 1\n        factorial(27)\
    \ = 1\n        factorial(28) = 1\n        factorial(29) = 1\n        factorial(30)\
    \ = 1\n        factorial(31) = 1\n        factorial(32) = 1\n        factorial(33)\
    \ = 1\n        factorial(34) = 1\n        factorial(35) = 1\n        factorial(36)\
    \ = 1\n        factorial(37) = 1\n        factorial(38) = 1\n        factorial(39)\
    \ = 1\n        factorial(40) = 1\n        factorial(41) = 1\n        factorial(42)\
    \ = 1\n        factorial(43) = 1\n        factorial(44) = 1\n        factorial(45)\
    \ = 1\n        factorial(46) = 1\n        factorial(47) = 1\n        factorial(48)\
    \ = 1\n        factorial(49) = 1\n        factorial(50) = 1\n        factorial(51)\
    \ = 1\n        factorial(52) = 1\n        factorial(53) = 1\n        factorial(54)\
    \ = 1\n        factorial(55) = 1\n        factorial(56) = 1\n        factorial(57)\
    \ = 1\n        factorial(58) = 1\n        factorial(59) = 1\n        factorial(60)\
    \ = 1\n        factorial(61) = 1\n        factorial(62) = 1\n        factorial(63)\
    \ = 1\n        factorial(64) = 1\n        factorial(65) = 1\n        factorial(66)\
    \ = 1\n        factorial(67) = 1\n        factorial(68) = 1\n        factorial(69)\
    \ = 1\n        factorial(70) = 1\n        factorial(71) = 1\n        factorial(72)\
    \ = 1\n        factorial(73) = 1\n        factorial(74) = 1\n        factorial(75)\
    \ = 1", "        val factorials = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorial = (n-1l) match {\n            case 0 => 1l\n            case _ =>\
    \ n * factorial(n-1)\n        }\n        factorials += factorial\n        factorials",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ 1\n        factorials += n * factorials(n - 1)\n        factorials += n * factorials(n\
    \ - 2)\n        factorials += n * factorials(n - 3)\n        factorials += n *\
    \ factorials(n - 4)\n        factorials += n * factorials(n - 5)\n        factorials\
    \ += n * factorials(n - 6)\n        factorials += n * factorials(n - 7)\n    \
    \    factorials += n * factorials(n - 8)\n        factorials += n * factorials(n\
    \ - 9)\n        factorials += n * factorials(n - 10)\n        factorials += n\
    \ * factorials(n - 11)\n        factorials += n * factorials(n - 12)\n       \
    \ factorials += n * factorials(n - 13)\n        factorials += n * factorials(n\
    \ - 14)\n        factorials += n * factorials(n - 15)\n        factorials += n\
    \ * factorials(n - 16)\n        factorials += n * factorials(n - 17)\n       \
    \ factorials += n * factorials(n - 18)\n        factorials += n * factorials(n\
    \ - 19)\n        factorials += n * factorials(n - 20)\n        factorials += n\
    \ * factorials(n - 21)\n        factorials += n * factorials(n - 22)\n       \
    \ factorials += n * factorials(n - 23)\n        factorials += n * factorials(n\
    \ - 24)\n        factorials += n * factorials(n - 25)\n        factorials += n\
    \ * factorials(n - 26)\n        factorials += n * factorials(n - 27)\n       \
    \ factorials += n * factorials(n - 28)\n        factorials += n * factorials(n\
    \ - 29)\n        factorials += n * factorials(n - 30)\n        factorials += n\
    \ * factorials(n - 31)\n        factorials += n * factorials(n - 32)\n       \
    \ factorials += n * factorials(n - 33)\n        factorials += n * factorials(n\
    \ - 34)\n        factorials += n * factorials(n - 35)\n        factorials += n\
    \ * factorials(n - 36)\n        factorials += n * factorials(n - 37)\n       \
    \ factorials += n * factorials(n - 38)\n        factorials += n * factorials(n\
    \ - 39)\n        factorials += n * factorials(n - 40)\n        factorials += n\
    \ * factorials(n - 41)\n        factorials += n * factorials(n - 42)\n       \
    \ factorials += n * factorials(n - 43)\n        factorial", "        val factorials\
    \ = mutable.ListBuffer[Long]()\n        val factorial = (1l, n)\n        while\
    \ (factorial.head < factorial.tail.head) {\n            factorials += factorial.head\n\
    \            factorial = (factorial.tail.tail, factorial.tail.head * factorial.head)\n\
    \        }\n        factorials.reverse.foldLeft(1l) { (acc, x) => acc * x }",
  "        var factorial = 1\n        var factorial2 = 1\n        var factorial3 =\
    \ 1\n        var factorial4 = n\n        while (factorial4 > 1) {\n          \
    \  factorial *= factorial4\n            factorial2 *= factorial4\n           \
    \ factorial3 *= factorial4\n            factorial4 -= 1\n        }\n        factorial",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ 1\n        factorials += n * (n-1) * ... * (n-1)\n        factorials.sum", " \
    \       val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        for(i <- 1 to n) {\n            factorial *= i\n            factorials\
    \ += factorial\n        }\n        factorials.last", "        if (n == 0) 1\n\
    \        else n * specialFactorial(n-1)", "        if (n == 1l) 1l\n        else\
    \ n * specialFactorial(n-1l)", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += n * (factorials(0) - 1)\n    \
    \    factorials += n * (factorials(0) - 2)\n        factorials += n * (factorials(0)\
    \ - 3)\n        factorials += n * (factorials(0) - 4)\n        factorials += n\
    \ * (factorials(0) - 5)\n        factorials += n * (factorials(0) - 6)\n     \
    \   factorials += n * (factorials(0) - 7)\n        factorials += n * (factorials(0)\
    \ - 8)\n        factorials += n * (factorials(0) - 9)\n        factorials += n\
    \ * (factorials(0) - 10)\n        factorials += n * (factorials(0) - 11)\n   \
    \     factorials += n * (factorials(0) - 12)\n        factorials += n * (factorials(0)\
    \ - 13)\n        factorials += n * (factorials(0) - 14)\n        factorials +=\
    \ n * (factorials(0) - 15)\n        factorials += n * (factorials(0) - 16)\n \
    \       factorials += n * (factorials(0) - 17)\n        factorials += n * (factorials(0)\
    \ - 18)\n        factorials += n * (factorials(0) - 19)\n        factorials +=\
    \ n * (factorials(0) - 20)\n        factorials += n * (factorials(0) - 21)\n \
    \       factorials += n * (factorials(0) - 22)\n        factorials += n * (factorials(0)\
    \ - 23)\n        factorials += n * (factorials(0) - 24)\n        factorials +=\
    \ n * (factorials(0) - 25)\n        factorials += n * (factorials(0) - 26)\n \
    \       factorials += n * (factorials(0) - 27)\n        factorials += n * (factorials(0)\
    \ - 28)\n        factorials += n * (factorials(0) - 29)\n        factorials +=\
    \ n * (factorials(0) - 30)\n        factorials += n * (factorials(0) - 31)\n \
    \       factorials += n * (factorials(0) - 32)\n        factorials += n * (factorials(0)\
    \ - 33)\n        factorials += n * (factorials(0) - 34)\n        factorials +=\
    \ n * (factorials(0) - 35)\n        factorials += n * (factorials(0) - 36)\n \
    \       factorials += n * (factorials(0) - 37)\n", "        var result : Long\
    \ = 1\n        for(i <- 0 until n) {\n            result *= i\n        }\n   \
    \     return result", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        for(i <- 1 to n){\n            factorials\
    \ += factorial\n            factorial *= i\n        }\n        factorials.last",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ n\n        factorials += factorials(0) * factorials(1)\n        factorials +=\
    \ factorials(0) * factorials(1)\n        factorials += factorials(0) * factorials(1)\n\
    \        factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factorials += factorials(0) * factorials(1)\n     \
    \   factorials += factorials(0) * factorials(1)\n        factorials += factorials(0)\
    \ * factorials(1)\n        factori", "        var factorial = 1\n        var factorial2\
    \ = 1\n        var factorial3 = 1\n        var factorial4 = 1\n        var factorial5\
    \ = 1\n        var factorial6 = 1\n        var factorial7 = 1\n        var factorial8\
    \ = 1\n        var factorial9 = 1\n        var factorial10 = 1\n        var factorial11\
    \ = 1\n        var factorial12 = 1\n        var factorial13 = 1\n        var factorial14\
    \ = 1\n        var factorial15 = 1\n        var factorial16 = 1\n        var factorial17\
    \ = 1\n        var factorial18 = 1\n        var factorial19 = 1\n        var factorial20\
    \ = 1\n        var factorial21 = 1\n        var factorial22 = 1\n        var factorial23\
    \ = 1\n        var factorial24 = 1\n        var factorial25 = 1\n        var factorial26\
    \ = 1\n        var factorial27 = 1\n        var factorial28 = 1\n        var factorial29\
    \ = 1\n        var factorial30 = 1\n        var factorial31 = 1\n        var factorial32\
    \ = 1\n        var factorial33 = 1\n        var factorial34 = 1\n        var factorial35\
    \ = 1\n        var factorial36 = 1\n        var factorial37 = 1\n        var factorial38\
    \ = 1\n        var factorial39 = 1\n        var factorial40 = 1\n        var factorial41\
    \ = 1\n        var factorial42 = 1\n        var factorial43 = 1\n        var factorial44\
    \ = 1\n        var factorial45 = 1\n        var factorial46 = 1\n        var factorial47\
    \ = 1\n        var factorial48 = 1\n        var factorial49 = 1\n        var factorial50\
    \ = 1\n        var factorial51 = 1\n        var factorial52 = 1\n        var factorial53\
    \ = 1\n        var factorial54 = 1\n        var factorial55 = 1\n        var factorial56\
    \ = 1\n        var factorial57 = 1\n        var factorial58 = 1\n        var factorial59\
    \ = 1\n        var factorial60 = 1\n        var factorial61 = 1\n        var factorial62\
    \ = 1\n        var factorial63 = 1\n        var factorial64 = 1\n        var factorial65\
    \ = 1\n        var factorial66 = 1\n        var factorial67 = 1\n        var factorial68\
    \ = 1\n        var factorial69 = 1\n        var factorial70 = 1\n        var factorial71\
    \ = 1\n        var factorial72 = 1\n        var factorial73 = 1\n        var factorial74\
    \ = 1\n        var factorial75 = 1\n        var factorial76 = 1\n        var factorial77\
    \ = 1\n        var factorial78 = 1\n        var factorial79 = 1\n        var factorial80\
    \ = 1\n        var factorial81 = 1\n        var factorial82 = 1\n        var factori",
  "        var factorial = 1\n        var factorial2 = 1\n        var factorial3 =\
    \ 1\n        var factorial4 = n\n        while (factorial4 > 1) {\n          \
    \  factorial *= factorial4\n            factorial2 *= factorial4\n           \
    \ factorial3 *= factorial4\n            factorial4 -= 1\n        }\n        factorial",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        for(i <- 0 until n){\n            factorial *= i\n            factorials\
    \ += factorial\n        }\n        factorials.last", "        val factorials =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        factorials += factorial\n       \
    \ factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factori",
  "        var factorial = 1\n        var factorial2 = 1\n        var factorial3 =\
    \ 1\n        var factorial4 = n\n        while (factorial4 > 1) {\n          \
    \  factorial *= factorial4\n            factorial2 *= factorial4\n           \
    \ factorial3 *= factorial4\n            factorial4 -= 1\n        }\n        factorial",
  "        val factorial = mutable.Stack[Long]()\n        factorial.push(n)\n    \
    \    while (factorial.nonEmpty) {\n            val next = factorial.pop()\n  \
    \          factorial.push(n * next)\n        }\n        factorial.head", "   \
    \     val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ 1\n        factorials += n * factorials(n - 1)\n        factorials += n * factorials(n\
    \ - 2)\n        factorials += n * factorials(n - 3)\n        factorials += n *\
    \ factorials(n - 4)\n        factorials += n * factorials(n - 5)\n        factorials\
    \ += n * factorials(n - 6)\n        factorials += n * factorials(n - 7)\n    \
    \    factorials += n * factorials(n - 8)\n        factorials += n * factorials(n\
    \ - 9)\n        factorials += n * factorials(n - 10)\n        factorials += n\
    \ * factorials(n - 11)\n        factorials += n * factorials(n - 12)\n       \
    \ factorials += n * factorials(n - 13)\n        factorials += n * factorials(n\
    \ - 14)\n        factorials += n * factorials(n - 15)\n        factorials += n\
    \ * factorials(n - 16)\n        factorials += n * factorials(n - 17)\n       \
    \ factorials += n * factorials(n - 18)\n        factorials += n * factorials(n\
    \ - 19)\n        factorials += n * factorials(n - 20)\n        factorials += n\
    \ * factorials(n - 21)\n        factorials += n * factorials(n - 22)\n       \
    \ factorials += n * factorials(n - 23)\n        factorials += n * factorials(n\
    \ - 24)\n        factorials += n * factorials(n - 25)\n        factorials += n\
    \ * factorials(n - 26)\n        factorials += n * factorials(n - 27)\n       \
    \ factorials += n * factorials(n - 28)\n        factorials += n * factorials(n\
    \ - 29)\n        factorials += n * factorials(n - 30)\n        factorials += n\
    \ * factorials(n - 31)\n        factorials += n * factorials(n - 32)\n       \
    \ factorials += n * factorials(n - 33)\n        factorials += n * factorials(n\
    \ - 34)\n        factorials += n * factorials(n - 35)\n        factorials += n\
    \ * factorials(n - 36)\n        factorials += n * factorials(n - 37)\n       \
    \ factorials += n * factorials(n - 38)\n        factorials += n * factorials(n\
    \ - 39)\n        factorials += n * factorials(n - 40)\n        factorials += n\
    \ * factorials(n - 41)\n        factorials += n * factorials(n - 42)\n       \
    \ factorials += n * factorials(n - 43)\n        factorial", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factorial = 1\n        while\
    \ (n > 1) {\n            factorial *= n\n            factorials += factorial\n\
    \            n -= 1\n        }\n        factorials.last", "        val factorials\
    \ = mutable.ListBuffer[Long]()\n        var factorial = 1\n        while (n >\
    \ 1) {\n            factorial *= n\n            factorials += factorial\n    \
    \        n -= 1\n        }\n        factorials.last", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorial = (1l, n)\n       \
    \ factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factorial\n\
    \        factorials += factorial\n        factorials += factorial\n        factorials\
    \ += factorial\n        factorials += factorial\n        factorials += factori",
  "        val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials +=\
    \ 1\n        factorials += factorials(n - 1)\n        factorials += factorials(n\
    \ - 2)\n        factorials += factorials(n - 3)\n        factorials += factorials(n\
    \ - 4)\n        factorials += factorials(n - 5)\n        factorials += factorials(n\
    \ - 6)\n        factorials += factorials(n - 7)\n        factorials += factorials(n\
    \ - 8)\n        factorials += factorials(n - 9)\n        factorials += factorials(n\
    \ - 10)\n        factorials += factorials(n - 11)\n        factorials += factorials(n\
    \ - 12)\n        factorials += factorials(n - 13)\n        factorials += factorials(n\
    \ - 14)\n        factorials += factorials(n - 15)\n        factorials += factorials(n\
    \ - 16)\n        factorials += factorials(n - 17)\n        factorials += factorials(n\
    \ - 18)\n        factorials += factorials(n - 19)\n        factorials += factorials(n\
    \ - 20)\n        factorials += factorials(n - 21)\n        factorials += factorials(n\
    \ - 22)\n        factorials += factorials(n - 23)\n        factorials += factorials(n\
    \ - 24)\n        factorials += factorials(n - 25)\n        factorials += factorials(n\
    \ - 26)\n        factorials += factorials(n - 27)\n        factorials += factorials(n\
    \ - 28)\n        factorials += factorials(n - 29)\n        factorials += factorials(n\
    \ - 30)\n        factorials += factorials(n - 31)\n        factorials += factorials(n\
    \ - 32)\n        factorials += factorials(n - 33)\n        factorials += factorials(n\
    \ - 34)\n        factorials += factorials(n - 35)\n        factorials += factorials(n\
    \ - 36)\n        factorials += factorials(n - 37)\n        factorials += factorials(n\
    \ - 38)\n        factorials += factorials(n - 39)\n        factorials += factorials(n\
    \ - 40)\n        factorials += factorials(n - 41)\n        factorials += factorials(n\
    \ - 42)\n        factorials += factorials(n - 43)\n        factorials += factorials(n\
    \ - 44)\n        factorials += factorials(n - 45)\n        factorials += factorials(n\
    \ - 46)\n        factorials += factorials(n - 47)\n        factori", "       \
    \ val factorials = mutable.ArrayBuffer.empty[Long]\n        factorials += 1\n\
    \        factorials += n * factorials(n - 1)\n        factorials += n * factorials(n\
    \ - 2)\n        factorials += n * factorials(n - 3)\n        factorials += n *\
    \ factorials(n - 4)\n        factorials += n * factorials(n - 5)\n        factorials\
    \ += n * factorials(n - 6)\n        factorials += n * factorials(n - 7)\n    \
    \    factorials += n * factorials(n - 8)\n        factorials += n * factorials(n\
    \ - 9)\n        factorials += n * factorials(n - 10)\n        factorials += n\
    \ * factorials(n - 11)\n        factorials += n * factorials(n - 12)\n       \
    \ factorials += n * factorials(n - 13)\n        factorials += n * factorials(n\
    \ - 14)\n        factorials += n * factorials(n - 15)\n        factorials += n\
    \ * factorials(n - 16)\n        factorials += n * factorials(n - 17)\n       \
    \ factorials += n * factorials(n - 18)\n        factorials += n * factorials(n\
    \ - 19)\n        factorials += n * factorials(n - 20)\n        factorials += n\
    \ * factorials(n - 21)\n        factorials += n * factorials(n - 22)\n       \
    \ factorials += n * factorials(n - 23)\n        factorials += n * factorials(n\
    \ - 24)\n        factorials += n * factorials(n - 25)\n        factorials += n\
    \ * factorials(n - 26)\n        factorials += n * factorials(n - 27)\n       \
    \ factorials += n * factorials(n - 28)\n        factorials += n * factorials(n\
    \ - 29)\n        factorials += n * factorials(n - 30)\n        factorials += n\
    \ * factorials(n - 31)\n        factorials += n * factorials(n - 32)\n       \
    \ factorials += n * factorials(n - 33)\n        factorials += n * factorials(n\
    \ - 34)\n        factorials += n * factorials(n - 35)\n        factorials += n\
    \ * factorials(n - 36)\n        factorials += n * factorials(n - 37)\n       \
    \ factorials += n * factorials(n - 38)\n        factorials += n * factorials(n\
    \ - 39)\n        factorials += n * factorials(n - 40)\n        factorials += n\
    \ * factorials(n - 41)\n        factorials += n * factorials(n - 42)\n       \
    \ factorials += n * factorials(n - 43)\n        factorial", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        factorials += 1\n        factorials\
    \ += n * factorials(n - 1)\n        factorials += n * factorials(n - 2)\n    \
    \    factorials += n * factorials(n - 3)\n        factorials += n * factorials(n\
    \ - 4)\n        factorials += n * factorials(n - 5)\n        factorials += n *\
    \ factorials(n - 6)\n        factorials += n * factorials(n - 7)\n        factorials\
    \ += n * factorials(n - 8)\n        factorials += n * factorials(n - 9)\n    \
    \    factorials += n * factorials(n - 10)\n        factorials += n * factorials(n\
    \ - 11)\n        factorials += n * factorials(n - 12)\n        factorials += n\
    \ * factorials(n - 13)\n        factorials += n * factorials(n - 14)\n       \
    \ factorials += n * factorials(n - 15)\n        factorials += n * factorials(n\
    \ - 16)\n        factorials += n * factorials(n - 17)\n        factorials += n\
    \ * factorials(n - 18)\n        factorials += n * factorials(n - 19)\n       \
    \ factorials += n * factorials(n - 20)\n        factorials += n * factorials(n\
    \ - 21)\n        factorials += n * factorials(n - 22)\n        factorials += n\
    \ * factorials(n - 23)\n        factorials += n * factorials(n - 24)\n       \
    \ factorials += n * factorials(n - 25)\n        factorials += n * factorials(n\
    \ - 26)\n        factorials += n * factorials(n - 27)\n        factorials += n\
    \ * factorials(n - 28)\n        factorials += n * factorials(n - 29)\n       \
    \ factorials += n * factorials(n - 30)\n        factorials += n * factorials(n\
    \ - 31)\n        factorials += n * factorials(n - 32)\n        factorials += n\
    \ * factorials(n - 33)\n        factorials += n * factorials(n - 34)\n       \
    \ factorials += n * factorials(n - 35)\n        factorials += n * factorials(n\
    \ - 36)\n        factorials += n * factorials(n - 37)\n        factorials += n\
    \ * factorials(n - 38)\n        factorials += n * factorials(n - 39)\n       \
    \ factorials += n * factorials(n - 40)\n        factorials += n * factorials(n\
    \ - 41)\n        factorials += n * factorials(n - 42)\n        factorials += n\
    \ * factorials(n - 43)\n        factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        var factorial = 1\n        var factorialCounter = 0\n        while (factorialCounter\
    \ < n) {\n            factorials += factorial\n            factorialCounter =\
    \ factorialCounter + 1\n            factorial = factorial * (factorialCounter\
    \ + 1)\n        }\n        factorials.last", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials(n - 1)\n        factorials\
    \ += factorials(n - 2)\n        factorials += factorials(n - 3)\n        factorials\
    \ += factorials(n - 4)\n        factorials += factorials(n - 5)\n        factorials\
    \ += factorials(n - 6)\n        factorials += factorials(n - 7)\n        factorials\
    \ += factorials(n - 8)\n        factorials += factorials(n - 9)\n        factorials\
    \ += factorials(n - 10)\n        factorials += factorials(n - 11)\n        factorials\
    \ += factorials(n - 12)\n        factorials += factorials(n - 13)\n        factorials\
    \ += factorials(n - 14)\n        factorials += factorials(n - 15)\n        factorials\
    \ += factorials(n - 16)\n        factorials += factorials(n - 17)\n        factorials\
    \ += factorials(n - 18)\n        factorials += factorials(n - 19)\n        factorials\
    \ += factorials(n - 20)\n        factorials += factorials(n - 21)\n        factorials\
    \ += factorials(n - 22)\n        factorials += factorials(n - 23)\n        factorials\
    \ += factorials(n - 24)\n        factorials += factorials(n - 25)\n        factorials\
    \ += factorials(n - 26)\n        factorials += factorials(n - 27)\n        factorials\
    \ += factorials(n - 28)\n        factorials += factorials(n - 29)\n        factorials\
    \ += factorials(n - 30)\n        factorials += factorials(n - 31)\n        factorials\
    \ += factorials(n - 32)\n        factorials += factorials(n - 33)\n        factorials\
    \ += factorials(n - 34)\n        factorials += factorials(n - 35)\n        factorials\
    \ += factorials(n - 36)\n        factorials += factorials(n - 37)\n        factorials\
    \ += factorials(n - 38)\n        factorials += factorials(n - 39)\n        factorials\
    \ += factorials(n - 40)\n        factorials += factorials(n - 41)\n        factorials\
    \ += factorials(n - 42)\n        factorials += factorials(n - 43)\n        factorials\
    \ += factorials(n - 44)\n        factorials += factorials(n - 45)\n        factorials\
    \ += factorials(n - 46)\n        factorials += factorials(n - 47)\n        factori",
  "        var factorial = 1\n        for(i <- 1 to n) {\n            factorial *=\
    \ i\n        }\n        return factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        var factorial = 1\n        while (n > 1) {\n            factorial *=\
    \ n\n            factorials += factorial\n            n -= 1\n        }\n    \
    \    factorials.last", "        var factorial = 1\n        for(i <- 0 until n){\n\
    \            factorial *= i\n        }\n        return factorial", "        val\
    \ factorials = mutable.ArrayBuffer.empty[Long]\n        var factorial = 1\n  \
    \      for(i <- 0 until n){\n            factorial *= i\n            factorials\
    \ += factorial\n        }\n        factorials.last", "        var factorial =\
    \ 1\n        for(i <- 1 to n){\n            factorial *= i\n        }\n      \
    \  return factorial", "        var factorial = 1\n        var i = 2\n        while\
    \ (i <= n) {\n            factorial *= i\n            i += 1\n        }\n    \
    \    return factorial", "        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += n * (n - 1)\n        factorials\
    \ += n * (n - 1) * n\n        factorials += n * (n - 1) * n * n\n        factorials\
    \ += n * (n - 1) * n * n * n\n        factorials += n * (n - 1) * n * n * n *\
    \ n\n        factorials += n * (n - 1) * n * n * n * n * n\n        factorials\
    \ += n * (n - 1) * n * n * n * n * n * n\n        factorials += n * (n - 1) *\
    \ n * n * n * n * n * n * n\n        factorials += n * (n - 1) * n * n * n * n\
    \ * n * n * n * n\n        factorials += n * (n - 1) * n * n * n * n * n * n *\
    \ n * n * n\n        factorials += n * (n - 1) * n * n * n * n * n * n * n * n\
    \ * n * n\n        factorials += n * (n - 1) * n * n * n * n * n * n * n * n *\
    \ n * n * n\n        factorials += n * (n - 1) * n * n * n * n * n * n * n * n\
    \ * n * n * n * n\n        factorials += n * (n - 1) * n * n * n * n * n * n *\
    \ n * n * n * n * n * n * n\n        factorials += n * (n - 1) * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n\n        factorials += n * (n -\
    \ 1) * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n       \
    \ factorials += n * (n - 1) * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n * n * n * n * n\n        factorials += n * (n - 1) * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n * n * n\n        factorials += n * (n -\
    \ 1) * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n *\
    \ n\n        factorials += n * (n - 1) * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n\n        factorials += n * (n - 1) * n *\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n\
    \        factorials += n * (n - 1) * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n\n        factorials += n * (n - 1) * n * n *\
    \ n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    \
    \    factorials += n * (n - 1) * n * n * n * n * n * n * n * n * n * n * n * n\
    \ * n * n * n * n * n * n * n * n * n\n        factori", "        val factorials\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n        for(i\
    \ <- 1 to n) {\n            factorial *= i\n            factorials += factorial\n\
    \        }\n        factorials.last", "        var factorial = 1\n        for(i\
    \ <- 1 to n){\n            factorial *= i\n        }\n        return factorial",
  "        var factorial = 1\n        var counter = 1\n        while (counter <= n)\
    \ {\n            factorial *= counter\n            counter += 1\n        }\n \
    \       return factorial", "        val factorial = mutable.ArrayBuffer.empty[Long]\n\
    \        factorial += n\n        factorial += n-1\n        factorial += n-2\n\
    \        factorial += n-3\n        factorial += n-4\n        factorial += n-5\n\
    \        factorial += n-6\n        factorial += n-7\n        factorial += n-8\n\
    \        factorial += n-9\n        factorial += n-10\n        factorial += n-11\n\
    \        factorial += n-12\n        factorial += n-13\n        factorial += n-14\n\
    \        factorial += n-15\n        factorial += n-16\n        factorial += n-17\n\
    \        factorial += n-18\n        factorial += n-19\n        factorial += n-20\n\
    \        factorial += n-21\n        factorial += n-22\n        factorial += n-23\n\
    \        factorial += n-24\n        factorial += n-25\n        factorial += n-26\n\
    \        factorial += n-27\n        factorial += n-28\n        factorial += n-29\n\
    \        factorial += n-30\n        factorial += n-31\n        factorial += n-32\n\
    \        factorial += n-33\n        factorial += n-34\n        factorial += n-35\n\
    \        factorial += n-36\n        factorial += n-37\n        factorial += n-38\n\
    \        factorial += n-39\n        factorial += n-40\n        factorial += n-41\n\
    \        factorial += n-42\n        factorial += n-43\n        factorial += n-44\n\
    \        factorial += n-45\n        factorial += n-46\n        factorial += n-47\n\
    \        factorial += n-48\n        factorial += n-49\n        factorial += n-50\n\
    \        factorial += n-51\n        factorial += n-52\n        factorial += n-53\n\
    \        factorial += n-54\n        factorial += n-55\n        factorial += n-56\n\
    \        factorial += n-57\n        factorial += n-58\n        factorial += n-59\n\
    \        factorial += n-60\n        factorial += n-61\n        factorial += n-62\n\
    \        factorial += n-63\n        factorial += n-64\n        factorial += n-65\n\
    \        factorial += n-66\n        factorial += n-67\n        factorial += n-68\n\
    \        factorial += n-69\n        factorial += n-70\n", "        var factorial\
    \ = 1\n        var counter = 1\n        while (counter <= n) {\n            factorial\
    \ *= counter\n            counter += 1\n        }\n        return factorial",
  "        if (n == 0) 1\n        else n * specialFactorial(n-1)"]
stop_tokens:
- "\n    }\n"

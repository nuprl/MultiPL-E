language: scala
name: HumanEval_29_filter_by_prefix
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings = strings.filter(_.startsWith(prefix))\n\
    \        if (strings.length == 0) strings\n        else filterByPrefix(strings.tail,\
    \ prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp8ybe7hko.scala:10:16 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        strings = strings.filter(_.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Reassignment to val strings\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings = strings.filter(_.startsWith(prefix))\n\
    \        if (strings.length == 0) strings\n        else filterByPrefix(strings.tail,\
    \ prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp8ybe7hko.scala:10:16 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        strings = strings.filter(_.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Reassignment to val strings\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpymb1lhcd.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(_.startsWith(prefix))\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found: stringList\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpymb1lhcd.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(_.startsWith(prefix))\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found: stringList\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.length\
    \ match {\n            case 0 => strings\n            case _ => {\n          \
    \      val prefixedStrings = strings.map(s => prefix + s)\n                val\
    \ prefixedStringsSet = prefixedStrings.toSet\n                strings.filter(s\
    \ => prefixedStringsSet.contains(s))\n            }\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()), (\"\
    john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw86ea_kb.scala:21)\n\tat Problem.main(tmpw86ea_kb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings = strings.filter(\
    \ s => s.startsWith(prefix) )\n        strings = strings.filter( s => !s.startsWith(prefix+\"\
    _\") )\n        strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n\
    \        strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n      \
    \  strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n        strings\
    \ = strings.filter( s => !s.startsWith(prefix+\"_\") )\n        strings = strings.filter(\
    \ s => !s.startsWith(prefix+\"_\") )\n        strings = strings.filter( s => !s.startsWith(prefix+\"\
    _\") )\n        strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n\
    \        strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n      \
    \  strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n        strings\
    \ = strings.filter( s => !s.startsWith(prefix+\"_\") )\n        strings = strings.filter(\
    \ s => !s.startsWith(prefix+\"_\") )\n        strings = strings.filter( s => !s.startsWith(prefix+\"\
    _\") )\n        strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n\
    \        strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n      \
    \  strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n        strings\
    \ = strings.filter( s => !s.startsWith(prefix+\"_\") )\n        strings = strings.filter(\
    \ s => !s.startsWith(prefix+\"_\") )\n        strings = strings.filter( s => !s.startsWith(prefix+\"\
    _\") )\n        strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n\
    \        strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n      \
    \  strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n        strings\
    \ = strings.filter( s => !s.startsWith(prefix+\"_\") )\n        strings = strings.filter(\
    \ s => !s.startsWith(prefix+\"_\") )\n        strings = strings.filter( s => !s.startsWith(prefix+\"\
    _\") )\n        strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n\
    \        strings = strings.filter( s => !s.startsWith(prefix+\"_\") )\n      \
    \  strings = strings.filter( s => !s.startsWith(\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp307x9z1f.scala:38:53 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        strings = strings.filter( \e[36ms\e[0m => !s.startsWith(\n\
    \e[31m\e[31m   |\e[0m                                                     ^\e\
    [0m\n\e[31m   |\e[0m                                       expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmp307x9z1f.scala:10:16 -----------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        strings = strings.filter( \e[36ms\e[0m => s.startsWith(prefix)\
    \ )\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Reassignment to val strings\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp307x9z1f.scala:11:16 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        strings = strings.filter( \e[36ms\e[0m => !s.startsWith(prefix+\e\
    [31m\"_\"\e[0m) )\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Reassignment to val strings\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp307x9z1f.scala:12:16 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        strings = strings.filter( \e[36ms\e[0m => !s.startsWith(prefix+\e\
    [31m\"_\"\e[0m) )\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Reassignment to val strings\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp307x9z1f.scala:13:16 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        strings = strings.filter( \e[36ms\e[0m => !s.startsWith(prefix+\e\
    [31m\"_\"\e[0m) )\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Reassignment to val strings\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m "
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        string\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnclvi7ll.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        string\n\e[31m\e[31m   |\e[0m        ^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: string\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        stringList.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6v7bek6.scala:10:8 -------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        stringList.filter(\e[36ms\e[0m => s.startsWith(prefix))\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Not found:\
    \ stringList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings = strings.filter(\
    \ s => s.startsWith(prefix) )\n        strings\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp49qo2zgn.scala:10:16 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        strings = strings.filter( \e[36ms\e[0m => s.startsWith(prefix)\
    \ )\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Reassignment to val strings\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793780
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_\
    \ startsWith prefix)\n    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793756
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(\
    \ s => s.startsWith(prefix) )\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793781
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filterByPrefix((List[String]()), (\"a\"))\n    // (List[String]())\n\
    \    // >>> filterByPrefix((List[String](\"abc\", \"bcd\", \"cde\", \"array\"\
    )), (\"a\"))\n    // (List[String](\"abc\", \"array\"))\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793709

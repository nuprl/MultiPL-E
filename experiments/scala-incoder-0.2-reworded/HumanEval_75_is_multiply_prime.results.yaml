language: scala
name: HumanEval_75_is_multiply_prime
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr57yukcb.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpm9vjceq9.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9vjceq9.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9vjceq9.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpm9vjceq9.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpm9vjceq9.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9vjceq9.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n      \
    \  primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n        isPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzmthb9if.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer(false, false, false, false)\n        val \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpy5sao24m.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpy5sao24m.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy5sao24m.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpy5sao24m.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpy5sao24m.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e["
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = primes.exists(a % _ == 0)\n\
    \        val isMultiplyPrime = primes.exists(a % _ == 0 && a != 1)\n        val\
    \ isMultiplyPrime2 = primes.exists(a % _ == 0 && a != 1 && a != 3)\n        val\
    \ isMultiplyPrime3 = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5)\n\
    \        val isMultiplyPrime4 = primes.exists(a % _ == 0 && a != 1 && a != 3 &&\
    \ a != 5 && a != 7)\n        val isMultiplyPrime5 = primes.exists(a % _ == 0 &&\
    \ a != 1 && a != 3 && a != 5 && a != 7 && a != 11)\n        val isMultiplyPrime6\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13)\n        val isMultiplyPrime7 = primes.exists(a % _ == 0 && a !=\
    \ 1 && a != 3 && a != 5 && a != 7 && a != 11 && a != 13 && a != 17)\n        val\
    \ isMultiplyPrime8 = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 &&\
    \ a != 7 && a != 11 && a != 13 && a != 17 && a != 19)\n        val isMultiplyPrime9\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13 && a != 17 && a != 19 && a != 23)\n        val isMultiplyPrime10\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13 && a != 17 && a != 19 && a != 23 && a != 29)\n        val isMultiplyPrime11\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13 && a != 17 && a != 19 && a != 23 && a != 29 && a != 31)\n       \
    \ val isMultiplyPrime12 = primes.exists(a % _ == \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpmor_5dpi.scala:26:54 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime12\e[0m =\
    \ primes.exists(a % _ == \n\e[31m\e[31m   |\e[0m                             \
    \                         ^\e[0m\n\e[31m   |\e[0m                            \
    \           expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpmor_5dpi.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmor_5dpi.scala:27:5\
    \ ---------------------\e[0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isMultiplyPrime = a % primes(primesCount-1)\
    \ == 0\n        primesCount match {\n            case 0 => isMultiplyPrime\n \
    \           case _ => {\n                val isPrime = primes.takeWhile(p => a\
    \ % p == 0).size == primesCount\n                isMultiplyPrime && isPrime\n\
    \            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz4imns6x.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(a % _ == 0)\n        val isMultiplication = a % 3 ==\
    \ 0\n        val isMultiplyPrime = a % 2 == 0\n        val isMultiplyPrime2 =\
    \ a % 5 == 0\n        val isMultiplyPrime3 = a % 7 == 0\n        val isMultiplyPrime5\
    \ = a % 11 == 0\n        val isMultiplyPrime7 = a % 13 == 0\n        val isMultiplyPrime11\
    \ = a % 17 == 0\n        val isMultiplyPrime13 = a % 19 == 0\n        val isMultiplyPrime17\
    \ = a % 23 == 0\n        val isMultiplyPrime19 = a % 29 == 0\n        val isMultiplyPrime23\
    \ = a % 31 == 0\n        val isMultiplyPrime29 = a % 37 == 0\n        val isMultiplyPrime31\
    \ = a % 41 == 0\n        val isMultiplyPrime37 = a % 43 == 0\n        val isMultiplyPrime41\
    \ = a % 47 == 0\n        val isMultiplyPrime43 = a % 53 == 0\n        val isMultiplyPrime47\
    \ = a % 59 == 0\n        val isMultiplyPrime53 = a % 61 == 0\n        val isMultiplyPrime59\
    \ = a % 67 == 0\n        val isMultiplyPrime61 = a % 71 == 0\n        val isMultiplyPrime67\
    \ = a % 73 == 0\n        val isMultiplyPrime71 = a % 79 == 0\n        val isMultiplyPrime73\
    \ = a % 83 == 0\n        val isMultiplyPrime79 = a % 89 == 0\n        val isMultiplyPrime83\
    \ = a % 97 == 0\n        val isMultiplyPrime89 = a % 101\n        val isMultiplyPrime97\
    \ = a % 103\n        val isMultiplyPrime101 = a % 107\n        val isMultiplyPrime103\
    \ = a % 109\n        val isMultiplyPrime107 = a % 113\n        val isMultiplyPrime109\
    \ = a % 117\n        val isMultiplyPrime113 = a % 121\n        val isMultiplyPrime117\
    \ = a % 123\n        val isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpujq_4ug5.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpujq_4ug5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpujq_4ug5.scala:48:5 ---------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.toSet.contains(a)\n        val isMultiplyPrime = primes.toSet.subsetOf(primes.toSet.filter(_\
    \ % _ == a))\n        isPrime && isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg8bli5np.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesSet = primes.toSet\n        val isPrime = primes.exists(a => a <= a)\n\
    \        val isMultiplyPrime = primes.exists(a => a <= a && primesSet.contains(a\
    \ * a))\n        isPrime && isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7q77yrmk.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount\
    \ = primes.size\n        var isMultiplyPrime = true\n        for (i <- 2 to primesCount)\
    \ {\n            if (a % primes(i) == 0) {\n                isMultiplyPrime =\
    \ false\n                break\n            }\n        }\n        return isMultiplyPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkrkgkk7o.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkrkgkk7o.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794088
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        for (i <- 2 to a) {\n            if (a % i == 0) {\n                primes\
    \ += i\n                isPrime += true\n            }\n        }\n        primes.toList.forall(p\
    \ => isPrime(p))\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfx6i4f22.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpfx6i4f22.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpfx6i4f22.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to a) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (a : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7rhm3dzk.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.exists(a % _ == 0)\n        val isMultiplication = a % 2 == 0 && a\
    \ % 3 == 0\n        val isMultiplicationPrime = primes.exists(a % _ == 0)\n  \
    \      val isMultiplicationPrime2 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime3\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime4 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime5 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime6 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime7\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime8 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime9 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime10 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime11 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime12\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime13 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime14 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime15 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime16 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime17\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime18 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime19 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime20 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime21 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime22\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime23 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime24 = primes.exists(a % _\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8li9x4ht.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8li9x4ht.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp8li9x4ht.scala:39:5 ---------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p != 0).forall(p => a % p == 0) && isPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo8b4ud_a.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer.empty[Long]\n        val primesCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime27\
    \ = mutable.ArrayBuffer.empty\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiv86sx9p.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpiv86sx9p.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpiv86sx9p.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpiv86sx9p.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiv86sx9p.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp"
  stdout: ''
  timestamp: 1659794090
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpm9vjceq9.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9vjceq9.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9vjceq9.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpm9vjceq9.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpm9vjceq9.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9vjceq9.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n\
    \        if (isMultiplyPrime) {\n            for (i <- primes.indices) {\n   \
    \             if (a % primes(i) == 0) {\n                    primes.remove(i)\n\
    \                    primesCount -= 1\n                }\n            }\n    \
    \    }\n        primes.size == primesCount\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm0kenc9a.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount <= 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprawcia8b.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa8sm2bkj.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplication\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplying\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyingPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMulti\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) ==\
    \ (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpn9wgvh56.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn9wgvh56.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpn9wgvh56.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpn9wgvh56.scala:14:31 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplication\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpn9wgvh56.scala:15:28 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplying\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpn9wgvh56.scala:16:33 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9p3o3_d_.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9p3o3_d_.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimeSet = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrime = mutable.Set[Boolean]()\n       \
    \ val isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n        val\
    \ isMultiplyPrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n        val\
    \ isMultiplyPrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n   \
    \     val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdw3gpxja.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdw3gpxja.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36misMultiplyPrimePrimePrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrime is already defined as \e[33mvalue\e\
    [0m \e[35misMultiplyPrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdw3gpxja.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpdw3gpxja.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpdw3gpxja.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpdw3gpxja.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misPrimeSet\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m     "
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Boolean]()\n        val isMultiply\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgtselkff.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgtselkff.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgtselkff.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgtselkff.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpgtselkff.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgtselkff.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                               No"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val n = a\n    \
    \    val i = 2\n        while (i <= n / 2) {\n            if (n % i == 0) {\n\
    \                primes += i\n                n /= i\n            }\n        \
    \    i += 1\n        }\n        primes.forall(x => a % x == 0)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpixqt4q0w.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpixqt4q0w.scala:18:18 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpixqt4q0w.scala:20:14\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Boolean]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxefzwa9a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxefzwa9a.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Boolean]()\n        val isMultiply\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgtselkff.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgtselkff.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgtselkff.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgtselkff.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpgtselkff.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgtselkff.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                               No"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = primes.takeWhile(_ < a).forall(a % _ ==\
    \ 0)\n        val isMultiplyPrime = primes.takeWhile(_ < a).forall(a % _ == 0)\n\
    \        val isMultiplyPrime2 = primes.takeWhile(_ < a).forall(a % _ == 0)\n \
    \       val isMultiplyPrime3 = primes.takeWhile(_ < a).forall(a % _ == 0)\n  \
    \      val isMultiplyPrime4 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime5 = primes.takeWhile(_ < a).forall(a % _ == 0)\n    \
    \    val isMultiplyPrime6 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime7 = primes.takeWhile(_ < a).forall(a % _ == 0)\n      \
    \  val isMultiplyPrime8 = primes.takeWhile(_ < a).forall(a % _ == 0)\n       \
    \ val isMultiplyPrime9 = primes.takeWhile(_ < a).forall(a % _ == 0)\n        val\
    \ isMultiplyPrime10 = primes.takeWhile(_ < a).forall(a % _ == 0)\n        val\
    \ isMultiplyPrime11 = primes.takeWhile(_ < a).forall(a % _ == 0)\n        val\
    \ isMultiplyPrime12 = primes.takeWhile(_ < a).forall(a % _ == 0)\n        val\
    \ isMultiplyPrime13 = primes.takeWhile(_ < a).forall(a % _ == 0)\n        val\
    \ isMultiplyPrime14 = primes.takeWhile(_ < a).forall(a % _ == 0)\n        val\
    \ isMultiplyPrime15 = primes.takeWhile(_ < a).forall(a % _ == 0)\n        val\
    \ isMultiplyPrime16 = primes.takeWhile(_ < a).forall(a % _ == 0)\n        val\
    \ isMultiplyPrime17 = primes.takeWhile(_ < a).forall(a % _ == 0)\n        val\
    \ isMultiplyPrime18 = primes.takeWhile(_ < a).forall(a % _ == 0)\n        val\
    \ isMultiplyPrime19 = primes.takeWhile(_ < a).forall(a % _ == \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpldfp0c7b.scala:33:71 ---------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime19\e[0m =\
    \ primes.takeWhile(_ < a).forall(a % _ == \n\e[31m\e[31m   |\e[0m            \
    \                                                           ^\e[0m\n\e[31m   |\e\
    [0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpldfp0c7b.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpldfp0c7b.scala:34:5 ---------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime27 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime28\
    \ = mut\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3ai9r5z4.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3ai9r5z4.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3ai9r5z4.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3ai9r5z4.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp3ai9r5z4.scala:16:31 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Fo"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p == 0).length == primes.length\n        val isMultiplication\
    \ = a % primes.head == 0\n        val isMultiplyPrime = isPrime && isMultiplication\n\
    \        isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmploslp49a.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794091
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr57yukcb.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9p3o3_d_.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9p3o3_d_.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr57yukcb.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.length\n        val isMultiplyPrime = a % primes.last.equals(0)\n\
    \        primes.drop(primesCount - 1).foreach(p => {\n            if (a % p.equals(0))\
    \ {\n                isMultiplyPrime = false\n            }\n        })\n    \
    \    isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfoc2t6ju.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794091
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr57yukcb.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        for (i <- 2 to a) {\n            if (a % i == 0) {\n                primes\
    \ += i\n                isPrime += true\n            }\n        }\n        primes.toList.forall(x\
    \ => isPrime.contains(true))\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdq94wrma.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpdq94wrma.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdq94wrma.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to a) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (a : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9p3o3_d_.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9p3o3_d_.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa8sm2bkj.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmphsfbwq1d.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpm4r3eqy9.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm4r3eqy9.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpm4r3eqy9.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpm4r3eqy9.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm4r3eqy9.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpm4r3eqy9.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount <= 2\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8umpibys.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa8sm2bkj.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isMultiplyPrime = a % primes(primesCount\
    \ - 1) != 0\n        primes.clear()\n        primesCount\n        isMultiplyPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8u_3y4po.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p == 0).length == primes.length\n        primes.takeWhile(p\
    \ => a % p == 0).forall(p => isPrime)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq21k6mir.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = mutable.ListBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphslzd5dl.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphslzd5dl.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphslzd5dl.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primesCount\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplx777u5o.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmplx777u5o.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmplx777u5o.scala:13:26 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplx777u5o.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmplx777u5o.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplx777u5o.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m      "
  stdout: ''
  timestamp: 1659794095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmphsfbwq1d.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer.empty[Long]\n        val primesCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime27\
    \ = mutable.ArrayBuffer.empty\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqvfpkuv0.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpqvfpkuv0.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqvfpkuv0.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpqvfpkuv0.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqvfpkuv0.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tm"
  stdout: ''
  timestamp: 1659794095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.toSet.contains(a)\n        val isMultiplicationPrime = primes.toSet.subsetOf(primes.toSet).contains(a\
    \ * a)\n        isPrime && isMultiplicationPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpehb8ef7j.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpm9vjceq9.scala:43:31 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9vjceq9.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9vjceq9.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpm9vjceq9.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpm9vjceq9.scala:15:30 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9vjceq9.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9p3o3_d_.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9p3o3_d_.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmphsfbwq1d.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer(false, false, false, false)\n        val \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpy5sao24m.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpy5sao24m.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy5sao24m.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpy5sao24m.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpy5sao24m.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e["
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesSet = primes.toSet\n        val isPrime = primes.exists(x => a % x ==\
    \ 0)\n        val isMultiplyPrime = primes.exists(x => a % x == 0 && isPrime)\n\
    \        isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiflzzure.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = primes.takeWhile(x => a % x\
    \ == 0).length == primesCount\n        isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpml1naa_l.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        for (i <- 2 to a/2) {\n            if (a % i == 0) {\n              \
    \  primes += i\n                isPrime += true\n            }\n        }\n  \
    \      primes.toList.forall(x => isPrime.contains(x))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptplyyzg8.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmptplyyzg8.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmptplyyzg8.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to a/\e[31m2\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                       ^^^\e[0m\n\e[31m   |\e[0m\
    \                       Found:    Long\n\e[31m   |\e[0m                      \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659794095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesSet = primes.toSet\n        val isPrime = primes.forall(x => a % x ==\
    \ 0)\n        val isMultiplyPrime = primes.forall(x => a % x == 0 && isPrime)\n\
    \        isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1s3hw5_f.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmphsfbwq1d.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime31 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime37 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime41\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime43 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime47 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime51\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime53 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime59 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime61\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime67 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime71 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime73\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime79 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime81 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime83\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime89 = mutable.ListBuffer[Boolean]()\n\
    \        val isMulti\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvwjre2s3.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvwjre2s3.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvwjre2s3.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvwjre2s3.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpvwjre2s3.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvwjre2s3.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659794097
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesSet = primes.toSet\n        val isPrime = primes.forall(x => a % x ==\
    \ 0)\n        val isMultiplyPrime = primes.forall(x => a % x == 0 && isPrime)\n\
    \        isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1s3hw5_f.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdw_78dih.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794096
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7)\n        var isPrime\
    \ = true\n        for(i <- primes.indices) {\n            val isPrime = primes(i)\
    \ * primes(i) * primes(i) <= a\n            if(isPrime) primes.remove(i)\n   \
    \         else isPrime = false\n        }\n        isPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6ga_yuy7.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794096
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime31 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime37 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime41\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime43 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime47 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime51\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime53 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime59 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime61\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime67 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime71 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime73\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime79 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime81 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime83\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime89 = mutable.ListBuffer[Boolean]()\n\
    \        val isMulti\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvwjre2s3.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvwjre2s3.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvwjre2s3.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvwjre2s3.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpvwjre2s3.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvwjre2s3.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659794097
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmphsfbwq1d.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = primes.takeWhile(_ < a).forall(a\
    \ % _ == 0)\n        val isMultiplyPrime = primes.takeWhile(_ < a).forall(a %\
    \ _ == 0)\n        val isMultiplyPrime2 = primes.takeWhile(_ < a).forall(a % _\
    \ == 0)\n        val isMultiplyPrime3 = primes.takeWhile(_ < a).forall(a % _ ==\
    \ 0)\n        val isMultiplyPrime4 = primes.takeWhile(_ < a).forall(a % _ == 0)\n\
    \        val isMultiplyPrime5 = primes.takeWhile(_ < a).forall(a % _ == 0)\n \
    \       val isMultiplyPrime6 = primes.takeWhile(_ < a).forall(a % _ == 0)\n  \
    \      val isMultiplyPrime7 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime8 = primes.takeWhile(_ < a).forall(a % _ == 0)\n    \
    \    val isMultiplyPrime9 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime10 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime11 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime12 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime13 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime14 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime15 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime16 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime17 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime18 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime19 = primes.takeWhile(_ < a).forall(a % _ == \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2po6cljs.scala:33:71 ---------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime19\e[0m =\
    \ primes.takeWhile(_ < a).forall(a % _ == \n\e[31m\e[31m   |\e[0m            \
    \                                                           ^\e[0m\n\e[31m   |\e\
    [0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2po6cljs.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp2po6cljs.scala:34:5 ---------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659794098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(x => a % x == 0)\n        val isMultiplication = isPrime\
    \ && a % primes.last == 0\n        isMultiplication\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1lwqba89.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794096
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(a % _ == 0)\n        val isMultiplicationPrime = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime2 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime3 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime4\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime5 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime6 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime7 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime8\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime9 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime10 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime11 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime12 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime13\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime14 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime15 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime16 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime17 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime18\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime19 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime20 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime21 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime22 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime23\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime24 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime25 = primes.\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcnuteliz.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpcnuteliz.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e\
    [0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e\
    [31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e\
    [0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m,\
    \ \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e\
    [31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcnuteliz.scala:39:5\
    \ ---------------------\e[0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659794098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a)\n        primesCount <= 3 && primesCount >=\
    \ 2\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp54_ni7rx.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794096
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmphsfbwq1d.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr57yukcb.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa8sm2bkj.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesSet = primes.toSet\n        val isPrime = primes.exists(a % _ == 0)\n\
    \        val isMultiplyPrime = primes.exists(a % _ == 0 && a != 1)\n        val\
    \ isMultiplyPrime2 = primes.exists(a % _ == 0 && a != 1 && a != 3)\n        val\
    \ isMultiplyPrime3 = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5)\n\
    \        val isMultiplyPrime4 = primes.exists(a % _ == 0 && a != 1 && a != 3 &&\
    \ a != 5 && a != 7)\n        val isMultiplyPrime5 = primes.exists(a % _ == 0 &&\
    \ a != 1 && a != 3 && a != 5 && a != 7 && a != 11)\n        val isMultiplyPrime6\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13)\n        val isMultiplyPrime7 = primes.exists(a % _ == 0 && a !=\
    \ 1 && a != 3 && a != 5 && a != 7 && a != 11 && a != 13 && a != 17)\n        val\
    \ isMultiplyPrime8 = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 &&\
    \ a != 7 && a != 11 && a != 13 && a != 17 && a != 19)\n        val isMultiplyPrime9\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13 && a != 17 && a != 19 && a != 23)\n        val isMultiplyPrime10\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13 && a != 17 && a != 19 && a != 23 && a != 29)\n        val isMultiplyPrime11\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13 && a != 17 && a != 19 && a != 23 && a != 29 && a != 31)\n       \
    \ val isMultiplyPrime12 = primes.exists(a \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy10j1w30.scala:27:4 ----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy10j1w30.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpy10j1w30.scala:27:5 ---------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659794098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.length\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8yspcfc0.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8yspcfc0.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp8yspcfc0.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpm4r3eqy9.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm4r3eqy9.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpm4r3eqy9.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesSet = primes.toSet\n        val isPrime = primes.exists(a % _ == 0)\n\
    \        val isMultiplyPrime = primes.exists(a => primesSet.contains(a * a))\n\
    \        isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr79a_0dr.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794097
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime27\
    \ = mutable.ArrayBuffer.empty\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ri18p4q.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp5ri18p4q.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ri18p4q.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5ri18p4q.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ri18p4q.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp"
  stdout: ''
  timestamp: 1659794098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(x => a % x == 0)\n        val isMultiplicationPrime\
    \ = primes.exists(x => a % x == 0 && a % x == x)\n        val isMultiplicationPrime2\
    \ = primes.exists(x => a % x == 0 && a % x == x - 1)\n        val isMultiplicationPrime3\
    \ = primes.exists(x => a % x == 0 && a % x == x - 2)\n        val isMultiplicationPrime4\
    \ = primes.exists(x => a % x == 0 && a % x == x - 3)\n        val isMultiplicationPrime5\
    \ = primes.exists(x => a % x == 0 && a % x == x - 4)\n        val isMultiplicationPrime6\
    \ = primes.exists(x => a % x == 0 && a % x == x - 5)\n        val isMultiplicationPrime7\
    \ = primes.exists(x => a % x == 0 && a % x == x - 6)\n        val isMultiplicationPrime8\
    \ = primes.exists(x => a % x == 0 && a % x == x - 7)\n        val isMultiplicationPrime9\
    \ = primes.exists(x => a % x == 0 && a % x == x - 8)\n        val isMultiplicationPrime10\
    \ = primes.exists(x => a % x == 0 && a % x == x - 9)\n        val isMultiplicationPrime11\
    \ = primes.exists(x => a % x == 0 && a % x == x - 10)\n        val isMultiplicationPrime12\
    \ = primes.exists(x => a % x == 0 && a % x == x - 11)\n        val isMultiplicationPrime13\
    \ = primes.exists(x => a % x == 0 && a % x == x - 12)\n        val isMultiplicationPrime14\
    \ = primes.exists(x => a % x == 0 && a % x == x - 13)\n        val isMultiplicationPrime15\
    \ = primes.exists(x => a % x == 0 && a % x == x - 14)\n        val isMultiplicationPrime16\
    \ = primes.exists(x => a % x == 0 && a % x == x - 15)\n        val isMultiplicationPrime17\
    \ = primes.exists(x => a % x == 0 && a % x == x - 16)\n        val isMultiplicationPrime18\
    \ = primes.exists(x => a % x == 0 && a % x == x - 17)\n        val isMultiplicationPrime19\
    \ = primes.exists(x => a % x == \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpyu2fxhkr.scala:32:65 ---------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m \e[36misMultiplicationPrime19\e\
    [0m = primes.exists(\e[36mx\e[0m => a % x == \n\e[31m\e[31m   |\e[0m         \
    \                                                        ^\e[0m\n\e[31m   |\e\
    [0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyu2fxhkr.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpyu2fxhkr.scala:33:5 ---------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_hbu2nkr.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794097
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a) \n        primesCount < 3\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0oye73qt.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794097
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmphsfbwq1d.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9p3o3_d_.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9p3o3_d_.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrime = mutable.Set[Long]()\n        val\
    \ isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxia1btnc.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxia1btnc.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36misMultiplyPrimePrimePrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0misMultiplyPrimePrimePrime is already defined as \e[33mvalue\e[0m\
    \ \e[35misMultiplyPrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxia1btnc.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrime\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxia1btnc.scala:29:12 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpxia1btnc.scala:32:12 ---------------------------\e[0m\e[0m\n\e\
    [31m32 |\e[0m        \e[33mval\e[0m \e[36misMultipl"
  stdout: ''
  timestamp: 1659794098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7rhm3dzk.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7rhm3dzk.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = a <= 100\n        val isMultiplyPrime\
    \ = primes.exists(x => a % x == 0)\n        if (isPrime && isMultiplyPrime) {\n\
    \            return true\n        } else {\n            return false\n       \
    \ }\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp533wlstw.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794097
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesSet\
    \ = mutable.Set[Long](2, 3, 5, 7)\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        for (i <- primes.indices) {\n            if (primes(i) * primes(i) ==\
    \ a) {\n                isMultiplyPrime += primes(i)\n            }\n        }\n\
    \        primes.toSet.size == isMultiplyPrime.toSet.size && primes.toSet.size\
    \ == primesSet.size\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdku4o6vx.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdku4o6vx.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m](\e[31m2\e[0m, \e[31m3\e[0m,\
    \ \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdku4o6vx.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659794098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9p3o3_d_.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9p3o3_d_.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ < a) \n        primesCount < 3\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0oye73qt.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794097
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9p3o3_d_.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9p3o3_d_.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9p3o3_d_.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9p3o3_d_.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpm4r3eqy9.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm4r3eqy9.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpm4r3eqy9.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount <= 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpincxoj_w.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa8sm2bkj.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmphsfbwq1d.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime27\
    \ = mutable.ArrayBuffer.empty\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ri18p4q.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp5ri18p4q.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ri18p4q.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5ri18p4q.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ri18p4q.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp"
  stdout: ''
  timestamp: 1659794098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        for (i <- 2 to (a/3)) {\n            if (a % i == 0) {\n            \
    \    primes += i\n                isPrime += true\n            }\n        }\n\
    \        primes.toList == primes.filter(x => isPrime.contains(true)).map(x =>\
    \ true).filter(x => !isPrime.contains(true)).map(x => false)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoxln2zpt.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpoxln2zpt.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpoxln2zpt.scala:14:24 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to (a/\e[31m3\e\
    [0m)) {\n\e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m\
    \                        Found:    Long\n\e[31m   |\e[0m                     \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9p3o3_d_.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9p3o3_d_.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p3o3_d_.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794093
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(a % _ == 0)\n        val isMultiplication = a % 3 ==\
    \ 0\n        val isLessThan100 = a < 100\n        val isMultiplyPrime = a % 3\
    \ == 0 && isPrime && isMultiplication && isLessThan100\n        return isMultiplyPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn09lig4z.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimeSet = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrime = mutable.Set[Boolean]()\n       \
    \ val isMultiplyPrimePrimePrimePrime = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrime =\
    \ mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk3cusxpn.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpk3cusxpn.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36misMultiplyPrimePrimePrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrime is already defined as \e[33mvalue\e\
    [0m \e[35misMultiplyPrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpk3cusxpn.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrime is already defined as \e[33mvalue\e\
    [0m \e[35misMultiplyPrimePrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpk3cusxpn.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrime is already defined as\
    \ \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrime\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpk3cusxpn.scala:26:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m\
    \ \e[36misMultiplyPrimePrimePrimePrimePrime\e[0m = mutable.Set[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.length\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8yspcfc0.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8yspcfc0.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp8yspcfc0.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primesCount\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrime = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimePrimeCount = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr4mecso5.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpr4mecso5.scala:33:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m\
    \ \e[36misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount is\
    \ already defined as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpr4mecso5.scala:12:21 ------------------------\e[0m\e[0m\n\
    \e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpr4mecso5.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpr4mecso5.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpr4me"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8wk3hup1.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:15:25\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wk3hup1.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(x => a % x == 0)\n        val isMultiplyPrime = primes.exists(x\
    \ => a % x == 0 && isPrime)\n        isMultiplyPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7zel21ni.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.length\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8yspcfc0.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8yspcfc0.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp8yspcfc0.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.count(_ > a)\n        primesCount <= 3\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpznrjr4jv.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n        primes.takeWhile(p\
    \ => a % p == 0).forall(p => a % p == 0) && isPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0bb3eu1d.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesSet = primes.toSet\n        val isPrime = a % primes.toSet.size == 0\n\
    \        val isMultiplicationPrime = primes.toSet.subsetOf(primesSet).size ==\
    \ 3\n        val isMultiplicationPrime2 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime3 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime4 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime5 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime6 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime7 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime8 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime9 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime10 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime11 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime12 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime13 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime14 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime15 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime16 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime17 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime18 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime19 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime20 = primes.toSet.subsetOf(primesSet).\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4o15ua_0.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp4o15ua_0.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e\
    [0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e\
    [31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e\
    [0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m,\
    \ \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e\
    [31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4o15ua_0.scala:35:5\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659794100
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(a % _ == 0)\n        val isMultiplication = a % 3 ==\
    \ 0\n        isPrime && isMultiplication\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvpqipof.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime10\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime18\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime22\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false, false, false)\n        val \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmphsfbwq1d.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmphsfbwq1d.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpv4b9t76n.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4b9t76n.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primesCount\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplx777u5o.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmplx777u5o.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmplx777u5o.scala:13:26 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplx777u5o.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmplx777u5o.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplx777u5o.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m      "
  stdout: ''
  timestamp: 1659794095
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.exists(a % _ == 0)\n        val isMultiplyPrime = primes.forall(a\
    \ % _ == 0)\n        isPrime && isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpru4dlrrj.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794099
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n      \
    \  primes.takeWhile(p => a % p != 0).forall(p => a % p == 0) && isPrime\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaoxh31fu.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794100
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ isPrime = mutable.ArrayBuffer(false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpns9mjhs5.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpns9mjhs5.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primesCount = primes.size\n        val isMultiplyPrime = a % primes.head ==\
    \ 0\n        primes.dropWhile(p => p < a).takeWhile(p => p < a).foreach(p => isMultiplyPrime\
    \ = p < a && isMultiplyPrime)\n        isMultiplyPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp13unhfk6.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794100
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsc7k1db.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmsc7k1"
  stdout: ''
  timestamp: 1659794089
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    //\
    \ (true)\n    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean =\
    \ {\n        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp72ljds4i.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp72ljds4i.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp72ljds4i.scala:13:27 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72ljds4i.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794089

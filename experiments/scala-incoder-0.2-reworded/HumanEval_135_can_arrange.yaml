name: HumanEval_135_can_arrange
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function which returns the largest index of an element which\n\
  \    // is not greater than or equal to the element immediately preceding it. If\n\
  \    // no such element exists then return -1. The given list will not contain\n\
  \    // duplicate values.\n    // Examples:\n    // >>> canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong)))\n    // (3l)\n    // >>> canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong)))\n    // (-1l)\n    def canArrange(arr : List[Long]) :\
  \ Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))) == (3l));\n    assert(canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 5l.toLong))) == (-1l));\n    assert(canArrange((List[Long](1l.toLong,\
  \ 4l.toLong, 2l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong, 10l.toLong)))\
  \ == (2l));\n    assert(canArrange((List[Long](4l.toLong, 8l.toLong, 5l.toLong,\
  \ 7l.toLong, 3l.toLong))) == (4l));\n    assert(canArrange((List[Long]())) == (-1l));\n\
  \    }\n\n}\n"
completions: ["        var maxIndex = 0\n        var maxValue = arr(0)\n        var\
    \ index = 1\n        for(i <- arr.indices) {\n            if(arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        if(maxIndex == arr.length-1)\n            return -1\n\
    \        else\n            return maxIndex", "        val maxIndex = 0\n     \
    \   val maxValue = arr(0)\n        val maxIndexInList = arr.indexWhere(x => x\
    \ <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n \
    \       }\n        val maxIndexInList2 = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList2 != -1) {\n            val maxIndexInList3 = arr.indexWhere(x\
    \ => x <= maxValue)\n            if (maxIndexInList3 != -1) {\n              \
    \  val maxIndexInList4 = arr.indexWhere(x => x <= maxValue)\n                if\
    \ (maxIndexInList4 != -1) {\n                    val maxIndexInList5 = arr.indexWhere(x\
    \ => x <= maxValue)\n                    if (maxIndexInList5 != -1) {\n      \
    \                  val maxIndexInList6 = arr.indexWhere(x => x <= maxValue)\n\
    \                        if (maxIndexInList6 != -1) {\n                      \
    \      val maxIndexInList7 = arr.indexWhere(x => x <= maxValue)\n            \
    \                if (maxIndexInList7 != -1) {\n                              \
    \  val maxIndexInList8 = arr.indexWhere(x => x <= maxValue)\n                \
    \                if (maxIndexInList8 != -1) {\n                              \
    \      val maxIndexInList9 = arr.indexWhere(x => x <= maxValue)\n            \
    \                        if (maxIndexInList9 != -1) {\n                      \
    \                  val maxIndexInList10 = arr.indexWhere(x => x <= maxValue)\n\
    \                                        if (maxIndexInList10 != -1) {\n     \
    \                                       val maxIndexInList11 = arr.indexWhere(x\
    \ => x <= maxValue)\n                                            if (maxIndexInList11\
    \ != -1) {\n                                                val maxIndexInList12\
    \ = arr.indexWhere(x => x <= maxValue)\n                                     \
    \           if (maxIndexInList12 != -1) {\n                                  \
    \                  val maxIndexInList13 = arr.indexWhere(x => x <= maxValue)\n\
    \                                                    if (maxIndexInList13 != -1)\
    \ {\n                                                        val maxIndexInList14\
    \ = arr.indexWhere(x => x <= maxValue)\n                                     \
    \                   if (maxIndexInList14 != -1) {\n                          \
    \                                  val maxIndexInList15 = arr.indexWhere(x =>\
    \ x <= maxValue)\n                                                           \
    \ if (maxIndexInList15 != -1) {\n                                            \
    \                    val maxIndexInList16 = arr.indexWhere(x => x <= maxValue)\n\
    \                                                                if (maxIndexInList16\
    \ != -1) {\n                                                                 \
    \   val maxIndexInList17 = arr.indexWhere(x => x <= maxValue)\n              \
    \                                                      if (maxIndexInList17 !=\
    \ -1) {\n                                                                    \
    \    val maxIndexInList18 = arr.indexWhere(x => x <= maxValue)\n             \
    \                                                           if (maxIndexInList18\
    \ != -1) {\n                                                                 \
    \           val maxIndexIn", "        var maxIndex = 0\n        var maxVal = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxVal) {\n\
    \                maxVal = arr(i)\n                maxIndex = i\n            }\n\
    \        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x => x <=\
    \ arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", "       \
    \ var maxIndex = -1\n        var maxVal = -1\n        for(i <- 0 until arr.length)\
    \ {\n            if(arr(i) > maxVal) {\n                maxVal = arr(i)\n    \
    \            maxIndex = i\n            }\n        }\n        if(maxIndex == -1)\
    \ {\n            return -1\n        }\n        return maxIndex", "        val\
    \ maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex == -1) -1\n\
    \        else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        if (maxIndex == arr.length - 1) {\n            return\
    \ -1\n        }\n        return maxIndex", "        var maxIndex = 0\n       \
    \ var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n           \
    \ if (arr(i) > maxValue) {\n                maxValue = arr(i)\n              \
    \  maxIndex = i\n            }\n        }\n        if (maxIndex == arr.length\
    \ - 1) {\n            return -1\n        }\n        return maxIndex", "      \
    \  var maxIndex = 0\n        var maxVal = arr(0)\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > maxVal) {\n                maxVal = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        if (maxIndex ==\
    \ arr.length) -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1) {\n            return -1\n        }\n        val\
    \ maxValue = arr(maxIndex)\n        val prevIndex = maxIndex - 1\n        if (prevIndex\
    \ >= 0) {\n            val prevValue = arr(prevIndex)\n            if (prevValue\
    \ > maxValue) {\n                return maxIndex\n            }\n        }\n \
    \       return -1", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x < arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        var maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        for(i <- 0 until arr.length) {\n\
    \            if(arr(i) > maxValue) {\n                maxValue = arr(i)\n    \
    \            maxIndex = i\n            }\n        }\n        if(maxIndex == arr.length-1)\n\
    \            -1\n        else\n            maxIndex", "        var maxIndex =\
    \ -1l\n        var maxVal = -1l\n        var currentIndex = 0\n        var currentVal\
    \ = 0\n        for(i <- 0 until arr.length) {\n            currentVal = arr(i)\n\
    \            currentIndex = i\n            while(currentIndex > 0 && currentVal\
    \ >= arr[currentIndex-1]) {\n                currentIndex -= 1\n            }\n\
    \            if(currentIndex > maxIndex) {\n                maxIndex = currentIndex\n\
    \                maxVal = currentVal\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) {\n        \
    \    return -1\n        }\n        val maxValue = arr(maxIndex)\n        val previousValue\
    \ = arr(maxIndex - 1)\n        if (maxValue >= previousValue) {\n            return\
    \ maxIndex\n        }\n        return -1", "        val m = arr.head\n       \
    \ val n = arr.last\n        var maxIndex = -1\n        var maxVal = m\n      \
    \  for (i <- 0 until arr.length) {\n            if (arr(i) > maxVal) {\n     \
    \           maxVal = arr(i)\n                maxIndex = i\n            }\n   \
    \     }\n        if (maxIndex == -1) {\n            return -1\n        } else\
    \ {\n            return maxIndex\n        }", "        val maxIndex = 0\n    \
    \    var maxVal = arr(0)\n        for(i <- 0 until arr.length) {\n           \
    \ if(arr(i) > maxVal) {\n                maxVal = arr(i)\n                maxIndex\
    \ = i\n            }\n        }\n        if(maxIndex == arr.length-1)\n      \
    \      -1\n        else\n            maxIndex", "        val m = arr.head\n  \
    \      val n = arr.last\n        val maxIndex = arr.lastIndexWhere(x => x <= m)\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.indexOfMax\n        if (maxIndex == -1L) -1L\n        else maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        val maxIndex = arr.lastIndexWhere(_\
    \ <= arr.head)\n        if (maxIndex == -1) -1\n        else maxIndex", "    \
    \    var maxIndex = -1\n        var maxVal = -1L\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > maxVal) {\n                maxVal = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        maxIndex", "   \
    \     var maxIndex = 0\n        var maxValue = arr(0)\n        var index = 0\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = index\n       \
    \     }\n            index += 1\n        }\n        if (maxIndex == arr.length\
    \ - 1) {\n            return -1\n        }\n        return maxIndex", "      \
    \  val max = arr.last\n        val maxIndex = arr.lastIndexWhere(x => x < max)\n\
    \        if (maxIndex == -1)\n            -1\n        else\n            maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n       \
    \ else maxIndex", "        var maxIndex = 0\n        var maxVal = arr(0)\n   \
    \     for(i <- 0 until arr.length) {\n            if(arr(i) > maxVal) {\n    \
    \            maxVal = arr(i)\n                maxIndex = i\n            }\n  \
    \      }\n        if(maxIndex == arr.length-1)\n            -1\n        else\n\
    \            maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        var index = 0\n        for (i <- 0 until arr.length) {\n            if\
    \ (arr(i) > maxValue) {\n                maxValue = arr(i)\n                maxIndex\
    \ = index\n            }\n            index += 1\n        }\n        if (maxIndex\
    \ == arr.length) return -1\n        return maxIndex", "        val maxIndex =\
    \ 0\n        val maxValue = arr(0)\n        val index = 0\n        for (i <- 0\
    \ until arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = index\n            }\n            index\
    \ += 1\n        }\n        if (maxIndex == arr.length - 1) {\n            return\
    \ -1\n        }\n        return maxIndex", "        var maxIndex = 0\n       \
    \ var maxValue = arr(0)\n        var index = 0\n        for (i <- arr.indices)\
    \ {\n            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndex = i\n            }\n        }\n        if (maxIndex\
    \ == arr.size - 1) {\n            return -1\n        }\n        return maxIndex",
  "        var maxIndex = 0\n        var maxVal = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxVal) {\n                maxIndex\
    \ = i\n                maxVal = arr(i)\n            }\n        }\n        maxIndex",
  "        var maxIndex = 0\n        var maxVal = arr(0)\n        var index = 0\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) <= maxVal) {\n\
    \                maxIndex = i\n                maxVal = arr(i)\n            }\n\
    \        }\n        if (maxIndex == arr.length - 1) {\n            return -1\n\
    \        }\n        return maxIndex", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x <= arr.head) match {\n            case Some(index) => index\n         \
    \   case None => -1\n        }\n        if (maxIndex == -1) return -1\n      \
    \  arr.last", "        val maxIndex = arr.indexWhere(x => x < arr.head)\n    \
    \    if (maxIndex == -1) {\n            -1\n        } else {\n            maxIndex\
    \ + 1\n        }", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        maxIndex", "        var maxIndex = 0\n    \
    \    var maxValue = arr(0)\n        var currentIndex = 0\n        for (i <- 0\
    \ until arr.length) {\n            if (arr(i) <= maxValue) {\n               \
    \ currentIndex += 1\n            } else {\n                maxIndex = currentIndex\n\
    \                maxValue = arr(i)\n                currentIndex = 0\n       \
    \     }\n        }\n        maxIndex", "        val maxIndex = 0\n        val\
    \ maxValue = arr(0)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList2 = maxIndexInList - 1\n        val maxValue2 = arr(maxIndexInList2)\n\
    \        val maxIndexInList3 = arr.indexWhere(x => x >= maxValue2)\n        if\
    \ (maxIndexInList3 == -1) {\n            return -1\n        }\n        val maxIndexInList4\
    \ = maxIndexInList3 - 1\n        val maxValue3 = arr(maxIndexInList4)\n      \
    \  if (maxValue3 >= maxValue2) {\n            return maxIndexInList4\n       \
    \ } else {\n            return maxIndexInList3\n        }", "        val maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        for (i <- arr.indices) {\n     \
    \       if (arr(i) <= maxValue) {\n                maxValue = arr(i)\n       \
    \         maxIndex = i\n            }\n        }\n        maxIndex", "       \
    \ var maxIndex = 0\n        var maxValue = arr(0)\n        for(i <- 0 until arr.length)\
    \ {\n            if(arr(i) > maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndex = i\n            }\n        }\n        if(maxIndex ==\
    \ arr.length-1)\n            -1\n        else\n            maxIndex", "      \
    \  val maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex", "        var maxIndex = -1\n        var maxValue\
    \ = arr(0)\n        var index = 0\n        for (i <- 0 until arr.length) {\n \
    \           if (arr(i) > maxValue) {\n                maxValue = arr(i)\n    \
    \            maxIndex = index\n            }\n            index += 1\n       \
    \ }\n        maxIndex", "        var maxIndex = 0\n        var maxVal = arr(0)\n\
    \        var index = 1\n        for(i <- 0 until arr.length) {\n            if(arr(i)\
    \ > maxVal) {\n                maxIndex = index\n                maxVal = arr(i)\n\
    \            }\n            index += 1\n        }\n        if(maxIndex == arr.length)\
    \ -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax\n       \
    \ if (maxIndex == -1) -1\n        else maxIndex", "        var maxIndex = -1\n\
    \        var maxVal = -1L\n        for (i <- 0 until arr.length) {\n         \
    \   if (arr(i) > maxVal) {\n                maxVal = arr(i)\n                maxIndex\
    \ = i\n            }\n        }\n        maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = arr.indexOfMax\n        if (maxIndex == -1) {\n            return -1\n   \
    \     }\n        val maxValue = arr(maxIndex)\n        val previousValue = arr(maxIndex\
    \ - 1)\n        if (maxValue <= previousValue) {\n            return maxIndex\n\
    \        } else {\n            return -1\n        }", "        val max = arr.last\n\
    \        val maxIndex = arr.indexWhere(x => x >= max)\n        if (maxIndex ==\
    \ -1) {\n            return -1\n        }\n        val maxIndex2 = arr.indexWhere(x\
    \ => x >= max && x < max)\n        if (maxIndex2 == -1) {\n            return\
    \ -1\n        }\n        val maxIndex3 = arr.indexWhere(x => x >= max && x < max\
    \ && x < max)\n        if (maxIndex3 == -1) {\n            return -1\n       \
    \ }\n        val maxIndex4 = arr.indexWhere(x => x >= max && x < max && x < max\
    \ && x < max)\n        if (maxIndex4 == -1) {\n            return -1\n       \
    \ }\n        val maxIndex5 = arr.indexWhere(x => x >= max && x < max && x < max\
    \ && x < max && x < max)\n        if (maxIndex5 == -1) {\n            return -1\n\
    \        }\n        val maxIndex6 = arr.indexWhere(x => x >= max && x < max &&\
    \ x < max && x < max && x < max && x < max)\n        if (maxIndex6 == -1) {\n\
    \            return -1\n        }\n        val maxIndex7 = arr.indexWhere(x =>\
    \ x >= max && x < max && x < max && x < max && x < max && x < max && x < max)\n\
    \        if (maxIndex7 == -1) {\n            return -1\n        }\n        val\
    \ maxIndex8 = arr.indexWhere(x => x >= max && x < max && x < max && x < max &&\
    \ x < max && x < max && x < max && x < max)\n        if (maxIndex8 == -1) {\n\
    \            return -1\n        }\n        val maxIndex9 = arr.indexWhere(x =>\
    \ x >= max && x < max && x < max && x < max && x < max && x < max && x < max &&\
    \ x < max && x < max)\n        if (maxIndex9 == -1) {\n            return -1\n\
    \        }\n        val maxIndex10 = arr.indexWhere(x => x >= max && x < max &&\
    \ x < max && x < max && x < max && x < max && x < max && x < max && x < max)\n\
    \        if (maxIndex10 == -1) {\n            return -1\n        }\n        val\
    \ maxIndex11 = arr.indexWhere(x => x >= max && x < max && x < max && x < max &&\
    \ x < max && x < max && x < max && x < max && x < max && x < max)\n        if\
    \ (maxIndex11 == -1) {\n            return -1\n        }\n        val maxIndex12\
    \ = arr.indexWhere(x => x >= max && x < max && x < max && x < max && x < max &&\
    \ x < max && x < max && x < max && x < max && x < max && x < max)\n        if\
    \ (maxIndex12 == -1) {\n            return -1\n        }\n        val maxIndex13\
    \ = arr.indexWhere", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) {\n            return -1\n        }\n        val maxValue = arr(maxIndex)\n\
    \        val prevIndex = maxIndex - 1\n        if (prevIndex >= 0) {\n       \
    \     val prevValue = arr(prevIndex)\n            if (prevValue >= maxValue) {\n\
    \                return prevIndex\n            }\n        }\n        return -1",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1L) -1\n      \
    \  else maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) {\n            return -1\n        }\n        val maxValue = arr(maxIndex)\n\
    \        val prevIndex = maxIndex - 1\n        if (prevIndex >= 0) {\n       \
    \     val prevValue = arr(prevIndex)\n            if (prevValue >= maxValue) {\n\
    \                return prevIndex\n            }\n        }\n        return -1",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) {\n        \
    \    return -1\n        }\n        val maxValue = arr(maxIndex)\n        val maxIndex2\
    \ = arr.lastIndexWhere(x => x >= maxValue)\n        if (maxIndex2 == -1) {\n \
    \           return -1\n        }\n        val maxValue2 = arr(maxIndex2)\n   \
    \     if (maxValue == maxValue2) {\n            return maxIndex\n        } else\
    \ {\n            return -1\n        }", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        var maxIndex =\
    \ -1\n        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n\
    \            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        maxIndex", "   \
    \     val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) {\n         \
    \   return -1\n        }\n        val maxValue = arr(maxIndex)\n        val index\
    \ = arr.lastIndexWhere(x => x != maxValue)\n        if (index == -1) {\n     \
    \       return -1\n        }\n        arr(index)", "        val result = arr.foldLeft((-1l,\
    \ -1l)) {\n            case ((maxIndex, maxValue), value) =>\n               \
    \ if (value <= maxValue) {\n                    (maxIndex, value)\n          \
    \      } else {\n                    maxIndex\n                }\n        }\n\
    \        result._1", "        val maxIndex = 0\n        var maxVal = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxVal) {\n\
    \                maxVal = arr(i)\n                maxIndex = i\n            }\n\
    \        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x => x >=\
    \ arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", "        var\
    \ maxIndex = 0\n        var maxValue = arr(0)\n        var index = 1\n       \
    \ for(i <- arr.indices) {\n            if(arr(i) > maxValue) {\n             \
    \   maxValue = arr(i)\n                maxIndex = index\n            }\n     \
    \       index += 1\n        }\n        if(maxIndex == arr.length) -1\n       \
    \ else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n \
    \       for(i <- 0 until arr.length) {\n            if(arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        if(maxIndex == arr.length-1) {\n            return -1\n\
    \        }\n        return maxIndex", "        val max = arr.last\n        val\
    \ maxIndex = arr.lastIndexWhere(_ <= max)\n        if (maxIndex == -1)\n     \
    \       -1\n        else\n            maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr.head)\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        var maxIndex = 0\n        var maxVal\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxVal) {\n                maxIndex = i\n                maxVal = arr(i)\n \
    \           }\n        }\n        if (maxIndex == arr.length) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.indexWhere(x => x >= arr(arr.length-1))\n\
    \        if (maxIndex == -1) {\n            -1\n        } else {\n           \
    \ maxIndex\n        }", "        var maxIndex = 0\n        var maxVal = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxVal) {\n\
    \                maxVal = arr(i)\n                maxIndex = i\n            }\n\
    \        }\n        maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        maxIndex", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x <= arr.head)\n        if (maxIndex < 0) -1 else maxIndex", "        val\
    \ maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex == -1) -1\n\
    \        else maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1L) -1L\n        else maxIndex + 1L", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x >= arr(0))\n        if (maxIndex < 0) -1\n        else maxIndex", "   \
    \     var maxIndex = -1\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexWhere(_ >= arr.head)\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex", "        val maxIndex = arr.lastIndexWhere(x =>\
    \ x <= arr.head)\n        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex\
    \ = arr.indexWhere(x => x < arr(0))\n        if (maxIndex == -1) -1\n        else\
    \ maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n      \
    \  for(i <- 0 until arr.length) {\n            if(arr(i) > maxValue) {\n     \
    \           maxValue = arr(i)\n                maxIndex = i\n            }\n \
    \       }\n        if(maxIndex == arr.length-1) -1\n        else maxIndex", " \
    \       var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if\
    \ (maxIndex == arr.length-1) {\n            return -1\n        }\n        return\
    \ maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1)\
    \ {\n            return -1\n        }\n        val maxValue = arr(maxIndex)\n\
    \        val maxIndex2 = arr.lastIndexWhere(x => x <= maxValue)\n        if (maxIndex2\
    \ == -1) {\n            return -1\n        }\n        val maxValue2 = arr(maxIndex2)\n\
    \        if (maxValue == maxValue2) {\n            return maxIndex\n        }\n\
    \        return -1", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) return -1\n        if (maxIndex == 0) return 0\n        val maxValue\
    \ = arr(maxIndex)\n        val maxIndex2 = arr.lastIndexWhere(_ > maxValue)\n\
    \        if (maxIndex2 == -1) return -1\n        if (maxIndex2 == 0) return 0\n\
    \        val maxValue2 = arr(maxIndex2)\n        if (maxValue == maxValue2) return\
    \ maxIndex\n        if (maxValue < maxValue2) return maxIndex2\n        return\
    \ maxIndex2", "        var maxIndex = 0\n        var maxVal = arr(0)\n       \
    \ var index = 1\n        for (i <- 0 until arr.length) {\n            if (arr(i)\
    \ <= maxVal) {\n                maxVal = arr(i)\n                maxIndex = index\n\
    \            }\n            index += 1\n        }\n        if (maxIndex == arr.length)\
    \ {\n            return -1\n        }\n        return maxIndex", "        val\
    \ maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else maxIndex",
  "        val max = arr.last\n        val maxIndex = arr.lastIndexWhere(x => x <=\
    \ max)\n        if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = arr.lastIndexWhere(x => x >= arr.last)\n        if (maxIndex < 0) -1\n   \
    \     else maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) {\n            return -1\n        }\n        val maxValue = arr(maxIndex)\n\
    \        val prevIndex = maxIndex - 1\n        if (prevIndex >= 0) {\n       \
    \     if (arr(prevIndex) <= maxValue) {\n                return prevIndex\n  \
    \          }\n        }\n        return -1", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex == -1) {\n            -1\n        }\
    \ else {\n            maxIndex\n        }", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       val maxIndex = 0\n        val maxValue = arr(0)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x >= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        if (maxIndex", "        val maxIndex = 0\n        val maxValue = arr(0)\n\
    \        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == arr.length - 1) {\n            return -1\n        }\n        val maxIndexInList\
    \ = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList == -1) {\n \
    \           return -1\n        }\n        val maxIndex = maxIndexInList + 1\n\
    \        val maxValue = arr(maxIndex)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndex = maxIndexInList + 1\n        val maxValue = arr(maxIndex)\n \
    \       val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndex = maxIndexInList + 1\n        val maxValue =\
    \ arr(maxIndex)\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndex = maxIndexInList\
    \ + 1\n        val maxValue = arr(maxIndex)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n \
    \       if (maxIndexInList == -1) {\n            return -1\n        }\n      \
    \  val maxIndex = maxIndexInList + 1\n        val maxValue = arr(maxIndex)\n \
    \       val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndex = maxIndexInList + 1\n        val maxValue =\
    \ arr(maxIndex)\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = ", "        val result = arr.foldLeft((-1l, -1l)) {\n\
    \            case ((maxIndex, maxValue), value) =>\n                if (value\
    \ > maxValue) {\n                    (maxIndex, value)\n                } else\
    \ {\n                    maxIndex\n                }\n        }\n        result._1",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n       \
    \ else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n \
    \       for (i <- 0 until arr.length) {\n            if (arr(i) <= maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        val max = arr.head\n        val maxIndex\
    \ = arr.indexOfMax(max)\n        if (maxIndex == -1) {\n            return -1\n\
    \        }\n        val maxPrev = arr.take(maxIndex).last\n        if (maxPrev\
    \ >= max) {\n            return maxIndex\n        }\n        return -1", "   \
    \     val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ == -1) {\n            return -1\n        }\n        val maxValue = arr.last\n\
    \        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n      \
    \  val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex\
    \ = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex\
    \ - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n\
    \        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n      \
    \  val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue\
    \ = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n\
    \        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n      \
    \  val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex\
    \ = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex\
    \ - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n\
    \        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n      \
    \  val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue\
    \ = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n\
    \        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n      \
    \  val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex\
    \ = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex\
    \ - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n\
    \        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n      \
    \  val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue\
    \ = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n\
    \        val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n      \
    \  val maxIndex = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex\
    \ = maxIndex - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex\
    \ - 1\n        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n\
    \        val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n      \
    \  val maxValue = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue\
    \ = arr.last\n        val maxIndex = maxIndex - 1\n        val maxValue = arr.last",
  "        val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        var maxIndex = -1\n        var maxVal\
    \ = -1\n        var currentVal = -1\n        var currentIndex = -1\n        for(i\
    \ <- 0 until arr.length) {\n            currentVal = arr(i)\n            currentIndex\
    \ = i\n            for(j <- 0 until arr.length) {\n                if(j > i) {\n\
    \                    if(arr(j) <= currentVal) {\n                        currentVal\
    \ = arr(j)\n                        currentIndex = j\n                    }\n\
    \                }\n            }\n            if(currentVal > maxVal) {\n   \
    \             maxVal = currentVal\n                maxIndex = currentIndex\n \
    \           }\n        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex == -1) {\n            return -1\n  \
    \      }\n        val maxValue = arr.last\n        val maxIndex2 = maxIndex -\
    \ 1\n        val maxValue2 = arr.last\n        if (maxIndex2 == -1) {\n      \
    \      return -1\n        }\n        if (maxValue == maxValue2) {\n          \
    \  return maxIndex\n        }\n        if (maxValue < maxValue2) {\n         \
    \   return canArrange(arr.drop(maxIndex))\n        }\n        return canArrange(arr.drop(maxIndex2))",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) < maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        var maxIndex = 0\n        var maxVal = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxVal) {\n                maxIndex\
    \ = i\n                maxVal = arr(i)\n            }\n        }\n        if (maxIndex\
    \ == arr.length) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.head)\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexOfMax\n        if (maxIndex == -1L) {\n      \
    \      -1L\n        } else {\n            arr.lastIndexWhere(x => x <= arr[maxIndex])\n\
    \        }", "        val maxIndex = arr.indexWhere(x => x < arr.last)\n     \
    \   if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.indexOfMax\n        if (maxIndex == -1L) -1L\n        else maxIndex", " \
    \       var maxIndex = 0\n        var maxValue = arr(0)\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if(maxIndex\
    \ == arr.length-1) maxIndex -=1\n        return maxIndex", "        var maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        var index = 0\n        for (i <-\
    \ 0 until arr.length) {\n            if (arr(i) > maxValue) {\n              \
    \  maxValue = arr(i)\n                maxIndex = index\n            }\n      \
    \      index += 1\n        }\n        if (maxIndex == arr.length - 1) {\n    \
    \        return -1\n        }\n        return maxIndex", "        val maxIndex\
    \ = 0\n        val maxValue = arr(0)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndexInList\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \        if (maxIndexInList == -1) {\n            return -1\n        }\n     \
    \   val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        if (maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        var index = 0\n\
    \        for (i <- arr.indices) {\n            if (arr(i) < maxValue) {\n    \
    \            maxValue = arr(i)\n                maxIndex = i\n            }\n\
    \        }\n        if (maxIndex == arr.size - 1) {\n            return -1\n \
    \       }\n        return maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr.head)\n        if (maxIndex == -1L) -1L\n        else maxIndex",
  "        val maxIndex = arr.indexWhere(x => x >= arr(arr.length-1))\n        if(maxIndex\
    \ < 0) -1\n        else maxIndex", "        val maxIndex = 0\n        var maxVal\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxVal) {\n                maxVal = arr(i)\n                maxIndex = i\n \
    \           }\n        }\n        maxIndex", "        val maxIndex = 0\n     \
    \   var maxVal = arr(0)\n        for(i <- 0 until arr.length) {\n            if(arr(i)\
    \ > maxVal) {\n                maxVal = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        if(maxIndex == arr.length-1)\n            -1\n\
    \        else\n            maxIndex", "        val maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for(i <- 0 until arr.length) {\n            if(arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        if(maxIndex == arr.length-1)\n            -1\n   \
    \     else\n            maxIndex", "        val maxIndex = arr.indexOfMax\n  \
    \      if (maxIndex == -1) -1\n        else arr.size - maxIndex - 1", "      \
    \  var maxIndex = 0\n        var maxVal = arr(0)\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > maxVal) {\n                maxVal = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        maxIndex", "   \
    \     val max = arr.head\n        val maxIndex = arr.indexWhere(x => x >= max)\n\
    \        if (maxIndex == -1) {\n            -1\n        } else {\n           \
    \ arr.updated(maxIndex + 1, max)\n        }", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n      \
    \  for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n   \
    \             maxValue = arr(i)\n                maxIndex = i\n            }\n\
    \        }\n        maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        maxIndex", "        val maxIndex = 0\n    \
    \    var maxVal = -1L\n        var index = 0\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > maxVal) {\n                maxVal = arr(i)\n   \
    \             maxIndex = index\n            }\n            index += 1\n      \
    \  }\n        if (maxVal == -1L) return -1\n        maxIndex", "        var maxIndex\
    \ = -1l\n        var maxValue = arr(0)\n        var currentIndex = 0\n       \
    \ for (i <- arr.indices) {\n            if (arr(i) < maxValue) {\n           \
    \     currentIndex = i\n                maxValue = arr(i)\n            }\n   \
    \         if (arr(i) > maxValue) {\n                maxIndex = currentIndex\n\
    \                maxValue = arr(i)\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.lastIndexWhere(x => x <= arr.head)\n        if (maxIndex\
    \ == -1L) -1L\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr(arr.length-1))\n        if(maxIndex == -1)\n            -1\n   \
    \     else\n            maxIndex", "        val maxIndex = 0\n        val maxValue\
    \ = arr(0)\n        val maxIndexInList = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList2 = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList3 = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList4\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList5 = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList6 = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList7 = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList8 = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList9\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList10 = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList11 = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList12 = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList13 = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList14\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList15 = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList16 = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList17 = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList18 = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList19\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList20 = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList21 = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList22 = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList23 = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList24\
    \ = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList25 = arr.indexWhere(x\
    \ => x >= maxValue)\n        val maxIndexInList26 = arr.indexWhere(x => x >= maxValue)\n\
    \        val maxIndexInList27 = arr.indexWhere(x => x >= maxValue)\n        val\
    \ maxIndexInList28 = arr.indexWhere(x => x >= maxValue)\n        val maxIndexInList29\
    \ = ", "        val maxIndex = 0\n        var maxVal = arr(0)\n        for(i <-\
    \ 0 until arr.length) {\n            if(arr(i) <= maxVal) {\n                maxVal\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if(maxIndex\
    \ == arr.length-1)\n            -1\n        else\n            maxIndex", "   \
    \     var maxIndex = 0\n        var maxValue = arr(0)\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if(maxIndex\
    \ == arr.length) -1\n        else maxIndex", "        var maxIndex = -1\n    \
    \    var maxValue = arr(0)\n        for(i <- 0 until arr.length) {\n         \
    \   if(arr(i) > maxValue) {\n                maxValue = arr(i)\n             \
    \   maxIndex = i\n            }\n        }\n        maxIndex", "        var maxIndex\
    \ = -1\n        var maxValue = arr(0)\n        var currentIndex = 0\n        for\
    \ (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n        \
    \        maxValue = arr(i)\n                maxIndex = currentIndex\n        \
    \    }\n            currentIndex += 1\n        }\n        maxIndex", "       \
    \ var maxIndex = -1\n        var maxVal = -1\n        var currentVal = -1\n  \
    \      var currentIndex = -1\n        for(i <- 0 until arr.length) {\n       \
    \     currentVal = arr(i)\n            currentIndex = i\n            for(j <-\
    \ 0 until arr.length) {\n                if(j == i) {\n                    continue\n\
    \                }\n                val nextVal = arr(j)\n                if(currentVal\
    \ > nextVal) {\n                    currentVal = nextVal\n                   \
    \ currentIndex = j\n                }\n            }\n            if(maxIndex\
    \ == -1 || currentVal > maxVal) {\n                maxVal = currentVal\n     \
    \           maxIndex = currentIndex\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) {\n        \
    \    return -1\n        }\n        val maxValue = arr(maxIndex)\n        val prevIndex\
    \ = maxIndex - 1\n        if (prevIndex >= 0) {\n            if (arr(prevIndex)\
    \ <= maxValue) {\n                return prevIndex\n            }\n        }\n\
    \        return -1", "        val max = arr.head\n        val maxIndex = arr.indexWhere(x\
    \ => x >= max)\n        if (maxIndex == arr.length-1) -1\n        else maxIndex",
  "        var maxIndex = 0\n        var maxVal = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxVal) {\n                maxVal =\
    \ arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = 0\n        val maxValue = arr(0)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n\
    \        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n\
    \        val max", "        val maxIndex = arr.indexWhere(x => x >= arr.last)\n\
    \        if (maxIndex == -1) {\n            -1\n        } else {\n           \
    \ maxIndex + 1\n        }", "        val maxIndex = arr.indexWhere(x => x >= arr.last)\n\
    \        if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = 0\n        val maxValue = arr(0)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList2 = arr.indexWhere(x => x > maxValue)\n\
    \        if (maxIndexInList2 == -1) {\n            return -1\n        }\n    \
    \    val maxIndexInList3 = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList3\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList4 = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList4 == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList5 = arr.indexWhere(x => x > maxValue)\n\
    \        if (maxIndexInList5 == -1) {\n            return -1\n        }\n    \
    \    val maxIndexInList6 = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList6\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList7 = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList7 == -1) {\n            return -1\n\
    \        }\n        val maxIndexInList8 = arr.indexWhere(x => x > maxValue)\n\
    \        if (maxIndexInList8 == -1) {\n            return -1\n        }\n    \
    \    val maxIndexInList9 = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList9\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList10 = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList10 == -1) {\n            return\
    \ -1\n        }\n        val maxIndexInList11 = arr.indexWhere(x => x > maxValue)\n\
    \        if (maxIndexInList11 == -1) {\n            return -1\n        }\n   \
    \     val maxIndexInList12 = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList12\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList13 = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList13 == -1) {\n            return\
    \ -1\n        }\n        val maxIndexInList14 = arr.indexWhere(x => x > maxValue)\n\
    \        if (maxIndexInList14 == -1) {\n            return -1\n        }\n   \
    \     val maxIndexInList15 = arr.indexWhere(x => x > maxValue)\n        if (maxIndexInList15\
    \ == -1) {\n            return -1\n        }\n        val maxIndexInList16 = arr.indexWhere(x\
    \ => x > maxValue)\n        if (maxIndexInList16 == -1) {\n            return\
    \ -1\n        }\n        val max", "        val max = arr.last\n        val maxIndex\
    \ = arr.lastIndexWhere(_ <= max)\n        if (maxIndex == -1) {\n            -1\n\
    \        } else {\n            maxIndex + 1\n        }", "        var maxIndex\
    \ = 0\n        var maxVal = arr(0)\n        for (i <- 0 until arr.length) {\n\
    \            if (arr(i) > maxVal) {\n                maxVal = arr(i)\n       \
    \         maxIndex = i\n            }\n        }\n        if (maxIndex == arr.length\
    \ - 1) {\n            return -1\n        }\n        return maxIndex", "      \
    \  val maxIndex = arr.indexOfMax\n        if (maxIndex == -1L) return -1L\n  \
    \      if (maxIndex < arr.lastIndexOfMax) return maxIndex\n        val maxValue\
    \ = arr(maxIndex)\n        val maxIndex2 = arr.lastIndexOfMax(maxValue)\n    \
    \    if (maxIndex2 == -1L) return -1L\n        if (maxIndex2 < arr.indexOfMax(maxValue))\
    \ return maxIndex2\n        val maxValue2 = arr(maxIndex2)\n        val maxIndex3\
    \ = arr.lastIndexOfMax(maxValue2)\n        if (maxIndex3 == -1L) return -1L\n\
    \        if (maxIndex3 < arr.indexOfMax(maxValue2)) return maxIndex3\n       \
    \ val maxValue3 = arr(maxIndex3)\n        val maxIndex4 = arr.lastIndexOfMax(maxValue3)\n\
    \        if (maxIndex4 == -1L) return -1L\n        if (maxIndex4 < arr.indexOfMax(maxValue3))\
    \ return maxIndex4\n        val maxValue4 = arr(maxIndex4)\n        val maxIndex5\
    \ = arr.lastIndexOfMax(maxValue4)\n        if (maxIndex5 == -1L) return -1L\n\
    \        if (maxIndex5 < arr.indexOfMax(maxValue4)) return maxIndex5\n       \
    \ val maxValue5 = arr(maxIndex5)\n        val maxIndex6 = arr.lastIndexOfMax(maxValue5)\n\
    \        if (maxIndex6 == -1L) return -1L\n        if (maxIndex6 < arr.indexOfMax(maxValue5))\
    \ return maxIndex6\n        val maxValue6 = arr(maxIndex6)\n        val maxIndex7\
    \ = arr.lastIndexOfMax(maxValue6)\n        if (maxIndex7 == -1L) return -1L\n\
    \        if (maxIndex7 < arr.indexOfMax(maxValue6)) return maxIndex7\n       \
    \ val maxValue7 = arr(maxIndex7)\n        val maxIndex8 = arr.lastIndexOfMax(maxValue7)\n\
    \        if (maxIndex8 == -1L) return -1L\n        if (maxIndex8 < arr.indexOfMax(maxValue7))\
    \ return maxIndex8\n        val maxValue8 = arr(maxIndex8)\n        val maxIndex9\
    \ = arr.lastIndexOfMax(maxValue8)\n        if (maxIndex9 == -1L) return -1L\n\
    \        if (maxIndex9 < arr.indexOfMax(maxValue8)) return maxIndex9\n       \
    \ val maxValue9 = arr(maxIndex9)\n        val maxIndex10 = arr.lastIndexOfMax(maxValue9)\n\
    \        if (maxIndex10 == -1L) return -1L\n        if (maxIndex10 < arr.indexOfMax(maxValue9))\
    \ return maxIndex10\n        val maxValue10 = arr(maxIndex10)\n        val ",
  "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex\
    \ == -1) {\n            -1\n        } else {\n            maxIndex\n        }",
  "        val maxIndex = arr.lastIndexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ == -1) return -1\n        maxIndex", "        var maxIndex = 0\n        var\
    \ maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i)\
    \ <= maxValue) {\n                maxValue = arr(i)\n                maxIndex\
    \ = i\n            }\n        }\n        maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1) return -1\n        if (maxIndex == 0) return 0\n\
    \        val maxVal = arr(maxIndex)\n        val prevMaxIndex = maxIndex - 1\n\
    \        if (prevMaxIndex >= 0) {\n            if (arr(prevMaxIndex) <= maxVal)\
    \ return prevMaxIndex\n        }\n        return maxIndex", "        val maxIndex\
    \ = arr.indexOfMax\n        if (maxIndex == -1) -1\n        else maxIndex - 1",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        var index = 1\n\
    \        while (index < arr.length) {\n            if (arr(index) <= maxValue)\
    \ {\n                maxValue = arr(index)\n                maxIndex = index\n\
    \            }\n            index += 1\n        }\n        maxIndex", "      \
    \  var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) {\n        \
    \    return -1\n        }\n        val maxValue = arr(maxIndex)\n        val prevIndex\
    \ = maxIndex - 1\n        if (prevIndex >= 0) {\n            val prevValue = arr(prevIndex)\n\
    \            if (prevValue >= maxValue) {\n                return prevIndex\n\
    \            }\n        }\n        return -1", "        val m = arr.head\n   \
    \     var maxIndex = -1\n        var maxVal = m\n        var index = 1\n     \
    \   for (x <- arr) {\n            if (x > maxVal) {\n                maxVal =\
    \ x\n                maxIndex = index\n            }\n            index += 1\n\
    \        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x => x <=\
    \ arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", "       \
    \ val maxIndex = arr.indexWhere(x => x < arr.last)\n        if (maxIndex < 0)\
    \ -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax\n       \
    \ if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr.last)\n        if (maxIndex == -1) {\n            -1\n        } else\
    \ {\n            maxIndex\n        }", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1L) -1L\n        else maxIndex", "        val maxIndex\
    \ = 0\n        var maxVal = -1L\n        var index = 0\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) > maxVal) {\n                maxVal = arr(i)\n\
    \                maxIndex = index\n            }\n            index += 1\n   \
    \     }\n        if(maxVal == -1L) return -1L\n        return maxIndex", "   \
    \     val maxIndex = arr.lastIndexWhere(x => x <= arr.head)\n        if (maxIndex\
    \ == -1)\n            -1\n        else\n            maxIndex", "        val maxIndex\
    \ = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else maxIndex", "  \
    \      val max = arr.head\n        val maxIndex = arr.indexWhere(x => x > max)\n\
    \        if (maxIndex == arr.length-1)\n            -1\n        else\n       \
    \     arr.lastIndex(max+1)", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n\
    \        if (maxIndex == -1) return -1\n        if (maxIndex == arr.size - 1)\
    \ return maxIndex\n        val maxValue = arr(maxIndex)\n        val maxIndex2\
    \ = arr.indexWhere(x => x > maxValue)\n        if (maxIndex2 == -1) return -1\n\
    \        if (maxIndex2 == arr.size - 1) return maxIndex2\n        val maxValue2\
    \ = arr(maxIndex2)\n        if (maxIndex2 < maxIndex) maxIndex\n        else maxIndex2",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1)\
    \ {\n            return -1\n        }\n        val maxValue = arr(maxIndex)\n\
    \        val maxIndex2 = arr.lastIndexWhere(x => x < maxValue)\n        if (maxIndex2\
    \ == -1) {\n            return -1\n        }\n        val maxValue2 = arr(maxIndex2)\n\
    \        if (maxValue == maxValue2) {\n            return maxIndex\n        }\n\
    \        return -1", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex - 1", "        var maxIndex = 0\n        var\
    \ maxVal = arr(0)\n        for(i <- 0 until arr.length) {\n            if(arr(i)\
    \ > maxVal) {\n                maxVal = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        if(maxIndex == arr.length-1)\n            -1\n\
    \        else\n            maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1L) -1L\n        else maxIndex + 1L", "        val maxIndex\
    \ = 0\n        val maxValue = arr(0)\n        val maxIndexInner = -1\n       \
    \ for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n    \
    \            maxValue = arr(i)\n                maxIndex = i\n            }\n\
    \            if (arr(i) == maxValue && i != maxIndexInner) {\n               \
    \ maxIndexInner = i\n            }\n        }\n        maxIndex", "        val\
    \ m = arr.head\n        val n = arr.last\n        var max = 0\n        var i =\
    \ 0\n        while (i < arr.length) {\n            if (arr(i) <= m && arr(i) >\
    \ n) {\n                max = i\n            }\n            i += 1\n        }\n\
    \        if (max == -1) {\n            -1\n        } else {\n            max\n\
    \        }", "        val maxIndex = arr.indexWhere(x => x <= arr.head)\n    \
    \    if (maxIndex == -1) {\n            -1\n        } else {\n            maxIndex\
    \ + 1\n        }", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n\
    \        if (maxIndex < 0) -1 else maxIndex", "        var maxIndex = 0\n    \
    \    var maxVal = arr(0)\n        var index = 0\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > maxVal) {\n                maxVal = arr(i)\n   \
    \             maxIndex = index\n            }\n            index += 1\n      \
    \  }\n        if (maxIndex == arr.length - 1) {\n            return -1\n     \
    \   }\n        return maxIndex", "        val maxIndex = arr.indexWhere(x => x\
    \ >= arr.last)\n        if (maxIndex == -1L) -1L\n        else maxIndex + 1L",
  "        val maxIndex = arr.indexWhere(x => x >= arr(0))\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x >= arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", "    \
    \    val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) return -1\n  \
    \      if (maxIndex == 0) return 0\n        val maxVal = arr(maxIndex)\n     \
    \   val maxIndex2 = arr.lastIndexWhere(_ <= maxVal)\n        if (maxIndex2 ==\
    \ -1) return -1\n        if (maxIndex2 == 0) return 0\n        val maxVal2 = arr(maxIndex2)\n\
    \        if (maxVal2 < maxVal) return -1\n        if (maxVal2 < maxVal) return\
    \ 0\n        return maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        maxIndex", "        var maxIndex = -1\n   \
    \     var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n       \
    \     if (arr(i) > maxValue) {\n                maxValue = arr(i)\n          \
    \      maxIndex = i\n            }\n        }\n        maxIndex", "        val\
    \ maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex < 0) -1\n\
    \        else maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        val maxIndex = 0\n        var maxVal\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) <\
    \ maxVal) {\n                maxVal = arr(i)\n                maxIndex = i\n \
    \           }\n        }\n        maxIndex", "        var maxIndex = 0\n     \
    \   var maxValue = arr(0)\n        var index = 1\n        for (i <- arr.indices)\
    \ {\n            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndex = index\n            }\n            index += 1\n   \
    \     }\n        if (maxIndex == arr.size - 1) {\n            return -1\n    \
    \    }\n        return maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex == -1) {\n            return -1\n        }\n        val\
    \ maxValue = arr(maxIndex)\n        val prevIndex = maxIndex - 1\n        if (prevIndex\
    \ >= 0) {\n            if (arr(prevIndex) < maxValue) {\n                return\
    \ prevIndex\n            }\n        }\n        return -1", "        val maxIndex\
    \ = arr.indexOfMax\n        if (maxIndex == -1) {\n            return -1\n   \
    \     }\n        val maxValue = arr(maxIndex)\n        val maxIndex2 = arr.lastIndexWhere(x\
    \ => x <= maxValue)\n        if (maxIndex2 == -1) {\n            return -1\n \
    \       }\n        val maxValue2 = arr(maxIndex2)\n        if (maxValue < maxValue2)\
    \ {\n            return maxIndex\n        }\n        return maxIndex2", "    \
    \    var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- arr.indices)\
    \ {\n            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndex = i\n            }\n        }\n        maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x < arr.head)\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val max = arr.max\n        val maxIndex\
    \ = arr.indexWhere(x => x <= max)\n        if (maxIndex == arr.length - 1) -1\n\
    \        else maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        val maxIndex = arr.indexOfMax\n  \
    \      if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.lastIndexWhere(x => x <= arr(0))\n        if (maxIndex == -1) -1\n     \
    \   else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x >= arr(arr.length-1))\n        if (maxIndex == -1) -1\n        else maxIndex",
  "        val result = arr.foldLeft((-1l, -1l)) {\n            case ((maxIndex, maxValue),\
    \ elem) =>\n                if (elem > maxValue) {\n                    (maxIndex,\
    \ elem)\n                } else {\n                    maxIndex\n            \
    \    }\n        }\n        result._1", "        val maxIndex = 0\n        val\
    \ maxValue = arr(0)\n        val maxIndexInList = arr.indexWhere(x => x > maxValue)\n\
    \        val maxIndexInList2 = arr.indexWhere(x => x > maxValue && x < maxValue)\n\
    \        val maxIndexInList3 = arr.indexWhere(x => x > maxValue && x < maxValue\
    \ && x < maxValue)\n        val maxIndexInList4 = arr.indexWhere(x => x > maxValue\
    \ && x < maxValue && x < maxValue && x < maxValue)\n        val maxIndexInList5\
    \ = arr.indexWhere(x => x > maxValue && x < maxValue && x < maxValue && x < maxValue\
    \ && x < maxValue)\n        val maxIndexInList6 = arr.indexWhere(x => x > maxValue\
    \ && x < maxValue && x < maxValue && x < maxValue && x < maxValue && x < maxValue)\n\
    \        val maxIndexInList7 = arr.indexWhere(x => x > maxValue && x < maxValue\
    \ && x < maxValue && x < maxValue && x < maxValue && x < maxValue && x < maxValue)\n\
    \        val maxIndexInList8 = arr.indexWhere(x => x > maxValue && x < maxValue\
    \ && x < maxValue && x < maxValue && x < maxValue && x < maxValue && x < maxValue\
    \ && x < maxValue)\n        val maxIndexInList9 = arr.indexWhere(x => x > maxValue\
    \ && x < maxValue && x < maxValue && x < maxValue && x < maxValue && x < maxValue\
    \ && x < maxValue && x < maxValue && x < maxValue)\n        val maxIndexInList10\
    \ = arr.indexWhere(x => x > maxValue && x < maxValue && x < maxValue && x < maxValue\
    \ && x < maxValue && x < maxValue && x < maxValue && x < maxValue && x < maxValue\
    \ && x < maxValue)\n        val maxIndexInList11 = arr.indexWhere(x => x > maxValue\
    \ && x < maxValue && x < maxValue && x < maxValue && x < maxValue && x < maxValue\
    \ && x < maxValue && x < maxValue && x < maxValue && x < maxValue)\n        val\
    \ maxIndexInList12 = arr.indexWhere(x => x > maxValue && x < maxValue && x < maxValue\
    \ && x < maxValue && x < maxValue && x < maxValue && x < maxValue && x < maxValue\
    \ && x < maxValue && x < maxValue && x < maxValue)\n        val maxIndexInList13\
    \ = arr.indexWhere(x => x > maxValue && x < maxValue && x < maxValue && x < maxValue\
    \ && x < maxValue && x < maxValue && x < max", "        val maxIndex = 0\n   \
    \     val maxValue = arr(0)\n        val maxIndexInList = arr.indexWhere(x =>\
    \ x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        maxIndexInList + 1", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr.head)\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x < arr(0))\n        if (maxIndex == -1) return -1\n        if (maxIndex ==\
    \ arr.size - 1) return maxIndex\n        val maxValue = arr(maxIndex)\n      \
    \  val maxIndex2 = arr.indexWhere(x => x >= maxValue)\n        if (maxIndex2 ==\
    \ -1) return -1\n        if (maxIndex2 == arr.size - 1) return maxIndex2\n   \
    \     val maxValue2 = arr(maxIndex2)\n        if (maxIndex2 < maxIndex) return\
    \ -1\n        if (maxIndex2 < maxIndex2) return maxIndex2\n        val maxValue3\
    \ = arr(maxIndex2)\n        if (maxIndex2 < maxIndex3) return -1\n        if (maxIndex2\
    \ < maxIndex3) return maxIndex3\n        val maxValue4 = arr(maxIndex3)\n    \
    \    if (maxIndex3 < maxIndex4) return -1\n        if (maxIndex3 < maxIndex4)\
    \ return maxIndex4\n        val maxValue5 = arr(maxIndex4)\n        if (maxIndex4\
    \ < maxIndex5) return -1\n        if (maxIndex4 < maxIndex5) return maxIndex5\n\
    \        val maxValue6 = arr(maxIndex5)\n        if (maxIndex5 < maxIndex6) return\
    \ -1\n        if (maxIndex5 < maxIndex6) return maxIndex6\n        val maxValue7\
    \ = arr(maxIndex6)\n        if (maxIndex6 < maxIndex7) return -1\n        if (maxIndex6\
    \ < maxIndex7) return maxIndex7\n        val maxValue8 = arr(maxIndex7)\n    \
    \    if (maxIndex7 < maxIndex8) return -1\n        if (maxIndex7 < maxIndex8)\
    \ return maxIndex8\n        val maxValue9 = arr(maxIndex8)\n        if (maxIndex8\
    \ < maxIndex9) return -1\n        if (maxIndex8 < maxIndex9) return maxIndex9\n\
    \        val maxValue10 = arr(maxIndex9)\n        if (maxIndex9 < maxIndex10)\
    \ return -1\n        if (maxIndex9 < maxIndex10) return maxIndex10\n        val\
    \ maxValue11 = arr(maxIndex10)\n        if (maxIndex10 < maxIndex11) return -1\n\
    \        if (maxIndex10 < maxIndex11) return maxIndex11\n        val maxValue12\
    \ = arr(maxIndex11)\n        if (maxIndex11 < maxIndex12) return -1\n        if\
    \ (maxIndex11 < maxIndex12) return maxIndex12\n        val maxValue13 = arr(maxIndex12)\n\
    \        if (maxIndex12 < maxIndex13) return -1\n        if (maxIndex12 < maxIndex13)\
    \ return maxIndex13\n        val maxValue14 = arr(maxIndex13)\n        if (maxIndex13\
    \ < maxIndex14) return ", "        val maxIndex = arr.indexWhere(x => x < arr.head)\n\
    \        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.indexOfMax\n        if (maxIndex < 0) -1\n        else maxIndex", "    \
    \    val maxIndex = 0\n        val maxValue = arr(0)\n        val index = 0\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) <= maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = index\n   \
    \         }\n            index += 1\n        }\n        maxIndex", "        val\
    \ maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex == -1) -1\n\
    \        else maxIndex"]
stop_tokens:
- "\n    }\n"

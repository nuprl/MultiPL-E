language: scala
name: HumanEval_147_get_max_triples
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ListBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    while(j < n) {\n            a.append(i * i - i + 1)\n            j += 1\n\
    \        }\n        while(k <n) {\n            a.append(i * i - i + 1)\n     \
    \       k += 1\n        }\n        val count = a.count(_ % 3 == 0)\n        a.clear()\n\
    \        return count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2wg1_11s.scala:27:16 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mwhile\e[0m(k <n) {\n\e[31m\e[31m   |\e\
    [0m                ^\e[0m\n\e[31m   |\e[0m                ')' expected, but $XMLSTART$<\
    \ found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2wg1_11s.scala:27:14\
    \ --------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mwhile\e[0m(k <n)\
    \ {\n\e[31m\e[31m   |\e[0m              ^\e[0m\n\e[31m   |\e[0m              Found:\
    \    (k : Int)\n\e[31m   |\e[0m              Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659798146
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    a(i) = i * i - i + 1\n                    a(j)\
    \ = i * i - j + 1\n                    a(k) = i * i - k + 1\n                \
    \    count = count + 1\n                    k = k + 1\n                }\n   \
    \             j = j + 1\n                k = k + 1\n            }\n          \
    \  i = i + 1\n            k = k + 1\n        }\n        a.toList.length\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.IndexOutOfBoundsException: 0 is out of bounds (min 0, max -1)\n\
    \tat scala.collection.mutable.ArrayBuffer.update(ArrayBuffer.scala:99)\n\tat Problem$.getMaxTriples(tmp2zf259q1.scala:23)\n\
    \tat Problem$.main(tmp2zf259q1.scala:38)\n\tat Problem.main(tmp2zf259q1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798147
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n && j < n && k < n) {\n            if(i + j + k == n)\
    \ count += 1\n            if(a(i) + a(j) + a(k) == 3) count += 1\n           \
    \ i += 1\n            j += 1\n            k += 1\n        }\n        count\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg3ek43sw.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798141
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + i + j\n            a += i\n            a += j\n            a +=\
    \ k\n        }\n        a.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvvr1w3kl.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798144
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = new Array[Long](n)\n\
    \        for( i <- 0 until n ) {\n            a(i) = i * i - i + 1\n        }\n\
    \        val count = a.count(_ % 3 == 0)\n        count match {\n            case\
    \ 0 => 1\n            case _ => count\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu07e1m68.scala:15:32\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (n : Long)\n\e[31m   |\e[0m                          \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu07e1m68.scala:16:26\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m( i <-\
    \ \e[31m0\e[0m until n ) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798147
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val res = scala.collection.mutable.ArrayBuffer.empty[Long]\n        val\
    \ max = scala.math.max(scala.math.pow(3, a.length), scala.math.pow(3, a.length\
    \ - 1))\n        val max2 = scala.math.pow(3, a.length - 2)\n        val max3\
    \ = scala.math.pow(3, a.length - 3)\n        val max4 = scala.math.pow(3, a.length\
    \ - 4)\n        val max5 = scala.math.pow(3, a.length - 5)\n        val max6 =\
    \ scala.math.pow(3, a.length - 6)\n        val max7 = scala.math.pow(3, a.length\
    \ - 7)\n        val max8 = scala.math.pow(3, a.length - 8)\n        val max9 =\
    \ scala.math.pow(3, a.length - 9)\n        val max10 = scala.math.pow(3, a.length\
    \ - 10)\n        val max11 = scala.math.pow(3, a.length - 11)\n        val max12\
    \ = scala.math.pow(3, a.length - 12)\n        val max13 = scala.math.pow(3, a.length\
    \ - 13)\n        val max14 = scala.math.pow(3, a.length - 14)\n        val max15\
    \ = scala.math.pow(3, a.length - 15)\n        val max16 = scala.math.pow(3, a.length\
    \ - 16)\n        val max17 = scala.math.pow(3, a.length - 17)\n        val max18\
    \ = scala.math.pow(3, a.length - 18)\n        val max19 = scala.math.pow(3, a.length\
    \ - 19)\n        val max20 = scala.math.pow(3, a.length - 20)\n        val max21\
    \ = scala.math.pow(3, a.length - 21)\n        val max22 = scala.math.pow(3, a.length\
    \ - 22)\n        val max23 = scala.math.pow(3, a.length - 23)\n        val max24\
    \ = scala.math.pow(3, a.length - 24)\n        val max25 = scala.math.pow(3, a.length\
    \ - 25)\n        val max26 = scala.math.pow(3, a.length - 26)\n        val max27\
    \ = scala.math.pow(3, a.length - 27)\n        val max28 = scala.math.pow(3, a.length\
    \ - 28)\n        val max29 = scala.math.pow(3, a.length - 29)\n        val max30\
    \ = scala.math.pow(3, a.length - 30)\n        val max31 = scala.math.pow(3, a.length\
    \ - 31)\n        val max32 = scala.math.pow(3, a.length - 32)\n        val max33\
    \ = scala.math.pow(3, a.length - 33)\n        val max34 = scala.math.pow(3, a.length\
    \ - 34\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpacejl_gm.scala:51:4 ----------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpacejl_gm.scala:15:58 --------------------\e[0m\e[0m\n\e[31m15 |\e[0m\
    \        \e[33mval\e[0m \e[36ma\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                                           \
    \               ^\e[0m\n\e[31m   |\e[0m                                      \
    \              Found:    (n : Long)\n\e[31m   |\e[0m                         \
    \                           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpacejl_gm.scala:51:5 ---------------------\e[0m\e\
    [0m\n\e[31m51 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m \
    \    Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798146
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val max = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdzdqp2w6.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdzdqp2w6.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpdzdqp2w6.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpdzdqp2w6.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpdzdqp2w6.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded"
  stdout: ''
  timestamp: 1659798145
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val result = mutable.ArrayBuffer.fill(n)(0l)\n        val max = 0l\n\
    \        val min = 0l\n        val mid = 0l\n        val sum = 0l\n        val\
    \ num = 0l\n        val num2 = 0l\n        val num3 = 0l\n        val num4 = 0l\n\
    \        val num5 = 0l\n        val num6 = 0l\n        val num7 = 0l\n       \
    \ val num8 = 0l\n        val num9 = 0l\n        val num10 = 0l\n        val num11\
    \ = 0l\n        val num12 = 0l\n        val num13 = 0l\n        val num14 = 0l\n\
    \        val num15 = 0l\n        val num16 = 0l\n        val num17 = 0l\n    \
    \    val num18 = 0l\n        val num19 = 0l\n        val num20 = 0l\n        val\
    \ num21 = 0l\n        val num22 = 0l\n        val num23 = 0l\n        val num24\
    \ = 0l\n        val num25 = 0l\n        val num26 = 0l\n        val num27 = 0l\n\
    \        val num28 = 0l\n        val num29 = 0l\n        val num30 = 0l\n    \
    \    val num31 = 0l\n        val num32 = 0l\n        val num33 = 0l\n        val\
    \ num34 = 0l\n        val num35 = 0l\n        val num36 = 0l\n        val num37\
    \ = 0l\n        val num38 = 0l\n        val num39 = 0l\n        val num40 = 0l\n\
    \        val num41 = 0l\n        val num42 = 0l\n        val num43 = 0l\n    \
    \    val num44 = 0l\n        val num45 = 0l\n        val num46 = 0l\n        val\
    \ num47 = 0l\n        val num48 = 0l\n        val num49 = 0l\n        val num50\
    \ = 0l\n        val num51 = 0l\n        val num52 = 0l\n        val num53 = 0l\n\
    \        val num54 = 0l\n        val num55 = 0l\n        val num56 = 0l\n    \
    \    val num57 = 0l\n        val num58 = 0l\n        val num59 = 0l\n        val\
    \ num60 = 0l\n        val num61 = 0l\n        val num62 = 0l\n        val num63\
    \ = 0l\n        val num64 = 0l\n        val num65 = 0l\n        val num66 = 0l\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsm6f23uo.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpsm6f23uo.scala:16:21 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpsm6f23uo.scala:88:5 ---------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798145
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    if (i + j + k == n) {\n                     \
    \   a += (i * i - i + 1)\n                        count += 1\n               \
    \     }\n                    k += 1\n                }\n                j += 1\n\
    \            }\n            i += 1\n        }\n        a.toList.sortWith((x, y)\
    \ => x < y).length\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8v3ys3_9.scala:36)\n\tat Problem.main(tmp8v3ys3_9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798147
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            while(j < n) {\n                while(k\
    \ <= n) {\n                    if(i+j+k == n) {\n                        count\
    \ += 1\n                        a.add(i)\n                        a.add(j)\n \
    \                       a.add(k)\n                    }\n                    k\
    \ += 1\n                }\n                j += 1\n            }\n           \
    \ i += 1\n        }\n        a.toList.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1_f9t5i6.scala:25:26 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                        a.add(i)\n\e[31m\e[31m   |\e\
    [0m                        ^^^^^\e[0m\n\e[31m   |\e[0m value add is not a member\
    \ of scala.collection.mutable.ArrayBuffer[Long]\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp1_f9t5i6.scala:26:26 ------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m                        a.add(j)\n\e[31m\e[31m   |\e[0m              \
    \          ^^^^^\e[0m\n\e[31m   |\e[0mvalue add is not a member of scala.collection.mutable.ArrayBuffer[Long],\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.collection\
    \ asJava\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.collection\
    \ asJava\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1_f9t5i6.scala:27:26\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m                        a.add(k)\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ add is not a member of scala.collection.mutable.ArrayBuffer[Long], but could\
    \ be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne\
    \ of the following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import collection.convert.ImplicitConversions.buffer AsJavaList\n\e[31m \
    \  |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq A"
  stdout: ''
  timestamp: 1659798147
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp70umzoaz.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp70umzoaz.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp70umzoaz.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp70umzoaz.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp70umzoaz.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple"
  stdout: ''
  timestamp: 1659798146
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzdzy2o22.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:19:12 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798145
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            while(j < n) {\n                while(k\
    \ <= n) {\n                    if(i + j + k == n) {\n                        count\
    \ = count + 1\n                    }\n                    k = k + 1\n        \
    \        }\n                k = k - 1\n                j = j + 1\n           \
    \ }\n            i = i + 1\n            j = j - 1\n        }\n        count =\
    \ count + 1\n        return count\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpsri5g7_a.scala:38)\n\tat Problem.main(tmpsri5g7_a.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798146
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + j\n            a += i\n            a += j\n            a += k\n\
    \        }\n        a.maxBy(_ % 3 == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpavogt11y.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798146
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    val triple = i + j + k\n                    if\
    \ (triple % 3 == 0) {\n                        a += triple\n                 \
    \       count += 1\n                    }\n                    k += 1\n      \
    \          }\n                j += 1\n            }\n            i += 1\n    \
    \    }\n        a.toList.sortWith(_ < _)\n            .last\n            .foldLeft(0)((a,\
    \ b) => if (b == 0) a else a + b)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0cd44_7z.scala:36:13 ------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        a.toList.sortWith(_ < _)\n\e[31m35 |\e[0m   \
    \         .last\n\e[31m36 |\e[0m            .foldLeft(\e[31m0\e[0m)((\e[36ma\e\
    [0m, \e[36mb\e[0m) => \e[33mif\e[0m (b == \e[31m0\e[0m) a \e[33melse\e[0m a +\
    \ b)\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m   |\e[0m        value foldLeft\
    \ is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659798145
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpjnzzs4nk.scala:45:49 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(\n\
    \e[31m\e[31m   |\e[0m                                                 ^\e[0m\n\
    \e[31m   |\e[0m                                       expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjnzzs4nk.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjnzzs4nk.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjnzzs4nk.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjnzzs4nk.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.Ar"
  stdout: ''
  timestamp: 1659798145
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0l)\n\
    \        for(i<-0 until n){\n            a(i) = i * i - i + 1\n        }\n   \
    \     val result = scala.collection.mutable.ArrayBuffer.empty[Long]\n        for(i<-0\
    \ until n){\n            for(j<-0 until n){\n                for(k <- 0 until\
    \ n){\n                    if(i<j && i<k && j<k){\n                        val\
    \ sum = i * a(i) + j * a(j) + k * a(k)\n                        if(sum % 3 ==\
    \ 0){\n                            result += 1\n                        }\n  \
    \                  }\n                }\n            }\n        }\n        result.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn3464bp5.scala:15:58\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0l\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                          ^\e[0m\n\e\
    [31m   |\e[0m                                                    Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                                   \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn3464bp5.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i<-\e\
    [31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m\
    \   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m       \
    \                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpn3464bp5.scala:20:23 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mfor\e[0m(i<-\e[31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m\
    \                       ^\e[0m\n\e[31m   |\e[0m                       Found: \
    \   (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn3464bp5.scala:21:27 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mfor\e[0m(j<-\e[31m0\e[0m until n){\n\
    \e[31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m      \
    \                     Found:    (n : Long)\n\e[31m   |\e[0m                  \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn3464bp5.scala:22:33\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m                \e[33mfor\e[0m(k\
    \ <- \e[31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                           \
    \      ^\e[0m\n\e[31m   |\e[0m                                 Found:    (n :\
    \ Long)\n\e[31m"
  stdout: ''
  timestamp: 1659798147
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = 0\n        val triples = 0\n        val triple = 0\n   \
    \     val triples = 0\n        val triple = 0\n        val triples = 0\n     \
    \   val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptikiqwes.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriples\
    \ is already defined as \e[33mvalue\e[0m \e[35mtriples\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptikiqwes.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mtriple\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptikiqwes.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriples is already defined\
    \ as \e[33mvalue\e[0m \e[35mtriples\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmptikiqwes.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriple is\
    \ already defined as \e[33mvalue\e[0m \e[35mtriple\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptikiqwes.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mtriples\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptiki"
  stdout: ''
  timestamp: 1659798146
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            while(j < n) {\n                while(k\
    \ <n) {\n                    if(i+j+k == n) {\n                        count +=\
    \ 1\n                        a.add(i)\n                        a.add(j)\n    \
    \                    a.add(k)\n                        k = 0\n               \
    \     }\n                    k += 1\n                }\n                j += 1\n\
    \            }\n            i += 1\n        }\n        a.toList.length\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpq_x2p0oo.scala:22:24 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                \e[33mwhile\e[0m(k <n) {\n\e[31m\e[31m\
    \   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m                    \
    \    ')' expected, but $XMLSTART$< found\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpq_x2p0oo.scala:22:22 --------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m                \e[33mwhile\e[0m(k <n) {\n\e[31m\e[31m   |\e[0m      \
    \                ^\e[0m\n\e[31m   |\e[0m                      Found:    (k : Int)\n\
    \e[31m   |\e[0m                      Required: Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpq_x2p0oo.scala:25:26 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                        a.add(i)\n\e[31m\e[31m   |\e\
    [0m                        ^^^^^\e[0m\n\e[31m   |\e[0mvalue add is not a member\
    \ of scala.collection.mutable.ArrayBuffer[Long], but could be made available as\
    \ an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.collection\
    \ asJava\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.collection\
    \ asJava\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpq_x2p0oo.scala:26:26\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m                        a.add(j)\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ add is not a member of scala.collection.mutable.ArrayBuffer[Long], "
  stdout: ''
  timestamp: 1659798147
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            while(j < n) {\n                while(k\
    \ <n) {\n                    if(i+j+k == n){\n                        count +=\
    \ 1\n                        a.update(i)\n                        a.update(j)\n\
    \                        a.update(k)\n                    }\n                \
    \    k += 1\n                }\n                j += 1\n            }\n      \
    \      i += 1\n        }\n        a.toList.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp177dlqm7.scala:22:24 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                \e[33mwhile\e[0m(k <n) {\n\e[31m\e[31m\
    \   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m                    \
    \    ')' expected, but $XMLSTART$< found\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp177dlqm7.scala:15:16 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp177dlqm7.scala:22:22\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m                \e[33mwhile\e\
    [0m(k <n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m\
    \                      Found:    (k : Int)\n\e[31m   |\e[0m                  \
    \    Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798145
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val b = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val c = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val d = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val e = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val f = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val g = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val h = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val i = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val j = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val k = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val l = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val m = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val n = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val o = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val p = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val q = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val r = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val s = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ => x * x - x + 1).toArray\n        val t = scala.collection.mutable.ArrayBuffer.fill(n)(0l).map(x\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpm6vx70i_.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpm6vx70i_.scala:28:58\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0l\e[0m).map(\e\
    [36mx\e[0m => x * x - x + \e[31m1\e[0m).toArray\n\e[31m\e[31m   |\e[0m       \
    \                                                   ^\e[0m\n\e[31m   |\e[0m  \
    \                                          Recursive \e[33mvalue\e[0m \e[35mn\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpm6vx70i_.scala:15:58\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0l\e[0m).map(\e[36mx\e\
    [0m => x * x - x + \e[31m1\e[0m).toArray\n\e[31m\e[31m   |\e[0m              \
    \                                            ^\e[0m\n\e[31m   |\e[0m         \
    \                                    Found:    (n : Array[Long])\n\e[31m   |\e\
    [0m                                             Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpm6vx70i_.scala:16:58 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m).map(\e[36mx\e[0m => x * x - x + \e[31m1\e[0m).toArray\n\e[31m\e[31m\
    \   |\e[0m                                                          ^\e[0m\n\e\
    [31m   |\e[0m                                             Found:    (n : Array[Long])\n\
    \e[31m   |\e[0m                                             Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpm6vx70i_.scala:17:58\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mc\e\
    [0m = scala.collection.mu"
  stdout: ''
  timestamp: 1659798149
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val result = scala.collection.mutable.ArrayBuffer.empty[Long]\n     \
    \   val max = scala.math.max(scala.math.pow(3, a.length), n)\n        val counter\
    \ = scala.collection.mutable.ArrayBuffer.empty[Long]\n        for (i <- 0 until\
    \ n) {\n            a(i) = i * i - i + 1\n        }\n        for (i <- 0 until\
    \ n) {\n            val j = i + 1\n            val k = i + 2\n            if (a(i)\
    \ + a(j) + a(k) == max) {\n                result += (i -> j -> k)\n         \
    \       counter += i\n            }\n        }\n        result.length\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4d7rb6l7.scala:15:58\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                          ^\e[0m\n\e\
    [31m   |\e[0m                                                    Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                                   \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4d7rb6l7.scala:19:26\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp4d7rb6l7.scala:22:26 --------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\e[31m\e\
    [31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m               \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                          Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4d7rb6l7.scala:26:27\
    \ --------------------\e[0m\e[0m\n\e[31m26 |\e[0m                result += (i\
    \ -> j -> k)\n\e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Found:    ((Int, Int), Int)\n\e[31m\
    \   |\e[0m                           Required: Long\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798147
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            a.append(i * i - i + 1)\n          \
    \  i += 1\n        }\n        while (j < n) {\n            b.append(i * i - i\
    \ + 1)\n            j += 1\n        }\n        while (k < n) {\n            c.append(i\
    \ * i - i + 1)\n            k += 1\n        }\n        while (i < n && j < n &&\
    \ k < n) {\n            triples.append(a(i) + a(j) + a(k))\n            i += 1\n\
    \            j += 1\n            k += 1\n        }\n        count = triples.sum\n\
    \        count += triples.filter(_ % 3 == 0).sum\n        count += triples.filter(_\
    \ % 3 == 1).sum\n        count += triples.filter(_ % 3 == 2).sum\n        count\
    \ += triples.filter(_ % 3 == 3).sum\n        count += triples.filter(_ % 3 ==\
    \ 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).sum\n        count\
    \ += triples.filter(_ % 3 == 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_\
    \ % 3 == 3).filter(_ % 3 == 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_\
    \ % 3 == 3).sum\n        count += triples.filter(_ % 3 == 0).filter(_ % 3 == 1).filter(_\
    \ % 3 == 2).filter(_ % 3 == 3).filter(_ % 3 == 0).filter(_ % 3 == 1).filter(_\
    \ % 3 == 2).filter(_ % 3 == 3).filter(_ % 3 == 0).filter(_ % 3 == 1).filter(_\
    \ % 3 == 2).filter(_ % 3 == 3).sum\n        count += triples.filter(_ % 3 == 0).filter(_\
    \ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_ % 3 == 0).filter(_\
    \ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_ % 3 == 0).filter(_\
    \ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_ % 3 == 0).filter(_\
    \ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).sum\n        count += triples.filter(_\
    \ % 3 == 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_\
    \ % 3 == 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_\
    \ % 3 == 0).filter(_ % 3 == 1).filter(_ % 3 == 2).filter(_ % 3 == 3).filter(_\
    \ % 3 == 0).filter(_ % 3 == 1).\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmposge2t97.scala:52:4 ----------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmposge2t97.scala:15:16 ------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmposge2t97.scala:16:16 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmposge2t97.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmposge2t97.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e\
    [36md\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmposge2t97.scala:19:22\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mtriples\e[0m = mutable.ArrayBuffer(\e[31m3l\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type"
  stdout: ''
  timestamp: 1659798144
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ c = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val d = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ f = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val g = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ i = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val j = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ l = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val m = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ o = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val p = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ r = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val s = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ u = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val v = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val w = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ x = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val y = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val b = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ d = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val e = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ g = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val h = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpi2f9j1mo.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpi2f9j1mo.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpi2f9j1mo.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpi2f9j1mo.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpi2f9j1mo.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0md is already defined as \e[33mvalue\e[0m"
  stdout: ''
  timestamp: 1659798158
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        while (i < n) {\n            val j = i + i\n     \
    \       val k = i + j\n            if (j > k) {\n                a.append(i)\n\
    \                a.append(j)\n                a.append(k)\n                i =\
    \ k\n            } else {\n                i = j\n            }\n        }\n \
    \       a.length\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659798161
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n\
    \ && j < n && k < n) {\n            if(i == j && i == k) {\n                a(i)\
    \ = a(i) + 1\n            }\n            else if(j == k) {\n                a(j)\
    \ = a(j) + 1\n            }\n            else {\n                a(i) = a(i) +\
    \ 1\n                a(j) = a(j) + 1\n                a(k) = a(k) + 1\n      \
    \      }\n            i = i + 1\n            j = j + 1\n            k = k + 1\n\
    \        }\n        val triples = a.filter(_ % 3 == 0).length\n        triples.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf1i77pv2.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798151
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while (i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    var count = 0\n        while (i + j < n) {\n            while (j < n) {\n\
    \                j += i\n                count += 1\n            }\n         \
    \   while (k < n) {\n                k += j\n                count += 1\n    \
    \        }\n            while (k < n) {\n                k += j\n            \
    \    count += 1\n            }\n            while (j < n) {\n                j\
    \ += i\n                count += 1\n            }\n            i += 1\n      \
    \  }\n        return count\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyg28v_ng.scala:46)\n\tat Problem.main(tmpyg28v_ng.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    while(j < n) {\n            while(j < n) {\n                while(j < n)\
    \ {\n                    while(j < n) {\n                        while(j < n)\
    \ {\n                            while(j < n) {\n                            \
    \    while(j < n) {\n                                    while(j < n) {\n    \
    \                                    while(j < n) {\n                        \
    \                    while(j < n) {\n                                        \
    \        while(j < n) {\n                                                    while(j\
    \ < n) {\n                                                        while(j < n)\
    \ {\n                                                            while(j < n)\
    \ {\n                                                                while(j <\
    \ n) {\n                                                                    while(j\
    \ < n) {\n                                                                   \
    \     while(j < n) {\n                                                       \
    \                     while(j < n) {\n                                       \
    \                                         while(j < n) {\n                   \
    \                                                                 while(j < n)\
    \ {\n                                                                        \
    \                while(j < n) {\n                                            \
    \                                                while(j < n) {\n            \
    \                                                                            \
    \        while(j < n) {\n                                                    \
    \                                                while(j < n) {\n            \
    \                                                                            \
    \                while(j < n) {\n                                            \
    \                                                                while(j < n)\
    \ {\n                                                                        \
    \                                        while(j < n) {\n                    \
    \                                                                            \
    \                    while(j < n) {\n                                        \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                    while(j <\
    \ n) {\n                                                                     \
    \                                                           while(j < n) {\n \
    \                                                                            \
    \                                                       while(j < n) {\n     \
    \                                                                            \
    \                                                       while(j < n) {\n     \
    \                                                                            \
    \                                                           while(j < n) {\n \
    \                                                                            \
    \                                                                   while(j <\
    \ n) {\n                                                                     \
    \                                                                            \
    \   while(j < n) {\n                                                         \
    \                                                                            \
    \                   while(j < n) {\n                                         \
    \                                                                            \
    \                                       while(j < n) {\n                     \
    \                                                                            \
    \                                                               while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \                                    while(j < n) {\n                        \
    \                                                                            \
    \                                                                            \
    \                while(j < n) {\n                                            \
    \                                                                            \
    \                                                                            while(j\
    \ < n) {\n                                                                   \
    \                                                                            \
    \                                                         while(j < n) {\n   \
    \                                                                            \
    \                                                                            \
    \                                                 while(j < n) {\n           \
    \                                                                            \
    \                                                                            \
    \                                             while(j < n) {\n               \
    \                                                                            \
    \                                                                            \
    \                                             while(j < n) {\n               \
    \                                                                            \
    \                                                                            \
    \                                                 while(j < n) {\n           \
    \                                                                            \
    \                                                                            \
    \                                                         while(j < n) {\n   \
    \                                                                            \
    \                                                                            \
    \                                                                     while(j\
    \ < n) {\n                                                                   \
    \                                                                            \
    \                                                                            \
    \         while(j < n) {\n                                                   \
    \                                                                            \
    \                                                                            \
    \                             while(j < n) {\n                               \
    \                                                                            \
    \                                                                            \
    \                                                     while(j < n) {\n       \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \     while(j < n) {\n                                                       \
    \                                                                            \
    \                                                                            \
    \                                     while(j < n) {\n                       \
    \                                                                            \
    \                                                                            \
    \                                                                         while(j\
    \ < n) {\n                                                                   \
    \                                                                            \
    \                                                                            \
    \                                 while(j < n) {\n                           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \ while(j < n) {\n                                                           \
    \                                                                            \
    \                                                                            \
    \                                                 while(j < n) {\n           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                         while(j < n) {\n                                   \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \     while(j < n) {\n                                                       \
    \                                                                            \
    \                                                                            \
    \                                                                 while(j < n)\
    \ {\n                                                                        \
    \                                                                            \
    \                                                                            \
    \                                                    while(j < n) {\n        \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcghhoi32.scala:102:0 ---------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m\n\e[31m\e[31m    |\e[0m^\e[0m\n\e[31m    |\e[0m'}'\
    \ expected, but eof found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcghhoi32.scala:23:8\
    \ ---------------------\e[0m\e[0m\n\e[31m 23 |\e[0m        \e[33mwhile\e[0m(j\
    \ < n) {\n\e[31m\e[31m    |\e[0m        ^\e[0m\n\e[31m    |\e[0m        Found:\
    \    Unit\n\e[31m    |\e[0m        Required: Long\n\e[31m 24 |\e[0m          \
    \  \e[33mwhile\e[0m(j < n) {\n\e[31m 25 |\e[0m                \e[33mwhile\e[0m(j\
    \ < n) {\n\e[31m 26 |\e[0m                    \e[33mwhile\e[0m(j < n) {\n\e[31m\
    \ 27 |\e[0m                        \e[33mwhile\e[0m(j < n) {\n\e[31m 28 |\e[0m\
    \                            \e[33mwhile\e[0m(j < n) {\n\e[31m 29 |\e[0m     \
    \                           \e[33mwhile\e[0m(j < n) {\n\e[31m 30 |\e[0m      \
    \                              \e[33mwhile\e[0m(j < n) {\n\e[31m 31 |\e[0m   \
    \                                     \e[33mwhile\e[0m(j < n) {\n\e[31m 32 |\e\
    [0m                                            \e[33mwhile\e[0m(j < n) {\n\e[31m\
    \ 33 |\e[0m                                                \e[33mwhile\e[0m(j\
    \ < n) {\n\e[31m 34 |\e[0m                                                   \
    \ \e[33mwhile\e[0m(j < n) {\n\e[31m 35 |\e[0m                                \
    \                        \e[33mwhile\e[0m(j < n) {\n\e[31m 36 |\e[0m         \
    \                                                   \e[33mwhile\e[0m(j < n) {\n\
    \e[31m 37 |\e[0m                                                             \
    \   \e[33mwhile\e[0m(j < n) {\n\e[31m 38 |\e[0m                              \
    \                                      \e[33mwhile\e[0m(j < n) {\n\e[31m 39 |\e\
    [0m                                                                        \e\
    [33mwhile\e[0m(j < n) {\n\e[31m 40 |\e[0m                                    \
    \                                        \e[33mwhile\e[0m(j < n) {\n\e[31m 41\
    \ |\e[0m                                                                     \
    \           \e[33mwhile\e[0m(j < n) {\n\e[31m 42 |\e[0m                      \
    \                                                              \e[33m"
  stdout: ''
  timestamp: 1659798158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val triples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpgxlf7oyc.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgxlf7oyc.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgxlf7oyc.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgxlf7oyc.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgxlf7oyc.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutab"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            val j = i * i - i + 1\n            val\
    \ k = i * i + j\n            a.append(i)\n            a.append(j)\n          \
    \  a.append(k)\n        }\n        val count = a.filter(_ % 3 == 0).length\n \
    \       a.clear()\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptl0ggf_3.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798156
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            while(j < n) {\n                while(k <n) {\n             \
    \       if(i+j+k == n){\n                        a.append(i*i*i - i*i + i*j +\
    \ i*k)\n                        i = j = 0\n                        k = n\n   \
    \                 }\n                    k += 1\n                }\n         \
    \       j += 1\n            }\n            i += 1\n        }\n        a.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwvcfy0x2.scala:21:24 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                \e[33mwhile\e[0m(k <n) {\n\e[31m\e[31m\
    \   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m                    \
    \    ')' expected, but $XMLSTART$< found\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpwvcfy0x2.scala:21:22 --------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m                \e[33mwhile\e[0m(k <n) {\n\e[31m\e[31m   |\e[0m      \
    \                ^\e[0m\n\e[31m   |\e[0m                      Found:    (k : Int)\n\
    \e[31m   |\e[0m                      Required: Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpwvcfy0x2.scala:24:30 --------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                        i = j = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m                            ^^^^^\e[0m\n\e[31m   |\e[0m         \
    \                   Found:    Unit\n\e[31m   |\e[0m                          \
    \  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwvcfy0x2.scala:25:28\
    \ --------------------\e[0m\e[0m\n\e[31m25 |\e[0m                        k = n\n\
    \e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m     \
    \                       Found:    (n : Long)\n\e[31m   |\e[0m                \
    \            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpp9ptlhvy.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:45:12 ---------------------------\e[0m\e[0m\n\e[31m45\
    \ |\e[0m        \e[33mval\e[0m \e[36me\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0me is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4yv1tbv0.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4yv1tbv0.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4yv1tbv0.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4yv1tbv0.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4yv1tbv0.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m      "
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(n)\n\
    \        for (i <- 1 to n) {\n            val x = i * i - i + 1\n            a.append(x)\n\
    \        }\n        val l = a.length\n        val r = scala.math.BigInt(l)\n \
    \       for (i <- 1 to l) {\n            val x = a(i) - a(i-1) + a(i-2)\n    \
    \        if (x.mod(m).equals(0)) {\n                return i\n            }\n\
    \        }\n        return 0\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpd42ndar9.scala:17:34 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = scala.math.BigInt(n)\n\
    \e[31m\e[31m   |\e[0m                                  ^\e[0m\n\e[31m   |\e[0m\
    \                                  Recursive \e[33mvalue\e[0m \e[35mn\e[0m needs\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd42ndar9.scala:26:18\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m            \e[33mif\e[0m\
    \ (x.mod(m).equals(\e[31m0\e[0m)) {\n\e[31m\e[31m   |\e[0m                ^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue mod is not a member of Long, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mThe following import\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigInt.long2bigInt\n\
    \e[31m   |\e[0m\n2 errors found\n"
  stdout: ''
  timestamp: 1659798158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val q = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val r = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val s = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val t = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val u = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val v = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val w = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val x = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val y = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val z = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val a = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val b = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val c = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val d = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val e = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val f = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val g = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val h = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val l = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val o = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val p = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val q = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val r = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val s = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val t = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val u = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp1mzqn92n.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp1mzqn92n.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp1mzqn92n.scala:40:12 ---------------------------\e[0m\e[0m\n\e[31m40\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp1mzqn92n.scala:41:12 ---------------------------\e[0m\e[0m\n\e[31m41\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp1mzqn92n.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36mq\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mq is already defined as \e[33mvalue\e[0m \e[35mq\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be "
  stdout: ''
  timestamp: 1659798158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val result = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8sruub6s.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp8sruub6s.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp8sruub6s.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp8sruub6s.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp8sruub6s.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that "
  stdout: ''
  timestamp: 1659798158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n.toInt)(0l)\n\
    \        val count = mutable.ArrayBuffer.empty[Long]\n        val max = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxCount = mutable.ArrayBuffer.empty[Long]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxCountIndex = mutable.ArrayBuffer.empty[Int]\n        \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzp0buuat.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxCountIndex\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxCountIndex is already defined as \e[33mvalue\e[0m \e[35mmaxCountIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpzp0buuat.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxCountIndex\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxCountIndex is already defined as \e[33mvalue\e[0m \e[35mmaxCountIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpzp0buuat.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxCountIndex\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxCountIndex is already defined as \e[33mvalue\e[0m \e[35mmaxCountIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpzp0buuat.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxCountIndex\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxCountIndex is already defined as \e[33mvalue\e[0m \e[35mmaxCountIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpzp0buuat.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m"
  stdout: ''
  timestamp: 1659798158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triple2 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple3 = mutable.ArrayBuffer.fill(n)(0)\n        val triple4 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple5 = mutable.ArrayBuffer.fill(n)(0)\n        val triple6 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple7 = mutable.ArrayBuffer.fill(n)(0)\n        val triple8 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple9 = mutable.ArrayBuffer.fill(n)(0)\n        val triple10 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple11 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple12 = mutable.ArrayBuffer.fill(n)(0)\n        val triple13 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple14 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple15 = mutable.ArrayBuffer.fill(n)(0)\n        val triple16 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple17 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple18 = mutable.ArrayBuffer.fill(n)(0)\n        val triple19 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple20 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple21 = mutable.ArrayBuffer.fill(n)(0)\n        val triple22 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple23 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple24 = mutable.ArrayBuffer.fill(n)(0)\n        val triple25 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple26 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple27 = mutable.ArrayBuffer.fill(n)(0)\n        val triple28 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple29 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple30 = mutable.ArrayBuffer.fill(n)(0)\n        val triple31 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple32 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple33 = mutable.ArrayBuffer.fill(n)(0)\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmkipv3hz.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpmkipv3hz.scala:16:16 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpmkipv3hz.scala:17:16 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpmkipv3hz.scala:18:16 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpmkipv3hz.scala:19:22 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmkipv3hz.scala:20:21 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)"
  stdout: ''
  timestamp: 1659798159
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpp9ptlhvy.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:45:12 ---------------------------\e[0m\e[0m\n\e[31m45\
    \ |\e[0m        \e[33mval\e[0m \e[36me\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0me is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val count = mutable.ArrayBuffer.fill(n)(0)\n        val max = 0\n   \
    \     val min = 0\n        val sum = 0\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val minTriples = mutable.ArrayBuffer.fill(n)(0)\n        val sumTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = 0\n        val minTriple\
    \ = 0\n        val sumTriple = 0\n        val maxTriples = 0\n        val minTriples\
    \ = 0\n        val sumTriples = 0\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val maxTriple = 0l\n        val minTriple\
    \ = 0l\n        val sumTriple = 0l\n        val maxTriples = 0l\n        val minTriples\
    \ = 0l\n        val sumTriples = 0l\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp8iha5770.scala:77:11 ---------------------------\e\
    [0m\e[0m\n\e[31m77 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp8iha5770.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmaxTriples\
    \ is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8iha5770.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m\
    \ \e[36mminTriples\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mminTriples is already defined as \e[33mvalue\e[0m \e[35mminTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp8iha5770.scala:28:12 ---------------------------\e[0m\e[0m\n\e\
    [31m28 |\e[0m        \e[33mval\e[0m \e[36msumTriples\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0msumTriples is already\
    \ defined as \e[33mvalue\e[0m \e[35msumTriples\e[0m\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8iha5770.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTriple\e[0m = \e[31m0l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp8iha5770.scala:30:12 ---------------------------\e[0m\e["
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n.toInt)(0)\n\
    \        val m = n.toInt\n        val n = m\n        val i = 1 \n        val j\
    \ = 1\n        val k = 1\n        val sum = 0\n        while(i <= n && j <= n\
    \ && k <= n) {\n            val temp = a(i) + a(j) + a(k) \n            if(temp\
    \ % 3 == 0) {\n                sum += temp\n                i += 1\n         \
    \       j += 1\n                k += 1\n            }\n            else {\n  \
    \              i += 1\n                j += 1\n                k += 1\n      \
    \      }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpwe3o_60p.scala:16:16 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = n.toInt\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpwe3o_60p.scala:25:20 ------------------------\e[0m\e\
    [0m\n\e[31m25 |\e[0m                sum += temp\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwe3o_60p.scala:26:18\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m                i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value += is not a member of Int - did you mean i.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpwe3o_60p.scala:27:18 ------------------------\e[0m\e\
    [0m\n\e[31m27 |\e[0m                j += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m \
    \               ^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean j.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwe3o_60p.scala:28:18\
    \ ------------------------\e[0m\e[0m\n\e[31m28 |\e[0m                k += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value += is not a member of Int - did you mean k.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpwe3o_60p.scala:31:18 ------------------------\e[0m\e\
    [0m\n\e[31m31 |\e[0m                i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m \
    \               ^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean i.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwe3o_60p.scala:32:18\
    \ ------------------------\e[0m\e[0m\n\e[31m32 |\e[0m                j += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value += is not a member of Int - did you mean j.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpwe3o_60p.scala:33:18 ----------"
  stdout: ''
  timestamp: 1659798159
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + i + 1\n            if (j < k) {\n                a.update(i)\n \
    \               a.update(j)\n                a.update(k)\n            }\n    \
    \    }\n        a.toList.length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx8h2lxl1.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpx8h2lxl1.scala:16:23 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798159
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            for(j <- 1 to n){\n                for(k\
    \ <- 1 to n){\n                    if(i<j && i<k && j<k){\n                  \
    \      a += (i*i - i + 1)\n                    }\n                }\n        \
    \    }\n        }\n        val result = a.filter(_ % 3 == 0).length\n        return\
    \ result\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg2ex68g1.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpg2ex68g1.scala:17:26 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg2ex68g1.scala:18:30\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                \e[33mfor\e[0m(k\
    \ <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                              ^\e\
    [0m\n\e[31m   |\e[0m                              Found:    (n : Long)\n\e[31m\
    \   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798159
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = scala.math.BigInt(3)\n        var i = 0\n        var j = 0\n\
    \        var k = 0\n        while(i < n && j < n && k < n) {\n            a(i)\
    \ = i * i - i + 1\n            i += 1\n            j += 1\n            k += 1\n\
    \        }\n        var count = 0\n        while(i < n) {\n            val temp\
    \ = a(i) + a(j) + a(k) \n            if(temp % m == 0) {\n                count\
    \ += 1\n            }\n            i += 1\n            j += 1\n            k +=\
    \ 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvq1rdssy.scala:39)\n\tat Problem.main(tmpvq1rdssy.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798161
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for(i <- 1l to n){\n            val j = i * i - i + 1\n            val\
    \ k = i * i + i + j\n            val m = k * k\n            if(m == 3) {\n   \
    \             a.update(i)\n                a.update(j)\n                a.update(k)\n\
    \            }\n        }\n        a.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdk0i5iix.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798156
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = scala.math.pow(3, n).toInt\n        var i = 0\n        var j\
    \ = 0\n        var k = 0\n        var count = 0\n        while(i < n) {\n    \
    \        a(i) = i * i - i + 1\n            i += 1\n        }\n        while(j\
    \ < n) {\n            a(j) = a(j) + a(j) + 1\n            j += 1\n        }\n\
    \        while(k < (n - 1)) {\n            if(a(k) == a(k)+a(k)+1) {\n       \
    \         count += 1\n            }\n            k += 1\n        }\n        count\
    \ * m\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp13b881ty.scala:15:58\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                          ^\e[0m\n\e\
    [31m   |\e[0m                                                    Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                                   \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798161
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val count = mutable.Map[Long, Long]()\n        val max = 0\n        val\
    \ maxCount = 0\n        val maxCountIndex = 0\n        val maxCountIndex2 = 0\n\
    \        val maxCountIndex3 = 0\n        val maxCountIndex4 = 0\n        val maxCountIndex5\
    \ = 0\n        val maxCountIndex6 = 0\n        val maxCountIndex7 = 0\n      \
    \  val maxCountIndex8 = 0\n        val maxCountIndex9 = 0\n        val maxCountIndex10\
    \ = 0\n        val maxCountIndex11 = 0\n        val maxCountIndex12 = 0\n    \
    \    val maxCountIndex13 = 0\n        val maxCountIndex14 = 0\n        val maxCountIndex15\
    \ = 0\n        val maxCountIndex16 = 0\n        val maxCountIndex17 = 0\n    \
    \    val maxCountIndex18 = 0\n        val maxCountIndex19 = 0\n        val maxCountIndex20\
    \ = 0\n        val maxCountIndex21 = 0\n        val maxCountIndex22 = 0\n    \
    \    val maxCountIndex23 = 0\n        val maxCountIndex24 = 0\n        val maxCountIndex25\
    \ = 0\n        val maxCountIndex26 = 0\n        val maxCountIndex27 = 0\n    \
    \    val maxCountIndex28 = 0\n        val maxCountIndex29 = 0\n        val maxCountIndex30\
    \ = 0\n        val maxCountIndex31 = 0\n        val maxCountIndex32 = 0\n    \
    \    val maxCountIndex33 = 0\n        val maxCountIndex34 = 0\n        val maxCountIndex35\
    \ = 0\n        val maxCountIndex36 = 0\n        val maxCountIndex37 = 0\n    \
    \    val maxCountIndex38 = 0\n        val maxCountIndex39 = 0\n        val maxCountIndex40\
    \ = 0\n        val maxCountIndex41 = 0\n        val maxCountIndex42 = 0\n    \
    \    val maxCountIndex43 = 0\n        val maxCountIndex44 = 0\n        val maxCountIndex45\
    \ = 0\n        val maxCountIndex46 = 0\n        val maxCountIndex47 = 0\n    \
    \    val maxCountIndex48 = 0\n        val maxCountIndex49 = 0\n        val maxCountIndex50\
    \ = 0\n        val maxCountIndex51 = 0\n        val maxCountIndex52 = 0\n    \
    \    val maxCountIndex53 = 0\n        val maxCountIndex54 = 0\n        val maxCountIndex55\
    \ = 0\n        val maxCountIndex56 = 0\n        val maxCountIndex57 = 0\n    \
    \    val maxCountIndex58 = 0\n        val maxCountIndex59 = 0\n        val maxCountIndex60\
    \ = 0\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_qqkx7w2.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_qqkx7w2.scala:16:20\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mcount\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_qqkx7w2.scala:79:5\
    \ ---------------------\e[0m\e[0m\n\e[31m79 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798164
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var count = 0\n        for(i <- 1 to n) {\n            for(j <- 1 to\
    \ n) {\n                for(k <- 1 to n) {\n                    if(i+j+k == 3\
    \ && i*i + j*j == k*k) {\n                        a += (i+j+k)\n             \
    \           count += 1\n                    }\n                }\n           \
    \ }\n        }\n        a.toList.sortWith(_ < _)\n        a.last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjxx3_64i.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpjxx3_64i.scala:18:26 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjxx3_64i.scala:19:30\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mfor\e[0m(k\
    \ <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                             \
    \ ^\e[0m\n\e[31m   |\e[0m                              Found:    (n : Long)\n\e\
    [31m   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            while(j < n) {\n                while(k\
    \ <= n) {\n                    if(i + j + k == n) {\n                        count\
    \ = count + 1\n                        a.add(i * i - i + 1)\n                \
    \        a.add(j * j - j + 1)\n                        a.add(k * k - k + 1)\n\
    \                        i = j\n                        j = k\n              \
    \          k = 0\n                    } else {\n                        k = k\
    \ + 1\n                    }\n                }\n                j = j + 1\n \
    \           }\n            i = i + 1\n        }\n        a.toList.sortWith(_ <\
    \ _)\n        a.toList.last\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplugmtczm.scala:25:26 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                        a.add(i * i - i + \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0m  value\
    \ add is not a member of scala.collection.mutable.ListBuffer[Long]\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmplugmtczm.scala:26:26 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                        a.add(j * j - j + \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ add is not a member of scala.collection.mutable.ListBuffer[Long], but could\
    \ be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne\
    \ of the following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import collection.convert.ImplicitConversions.buffer AsJavaList\n\e[31m \
    \  |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.collection\
    \ asJava\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.collection\
    \ asJava\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplugmtczm.scala:27:26\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m                        a.add(k\
    \ * k - k + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                        ^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue add is not a member of scala.collection.mutable.ListBuffer[Long],\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\
    \e[31m   |\e[0"
  stdout: ''
  timestamp: 1659798170
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val a = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkapckp81.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkapckp81.scala:19:12 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkapckp81.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkapckp81.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkapckp81.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzdzy2o22.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:19:12 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798145
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ c = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val d = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val e = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ f = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val g = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ i = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val j = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ l = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val m = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ o = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val p = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val q = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ r = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val s = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ u = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val v = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val w = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ x = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val y = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val b = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val c = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ d = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val e = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val\
    \ g = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        val h = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpi2f9j1mo.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpi2f9j1mo.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpi2f9j1mo.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpi2f9j1mo.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpi2f9j1mo.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0md is already defined as \e[33mvalue\e[0m"
  stdout: ''
  timestamp: 1659798158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = mutable.ArrayBuffer(1l)\n\
    \        var count = 0\n        for (i <- 1l to n){\n            val j = i * i\
    \ - i + 1\n            val k = i * i + i + 1\n            val m = j * j + k *\
    \ k\n            if (m == 3) {\n                count += 1\n                a.update(i)\n\
    \                a.update(j)\n                a.update(k)\n            }\n   \
    \     }\n        a.toList.length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3zzfisiw.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798164
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n.toInt)(0l)\n\
    \        val m = n.toInt\n        val n = n.toInt\n        val i = n - 1\n   \
    \     val j = n - 1\n        val k = n - 1\n        a(i) = i * i - i + 1\n   \
    \     a(j) = i * i - j + 1\n        a(k) = i * i - k + 1\n        val sum = a(i)\
    \ + a(j) + a(k) \n        val triples = sum / 3\n        val triple = triples.toLong\n\
    \        triple\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpo_55628c.scala:17:16 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = n.toInt\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798164
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2k04euen.scala:51:41 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(\n\
    \e[31m\e[31m   |\e[0m                                         ^\e[0m\n\e[31m \
    \  |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:41:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m\
    \ \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:42:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m42 |\e[0m        \e[33mval\e[0m\
    \ \e[36mb\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:44:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m\
    \ \e[36md\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0md is"
  stdout: ''
  timestamp: 1659798167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i * i\n            a += j\n            a += k\n        }\n        a.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8jhthuhz.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpiqvperlh.scala:50:4 ----------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpiqvperlh.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiqvperlh.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiqvperlh.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiqvperlh.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the sa"
  stdout: ''
  timestamp: 1659798169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for(i <- 1l to n){\n            for(j <- 1l to n){\n                for(k\
    \ <- 1l to n){\n                    if(i<j && j<k && a(i) + a(j) + a(k) == 3*(i+j+k)){\n\
    \                        a += (i+j+k)\n                    }\n               \
    \ }\n            }\n        }\n        a.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxxx0o8ww.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798166
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ListBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    if (a(i) + a(j) + a(k) == (3 * i) + (3 * j) +\
    \ (3 * k)) {\n                        count += 1\n                    }\n    \
    \                k += 1\n                }\n                j += 1\n         \
    \   }\n            i += 1\n        }\n        a.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsch7bolj.scala:32:10\
    \ --------------------\e[0m\e[0m\n\e[31m32 |\e[0m        a.toList\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    \e[1m\e[31mList\e\
    [0m\e[1m\e[31m[\e[0mLong\e[1m\e[31m]\e[0m\n\e[31m   |\e[0m        Required: Long\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val maxTriple = \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpr4unc503.scala:55:23 ---------------------------\e\
    [0m\e[0m\n\e[31m55 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = \n\e[31m\e\
    [31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                  \
    \     expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpr4unc503.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr4unc503.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr4unc503.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr4unc503.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mva"
  stdout: ''
  timestamp: 1659798169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpiqvperlh.scala:50:4 ----------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpiqvperlh.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiqvperlh.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiqvperlh.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiqvperlh.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the sa"
  stdout: ''
  timestamp: 1659798169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + i + 1\n            val l = i * i * i\n            a += j\n     \
    \       a += k\n            a += l\n        }\n        a.toList.sortWith(_ < _).length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv1th6_6l.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpv1th6_6l.scala:16:23 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while (i < n)\
    \ {\n            while (j < n) {\n                while (k < n) {\n          \
    \          if (a(i) + a(j) + a(k) % 3 == 0) {\n                        a += a(i)\
    \ + a(j) + a(k) // a = [1, 3, 7, 13, 21]\n                        i += 1\n   \
    \                     j += 1\n                        k += 1\n               \
    \     }\n                    k += 1\n                }\n                j += 1\n\
    \            }\n            i += 1\n        }\n        a.length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.IndexOutOfBoundsException: 0 is out of bounds (min 0, max -1)\n\
    \tat scala.collection.mutable.ArrayBuffer.apply(ArrayBuffer.scala:99)\n\tat scala.collection.mutable.ArrayBuffer.apply(ArrayBuffer.scala:43)\n\
    \tat scala.Function1.apply$mcJI$sp(Function1.scala:69)\n\tat scala.Function1.apply$mcJI$sp$(Function1.scala:69)\n\
    \tat scala.collection.AbstractSeq.apply$mcJI$sp(Seq.scala:1161)\n\tat Problem$.getMaxTriples(tmp1xrjxg7b.scala:22)\n\
    \tat Problem$.main(tmp1xrjxg7b.scala:37)\n\tat Problem.main(tmp1xrjxg7b.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpp9ptlhvy.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:45:12 ---------------------------\e[0m\e[0m\n\e[31m45\
    \ |\e[0m        \e[33mval\e[0m \e[36me\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0me is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(3l)\n        val c = mutable.ArrayBuffer(3l)\n\
    \        val d = mutable.ArrayBuffer(3l)\n        val e = mutable.ArrayBuffer(3l)\n\
    \        val f = mutable.ArrayBuffer(3l)\n        val g = mutable.ArrayBuffer(3l)\n\
    \        val h = mutable.ArrayBuffer(3l)\n        val i = mutable.ArrayBuffer(3l)\n\
    \        val j = mutable.ArrayBuffer(3l)\n        val k = mutable.ArrayBuffer(3l)\n\
    \        val l = mutable.ArrayBuffer(3l)\n        val m = mutable.ArrayBuffer(3l)\n\
    \        val n = mutable.ArrayBuffer(3l)\n        val o = mutable.ArrayBuffer(3l)\n\
    \        val p = mutable.ArrayBuffer(3l)\n        val q = mutable.ArrayBuffer(3l)\n\
    \        val r = mutable.ArrayBuffer(3l)\n        val s = mutable.ArrayBuffer(3l)\n\
    \        val t = mutable.ArrayBuffer(3l)\n        val u = mutable.ArrayBuffer(3l)\n\
    \        val v = mutable.ArrayBuffer(3l)\n        val w = mutable.ArrayBuffer(3l)\n\
    \        val x = mutable.ArrayBuffer(3l)\n        val y = mutable.ArrayBuffer(3l)\n\
    \        val z = mutable.ArrayBuffer(3l)\n        val a = mutable.ArrayBuffer(3l)\n\
    \        val b = mutable.ArrayBuffer(3l)\n        val c = mutable.ArrayBuffer(3l)\n\
    \        val d = mutable.ArrayBuffer(3l)\n        val e = mutable.ArrayBuffer(3l)\n\
    \        val f = mutable.ArrayBuffer(3l)\n        val g = mutable.ArrayBuffer(3l)\n\
    \        val h = mutable.ArrayBuffer(3l)\n        val i = mutable.ArrayBuffer(3l)\n\
    \        val j = mutable.ArrayBuffer(3l)\n        val k = mutable.ArrayBuffer(3l)\n\
    \        val l = mutable.ArrayBuffer(3l)\n        val m = mutable.ArrayBuffer(3l)\n\
    \        val n = mutable.ArrayBuffer(3l)\n        val o = mutable.ArrayBuffer(3l)\n\
    \        val p = mutable.ArrayBuffer(3l)\n        val q = mutable.ArrayBuffer(3l)\n\
    \        val r = mutable.ArrayBuffer(3l)\n        val s = mutable.ArrayBuffer(3l)\n\
    \        val t = mutable.ArrayBuffer(3l)\n        val u = mutable.ArrayBuffer(3l)\n\
    \        val v = mutable.ArrayBuffer(3l)\n        val w = mutable.ArrayBuffer(3l)\n\
    \        val x = mutable.ArrayBuffer(3l)\n        val y = mutable.ArrayBuffer(3l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkrntrkut.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkrntrkut.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkrntrkut.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m3l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkrntrkut.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m3l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkrntrkut.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkrntrkut.scala:45:12"
  stdout: ''
  timestamp: 1659798170
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val result = mutable.ArrayBuffer.fill(n)(0)\n        val max = 0\n  \
    \      val maxIndex = 0\n        val maxTriples = 0\n        val maxTripleIndex\
    \ = 0\n        val maxTripleValue = 0\n        val maxTripleValueIndex = 0\n \
    \       val maxTripleValueIndex2 = 0\n        val maxTripleValueIndex3 = 0\n \
    \       val maxTripleValueIndex4 = 0\n        val maxTripleValueIndex5 = 0\n \
    \       val maxTripleValueIndex6 = 0\n        val maxTripleValueIndex7 = 0\n \
    \       val maxTripleValueIndex8 = 0\n        val maxTripleValueIndex9 = 0\n \
    \       val maxTripleValueIndex10 = 0\n        val maxTripleValueIndex11 = 0\n\
    \        val maxTripleValueIndex12 = 0\n        val maxTripleValueIndex13 = 0\n\
    \        val maxTripleValueIndex14 = 0\n        val maxTripleValueIndex15 = 0\n\
    \        val maxTripleValueIndex16 = 0\n        val maxTripleValueIndex17 = 0\n\
    \        val maxTripleValueIndex18 = 0\n        val maxTripleValueIndex19 = 0\n\
    \        val maxTripleValueIndex20 = 0\n        val maxTripleValueIndex21 = 0\n\
    \        val maxTripleValueIndex22 = 0\n        val maxTripleValueIndex23 = 0\n\
    \        val maxTripleValueIndex24 = 0\n        val maxTripleValueIndex25 = 0\n\
    \        val maxTripleValueIndex26 = 0\n        val maxTripleValueIndex27 = 0\n\
    \        val maxTripleValueIndex28 = 0\n        val maxTripleValueIndex29 = 0\n\
    \        val maxTripleValueIndex30 = 0\n        val maxTripleValueIndex31 = 0\n\
    \        val maxTripleValueIndex32 = 0\n        val maxTripleValueIndex33 = 0\n\
    \        val maxTripleValueIndex34 = 0\n        val maxTripleValueIndex35 = 0\n\
    \        val maxTripleValueIndex36 = 0\n        val maxTripleValueIndex37 = 0\n\
    \        val maxTripleValueIndex38 = 0\n        val maxTripleValueIndex39 = 0\n\
    \        val maxTripleValueIndex40 = 0\n        val maxTripleValueIndex41 = 0\n\
    \        val maxTripleValueIndex42 = 0\n        val maxTripleValueIndex43 = 0\n\
    \        val maxTripleValueIndex44 = 0\n        val maxTripleValueIndex45 = 0\n\
    \        val maxTriple\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptt3wwlcu.scala:68:4 ----------------------------\e\
    [0m\e[0m\n\e[31m68 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptt3wwlcu.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptt3wwlcu.scala:16:21\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mresult\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptt3wwlcu.scala:68:5\
    \ ---------------------\e[0m\e[0m\n\e[31m68 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659798169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while (i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    val count = a.count(x => x < 3)\n        if (count > 0) {\n            val\
    \ maxTriples = a.max\n            val maxTripleIndex = a.indexWhere(x => x < 3)\n\
    \            val maxTriple = a.apply(maxTripleIndex)\n            val maxTripleIndex\
    \ = a.indexWhere(x => x > maxTriple)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            val maxTripleIndex = a.indexWhere(x\
    \ => x > maxTriple && x < 3)\n            \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjk1kq7zu.scala:59:0 ----------------------------\e\
    [0m\e[0m\n\e[31m59 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjk1kq7zu.scala:28:16\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m            \e[33mval\e\
    [0m \e[36mmaxTripleIndex\e[0m = a.indexWhere(\e[36mx\e[0m => x > maxTriple)\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTripleIndex is already defined as \e[33mvalue\e[0m \e[35mmaxTripleIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjk1kq7zu.scala:29:16 ---------------------------\e[0m\e[0m\n\e\
    [31m29 |\e[0m            \e[33mval\e[0m \e[36mmaxTripleIndex\e[0m = a.indexWhere(\e\
    [36mx\e[0m => x > maxTriple && x < \e[31m3\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmaxTripleIndex is already defined as \e[33mvalue\e[0m \e[35mmaxTripleIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjk1kq7zu.scala:30:16 ---------------------------\e[0m\e[0m\n\e\
    [31m30 |\e[0m            \e[33mval\e[0m \e[36mmaxTripleIndex\e[0m = a.indexWhere(\e\
    [36mx\e[0m => x > maxTriple && x < \e[31m3\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmaxTripleIndex is already defined as \e[33mvalue\e[0m \e[35mmaxTripleIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjk1kq7zu.scala:31:16 ---------------------------\e[0m\e[0m\n\e\
    [31m31 |\e[0m            \e[33mval\e[0m \e[36mmaxTripleIndex\e[0m = a.indexWhere(\e\
    [36mx\e[0m => x > maxTriple && x < \e[31m3\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e"
  stdout: ''
  timestamp: 1659798171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        var i = 0\n        while (i < n) {\n            val j = i + 1\n     \
    \       val k = i + 2\n            val triple = if (i < j && j < k) (i + 1, j,\
    \ k) else (i, j, k)\n            a.updated(triple, triple)\n            i += 1\n\
    \        }\n        a.toList.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl766lkip.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzdzy2o22.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:19:12 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzdzy2o22.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798145
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            for(j <- 1 to n){\n                for(k\
    \ <- 1 to n){\n                    if(i<j && j<k && a(i)+a(j)+a(k) == 3*(i+j+k)){\n\
    \                        a += (i+j+k)\n                    }\n               \
    \ }\n            }\n        }\n        a.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_hgje8g4.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp_hgje8g4.scala:17:26 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_hgje8g4.scala:18:30\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                \e[33mfor\e[0m(k\
    \ <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                              ^\e\
    [0m\n\e[31m   |\e[0m                              Found:    (n : Long)\n\e[31m\
    \   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            for(j <- 1 to n){\n                for(k\
    \ <- 1 to n){\n                    if(i<j && j<k && a(i) + a(j) + a(k) == 3*(i+j+k)){\n\
    \                        a += (i+j+k)\n                    }\n               \
    \ }\n            }\n        }\n        a.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgq251j33.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpgq251j33.scala:17:26 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgq251j33.scala:18:30\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                \e[33mfor\e[0m(k\
    \ <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                              ^\e\
    [0m\n\e[31m   |\e[0m                              Found:    (n : Long)\n\e[31m\
    \   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    if (a(i) == a(j) + a(k)\n                   \
    \     && a(i) < a(j)) {\n                        count += 1\n                \
    \    }\n                    k += 1\n                }\n                j += 1\n\
    \            }\n            i += 1\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.IndexOutOfBoundsException: 0 is out of bounds (min 0, max -1)\n\
    \tat scala.collection.mutable.ArrayBuffer.apply(ArrayBuffer.scala:99)\n\tat scala.collection.mutable.ArrayBuffer.apply(ArrayBuffer.scala:43)\n\
    \tat scala.Function1.apply$mcJI$sp(Function1.scala:69)\n\tat scala.Function1.apply$mcJI$sp$(Function1.scala:69)\n\
    \tat scala.collection.AbstractSeq.apply$mcJI$sp(Seq.scala:1161)\n\tat Problem$.getMaxTriples(tmpenu8efl4.scala:23)\n\
    \tat Problem$.main(tmpenu8efl4.scala:36)\n\tat Problem.main(tmpenu8efl4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpp9ptlhvy.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:45:12 ---------------------------\e[0m\e[0m\n\e[31m45\
    \ |\e[0m        \e[33mval\e[0m \e[36me\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0me is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            a.append(i * i - i + 1)\n           \
    \ i += 1\n        }\n        while(j < n) {\n            b.append(i * i - i +\
    \ 1)\n            j += 1\n        }\n        while(k < (n - 1)) {\n          \
    \  c.append(i * i - i + 1)\n            k += 1\n        }\n        while(i < n)\
    \ {\n            d.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    while(i < n) {\n            triples.append(a(i) + a(j) + a(k))\n        \
    \    i += 1\n            j += 1\n            k += 1\n        }\n        while(i\
    \ < n) {\n            triples.append(a(i) + a(j) + a(k))\n            i += 1\n\
    \            j += 1\n            k += 1\n        }\n        while(i < n) {\n \
    \           triples.append(a(i) + a(j) + a(k))\n            i += 1\n         \
    \   j += 1\n            k += 1\n        }\n        while(i < n) {\n          \
    \  triples.append(a(i) + a(j) + a(k))\n            i += 1\n            j += 1\n\
    \            k += 1\n        }\n        while(i < n) {\n            triples.append(a(i)\
    \ + a(j) + a(k))\n            i += 1\n            j += 1\n            k += 1\n\
    \        }\n        while(i < n) {\n            triples.append(a(i) + a(j) + a(k))\n\
    \            i += 1\n            j += 1\n            k += 1\n        }\n     \
    \   while(i < n) {\n            triples.append(a(i) + a(j) + a(k))\n         \
    \   i += 1\n            j += 1\n            k += 1\n        }\n        while(i\
    \ < n) {\n            triples.append(a(i) + a(j) + a(k))\n            i += 1\n\
    \            j += 1\n            k += 1\n        }\n        while(i < n) {\n \
    \           triples.append(a(i) + a(j) + a(k))\n            i += 1\n         \
    \   j += 1\n            k += 1\n        }\n        while(i < n) {\n          \
    \  triples.append(a(i) + a(j) + a(k))\n            i += 1\n            j += 1\n\
    \            k += 1\n        }\n        while(i < n) {\n            triples.append(a(i)\
    \ + a(j) + a(k))\n            i += 1\n            j += 1\n            k += 1\n\
    \        }\n        while(i < n) {\n            triples.append(a(i) + a(j) + a(k))\n\
    \            i += 1\n            j += 1\n            k += 1\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkttpeoa7.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpkttpeoa7.scala:16:16 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpkttpeoa7.scala:17:16 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpkttpeoa7.scala:18:16 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpkttpeoa7.scala:19:22 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpkttpeoa7.scala:106:8 --------------------\e\
    [0m\e[0m\n\e[31m106 |\e[0m        \e[33mwhile\e[0m(i < n) {\n\e[31m\e[31m    |\e\
    [0m        ^\e[0m\n\e[31m    |\e[0m        Found:    Unit\n\e[31m    |"
  stdout: ''
  timestamp: 1659798174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val result = mutable.ArrayBuffer.empty[Long]\n        val max = (3 *\
    \ n) - 1\n        val maxTriples = mutable.ArrayBuffer.empty[Long]\n        val\
    \ maxTriple = mutable.ArrayBuffer.empty[Long]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n\
    \        val maxTripleIndex = mutable.ArrayBuffer.empty[Int]\n        val maxTripleIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmh1p8ga2.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTripleIndex\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTripleIndex is already defined as \e[33mvalue\e[0m \e[35mmaxTripleIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmh1p8ga2.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTripleIndex\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTripleIndex is already defined as \e[33mvalue\e[0m \e[35mmaxTripleIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmh1p8ga2.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTripleIndex\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTripleIndex is already defined as \e[33mvalue\e[0m \e[35mmaxTripleIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmh1p8ga2.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxTripleIndex\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTripleIndex is already defined as \e[33mvalue\e[0m \e[35mmaxTripleIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmh1p8ga2.scala:25:12 ---------------------------\e[0m\e["
  stdout: ''
  timestamp: 1659798174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            a.append(i * i - i + 1)\n           \
    \ i += 1\n        }\n        while(j < n) {\n            while(j < n) {\n    \
    \            while(j < n) {\n                    while(j < n) {\n            \
    \            while(j < n) {\n                            while(j < n) {\n    \
    \                            while(j < n) {\n                                \
    \    while(j < n) {\n                                        while(j < n) {\n\
    \                                            while(j < n) {\n                \
    \                                while(j < n) {\n                            \
    \                        while(j < n) {\n                                    \
    \                    while(j < n) {\n                                        \
    \                    while(j < n) {\n                                        \
    \                        while(j < n) {\n                                    \
    \                                while(j < n) {\n                            \
    \                                            while(j < n) {\n                \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                            while(j < n) {\n                                \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                while(j < n) {\n            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \                            while(j < n) {\n                                \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                while(j < n) {\n                            \
    \                                                                            \
    \                        while(j < n) {\n                                    \
    \                                                                            \
    \                    while(j < n) {\n                                        \
    \                                                                            \
    \                    while(j < n) {\n                                        \
    \                                                                            \
    \                        while(j < n) {\n                                    \
    \                                                                            \
    \                                while(j < n) {\n                            \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                            \
    \                            while(j < n) {\n                                \
    \                                                                            \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                                while(j < n) {\n            \
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \                                                                            \
    \                            while(j < n) {\n                                \
    \                                                                            \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                            \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \                                while(j < n) {\n                            \
    \                                                                            \
    \                                                                            \
    \                        while(j < n) {\n                                    \
    \                                                                            \
    \                                                                            \
    \                    while(j < n) {\n                                        \
    \                                                                            \
    \                                                                            \
    \                    while(j < n) {\n                                        \
    \                                                                            \
    \                                                                            \
    \                        while(j < n) {\n                                    \
    \                                                                            \
    \                                                                            \
    \                                while(j < n) {\n                            \
    \                                                                            \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                            \
    \                                                                            \
    \                            while(j < n) {\n                                \
    \                                                                            \
    \                                                                            \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                                                            \
    \                                                while(j < n) {\n            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            while(j < n) {\n                                                \
    \                                                                            \
    \                                                                            \
    \                                                        while(j < n) {\n    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                            while(j < n) {\n                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \    while(j < n) {\n                                                        \
    \                                                                            \
    \                                                                            \
    \                                                            while(j < n) {\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                            while(j < n) {\n                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                while(j < n) {\n                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                        while(j < n) {\n                                    \
    \                            \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjfmc4_le.scala:103:0 ---------------------------\e\
    [0m\e[0m\n\e[31m103 |\e[0m\n\e[31m\e[31m    |\e[0m^\e[0m\n\e[31m    |\e[0m'}'\
    \ expected, but eof found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjfmc4_le.scala:24:8\
    \ ---------------------\e[0m\e[0m\n\e[31m 24 |\e[0m        \e[33mwhile\e[0m(j\
    \ < n) {\n\e[31m\e[31m    |\e[0m        ^\e[0m\n\e[31m    |\e[0m        Found:\
    \    Unit\n\e[31m    |\e[0m        Required: Long\n\e[31m 25 |\e[0m          \
    \  \e[33mwhile\e[0m(j < n) {\n\e[31m 26 |\e[0m                \e[33mwhile\e[0m(j\
    \ < n) {\n\e[31m 27 |\e[0m                    \e[33mwhile\e[0m(j < n) {\n\e[31m\
    \ 28 |\e[0m                        \e[33mwhile\e[0m(j < n) {\n\e[31m 29 |\e[0m\
    \                            \e[33mwhile\e[0m(j < n) {\n\e[31m 30 |\e[0m     \
    \                           \e[33mwhile\e[0m(j < n) {\n\e[31m 31 |\e[0m      \
    \                              \e[33mwhile\e[0m(j < n) {\n\e[31m 32 |\e[0m   \
    \                                     \e[33mwhile\e[0m(j < n) {\n\e[31m 33 |\e\
    [0m                                            \e[33mwhile\e[0m(j < n) {\n\e[31m\
    \ 34 |\e[0m                                                \e[33mwhile\e[0m(j\
    \ < n) {\n\e[31m 35 |\e[0m                                                   \
    \ \e[33mwhile\e[0m(j < n) {\n\e[31m 36 |\e[0m                                \
    \                        \e[33mwhile\e[0m(j < n) {\n\e[31m 37 |\e[0m         \
    \                                                   \e[33mwhile\e[0m(j < n) {\n\
    \e[31m 38 |\e[0m                                                             \
    \   \e[33mwhile\e[0m(j < n) {\n\e[31m 39 |\e[0m                              \
    \                                      \e[33mwhile\e[0m(j < n) {\n\e[31m 40 |\e\
    [0m                                                                        \e\
    [33mwhile\e[0m(j < n) {\n\e[31m 41 |\e[0m                                    \
    \                                        \e[33mwhile\e[0m(j < n) {\n\e[31m 42\
    \ |\e[0m                                                                     \
    \           \e[33mwhile\e[0m(j < n) {\n\e[31m 43 |\e[0m                      \
    \                                                              \e[33m"
  stdout: ''
  timestamp: 1659798177
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val count = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n)(0)\n        val triple2 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple3 = mutable.ArrayBuffer.fill(n)(0)\n        val triple4 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple5 = mutable.ArrayBuffer.fill(n)(0)\n        val triple6 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple7 = mutable.ArrayBuffer.fill(n)(0)\n        val triple8 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple9 = mutable.ArrayBuffer.fill(n)(0)\n        val triple10 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple11 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple12 = mutable.ArrayBuffer.fill(n)(0)\n        val triple13 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple14 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple15 = mutable.ArrayBuffer.fill(n)(0)\n        val triple16 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple17 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple18 = mutable.ArrayBuffer.fill(n)(0)\n        val triple19 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple20 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple21 = mutable.ArrayBuffer.fill(n)(0)\n        val triple22 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple23 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple24 = mutable.ArrayBuffer.fill(n)(0)\n        val triple25 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple26 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple27 = mutable.ArrayBuffer.fill(n)(0)\n        val triple28 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple29 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple30 = mutable.ArrayBuffer.fill(n)(0)\n        val triple31 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple32 = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple33 = mutable.ArrayBuffer.fill(n)(0)\n        val triple34 =\
    \ mutable.ArrayBuffer.fill(n)(0)\n        val triple35 = mutable.ArrayBuffer.fill(n\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk8u4aarv.scala:53:4 ----------------------------\e\
    [0m\e[0m\n\e[31m53 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk8u4aarv.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk8u4aarv.scala:16:20\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mcount\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk8u4aarv.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mtriples\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk8u4aarv.scala:18:21\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e\
    [36mtriple\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk8u4aarv.scala:19:22\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mtriple2\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explana"
  stdout: ''
  timestamp: 1659798176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = a.length\n        val n = a.length\n        val max = 0\n   \
    \     var i = 0\n        var j = 0\n        var k = 0\n        var count = 0\n\
    \        while (i < n) {\n            a(i) = i * i - i + 1\n            i += 1\n\
    \        }\n        val triples = a.filter(_ % 3 == 0)\n        val tripleCount\
    \ = triples.count()\n        while (j < m) {\n            while (k < n) {\n  \
    \              if (triples(j) == triples(k)) {\n                    count += 1\n\
    \                }\n                k += 1\n            }\n            j += 1\n\
    \            count = 0\n        }\n        max = tripleCount * 3\n        return\
    \ max\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp4nyaqqo3.scala:17:16 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = a.length\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- Error:\
    \ /tmp/tmp4nyaqqo3.scala:28:39 -----------------------------------------\e[0m\e\
    [0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mtripleCount\e[0m = triples.count()\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mmissing argument for parameter p of \e[33mmethod\e[0m \e[35mcount\e[0m\
    \ in \e[33mclass\e[0m \e[35mArrayOps\e[0m: (p: Long => Boolean): Int\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp4nyaqqo3.scala:39:12 -----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        max = tripleCount * \e[31m3\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Reassignment\
    \ to val max\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for(i <- 1 to n){\n            val x = i * i - i + 1\n            a.append(x)\n\
    \        }\n        val res = a.filter(_ % 3 == 0).size\n        res\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy5nezgcf.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpy5nezgcf.scala:16:22 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798177
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val l = mutable.ArrayBuffer.fill(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpyfwad1ef.scala:51:41 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36ml\e[0m = mutable.ArrayBuffer.fill(\n\
    \e[31m\e[31m   |\e[0m                                         ^\e[0m\n\e[31m \
    \  |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyfwad1ef.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mm\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyfwad1ef.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyfwad1ef.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36mi\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mi is already defined as \e[33mvalue\e[0m \e[35mi\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyfwad1ef.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mj\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mj is"
  stdout: ''
  timestamp: 1659798177
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpp9ptlhvy.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:45:12 ---------------------------\e[0m\e[0m\n\e[31m45\
    \ |\e[0m        \e[33mval\e[0m \e[36me\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0me is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0l)\n        val c = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0l)\n        val triples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val triple = 0\n        var i = 0\n        var j = 0\n        var k =\
    \ 0\n        var tripleCount = 0\n        while(i < n && j < n && k < n) {\n \
    \           triple = i * i - i + 1\n            if((triple % 3) == 0) {\n    \
    \            a(i) = triple\n                b(j) = triple\n                c(k)\
    \ = triple\n                tripleCount += 1\n            }\n            i +=\
    \ 1\n            j += 1\n            k += 1\n        }\n        while(i < n) {\n\
    \            triple = i * i - i + 1\n            a(i) = triple\n            i\
    \ += 1\n            tripleCount += 1\n        }\n        while(j < n) {\n    \
    \        triple = i * i - i + 1\n            b(j) = triple\n            j += 1\n\
    \            tripleCount += 1\n        }\n        while(k < n) {\n           \
    \ triple = i * i - i + 1\n            c(k) = triple\n            k += 1\n    \
    \        tripleCount += 1\n        }\n        for(i <- 0 until tripleCount) {\n\
    \            val triple = a(i) + b(i) + c(i)\n            if(triple % 3 == 0)\
    \ {\n                triples(i) = triple\n            }\n        }\n        triples.toList.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2au6nj25.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2au6nj25.scala:16:16 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2au6nj25.scala:17:16 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2au6nj25.scala:18:16 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2au6nj25.scala:19:22 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp2au6nj25.scala:26:19 -----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            triple = i * i - i + \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m           "
  stdout: ''
  timestamp: 1659798176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val y = mutable.ArrayBuffer.fill(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpi60s86ae.scala:51:41 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36my\e[0m = mutable.ArrayBuffer.fill(\n\
    \e[31m\e[31m   |\e[0m                                         ^\e[0m\n\e[31m \
    \  |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi60s86ae.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m\
    \ \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi60s86ae.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36md\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi60s86ae.scala:39:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m39 |\e[0m        \e[33mval\e[0m\
    \ \e[36mm\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi60s86ae.scala:40:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mn is"
  stdout: ''
  timestamp: 1659798179
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(n)\n\
    \        val i = scala.math.BigInt(1)\n        val j = scala.math.BigInt(2)\n\
    \        val k = scala.math.BigInt(3)\n        while(i < n) {\n            a(i)\
    \ = i * i - i + 1\n            i += 1\n        }\n        val triples = a.zipWithIndex.filter(_._2\
    \ % 3 == 0).map(_._1).sum\n        return triples * m\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpwfpe0zpc.scala:17:34 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = scala.math.BigInt(n)\n\
    \e[31m\e[31m   |\e[0m                                  ^\e[0m\n\e[31m   |\e[0m\
    \                                  Recursive \e[33mvalue\e[0m \e[35mn\e[0m needs\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwfpe0zpc.scala:22:14\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m            a(i) = i * i - i\
    \ + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m              ^\e[0m\n\e[31m   |\e[0m \
    \             Found:    (i : BigInt)\n\e[31m   |\e[0m              Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwfpe0zpc.scala:22:19\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m            a(i) = i * i - i\
    \ + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Found:    BigInt\n\e[31m   |\e[0m          \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwfpe0zpc.scala:23:14\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of BigInt - did you mean i.!=?\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpwfpe0zpc.scala:26:15 --------------------\e[0m\e[0m\n\
    \e[31m26 |\e[0m        \e[33mreturn\e[0m triples * m\n\e[31m\e[31m   |\e[0m  \
    \             ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m               Found:    BigInt\n\
    \e[31m   |\e[0m               Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659798182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while (i < n)\
    \ {\n            a += (i * i - i + 1)\n            i += 1\n        }\n       \
    \ var count = 0\n        while (j < n) {\n            while (k < n) {\n      \
    \          while (j < n && k < n && a[j] < a[k]) {\n                    k += 1\n\
    \                }\n                if (k == n) {\n                    count +=\
    \ 1\n                    k = 0\n                }\n                k += 1\n  \
    \          }\n            j += 1\n        }\n        return count\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgfr_5lfu.scala:26:43 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                \e[33mwhile\e[0m (j < n && k < n && a[\e\
    [35mj\e[0m] < a[\e[35mk\e[0m]) {\n\e[31m\e[31m   |\e[0m                      \
    \                     ^\e[0m\n\e[31m   |\e[0m                                \
    \           Not found: type j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798177
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            while(j < n) {\n                while(k\
    \ <= n) {\n                    if(i + j + k == n) {\n                        count\
    \ += 1\n                        a.add(i * i - i + 1)\n                       \
    \ a.add(j * j - j + 1)\n                        a.add(k * k - k + 1)\n       \
    \             }\n                    k += 1\n                }\n             \
    \   j += 1\n            }\n            i += 1\n        }\n        a.toList.sortWith(_\
    \ < _)\n        a.toList.last\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc80496ta.scala:25:26 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                        a.add(i * i - i + \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0m value\
    \ add is not a member of scala.collection.mutable.ArrayBuffer[Long]\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpc80496ta.scala:26:26 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                        a.add(j * j - j + \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ add is not a member of scala.collection.mutable.ArrayBuffer[Long], but could\
    \ be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne\
    \ of the following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import collection.convert.ImplicitConversions.buffer AsJavaList\n\e[31m \
    \  |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.collection\
    \ asJava\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.collection\
    \ asJava\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc80496ta.scala:27:26\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m                        a.add(k\
    \ * k - k + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                        ^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue add is not a member of scala.collection.mutable.ArrayBuffer[Long],\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\
    \e[31m   |\e"
  stdout: ''
  timestamp: 1659798181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            a.append(i * i - i + 1)\n          \
    \  i += 1\n        }\n        while (j < n) {\n            b.append(i * i - i\
    \ + 1)\n            j += 1\n        }\n        while (k < n) {\n            c.append(i\
    \ * i - i + 1)\n            k += 1\n        }\n        while (i < n && j < n &&\
    \ k < n) {\n            triples.append(a(i) + a(j) + a(k))\n            i += 1\n\
    \            j += 1\n            k += 1\n        }\n        while (i < n) {\n\
    \            a.append(i * i - i + 1)\n            i += 1\n        }\n        while\
    \ (j < n) {\n            b.append(i * i - i + 1)\n            j += 1\n       \
    \ }\n        while (k < n) {\n            c.append(i * i - i + 1)\n          \
    \  k += 1\n        }\n        while (i < n && j < n) {\n            triples.append(a(i)\
    \ + a(j))\n            i += 1\n            j += 1\n        }\n        while (i\
    \ < n) {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n\
    \        while (j < n) {\n            b.append(i * i - i + 1)\n            j +=\
    \ 1\n        }\n        while (i < n && k < n) {\n            triples.append(a(i)\
    \ + a(j) + a(k))\n            i += 1\n            j += 1\n            k += 1\n\
    \        }\n        while (i < n) {\n            a.append(i * i - i + 1)\n   \
    \         i += 1\n        }\n        while (j < n) {\n            b.append(i *\
    \ i - i + 1)\n            j += 1\n        }\n        while (i < n && k < n) {\n\
    \            triples.append(a(i) + a(j) + a(k))\n            i += 1\n        \
    \    j += 1\n            k += 1\n        }\n        while (i < n) {\n        \
    \    a.append(i * i - i + 1)\n            i += 1\n        }\n        while (j\
    \ < n) {\n            b.append(i * i - i + 1)\n            j += 1\n        }\n\
    \        while (i < n && k < n) {\n            triples.append(a(i) + a(j) + a(k))\n\
    \            i += 1\n            j += 1\n            k += 1\n        }\n     \
    \   while (i < n) {\n            a.append(i * i - i + 1)\n            i += 1\n\
    \        }\n        while (j < n) {\n            b.append(i * i - i + 1)\n   \
    \         j += 1\n        }\n        while (i < n && k < n) {\n            triples.append(a(i)\
    \ + a(j) + a(k))\n            i += 1\n            j += 1\n            k += 1\n\
    \        }\n        while (i < n) {\n            \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8n1f9nu4.scala:126:0 ---------------------------\e\
    [0m\e[0m\n\e[31m126 |\e[0m\n\e[31m\e[31m    |\e[0m^\e[0m\n\e[31m    |\e[0m'}'\
    \ expected, but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8n1f9nu4.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36ma\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8n1f9nu4.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8n1f9nu4.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8n1f9nu4.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e\
    [36md\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8n1f9nu4.scala:19:22\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mtriples\e[0m = mutable.ArrayBuffer(\e[31m3l\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tm"
  stdout: ''
  timestamp: 1659798181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0l)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        val max = 0l\n        val maxTriples = 0l\n        for(i <- 1 to n) {\n\
    \            for(j <- i to n) {\n                for(k <- j to n) {\n        \
    \            if(i+j+k > max) {\n                        max = i+j+k\n        \
    \                maxTriples = i+j+k\n                    }\n                }\n\
    \            }\n            a(i) = i*i-1\n            m(i) = i*i\n           \
    \ n(i) = i\n        }\n        for(i <- 1 to n) {\n            if(a(i) + a(i)\
    \ + a(i) > maxTriples) {\n                maxTriples = a(i) + a(i) + a(i)\n  \
    \          }\n        }\n        maxTriples\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjti6ct4f.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpjti6ct4f.scala:16:16 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpjti6ct4f.scala:17:16 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpjti6ct4f.scala:24:28 -----------------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m                        max = i+j+k\n\e[31m\e[31m   |\e[0m\
    \                        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \     Reassignment to val max\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpjti6ct4f.scala:25:35 -----------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m                        maxTriples = i+j+k\n\e[31m\e[31m   |\e[0m    \
    \                    ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \        Reassignment to val maxTriples\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpjti6ct4f.scala:35:27 -----------------------------\e[0m\e\
    [0m\n\e[31m35 |\e[0m                maxTriples = a(i) + a(i) + a(i)\n\e[31m\e\
    [31m   |\e[0m              "
  stdout: ''
  timestamp: 1659798177
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        while (i < n) {\n            a += i * i - i + 1\n\
    \            i += 1\n        }\n        val count = a.count(_ % 3 == 0)\n    \
    \    a.clear()\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpn37b0l5e.scala:27)\n\tat Problem.main(tmpn37b0l5e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798182
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while (i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    var count = 0\n        while (j < n) {\n            while (k < n) {\n   \
    \             if (a(k) == a(k) + a(k) + 3) {\n                    count += 1\n\
    \                }\n                k += 1\n            }\n            j += 1\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4oclurus.scala:36)\n\tat Problem.main(tmp4oclurus.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpq_gkc81j.scala:51:41 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(\n\
    \e[31m\e[31m   |\e[0m                                         ^\e[0m\n\e[31m \
    \  |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mm\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mm\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mn is"
  stdout: ''
  timestamp: 1659798181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            val temp = i * i - i + 1\n            a.append(temp)\n      \
    \      i += 1\n        }\n        val maxTriples = a.max\n        while(j < n)\
    \ {\n            val temp = j * j - j + 1\n            a.append(temp)\n      \
    \      j += 1\n        }\n        val maxTriples2 = a.max\n        while(k < n)\
    \ {\n            val temp = k * k - k + 1\n            a.append(temp)\n      \
    \      k += 1\n        }\n        val maxTriples3 = a.max\n        if(maxTriples\
    \ == maxTriples2) {\n            if(maxTriples == maxTriples3) {\n           \
    \     return 1l\n            }\n            return 0l\n        }\n        return\
    \ 1l\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaasiptln.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798178
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = 0\n        var i = 0\n        var j = 0\n        var k =\
    \ 0\n        var count = 0\n        while(i < n) {\n            a(i) = i * i -\
    \ i + 1\n            i += 1\n        }\n        while(j < n) {\n            b(j)\
    \ = i * j - j + 1\n            j += 1\n        }\n        while(k <n) {\n    \
    \        c(k) = i * k - k + 1\n            k += 1\n        }\n        while(i\
    \ < n && j < n && k < n) {\n            if(a(i) + a(j) + a(k) = 3) {\n       \
    \         triples += 1\n                triple = a(i) + a(j) + a(k)\n        \
    \        while(i < n && j < n && k < n && a(i) + a(j) + a(k) = 3) {\n        \
    \            i += 1\n                    j += 1 \n                    k += 1\n\
    \                }\n                while(i < n && j < n && k < n && a(i) + a(j)\
    \ + a(k) = 3) {\n                    i += 1\n                    k -= 1\n    \
    \            }\n                while(i < n && j < n && k < n && a(i) + a(j) +\
    \ a(k) = 3) {\n                    j -= 1\n                    k += 1\n      \
    \          }\n                while(i < n && j < n && k < n && a(i) + a(j) + a(k)\
    \ = 3) {\n                    k -= 1\n                    k += 1\n           \
    \     }\n                while(i < n && j < n && k < n && a(i) + a(j) + a(k) =\
    \ 3) {\n                    i += 1\n                    j += 1\n             \
    \       k += 1\n                }\n                while(i < n && j < n && k <\
    \ n && a(i) + a(j) + a(k) = 3) {\n                    j += 1\n               \
    \     k -= 1\n                }\n                while(i < n && j < n && k < n\
    \ && a(i) + a(j) + a(k) = 3) {\n                    k -= 1\n                 \
    \   k += 1\n                }\n                while(i < n && j < n && k < n &&\
    \ a(i) + a(j) + a(k) = 3) {\n                    i += 1\n                    j\
    \ += 1\n                    k += 1\n                }\n                while(i\
    \ < n && j < n && k < n && a(i) + a(j) + a(k) = 3) {\n                    j +=\
    \ 1\n                    k -= 1\n                }\n                while(i <\
    \ n && j < n && k < n && a(i) + a(j) + a(k) = 3) {\n                    k -= 1\n\
    \                    k += 1\n                }\n                while(i < n &&\
    \ j < n && k < n && a(i) + a(\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp6tkm2a83.scala:33:16 ---------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m        \e[33mwhile\e[0m(k <n) {\n\e[31m\e[31m   |\e\
    [0m                ^\e[0m\n\e[31m   |\e[0m                ')' expected, but $XMLSTART$<\
    \ found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp6tkm2a83.scala:38:34 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m            \e[33mif\e[0m(a(i) + a(j) + a(k) = \e[31m3\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                                  ^\e[0m\n\e[31m\
    \   |\e[0m                                  ')' expected, but '=' found\n\e[31m\e\
    [31m-- [E040] Syntax Error: /tmp/tmp6tkm2a83.scala:41:68 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m                \e[33mwhile\e[0m(i < n && j < n && k\
    \ < n && a(i) + a(j) + a(k) = \e[31m3\e[0m) {\n\e[31m\e[31m   |\e[0m         \
    \                                                           ^\e[0m\n\e[31m   |\e\
    [0m                                             ')' expected, but '=' found\n\e\
    [31m\e[31m-- [E040] Syntax Error: /tmp/tmp6tkm2a83.scala:46:68 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m                \e[33mwhile\e[0m(i < n && j < n && k\
    \ < n && a(i) + a(j) + a(k) = \e[31m3\e[0m) {\n\e[31m\e[31m   |\e[0m         \
    \                                                           ^\e[0m\n\e[31m   |\e\
    [0m                                             ')' expected, but '=' found\n\e\
    [31m\e[31m-- [E040] Syntax Error: /tmp/tmp6tkm2a83.scala:50:68 ---------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m                \e[33mwhile\e[0m(i < n && j < n && k\
    \ < n && a(i) + a(j) + a(k) = \e[31m3\e[0m) {\n\e[31m\e[31m   |\e[0m         \
    \                                                           ^\e[0m\n\e[31m   |\e\
    [0m                                             ')' expected, but '=' found\n\e\
    [31m\e[31m-- [E040] Syntax Error: /tmp/tmp6tkm2a83.scala:54:68 ---------------------------\e\
    [0m\e[0m\n\e[31m54 |\e[0m                \e[33mwhile\e[0m(i < n && j < n && k\
    \ < n && a(i) + a(j) + a(k) = \e[31m3\e[0m) {\n\e[31m\e[31m   |\e[0m         \
    \                                                           ^\e[0m\n\e[31m   |\e\
    [0m                                     "
  stdout: ''
  timestamp: 1659798182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n && j < n && k < n) {\n            a(i) = i * i - i +\
    \ 1\n            i += 1\n            j += 1\n            k += 1\n        }\n \
    \       val max = a.max\n        val min = a.min\n        val sum = a(0) + a(1)\
    \ + a(2) \n        while (i < n) {\n            if (a(i) > max) {\n          \
    \      max = a(i)\n            }\n            i += 1\n        }\n        while\
    \ (j < n) {\n            if (a(j) > max) {\n                max = a(j)\n     \
    \       }\n            j += 1\n        }\n        while (k < n) {\n          \
    \  if (a(k) > max) {\n                max = a(k) \n            }\n           \
    \ k += 1\n        }\n        while (i < n) {\n            if (a(i) < min) {\n\
    \                min = a(i)\n            }\n            i += 1\n        }\n  \
    \      while (j < n) {\n            if (a(j) < min) {\n                min = a(j)\n\
    \            }\n            j += 1\n        }\n        while (k < n) {\n     \
    \       if (a(k) < min) {\n                min = a(k)\n            }\n       \
    \     k += 1\n        }\n        val sum2 = sum + sum\n        if (sum2 % 3 ==\
    \ 0) {\n            count = count + 1\n        }\n        count\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa7x4hzeg.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpa7x4hzeg.scala:31:20 -----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m                max = a(i)\n\e[31m\e[31m   |\e[0m   \
    \             ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to\
    \ val max\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpa7x4hzeg.scala:37:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m37 |\e[0m                max\
    \ = a(j)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Reassignment to val max\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpa7x4hzeg.scala:43:20 -----------------------------\e[0m\e\
    [0m\n\e[31m43 |\e[0m                max = a(k) \n\e[31m\e[31m   |\e[0m       \
    \         ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val\
    \ max\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpa7x4hzeg.scala:49:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m49 |\e[0m                min\
    \ = a(i)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Reassignment to val min\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpa7x4hzeg.scala:55:20 -----------------------------\e[0m\e\
    [0m\n\e[31m55 |\e[0m                min = a(j)\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val min\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer expl"
  stdout: ''
  timestamp: 1659798182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mut\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpntdo2a_9.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpntdo2a_9.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpntdo2a_9.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpntdo2a_9.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpntdo2a_9.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        "
  stdout: ''
  timestamp: 1659798182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp77fb_fdp.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp77fb_fdp.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp77fb_fdp.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp77fb_fdp.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp77fb_fdp.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        "
  stdout: ''
  timestamp: 1659798183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        val m = scala.math.pow(3, n).toLong\n        for(i <- 1 to n) {\n   \
    \         val j = i * i - i + 1\n            val k = i * i + i + 1\n         \
    \   a.append(i * i - i + 1)\n            a.append(i * i + i + 1)\n           \
    \ a.append(i * i + i + 1)\n        }\n        a.filter(_ % 3 == 0).length\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxxpkg42l.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798184
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a : mutable.MutableList[Long]\
    \ = mutable.MutableList(1)\n        var i = 0\n        var j = 0\n        var\
    \ k = 0\n        while(i < n) {\n            if(i == 0 || i == n) {\n        \
    \        a(i) = i * i - i + 1\n                i += 1\n            } else {\n\
    \                j = 0\n                while(j < i) {\n                    if(j\
    \ == 0 || j == i) {\n                        a(j) = i * i - i + 1\n          \
    \              j += 1\n                    } else {\n                        k\
    \ = 0\n                        while(k <= j) {\n                            if(k\
    \ == 0 || k == j || k == i) {\n                                a(k) = i * i -\
    \ i + 1\n                                k += 1\n                            }\
    \ else {\n                                break\n                            }\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        var count = 0\n        for(i<-0 until a.size) {\n\
    \            if(a(i) % 3 == 0) {\n                count += 1\n            }\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd0mgwau8.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.MutableList[\e\
    [35mLong\e[0m] = mutable.MutableList(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd0mgwau8.scala:15:44\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e\
    [36ma\e[0m : mutable.MutableList[\e[35mLong\e[0m] = mutable.MutableList(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                            ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                            Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd0mgwau8.scala:36:32\
    \ ------------------------\e[0m\e[0m\n\e[31m36 |\e[0m                        \
    \        break\n\e[31m\e[31m   |\e[0m                                ^^^^^\e[0m\n\
    \e[31m   |\e[0m                                Not found: break\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659798182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            while(j < n) {\n                while(k <n) {\n             \
    \       if(i+j+k == n){\n                        a.add(i*i-i+1)\n            \
    \            a.add(j*j-j)\n                        a.add(k*k-k)\n            \
    \            i = j = 0\n                        k = n\n                    }\n\
    \                    k += 1\n                }\n                j += 1\n     \
    \       }\n            i += 1\n        }\n        a.toList.sortWith(_ < _).length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphb2w9z1f.scala:21:24 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                \e[33mwhile\e[0m(k <n) {\n\e[31m\e[31m\
    \   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m                    \
    \    ')' expected, but $XMLSTART$< found\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmphb2w9z1f.scala:21:22 --------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m                \e[33mwhile\e[0m(k <n) {\n\e[31m\e[31m   |\e[0m      \
    \                ^\e[0m\n\e[31m   |\e[0m                      Found:    (k : Int)\n\
    \e[31m   |\e[0m                      Required: Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmphb2w9z1f.scala:23:26 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                        a.add(i*i-i+\e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0mvalue add\
    \ is not a member of scala.collection.mutable.ArrayBuffer[Long], but could be\
    \ made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne\
    \ of the following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import collection.convert.ImplicitConversions.buffer AsJavaList\n\e[31m \
    \  |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.collection\
    \ asJava\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.collection\
    \ asJava\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphb2w9z1f.scala:24:26\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m                        a.add(j*j-j)\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ add is not a member of scala.collection.mutable."
  stdout: ''
  timestamp: 1659798187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val max = 0\n        val maxTriples = 0\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2hbtd20r.scala:47:4 ----------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp2hbtd20r.scala:19:12 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp2hbtd20r.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp2hbtd20r.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp2hbtd20r.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that "
  stdout: ''
  timestamp: 1659798185
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val count = mutable.Map[Long, Long]()\n        for( i <- 0 until n )\
    \ {\n            val j = i * i - i + 1\n            if( j > 0 ) {\n          \
    \      val k = i * i + j\n                if( k > 0 ) {\n                    if(\
    \ k > j ) {\n                        val k2 = k - j\n                        if(\
    \ k2 % 3 == 0 ) {\n                            val count = count(k2)\n       \
    \                     if( count > 0 ) {\n                                count(k2)\
    \ = count(k2) + 1\n                            } else {\n                    \
    \            count(k2) = 1\n                            }\n                  \
    \      }\n                    }\n                }\n            }\n        }\n\
    \        count(a.max)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnm58x9iy.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnm58x9iy.scala:16:20\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mcount\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnm58x9iy.scala:17:26\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m( i <-\
    \ \e[31m0\e[0m until n ) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        val m = scala.math.max(scala.math.abs(n), 1l)\n        for(i <- 1 to\
    \ m){\n            for(j <- 1 to m){\n                for(k <- 1 to m){\n    \
    \                if(i+j+k == n){\n                        a += (i*i*i - i*i +\
    \ i*j + i*k + j*k + k*k).toLong\n                    }\n                }\n  \
    \          }\n        }\n        a.toList.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_43jtgup.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (m : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp_43jtgup.scala:18:26 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m to m){\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (m : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_43jtgup.scala:19:30\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mfor\e[0m(k\
    \ <- \e[31m1\e[0m to m){\n\e[31m\e[31m   |\e[0m                              ^\e\
    [0m\n\e[31m   |\e[0m                              Found:    (m : Long)\n\e[31m\
    \   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val triples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val triple = 0\n        val triples = 0\n        val triple = 0\n   \
    \     val triples = 0\n        val triple = 0\n        val triples = 0\n     \
    \   val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptikiqwes.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriples\
    \ is already defined as \e[33mvalue\e[0m \e[35mtriples\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptikiqwes.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mtriple\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptikiqwes.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriples is already defined\
    \ as \e[33mvalue\e[0m \e[35mtriples\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmptikiqwes.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriple is\
    \ already defined as \e[33mvalue\e[0m \e[35mtriple\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptikiqwes.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mtriples\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptiki"
  stdout: ''
  timestamp: 1659798146
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwbmfjfnp.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpwbmfjfnp.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpwbmfjfnp.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mi\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mi is already defined as \e[33mvalue\e[0m \e[35mi\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpwbmfjfnp.scala:25:12 ---------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mval\e[0m \e[36mj\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mj is already defined as \e[33mvalue\e[0m \e[35mj\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpwbmfjfnp.scala:26:12 ---------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mk is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798187
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n\
    \ && j < n && k < n) {\n            a(i) = i * i - i + 1\n            i += 1\n\
    \            j += 1\n            k += 1\n        }\n        val triples = a.filter(_\
    \ % 3 == 0).length\n        (triples * 3).toLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpra70go3s.scala:29)\n\tat Problem.main(tmpra70go3s.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798190
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpp9ptlhvy.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:45:12 ---------------------------\e[0m\e[0m\n\e[31m45\
    \ |\e[0m        \e[33mval\e[0m \e[36me\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0me is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2k04euen.scala:51:41 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(\n\
    \e[31m\e[31m   |\e[0m                                         ^\e[0m\n\e[31m \
    \  |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:41:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m\
    \ \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:42:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m42 |\e[0m        \e[33mval\e[0m\
    \ \e[36mb\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:44:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m\
    \ \e[36md\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0md is"
  stdout: ''
  timestamp: 1659798167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = a.length\n        val n = a.length\n        val d = new mutable.HashMap[Long,\
    \ Long]()\n        val s = scala.math.BigInt(3)\n        val t = scala.math.BigInt(2)\n\
    \        val r = scala.math.BigInt(1)\n        val f = scala.math.BigInt(0)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(3)\n\
    \        val d = scala.math.BigInt(3)\n        val s = scala.math.BigInt(3)\n\
    \        val t = scala.math.BigInt(3)\n        val r = scala.math.BigInt(3)\n\
    \        val f = scala.math.BigInt(3)\n        val m = scala.math.BigInt(3)\n\
    \        val n = scala.math.BigInt(3)\n        val d = scala.math.BigInt(3)\n\
    \        val s = scala.math.BigInt(3)\n        val t = scala.math.BigInt(3)\n\
    \        val r = scala.math.BigInt(3)\n        val f = scala.math.BigInt(3)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(3)\n\
    \        val d = scala.math.BigInt(3)\n        val s = scala.math.BigInt(3)\n\
    \        val t = scala.math.BigInt(3)\n        val r = scala.math.BigInt(3)\n\
    \        val f = scala.math.BigInt(3)\n        val m = scala.math.BigInt(3)\n\
    \        val n = scala.math.BigInt(3)\n        val d = scala.math.BigInt(3)\n\
    \        val s = scala.math.BigInt(3)\n        val t = scala.math.BigInt(3)\n\
    \        val r = scala.math.BigInt(3)\n        val f = scala.math.BigInt(3)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(3)\n\
    \        val d = scala.math.BigInt(3)\n        val s = scala.math.BigInt(3)\n\
    \        val t = scala.math.BigInt(3)\n        val r = scala.math.BigInt(3)\n\
    \        val f = scala.math.BigInt(3)\n        val m = scala.math.BigInt(3)\n\
    \        val n = scala.math.BigInt(3)\n        val d = scala.math.BigInt(3)\n\
    \        val s = scala.math.BigInt(3)\n        val t = scala.math.BigInt(3)\n\
    \        val r = scala.math.BigInt(3)\n        val f = scala.math.BigInt(3)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpf34yhw81.scala:67:4 ----------------------------\e\
    [0m\e[0m\n\e[31m67 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpf34yhw81.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = scala.math.BigInt(\e[31m3\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mm\
    \ is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpf34yhw81.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = scala.math.BigInt(\e[31m3\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mn is already defined as \e\
    [33mvalue\e[0m \e[35mn\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpf34yhw81.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = scala.math.BigInt(\e\
    [31m3\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpf34yhw81.scala:26:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m\
    \ \e[36ms\e[0m = scala.math.BigInt(\e[31m3\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0ms is already defined as \e\
    [33mvalue\e[0m \e[35ms\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpf34yhw81.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mt\e[0m = scala.math.BigInt(\e\
    [31m3\e[0m)\n\e[31m\e["
  stdout: ''
  timestamp: 1659798190
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = scala.math.max(scala.math.abs(n), scala.math.abs(a.last))\n \
    \       val r = scala.math.abs(a.last)\n        val s = scala.math.abs(a.last)\n\
    \        val t = scala.math.abs(a.last)\n        val u = scala.math.abs(a.last)\n\
    \        val v = scala.math.abs(a.last)\n        val w = scala.math.abs(a.last)\n\
    \        val x = scala.math.abs(a.last)\n        val y = scala.math.abs(a.last)\n\
    \        val z = scala.math.abs(a.last)\n        val t = scala.math.abs(a.last)\n\
    \        val u = scala.math.abs(a.last)\n        val v = scala.math.abs(a.last)\n\
    \        val w = scala.math.abs(a.last)\n        val x = scala.math.abs(a.last)\n\
    \        val y = scala.math.abs(a.last)\n        val z = scala.math.abs(a.last)\n\
    \        val t = scala.math.abs(a.last)\n        val u = scala.math.abs(a.last)\n\
    \        val v = scala.math.abs(a.last)\n        val w = scala.math.abs(a.last)\n\
    \        val x = scala.math.abs(a.last)\n        val y = scala.math.abs(a.last)\n\
    \        val z = scala.math.abs(a.last)\n        val t = scala.math.abs(a.last)\n\
    \        val u = scala.math.abs(a.last)\n        val v = scala.math.abs(a.last)\n\
    \        val w = scala.math.abs(a.last)\n        val x = scala.math.abs(a.last)\n\
    \        val y = scala.math.abs(a.last)\n        val z = scala.math.abs(a.last)\n\
    \        val t = scala.math.abs(a.last)\n        val u = scala.math.abs(a.last)\n\
    \        val v = scala.math.abs(a.last)\n        val w = scala.math.abs(a.last)\n\
    \        val x = scala.math.abs(a.last)\n        val y = scala.math.abs(a.last)\n\
    \        val z = scala.math.abs(a.last)\n        val t = scala.math.abs(a.last)\n\
    \        val u = scala.math.abs(a.last)\n        val v = scala.math.abs(a.last)\n\
    \        val w = scala.math.abs(a.last)\n        val x = scala.math.abs(a.last)\n\
    \        val y = scala.math.abs(a.last)\n        val z = \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp5kj5msqr.scala:60:15 ---------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m        \e[33mval\e[0m \e[36mz\e[0m = \n\e[31m\e[31m\
    \   |\e[0m               ^\e[0m\n\e[31m   |\e[0m               expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5kj5msqr.scala:26:12 ---------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m        \e[33mval\e[0m \e[36mt\e[0m = scala.math.abs(a.last)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mt is\
    \ already defined as \e[33mvalue\e[0m \e[35mt\e[0m\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5kj5msqr.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m\
    \ \e[36mu\e[0m = scala.math.abs(a.last)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mu is already defined as \e[33mvalue\e[0m \e[35mu\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5kj5msqr.scala:28:12 ---------------------------\e[0m\e[0m\n\e[31m28\
    \ |\e[0m        \e[33mval\e[0m \e[36mv\e[0m = scala.math.abs(a.last)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mv is\
    \ already defined as \e[33mvalue\e[0m \e[35mv\e[0m\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5kj5msqr.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mw\e[0m = scala.math.abs(a.last)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mw is already defined as \e[33mvalue\e[0m \e[35mw\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5kj5msqr.scala:30"
  stdout: ''
  timestamp: 1659798190
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpp9ptlhvy.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:45:12 ---------------------------\e[0m\e[0m\n\e[31m45\
    \ |\e[0m        \e[33mval\e[0m \e[36me\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0me is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            for(j <- 1 to n){\n                for(k\
    \ <- 1 to n){\n                    if(i<j && j<k && a(i)+a(j)+a(k) == i*i*i){\n\
    \                        a += i*i*i\n                    }\n                }\n\
    \            }\n        }\n        a.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd3cx7ki8.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpd3cx7ki8.scala:17:26 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd3cx7ki8.scala:18:30\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                \e[33mfor\e[0m(k\
    \ <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                              ^\e\
    [0m\n\e[31m   |\e[0m                              Found:    (n : Long)\n\e[31m\
    \   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    if (a(i) + a(j) + a(k) == 3) {\n            \
    \            count += 1\n                    }\n                    k += 1\n \
    \               }\n                j += 1\n            }\n            i += 1\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5jwcw41i.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798186
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + i + j\n            a += i\n            a += j\n            a +=\
    \ k\n        }\n        a.toList.sortWith(_ < _).length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzg4hf1_1.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798191
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for(i <- 1l to n){\n            val j = i * i - i + 1\n            val\
    \ k = i * i * i\n            val l = i * i * i * i\n            val m = i * i\
    \ * i * i * i\n            val n = i * i * i * i * i * i\n            val o =\
    \ i * i * i * i * i * i * i\n            val p = i * i * i * i * i * i * i * i\n\
    \            val q = i * i * i * i * i * i * i * i * i * i\n            val r\
    \ = i * i * i * i * i * i * i * i * i * i * i * i\n            val s = i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i\n            val t = i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i * i\n            val u = i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\n        \
    \    val v = i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\
    \ * i * i * i\n            val w = i * i * i * i * i * i * i * i * i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i\n            val x = i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\
    \ * i\n            val y = i * i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i\n            val z = i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\
    \ * i * i\n            val a = i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\n            val b\
    \ = i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\
    \ * i * i * i * i * i * i * i * i\n            val c = i * i * i * i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i\n            val d = i * i * i * i * i * i * i * i * i * i * i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i\n            val e = i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i * i * i * i * i * i\n            val f = i * i * i * i * i * i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i\n  \
    \          val g = i * i * i * i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i * \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpq2db3xag.scala:40:83 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m            \e[33mval\e[0m \e[36mg\e[0m = i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i * i * \n\e[31m\e[31m   |\e[0m\
    \                                                                            \
    \       ^\e[0m\n\e[31m   |\e[0m                                       expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmpq2db3xag.scala:50:0 ----------------------------\e[0m\e[0m\n\e[31m50\
    \ |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq2db3xag.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpq2db3xag.scala:49:1 ---------------------\e[0m\e\
    [0m\n\e[31m49 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:  \
    \  Unit\n\e[31m   |\e[0m Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[33m\e[33m-- Warning:\
    \ /tmp/tmpq2db3xag.scala:42:4 ----------------------------------------\e[0m\e\
    [0m\n\e[33m42 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e\
    [0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m\
    \    Line is indented too far to the left, or a `}` is missing\n1 warning found\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659798194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = new Array[Int](n)\n        val c = new Array[Int](n)\n      \
    \  val d = new Array[Int](n)\n        val e = new Array[Int](n)\n        val f\
    \ = new Array[Int](n)\n        val g = new Array[Int](n)\n        val h = new\
    \ Array[Int](n)\n        val i = new Array[Int](n)\n        val j = new Array[Int](n)\n\
    \        val k = new Array[Int](n)\n        val l = new Array[Int](n)\n      \
    \  val m = new Array[Int](n)\n        val n = new Array[Int](n)\n        val o\
    \ = new Array[Int](n)\n        val p = new Array[Int](n)\n        val q = new\
    \ Array[Int](n)\n        val r = new Array[Int](n)\n        val s = new Array[Int](n)\n\
    \        val t = new Array[Int](n)\n        val u = new Array[Int](n)\n      \
    \  val v = new Array[Int](n)\n        val w = new Array[Int](n)\n        val x\
    \ = new Array[Int](n)\n        val y = new Array[Int](n)\n        val z = new\
    \ Array[Int](n)\n        val a = new Array[Int](n)\n        val b = new Array[Int](n)\n\
    \        val c = new Array[Int](n)\n        val d = new Array[Int](n)\n      \
    \  val e = new Array[Int](n)\n        val f = new Array[Int](n)\n        val g\
    \ = new Array[Int](n)\n        val h = new Array[Int](n)\n        val i = new\
    \ Array[Int](n)\n        val j = new Array[Int](n)\n        val k = new Array[Int](n)\n\
    \        val l = new Array[Int](n)\n        val m = new Array[Int](n)\n      \
    \  val n = new Array[Int](n)\n        val o = new Array[Int](n)\n        val p\
    \ = new Array[Int](n)\n        val q = new Array[Int](n)\n        val r = new\
    \ Array[Int](n)\n        val s = new Array[Int](n)\n        val t = new Array[Int](n)\n\
    \        val u = new Array[Int](n)\n        val v = new Array[Int](n)\n      \
    \  val w = new Array[Int](n)\n        val x = new Array[Int](n)\n        val y\
    \ = new Array[Int](n)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpw3u290au.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = \e[33mnew\e[0m\
    \ \e[35mArray\e[0m[\e[35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpw3u290au.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e\
    [35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpw3u290au.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e\
    [35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpw3u290au.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e\
    [35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpw3u290au.scala:45:12 ---------------------------\e[0m\e[0m\n\e[31m45\
    \ |\e[0m        \e[33mval\e[0m \e[36me\e[0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e\
    [35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0me is already defined as \e[33mvalue\e[0m \e[35me\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0"
  stdout: ''
  timestamp: 1659798195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val count = mutable.ArrayBuffer.fill(n)(0)\n        val max = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3sraoqa7.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3sraoqa7.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3sraoqa7.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3sraoqa7.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3sraoqa7.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.Array"
  stdout: ''
  timestamp: 1659798192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(3l)\n        val c = mutable.ArrayBuffer(3l)\n\
    \        val d = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxg1_huco.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpxg1_huco.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpxg1_huco.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpxg1_huco.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpxg1_huco.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple"
  stdout: ''
  timestamp: 1659798194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + j\n            if (j > k) {\n                val tmp = j\n     \
    \           j = k\n                k = tmp\n            }\n            a.update(0,\
    \ k)\n        }\n        a.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv7bmtn9_.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpv7bmtn9_.scala:16:23 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpv7bmtn9_.scala:21:18 -----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                j = k\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val j\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpv7bmtn9_.scala:22:18 -----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                k = tmp\n\e[31m\e[31m   |\e[0m      \
    \          ^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val k\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659798194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        var i = 0\n        while (i < n) {\n            a.append(i * i - i +\
    \ 1)\n            b.append(i * i - i + 1)\n            c.append(i * i - i + 1)\n\
    \            d.append((i * i - i + 1) / 3)\n            i += 1\n        }\n  \
    \      val triple = a.zip(b.zip(c.zip(d.zip(a)))).filter(_._1.sum % 3 == 0).length\n\
    \        triples += triple\n        triples.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsnomdo2n.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpsnomdo2n.scala:16:16 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpsnomdo2n.scala:17:16 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpsnomdo2n.scala:18:16 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpsnomdo2n.scala:19:22 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n5 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798190
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i * i\n            a += j\n            a += k\n        }\n        val\
    \ result = a.filter(_ % 3 == 0).length\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi1c3kpvl.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val count = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpemlxkj9w.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpemlxkj9w.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpemlxkj9w.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpemlxkj9w.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpemlxkj9w.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that "
  stdout: ''
  timestamp: 1659798194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.to\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvj06n846.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvj06n846.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvj06n846.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvj06n846.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvj06n846.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded"
  stdout: ''
  timestamp: 1659798195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        val m = scala.math.pow(3, n)\n        for(i <- 1 to n) {\n          \
    \  for(j <- 1 to n) {\n                for(k <- 1 to n) {\n                  \
    \  if(i+j+k == m) {\n                        a += (i*i*i) + (j*j*j) + (k*k*k)\n\
    \                    }\n                }\n            }\n        }\n        a.toList.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd4z4pfnh.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpd4z4pfnh.scala:18:26 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd4z4pfnh.scala:19:30\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mfor\e[0m(k\
    \ <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                             \
    \ ^\e[0m\n\e[31m   |\e[0m                              Found:    (n : Long)\n\e\
    [31m   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpr3nrau4x.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpr3nrau4x.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpr3nrau4x.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mi\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mi is already defined as \e[33mvalue\e[0m \e[35mi\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpr3nrau4x.scala:25:12 ---------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mval\e[0m \e[36mj\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mj is already defined as \e[33mvalue\e[0m \e[35mj\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpr3nrau4x.scala:26:12 ---------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mk is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = Array.ofDim[Long](n)\n\
    \        var count = 0\n        var i = 0\n        var j = 0\n        var k =\
    \ 0\n        while(i < n && j < n && k < n) {\n            a(i) = i * i - i +\
    \ 1\n            i += 1\n            j += 1\n            k += 1\n        }\n \
    \       while(i < n) {\n            a(i) = i * i - i + 1\n            i += 1\n\
    \        }\n        while(j < n) {\n            a(j) = i * i - i + 1\n       \
    \     j += 1\n        }\n        while(k < n) {\n            a(k) = i * i - i\
    \ + 1\n            k += 1\n        }\n        for(i<-0 until a.length) {\n   \
    \         for(j<-0 until a.length) {\n                for(k<-0 until a.length)\
    \ {\n                    if(a(i) + a(j) + a(k) % 3 == 0) {\n                 \
    \       count += 1\n                    }\n                }\n            }\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpp_v02qkm.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for(i <- 1l to n){\n            for(j <- i to n){\n                for(k\
    \ <- i to n){\n                    if(i+j+k == i*i*k){\n                     \
    \   a += (i*i*k).toLong\n                    }\n                }\n          \
    \  }\n        }\n        a.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwjo2ss0e.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            a += i * i - i + 1\n        }\n     \
    \   val maxTriples = a.filter(_ % 3 == 0).length\n        return maxTriples\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9mrm_p72.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n && j < n && k < n) {\n            if(a(i) + a(j) + a(k)\
    \ = 3) {\n                count += 1\n            }\n            i += 1\n    \
    \        j += 1\n            k += 1\n        }\n        count\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpoacd4aa2.scala:21:34 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m(a(i) + a(j) + a(k) = \e[31m3\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                                  ^\e[0m\n\e[31m\
    \   |\e[0m                                  ')' expected, but '=' found\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpoacd4aa2.scala:15:58 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                                           \
    \               ^\e[0m\n\e[31m   |\e[0m                                      \
    \              Found:    (n : Long)\n\e[31m   |\e[0m                         \
    \                           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpoacd4aa2.scala:21:15 --------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m            \e[33mif\e[0m(a(i) + a(j) + a(k) = \e[31m3\e[0m)\
    \ {\n\e[31m\e[31m   |\e[0m               ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m               Found:    Int\n\e[31m   |\e[0m               Required: Boolean\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798200
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val triples = mutable.\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpiqvperlh.scala:50:4 ----------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpiqvperlh.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiqvperlh.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiqvperlh.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiqvperlh.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the sa"
  stdout: ''
  timestamp: 1659798169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmppgcz_8pt.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppgcz_8pt.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppgcz_8pt.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppgcz_8pt.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppgcz_8pt.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.Array"
  stdout: ''
  timestamp: 1659798199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val b = Array.ofDim[Long](n)\n        val c = Array.ofDim[Long](n)\n\
    \        val d = Array.ofDim[Long](n)\n        val e = Array.ofDim[Long](n)\n\
    \        val f = Array.ofDim[Long](n)\n        val g = Array.ofDim[Long](n)\n\
    \        val h = Array.ofDim[Long](n)\n        val i = Array.ofDim[Long](n)\n\
    \        val j = Array.ofDim[Long](n)\n        val k = Array.ofDim[Long](n)\n\
    \        val l = Array.ofDim[Long](n)\n        val m = Array.ofDim[Long](n)\n\
    \        val n = Array.ofDim[Long](n)\n        val o = Array.ofDim[Long](n)\n\
    \        val p = Array.ofDim[Long](n)\n        val q = Array.ofDim[Long](n)\n\
    \        val r = Array.ofDim[Long](n)\n        val s = Array.ofDim[Long](n)\n\
    \        val t = Array.ofDim[Long](n)\n        val u = Array.ofDim[Long](n)\n\
    \        val v = Array.ofDim[Long](n)\n        val w = Array.ofDim[Long](n)\n\
    \        val x = Array.ofDim[Long](n)\n        val y = Array.ofDim[Long](n)\n\
    \        val z = Array.ofDim[Long](n)\n        val a = Array.ofDim[Long](n)\n\
    \        val b = Array.ofDim[Long](n)\n        val c = Array.ofDim[Long](n)\n\
    \        val d = Array.ofDim[Long](n)\n        val e = Array.ofDim[Long](n)\n\
    \        val f = Array.ofDim[Long](n)\n        val g = Array.ofDim[Long](n)\n\
    \        val h = Array.ofDim[Long](n)\n        val i = Array.ofDim[Long](n)\n\
    \        val j = Array.ofDim[Long](n)\n        val k = Array.ofDim[Long](n)\n\
    \        val l = Array.ofDim[Long](n)\n        val m = Array.ofDim[Long](n)\n\
    \        val n = Array.ofDim[Long](n)\n        val o = Array.ofDim[Long](n)\n\
    \        val p = Array.ofDim[Long](n)\n        val q = Array.ofDim[Long](n)\n\
    \        val r = Array.ofDim[Long](n)\n        val s = Array.ofDim[Long](n)\n\
    \        val t = Array.ofDim[Long](n)\n        val u = Array.ofDim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmf6u26o8.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = Array.ofDim[\e\
    [35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpmf6u26o8.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = Array.ofDim[\e[35mLong\e[0m](n)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb\
    \ is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmf6u26o8.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined as \e\
    [33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpmf6u26o8.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = Array.ofDim[\e\
    [35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpmf6u26o8.scala:45:12 ---------------------------\e[0m\e[0m\n\e[31m45\
    \ |\e[0m        \e[33mval\e[0m \e[36me\e[0m = Array.ofDim[\e[35mLong\e[0m](n)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0me\
    \ is already defined as \e[33mvalue\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the sam"
  stdout: ''
  timestamp: 1659798204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpq_gkc81j.scala:51:41 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(\n\
    \e[31m\e[31m   |\e[0m                                         ^\e[0m\n\e[31m \
    \  |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mm\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mm\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mn is"
  stdout: ''
  timestamp: 1659798181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + i + 1\n            a += j\n            a += k\n        }\n     \
    \   val max = a.reduceLeft(_ + _)\n        if (max % 3 == 0) 1\n        else 0\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpydl0jdzw.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798200
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxqvxsitj.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxqvxsitj.scala:39:12 ---------------------------\e[0m\e[0m\n\e[31m39\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxqvxsitj.scala:40:12 ---------------------------\e[0m\e[0m\n\e[31m40\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxqvxsitj.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36mr\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mr is already defined as \e[33mvalue\e[0m \e[35mr\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxqvxsitj.scala:45:12 ---------------------------\e[0m\e[0m\n\e[31m45\
    \ |\e[0m        \e[33mval\e[0m \e[36ms\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ms is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for(i <- 1 until n){\n            val j = i * i - i + 1\n           \
    \ val k = i * i + j\n            val l = i * i - j\n            val m = i * i\
    \ + k\n            val n = i * i - k\n            val o = i * i + l\n        \
    \    val p = i * i - m\n            val q = i * i + n\n            val r = i *\
    \ i - o\n            val s = i * i + p\n            val t = i * i - q\n      \
    \      val u = i * i + r\n            val v = i * i - s\n            val w = i\
    \ * i + t\n            val x = i * i - u\n            val y = i * i + v\n    \
    \        val z = i * i - w\n            val a = a + 1\n            a.update(0,\
    \ i)\n            a.update(1, j)\n            a.update(2, k)\n            a.update(3,\
    \ l)\n            a.update(4, m)\n            a.update(5, n)\n            a.update(6,\
    \ o)\n            a.update(7, p)\n            a.update(8, q)\n            a.update(9,\
    \ r)\n            a.update(10, s)\n            a.update(11, t)\n            a.update(12,\
    \ u)\n            a.update(13, v)\n            a.update(14, w)\n            a.update(15,\
    \ x)\n            a.update(16, y)\n            a.update(17, z)\n        }\n  \
    \      a.toList.max\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpms_75mfo.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpms_75mfo.scala:16:25 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m until n){\n\e[31m\e\
    [31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m                \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                         Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for(i <- 1l to n){\n            val j = i * i - i + 1\n            val\
    \ k = i * i + i + j\n            val m = k * k\n            if(m == n){\n    \
    \            a.append(i)\n                a.append(j)\n                a.append(k)\n\
    \            }\n        }\n        a.toList.sortWith((a, b) => b - a).last\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxfi2xept.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        while (i < n) {\n            a += i * i - i + 1\n\
    \            i += 1\n        }\n        val n = a.length\n        var i = 0\n\
    \        var j = 0\n        var k = 0\n        var count = 0\n        while (i\
    \ < n) {\n            while (j < n) {\n                while (k < n) {\n     \
    \               if (a(i) + a(j) + a(k) % 3 == 0) {\n                        count\
    \ += 1\n                    }\n                    k += 1\n                }\n\
    \                j += 1\n            }\n            i += 1\n        }\n      \
    \  count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpab8lb9ho.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mvar\e[0m \e[36mi\e[0m = \e[31m0\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mi is already defined\
    \ as \e[33mvariable\e[0m \e[35mi\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659798199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            for (j <- 1 to\
    \ n) {\n                if (i != j && j != i) {\n                    for (k <-\
    \ 1 to n) {\n                        if (i != k && j != k && k != i) {\n     \
    \                       if (a(i) + a(j) + a(k) == 3) {\n                     \
    \           count += 1\n                                a(i) = a(j) = a(k) = i\n\
    \                                a(k) = i\n                            }\n   \
    \                     }\n                    }\n                }\n          \
    \  }\n        }\n        a.toList.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmrj93w_o.scala:15:58\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                          ^\e[0m\n\e\
    [31m   |\e[0m                                                    Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                                   \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmrj93w_o.scala:17:23\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmrj93w_o.scala:18:27 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            \e[33mfor\e[0m (j <- \e[31m1\e[0m to n) {\n\e[31m\e[31m  \
    \ |\e[0m                           ^\e[0m\n\e[31m   |\e[0m                   \
    \        Found:    (n : Long)\n\e[31m   |\e[0m                           Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmrj93w_o.scala:20:35\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m                    \e[33mfor\e\
    [0m (k <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                        \
    \           ^\e[0m\n\e[31m   |\e[0m                                   Found: \
    \   (n : Long)\n\e[31m   |\e[0m                                   Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmrj93w_o.scala:24:46\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m                            \
    \    a(i) = a(j) = a(k) = i\n\e[31m\e[31m   |\e[0m                           \
    \                   ^^^^^^^^\e[0m\n\e["
  stdout: ''
  timestamp: 1659798204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ maxTriplesIndex = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriplesIndex\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5st0_yp5.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5st0_yp5.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxTriplesIndex\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriplesIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxTriplesIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp5st0_yp5.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriplesIndex\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriplesIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxTriplesIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp5st0_yp5.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriplesIndex\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriplesIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxTriplesIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp5st0_yp5.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxTriplesIndex\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriplesIndex is already defined as"
  stdout: ''
  timestamp: 1659798203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfoz7v7wf.scala:55:4 ----------------------------\e\
    [0m\e[0m\n\e[31m55 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpfoz7v7wf.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0l\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpfoz7v7wf.scala:19:12 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0l\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpfoz7v7wf.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0l\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpfoz7v7wf.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0l\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpfoz7v7wf.scala:22:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1659798204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmppgcz_8pt.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppgcz_8pt.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppgcz_8pt.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppgcz_8pt.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmppgcz_8pt.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.Array"
  stdout: ''
  timestamp: 1659798199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkugz8daz.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = scala.math.BigInt(m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mm\
    \ is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkugz8daz.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = scala.math.BigInt(n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkugz8daz.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = scala.math.BigInt(m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mm is already\
    \ defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkugz8daz.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = scala.math.BigInt(n)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mn\
    \ is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkugz8daz.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mm\e[0m = scala.math.BigInt(m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- "
  stdout: ''
  timestamp: 1659798206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val t = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmps140i2i8.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmps140i2i8.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mval\e[0m \e[36mi\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mi is already defined as \e[33mvalue\e[0m \e[35mi\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmps140i2i8.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mj\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mj is already defined as \e[33mvalue\e[0m \e[35mj\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmps140i2i8.scala:25:12 ---------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mk is already defined as \e[33mvalue\e[0m \e[35mk\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmps140i2i8.scala:26:12 ---------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m        \e[33mval\e[0m \e[36mt\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mt is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i * i\n            a += j\n            a += k\n        }\n        val\
    \ result = a.filter(_ % 3 == 0).length\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi1c3kpvl.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val result = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val max =\
    \ (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = (n.toInt * n.toInt).toInt\n        val maxTriples = mutable.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpauttia8e.scala:47:4 ----------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpauttia8e.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpauttia8e.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = (n.toInt * n.toInt).toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpauttia8e.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpauttia8e.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = (n.toInt * n.toInt).toInt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of to"
  stdout: ''
  timestamp: 1659798205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriples = mutable.ArrayBuffer(3l)\n        val triple = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.ArrayBuffer(3l)\n\
    \        val maxTriple = mutable.ArrayBuffer(3l)\n        val maxTriples = mutable.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkb43xf_i.scala:56:4 ----------------------------\e\
    [0m\e[0m\n\e[31m56 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkb43xf_i.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpkb43xf_i.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpkb43xf_i.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpkb43xf_i.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Nam"
  stdout: ''
  timestamp: 1659798207
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = new Array[Long](n)\n        val c = new Array[Long](n)\n    \
    \    val d = new Array[Long](n)\n        val e = new Array[Long](n)\n        val\
    \ f = new Array[Long](n)\n        val g = new Array[Long](n)\n        val h =\
    \ new Array[Long](n)\n        val i = new Array[Long](n)\n        val j = new\
    \ Array[Long](n)\n        val k = new Array[Long](n)\n        val l = new Array[Long](n)\n\
    \        val m = new Array[Long](n)\n        val n = new Array[Long](n)\n    \
    \    val o = new Array[Long](n)\n        val p = new Array[Long](n)\n        val\
    \ q = new Array[Long](n)\n        val r = new Array[Long](n)\n        val s =\
    \ new Array[Long](n)\n        val t = new Array[Long](n)\n        val u = new\
    \ Array[Long](n)\n        val v = new Array[Long](n)\n        val w = new Array[Long](n)\n\
    \        val x = new Array[Long](n)\n        val y = new Array[Long](n)\n    \
    \    val z = new Array[Long](n)\n        val a = new Array[Long](n)\n        val\
    \ b = new Array[Long](n)\n        val c = new Array[Long](n)\n        val d =\
    \ new Array[Long](n)\n        val e = new Array[Long](n)\n        val f = new\
    \ Array[Long](n)\n        val g = new Array[Long](n)\n        val h = new Array[Long](n)\n\
    \        val i = new Array[Long](n)\n        val j = new Array[Long](n)\n    \
    \    val k = new Array[Long](n)\n        val l = new Array[Long](n)\n        val\
    \ m = new Array[Long](n)\n        val n = new Array[Long](n)\n        val o =\
    \ new Array[Long](n)\n        val p = new Array[Long](n)\n        val q = new\
    \ Array[Long](n)\n        val r = new Array[Long](n)\n        val s = new Array[Long](n)\n\
    \        val t = new Array[Long](n)\n        val u = new Array[Long](n)\n    \
    \    val v = new Array[Long](n)\n        val w = new Array[Long](n)\n        val\
    \ x = new Array[Long](n)\n        val y = new Array[Long](n)\n        val \n \
    \   }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp7mdzi59j.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp7mdzi59j.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = \e[33mnew\e[0m\
    \ \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp7mdzi59j.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e\
    [35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp7mdzi59j.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e\
    [35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp7mdzi59j.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e\
    [35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Err"
  stdout: ''
  timestamp: 1659798209
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val max = 0\n        val min = (n + 1).toInt\n        val maxTriples\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n) {\n           \
    \ val j = i\n            val k = n - i\n            val sum = a(i) + a(j) + a(k)\
    \ - 3\n            if (sum > max) {\n                max = sum\n             \
    \   maxTriples = maxTriples.updated(i, sum)\n            }\n            if (sum\
    \ < min) {\n                min = sum\n                maxTriples = maxTriples.updated(i,\
    \ sum)\n            }\n        }\n        max match {\n            case 0 => 0\n\
    \            case _ => maxTriples.toList.length\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9m1ufvhq.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9m1ufvhq.scala:18:25 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9m1ufvhq.scala:19:23 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp9m1ufvhq.scala:24:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m24 |\e[0m                max\
    \ = sum\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Reassignment to val max\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmp9m1ufvhq.scala:25:27 -----------------------------\e[0m\e\
    [0m\n\e[31m25 |\e[0m                maxTriples = maxTriples.updated(i, sum)\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Reassignment to val maxTriples\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E052] Type Error: /tmp/tmp9m1ufvhq.scala:28:20 -----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m                min = sum\n\e[31m\e[31m   |\e[0m "
  stdout: ''
  timestamp: 1659798206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = scala.math.BigInt(3)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.BigInt(n)\n\
    \        val m = scala.math.BigInt(m)\n        val n = scala.math.Big\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpt3rw8mlv.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = scala.math.BigInt(m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mm\
    \ is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpt3rw8mlv.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = scala.math.BigInt(n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpt3rw8mlv.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = scala.math.BigInt(m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mm is already\
    \ defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpt3rw8mlv.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = scala.math.BigInt(n)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mn\
    \ is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpt3rw8mlv.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mm\e[0m = scala.math.BigInt(m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- "
  stdout: ''
  timestamp: 1659798207
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    while(j < n) {\n            a.append(j * j - j + 1)\n            j += 1\n\
    \        }\n        while(k < (n - 1)) {\n            a.append(k * k - k + 1)\n\
    \            k += 1\n        }\n        val count = a.count(_ % 3 == 0)\n    \
    \    return count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmphcicq2o0.scala:35)\n\tat Problem.main(tmphcicq2o0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val i = mutable.ArrayBuffer.fill(n)(0)\n        val j = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val l = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwbmfjfnp.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpwbmfjfnp.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpwbmfjfnp.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mi\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mi is already defined as \e[33mvalue\e[0m \e[35mi\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpwbmfjfnp.scala:25:12 ---------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mval\e[0m \e[36mj\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mj is already defined as \e[33mvalue\e[0m \e[35mj\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpwbmfjfnp.scala:26:12 ---------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mk is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            a.append(i * i - i + 1)\n           \
    \ i += 1\n        }\n        while(j < n) {\n            while(j < n && k < 3)\
    \ {\n                k += 1\n                j += 1\n            }\n         \
    \   count += k\n            k += 1\n            j += 1\n        }\n        count\
    \ += k\n        count += j\n        count += i\n        count += a.size - 1\n\
    \        count += a.size - 2\n        count += a.size - 3\n        count += a.size\
    \ - 4\n        count += a.size - 5\n        count += a.size - 6\n        count\
    \ += a.size - 7\n        count += a.size - 8\n        count += a.size - 9\n  \
    \      count += a.size - 10\n        count += a.size - 11\n        count += a.size\
    \ - 12\n        count += a.size - 13\n        count += a.size - 14\n        count\
    \ += a.size - 15\n        count += a.size - 16\n        count += a.size - 17\n\
    \        count += a.size - 18\n        count += a.size - 19\n        count +=\
    \ a.size - 20\n        count += a.size - 21\n        count += a.size - 22\n  \
    \      count += a.size - 23\n        count += a.size - 24\n        count += a.size\
    \ - 25\n        count += a.size - 26\n        count += a.size - 27\n        count\
    \ += a.size - 28\n        count += a.size - 29\n        count += a.size - 30\n\
    \        count += a.size - 31\n        count += a.size - 32\n        count +=\
    \ a.size - 33\n        count += a.size - 34\n        count += a.size - 35\n  \
    \      count += a.size - 36\n        count += a.size - 37\n        count += a.size\
    \ - 38\n        count += a.size - 39\n        count += a.size - 40\n        count\
    \ += a.size - 41\n        count += a.size - 42\n        count += a.size - 43\n\
    \        count += a.size - 44\n        count += a.size - 45\n        count +=\
    \ a.size - 46\n        count += a.size - 47\n        count += a.size - 48\n  \
    \      count += a.size - 49\n        count += a.size - 50\n        count += a.size\
    \ - 51\n        count += a.size - 52\n        count += a.size - 53\n        count\
    \ += a.size - 54\n        count += a.size - 55\n        count += a.size - 56\n\
    \        count += a.size - 57\n        count += a.size - 58\n        count +=\
    \ a.size - 59\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp96tdi2ez.scala:94:8\
    \ ---------------------\e[0m\e[0m\n\e[31m94 |\e[0m        count += a.size - \e\
    [31m59\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m        Found:    Unit\n\e[31m   |\e[0m        Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659798208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for (i <- 1l to n) a += i * i - i + 1\n        val count = a.filter(_\
    \ % 3 == 0).size\n        a.clear()\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12rq5l26.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = 0\n        val triples = 0\n        val triple = 0\n   \
    \     val triples = 0\n        val triple = 0\n        val triples = 0\n     \
    \   val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu8vn0jhv.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriples\
    \ is already defined as \e[33mvalue\e[0m \e[35mtriples\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu8vn0jhv.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mtriple\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu8vn0jhv.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriples is already defined\
    \ as \e[33mvalue\e[0m \e[35mtriples\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu8vn0jhv.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriple is\
    \ already defined as \e[33mvalue\e[0m \e[35mtriple\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu8vn0jhv.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mtriples\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu8vn"
  stdout: ''
  timestamp: 1659798208
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    a(i) = i * i - i + 1\n                    a(j)\
    \ = i * i - j + 1\n                    a(k) = i * i - k + 1\n                \
    \    count += 1\n                    k += 1\n                }\n             \
    \   j += 1\n            }\n            i += 1\n        }\n        a.toList.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.IndexOutOfBoundsException: 0 is out of bounds (min 0, max -1)\n\
    \tat scala.collection.mutable.ArrayBuffer.update(ArrayBuffer.scala:99)\n\tat Problem$.getMaxTriples(tmp032jxecm.scala:23)\n\
    \tat Problem$.main(tmp032jxecm.scala:36)\n\tat Problem.main(tmp032jxecm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798212
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val max = 0\n        val maxTriples = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i - 1\n            val k = i\
    \ + 1\n            val sum = i * i - i + 1\n            val triples = if (sum\
    \ % 3 == 0) 1 else 0\n            val triple = if (sum > max) triples else 0\n\
    \            val triples = if (sum > max) 1 else 0\n            val triple = if\
    \ (sum > max) 1 else 0\n            val triples = if (sum > max) 1 else 0\n  \
    \          val triple = if (sum > max) 1 else 0\n            val triples = if\
    \ (sum > max) 1 else 0\n            val triple = if (sum > max) 1 else 0\n   \
    \         val triples = if (sum > max) 1 else 0\n            val triple = if (sum\
    \ > max) 1 else 0\n            val triples = if (sum > max) 1 else 0\n       \
    \     val triple = if (sum > max) 1 else 0\n            val triples = if (sum\
    \ > max) 1 else 0\n            val triple = if (sum > max) 1 else 0\n        \
    \    val triples = if (sum > max) 1 else 0\n            val triple = if (sum >\
    \ max) 1 else 0\n            val triples = if (sum > max) 1 else 0\n         \
    \   val triple = if (sum > max) 1 else 0\n            val triples = if (sum >\
    \ max) 1 else 0\n            val triple = if (sum > max) 1 else 0\n          \
    \  val triples = if (sum > max) 1 else 0\n            val triple = if (sum > max)\
    \ 1 else 0\n            val triples = if (sum > max) 1 else 0\n            val\
    \ triple = if (sum > max) 1 else 0\n            val triples = if (sum > max) 1\
    \ else 0\n            val triple = if (sum > max) 1 else 0\n            val triples\
    \ = if (sum > max) 1 else 0\n            val triple = if (sum > max) 1 else 0\n\
    \            val triples = if (sum > max) 1 else 0\n            val triple = if\
    \ (sum > max) 1 else 0\n            val triples = if (sum > max) 1 else 0\n  \
    \          val triple = if (sum > max) 1 else 0\n            val triples = if\
    \ (sum > max) 1 else 0\n            val triple = if (sum > max) 1 else 0\n   \
    \         val triples = if (sum > max) 1 else 0\n            val triple = if (sum\
    \ > max) 1 else 0\n            val triples = if (sum > max) 1 else 0\n       \
    \     val triple = if (sum > max) 1 else \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2zkihhws.scala:59:46 ---------------------------\e\
    [0m\e[0m\n\e[31m59 |\e[0m            \e[33mval\e[0m \e[36mtriple\e[0m = \e[33mif\e\
    [0m (sum > max) \e[31m1\e[0m \e[33melse\e[0m \n\e[31m\e[31m   |\e[0m         \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \                       expression expected but \e[31m'}'\e[0m found\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2zkihhws.scala:69:0 ----------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2zkihhws.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2zkihhws.scala:17:25\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxTriples\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp2zkihhws.scala:18:23 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e\
    [0m                       ^\e[0m\n\e[31m   |\e[0m                       Found:\
    \    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2zkihhws.scala:24:16 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mval\e[0m \e[36mtriples\e[0m = \e[33mif\e\
    [0m (sum > max) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^"
  stdout: ''
  timestamp: 1659798212
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        while (i < n) {\n            a += i * i - i + 1\n\
    \            i += 1\n        }\n        val n = a.length\n        var count =\
    \ 0\n        var j = 0\n        while (j < n) {\n            var k = 0\n     \
    \       while (k < n) {\n                if (j > k) {\n                    if\
    \ (a[j] + a[k] == 0) {\n                        count += 1\n                 \
    \   }\n                }\n                k += 1\n            }\n            j\
    \ += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprn7_9h1m.scala:28:26 ------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m                    \e[33mif\e[0m (a[\e[35mj\e[0m] +\
    \ a[\e[35mk\e[0m] == \e[31m0\e[0m) {\n\e[31m\e[31m   |\e[0m                  \
    \        ^\e[0m\n\e[31m   |\e[0m                          Not found: type j\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0l)\n        val i = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0l)\n        val k = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0l)\n        val n = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val k = mutable.\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaw5zo9k9.scala:55:4 ----------------------------\e\
    [0m\e[0m\n\e[31m55 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpaw5zo9k9.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0l\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mk is already defined as \e[33mvalue\e[0m \e[35mk\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpaw5zo9k9.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0l\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpaw5zo9k9.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0l\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpaw5zo9k9.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0l\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mk is already defined as \e[33mvalue\e[0m \e[35mk\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpaw5zo9k9.scala:25:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1659798211
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            a.append(i * i - i + 1)\n          \
    \  i += 1\n        }\n        while (j < n) {\n            while (k < n) {\n \
    \               count += 1\n                k += 1\n            }\n          \
    \  j += 1\n        }\n        val triples = a.filter(_ % 3 == 0)\n        val\
    \ tripleCount = triples.count(_ % 3 == 0)\n        tripleCount\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpb95v3p2v.scala:37)\n\tat Problem.main(tmpb95v3p2v.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798213
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2k04euen.scala:51:41 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(\n\
    \e[31m\e[31m   |\e[0m                                         ^\e[0m\n\e[31m \
    \  |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:41:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m\
    \ \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:42:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m42 |\e[0m        \e[33mval\e[0m\
    \ \e[36mb\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:44:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m\
    \ \e[36md\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0md is"
  stdout: ''
  timestamp: 1659798167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while(i < n) {\n            while(j < n) {\n                while(k\
    \ <= n) {\n                    if(i+j+k == n) {\n                        count\
    \ += 1\n                    }\n                    k += 1\n                }\n\
    \                j += 1\n            }\n            i += 1\n        }\n      \
    \  a.toList.length\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj5ma35g1.scala:15:58\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                          ^\e[0m\n\e\
    [31m   |\e[0m                                                    Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                                   \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798212
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val count = mutable.ArrayBuffer.fill(n)(0l)\n        val triples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n)(0l)\n        val maxTriple = mutable.\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7rre0nb6.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp7rre0nb6.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7rre0nb6.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7rre0nb6.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp7rre0nb6.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined i"
  stdout: ''
  timestamp: 1659798213
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val maxTriples = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriple\
    \ = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val maxTriples = mut\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpntdo2a_9.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpntdo2a_9.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpntdo2a_9.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxTriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriples is already defined as \e[33mvalue\e[0m \e[35mmaxTriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpntdo2a_9.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxTriple\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxTriple is already defined as \e[33mvalue\e[0m \e[35mmaxTriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpntdo2a_9.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        "
  stdout: ''
  timestamp: 1659798182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            a.append(i * i - i + 1)\n            i += 1\n        }\n    \
    \    while(j < n) {\n            a.append(j * j - j + 1)\n            j += 1\n\
    \        }\n        while(k <n) {\n            a.append(k * k - k + 1)\n     \
    \       k += 1\n        }\n        val count = a.filter(_ % 3 == 0).length\n \
    \       return count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvkfqssp7.scala:27:16 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mwhile\e[0m(k <n) {\n\e[31m\e[31m   |\e\
    [0m                ^\e[0m\n\e[31m   |\e[0m                ')' expected, but $XMLSTART$<\
    \ found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvkfqssp7.scala:27:14\
    \ --------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mwhile\e[0m(k <n)\
    \ {\n\e[31m\e[31m   |\e[0m              ^\e[0m\n\e[31m   |\e[0m              Found:\
    \    (k : Int)\n\e[31m   |\e[0m              Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659798213
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            a += i * i - i + 1\n            i += 1\n        }\n        while(j\
    \ < n) {\n            a += j * j - j + 1\n            j += 1\n        }\n    \
    \    while(k < n) {\n            a += k * k - k + 1\n            k += 1\n    \
    \    }\n        val count = a.filter(_ % 3 == 0).length\n        return count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplkwm4wyz.scala:35)\n\tat Problem.main(tmplkwm4wyz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        val m = scala.math.BigInt(n)\n        val i = scala.math.BigInt(1)\n\
    \        val j = scala.math.BigInt(2)\n        val k = scala.math.BigInt(3)\n\
    \        while(i <= m) {\n            a.append(i)\n            i = i * i - i +\
    \ 1\n        }\n        a.toList.sortWith((a, b) => a < b).takeWhile(x => x <\
    \ m).foreach(x => \n            a.append(x))\n        a.toList.sortWith((a, b)\
    \ => a < b).takeWhile(x => x < m).foreach(x => \n            a.append(x))\n  \
    \      a.toList.sortWith((a, b) => a < b).takeWhile(x => x < m).foreach(x => \n\
    \            a.append(x))\n        a.toList.sortWith((a, b) => a < b).takeWhile(x\
    \ => x < m).foreach(x => \n            a.append(x))\n        a.toList.sortWith((a,\
    \ b) => a < b).takeWhile(x => x < m).foreach(x => \n            a.append(x))\n\
    \        a.toList.sortWith((a, b) => a < b).takeWhile(x => x < m).foreach(x =>\
    \ \n            a.append(x))\n        a.toList.sortWith((a, b) => a < b).takeWhile(x\
    \ => x < m).foreach(x => \n            a.append(x))\n        a.toList.sortWith((a,\
    \ b) => a < b).takeWhile(x => x < m).foreach(x => \n            a.append(x))\n\
    \        a.toList.sortWith((a, b) => a < b).takeWhile(x => x < m).foreach(x =>\
    \ \n            a.append(x))\n        a.toList.sortWith((a, b) => a < b).takeWhile(x\
    \ => x < m).foreach(x => \n            a.append(x))\n        a.toList.sortWith((a,\
    \ b) => a < b).takeWhile(x => x < m).foreach(x => \n            a.append(x))\n\
    \        a.toList.sortWith((a, b) => a < b).takeWhile(x => x < m).foreach(x =>\
    \ \n            a.append(x))\n        a.toList.sortWith((a, b) => a < b).takeWhile(x\
    \ => x < m).foreach(x => \n            a.append(x))\n        a.toList.sortWith((a,\
    \ b) => a < b).takeWhile(x => x < m).foreach(x => \n            a.append(x))\n\
    \        a.toList.\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3n3yo7v3.scala:53:4 ----------------------------\e\
    [0m\e[0m\n\e[31m53 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E134] Type Error:\
    \ /tmp/tmp3n3yo7v3.scala:21:14 -----------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m            a.append(i)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mappend\e\
    [0m in \e[33mtrait\e[0m \e[35mBuffer\e[0m with types\n\e[31m   |\e[0m (elems:\
    \ Long*): (a : scala.collection.mutable.ArrayBuffer[Long])\n\e[31m   |\e[0m (elem:\
    \ Long): (a : scala.collection.mutable.ArrayBuffer[Long])\n\e[31m   |\e[0mmatch\
    \ arguments ((i : BigInt))\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp3n3yo7v3.scala:22:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            i = i *\
    \ i - i + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m            Reassignment to val i\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798214
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(3l)\n        val c = mutable.ArrayBuffer(3l)\n\
    \        val d = mutable.ArrayBuffer(3l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n     \
    \   val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val\
    \ triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple\
    \ = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n     \
    \   val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val\
    \ triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples\
    \ = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n     \
    \   val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val\
    \ triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple\
    \ = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n     \
    \   val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val\
    \ triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples\
    \ = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n     \
    \   val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val\
    \ triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple\
    \ = 0\n        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n\
    \        val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n     \
    \   val triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val\
    \ triples = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples\
    \ = mutable.ArrayBuffer(3l)\n        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = 0\n        val triples = mutable.ArrayBuffer(3l)\n     \
    \   val triple = 0\n        val triples = mutable.ArrayBuffer(\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpr7ysz22v.scala:77:42 ---------------------------\e\
    [0m\e[0m\n\e[31m77 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer(\n\
    \e[31m\e[31m   |\e[0m                                          ^\e[0m\n\e[31m\
    \   |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpr7ysz22v.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mtriples\e[0m = mutable.ArrayBuffer(\e[31m3l\e[0m)\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriples\
    \ is already defined as \e[33mvalue\e[0m \e[35mtriples\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpr7ysz22v.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mtriple\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr7ysz22v.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpr7ysz22v.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriple is already defined\
    \ as \e[33mvalue\e[0m \e[35mtriple\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods "
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val c = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ d = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val g = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ h = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val k = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ l = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val o = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ p = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val q = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val r = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val s = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ t = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val u = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val v = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val w = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ x = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val y = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val z = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val\
    \ b = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n     \
    \   val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp8lun6xzq.scala:45:11 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp8lun6xzq.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp8lun6xzq.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp8lun6xzq.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp8lun6xzq.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[3"
  stdout: ''
  timestamp: 1659798217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val m = scala.math.pow(3,\
    \ a.length)\n        val n = scala.math.pow(3, a.length)\n        val \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp4wv3c0jy.scala:61:11 ---------------------------\e\
    [0m\e[0m\n\e[31m61 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp4wv3c0jy.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = scala.math.pow(\e\
    [31m3\e[0m, a.length)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp4wv3c0jy.scala:19:12 ---------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = scala.math.pow(\e[31m3\e[0m, a.length)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4wv3c0jy.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = scala.math.pow(\e[31m3\e[0m, a.length)\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mn is already\
    \ defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4wv3c0jy.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = scala.math.pow(\e\
    [31m3\e[0m, a.length)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Err"
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val j = i * i - i + 1\n            val\
    \ k = i * i + j\n            a += i\n            a += j\n            a += k\n\
    \        }\n        val res = a.filter(_ % 3 == 0).length\n        a.clear()\n\
    \        res\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqowzdamf.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798216
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n)(0)\n        val s = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n)(0)\n        val u = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n)(0)\n        val w = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n)(0)\n        val y = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n)(0)\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n)(0)\n        val c = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n)(0)\n        val e = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n)(0)\n        val g = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n)(0)\n        val m = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n)(0)\n        val o = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n)(0)\n        val q = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpp9ptlhvy.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:44:12 ---------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpp9ptlhvy.scala:45:12 ---------------------------\e[0m\e[0m\n\e[31m45\
    \ |\e[0m        \e[33mval\e[0m \e[36me\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0me is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2k04euen.scala:51:41 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(\n\
    \e[31m\e[31m   |\e[0m                                         ^\e[0m\n\e[31m \
    \  |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:41:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m\
    \ \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:42:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m42 |\e[0m        \e[33mval\e[0m\
    \ \e[36mb\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:44:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m\
    \ \e[36md\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0md is"
  stdout: ''
  timestamp: 1659798167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val triples = mutable.ArrayBuffer(3l)\n\
    \        val triple = 0\n        val triples = 0\n        val triple = 0\n   \
    \     val triples = 0\n        val triple = 0\n        val triples = 0\n     \
    \   val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        val triple = 0\n        val triples = 0\n       \
    \ val triple = 0\n        val triples = 0\n        val triple = 0\n        val\
    \ triples = 0\n        val triple = 0\n        val triples = 0\n        val triple\
    \ = 0\n        val triples = 0\n        val triple = 0\n        val triples =\
    \ 0\n        val triple = 0\n        val triples = 0\n        val triple = 0\n\
    \        val triples = 0\n        val triple = 0\n        val triples = 0\n  \
    \      val triple = 0\n        val triples = 0\n        val triple = 0\n     \
    \   val triples = 0\n        \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu8vn0jhv.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriples\
    \ is already defined as \e[33mvalue\e[0m \e[35mtriples\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu8vn0jhv.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mtriple\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriple is already defined as \e[33mvalue\e[0m \e[35mtriple\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu8vn0jhv.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriples is already defined\
    \ as \e[33mvalue\e[0m \e[35mtriples\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu8vn0jhv.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mtriple\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtriple is\
    \ already defined as \e[33mvalue\e[0m \e[35mtriple\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu8vn0jhv.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mtriples\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtriples is already defined as \e[33mvalue\e[0m \e[35mtriples\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu8vn"
  stdout: ''
  timestamp: 1659798208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for(i <- 1 until n){\n            val j = i * i - i + 1\n           \
    \ val k = i * i + j\n            val l = i * i + k\n            a += i\n     \
    \       a += j\n            a += k\n            a += l\n        }\n        val\
    \ triples = a.toList\n        triples.sortWith(_ < _)\n        triples.count(_\
    \ % 3 == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnjnn0p7w.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpnjnn0p7w.scala:16:25 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m until n){\n\e[31m\e\
    [31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m                \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                         Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        val m = scala.math.max(scala.math.pow(n, 2), scala.math.pow(n, 3))\n\
    \        val n = scala.math.pow(n, 3)\n        val i = scala.math.pow(n, 2)\n\
    \        val j = scala.math.pow(n, 3)\n        val k = scala.math.pow(n, 4)\n\
    \        val l = scala.math.pow(n, 5)\n        val m = scala.math.pow(n, 6)\n\
    \        val n = scala.math.pow(n, 7)\n        val i = scala.math.pow(n, 8)\n\
    \        val j = scala.math.pow(n, 9)\n        val k = scala.math.pow(n, 10)\n\
    \        val l = scala.math.pow(n, 11)\n        val m = scala.math.pow(n, 12)\n\
    \        val n = scala.math.pow(n, 13)\n        val i = scala.math.pow(n, 14)\n\
    \        val j = scala.math.pow(n, 15)\n        val k = scala.math.pow(n, 16)\n\
    \        val l = scala.math.pow(n, 17)\n        val m = scala.math.pow(n, 18)\n\
    \        val n = scala.math.pow(n, 19)\n        val i = scala.math.pow(n, 20)\n\
    \        val j = scala.math.pow(n, 21)\n        val k = scala.math.pow(n, 22)\n\
    \        val l = scala.math.pow(n, 23)\n        val m = scala.math.pow(n, 24)\n\
    \        val n = scala.math.pow(n, 25)\n        val i = scala.math.pow(n, 26)\n\
    \        val j = scala.math.pow(n, 27)\n        val k = scala.math.pow(n, 28)\n\
    \        val l = scala.math.pow(n, 29)\n        val m = scala.math.pow(n, 30)\n\
    \        val n = scala.math.pow(n, 31)\n        val i = scala.math.pow(n, 32)\n\
    \        val j = scala.math.pow(n, 33)\n        val k = scala.math.pow(n, 34)\n\
    \        val l = scala.math.pow(n, 35)\n        val m = scala.math.pow(n, 36)\n\
    \        val n = scala.math.pow(n, 37)\n        val i = scala.math.pow(n, 38)\n\
    \        val j = scala.math.pow(n, 39)\n        val k = scala.math.pow(n, 40)\n\
    \        val l = scala.math.pow(n, 41)\n        val m = scala.math.pow(n, 42)\n\
    \        val n = scala.math.pow(n, 43)\n        val i = scala.math.pow(n, 44)\n\
    \        val j = scala.math.pow(n, 45)\n        val k = scala.math.pow(n, 46\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpv4d0r8ex.scala:63:4 ----------------------------\e\
    [0m\e[0m\n\e[31m63 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpv4d0r8ex.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mm\e[0m = scala.math.pow(n, \e[31m6\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mm is already defined as \e\
    [33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpv4d0r8ex.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = scala.math.pow(n,\
    \ \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpv4d0r8ex.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mi\e[0m = scala.math.pow(n, \e[31m8\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mi\
    \ is already defined as \e[33mvalue\e[0m \e[35mi\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpv4d0r8ex.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mj\e[0m = scala.math.pow(n, \e[31m9\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mj is already defined as \e\
    [33mvalue\e[0m \e[35mj\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpv4d0r8ex.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = scala.math.pow(n,\
    \ \e[31m10\e[0m)\n\e[31m\e[31m   |\e["
  stdout: ''
  timestamp: 1659798215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val n = mutable.ArrayBuffer.fill(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpq_gkc81j.scala:51:41 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(\n\
    \e[31m\e[31m   |\e[0m                                         ^\e[0m\n\e[31m \
    \  |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mm\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mm\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq_gkc81j.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mn is"
  stdout: ''
  timestamp: 1659798181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        while(i < n)\
    \ {\n            while(j < n) {\n                while(k <n) {\n             \
    \       if(i+j+k == n*n*n) \n                        a.add(i*n - i*i + i*j - i*k\
    \ + k*k*k)\n                    k++\n                }\n                j++\n\
    \            }\n            i++\n        }\n        a.toList.sortWith(_ < _)\n\
    \        a.length\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4pbmn48_.scala:21:24 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                \e[33mwhile\e[0m(k <n) {\n\e[31m\e[31m\
    \   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m                    \
    \    ')' expected, but $XMLSTART$< found\n\e[31m\e[31m-- [E018] Syntax Error:\
    \ /tmp/tmp4pbmn48_.scala:24:23 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m                    k++\n\e[31m\e[31m   |\e[0m                       ^\e\
    [0m\n\e[31m   |\e[0m                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp4pbmn48_.scala:26:19\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m                j++\n\e\
    [31m\e[31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m                \
    \   expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E018] Syntax Error: /tmp/tmp4pbmn48_.scala:28:15 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m            i++\n\e[31m\e[31m   |\e[0m              \
    \ ^\e[0m\n\e[31m   |\e[0m               expression expected but \e[31m'}'\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4pbmn48_.scala:21:22\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m                \e[33mwhile\e\
    [0m(k <n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m\
    \                      Found:    (k : Int)\n\e[31m   |\e[0m                  \
    \    Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4pbmn48_.scala:23:26\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m                        a.add(i*n\
    \ - i*i + i*j - i*k + k*k*k)\n\e[31m\e[31m   |\e[0m                        ^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue add is not a member of scala.collection.mutable.ArrayBuffer[Long],\
    \ but could be made available as an extension method.\n\e[31m "
  stdout: ''
  timestamp: 1659798217
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var count =\
    \ 0\n        while (i < n) {\n            while (j < n) {\n                while\
    \ (k < n) {\n                    if (a(i) + a(j) + a(k) == 3) {\n            \
    \            count += 1\n                    }\n                    k += 1\n \
    \               }\n                j += 1\n            }\n            i += 1\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.IndexOutOfBoundsException: 0 is out of bounds (min 0, max -1)\n\
    \tat scala.collection.mutable.ArrayBuffer.apply(ArrayBuffer.scala:99)\n\tat scala.collection.mutable.ArrayBuffer.apply(ArrayBuffer.scala:43)\n\
    \tat scala.Function1.apply$mcJI$sp(Function1.scala:69)\n\tat scala.Function1.apply$mcJI$sp$(Function1.scala:69)\n\
    \tat scala.collection.AbstractSeq.apply$mcJI$sp(Seq.scala:1161)\n\tat Problem$.getMaxTriples(tmpq4bcrf1s.scala:23)\n\
    \tat Problem$.main(tmpq4bcrf1s.scala:35)\n\tat Problem.main(tmpq4bcrf1s.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val l = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val m = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val n = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val o = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val p = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val q = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val r = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val s = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val t = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val u = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val v = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val w = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val x = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val y = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val z = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val b = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val c = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val d = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val e = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val f = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val g = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val h = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val i = mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val k = mutable.ArrayBuffer.fill(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2k04euen.scala:51:41 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(\n\
    \e[31m\e[31m   |\e[0m                                         ^\e[0m\n\e[31m \
    \  |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:41:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m\
    \ \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:42:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m42 |\e[0m        \e[33mval\e[0m\
    \ \e[36mb\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mc is already defined as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2k04euen.scala:44:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m\
    \ \e[36md\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0md is"
  stdout: ''
  timestamp: 1659798167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = mutable.ArrayBuffer.fill(n)(0)\n        val n = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val k = mutable.ArrayBuffer.fill(n)(0)\n        val i = mutable.ArrayBuffer.fill(n)(0)\n\
    \        val j = mutable.ArrayBuffer.fill(n)(0)\n        val k = mutable.ArrayBuffer.fill\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyre4dvy6.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mk is already defined as \e[33mvalue\e[0m \e[35mk\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpyre4dvy6.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mm is already defined as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpyre4dvy6.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mn is already defined as \e[33mvalue\e[0m \e[35mn\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpyre4dvy6.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mk is already defined as \e[33mvalue\e[0m \e[35mk\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpyre4dvy6.scala:25:12 ---------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mval\e[0m \e[36mi\e[0m = mutable.ArrayBuffer.fill(n)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mi is already defined as \e[33mvalue\e["
  stdout: ''
  timestamp: 1659798216
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val z = mutable.ArrayBuffer(1l)\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val b = mutable.ArrayBuffer(1l)\n        val c = mutable.ArrayBuffer(1l)\n\
    \        val d = mutable.ArrayBuffer(1l)\n        val e = mutable.ArrayBuffer(1l)\n\
    \        val f = mutable.ArrayBuffer(1l)\n        val g = mutable.ArrayBuffer(1l)\n\
    \        val h = mutable.ArrayBuffer(1l)\n        val i = mutable.ArrayBuffer(1l)\n\
    \        val j = mutable.ArrayBuffer(1l)\n        val k = mutable.ArrayBuffer(1l)\n\
    \        val l = mutable.ArrayBuffer(1l)\n        val m = mutable.ArrayBuffer(1l)\n\
    \        val n = mutable.ArrayBuffer(1l)\n        val o = mutable.ArrayBuffer(1l)\n\
    \        val p = mutable.ArrayBuffer(1l)\n        val q = mutable.ArrayBuffer(1l)\n\
    \        val r = mutable.ArrayBuffer(1l)\n        val s = mutable.ArrayBuffer(1l)\n\
    \        val t = mutable.ArrayBuffer(1l)\n        val u = mutable.ArrayBuffer(1l)\n\
    \        val v = mutable.ArrayBuffer(1l)\n        val w = mutable.ArrayBuffer(1l)\n\
    \        val x = mutable.ArrayBuffer(1l)\n        val y = mutable.ArrayBuffer(1l)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkuw7_yv1.scala:66:11 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvalue\e[0m \e[35ma\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mb is already defined as \e[33mvalue\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m\
    \ \e[36mc\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuw7_yv1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0md is already defined as \e[33mvalue\e[0m \e[35md\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuw7_yv1.scala:45:12"
  stdout: ''
  timestamp: 1659798157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = scala.math.max(scala.math.abs(n))\n        val i = scala.math.min(scala.math.abs(n),\
    \ m)\n        val j = scala.math.min(scala.math.abs(n), m)\n        val k = scala.math.min(scala.math.abs(n),\
    \ m)\n        a(i) = i\n        a(j) = j\n        a(k) = k\n        val triples\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val triple2 = scala.collection.mutable.ArrayBuffer.empty[Int]\n     \
    \   val triple3 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ triple4 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple5\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple6 = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val triple7 = scala.collection.mutable.ArrayBuffer.empty[Int]\n     \
    \   val triple8 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ triple9 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple10\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple11 = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val triple12 = scala.collection.mutable.ArrayBuffer.empty[Int]\n    \
    \    val triple13 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ triple14 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple15\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple16 = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val triple17 = scala.collection.mutable.ArrayBuffer.empty[Int]\n    \
    \    val triple18 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ triple19 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple20\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple21 = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val triple22 = scala.collection.mutable.ArrayBuffer.empty[Int]\n    \
    \    val triple23 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ triple24 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val triple25\
    \ = scala.collection.\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpv50g1ysf.scala:49:4 ----------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E134] Type Error:\
    \ /tmp/tmpv50g1ysf.scala:16:27 -----------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = scala.math.max(scala.math.abs(n))\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone\
    \ of the overloaded alternatives of \e[33mmethod\e[0m \e[35mmax\e[0m in \e[33mpackage\e\
    [0m \e[35mscala.math\e[0m with types\n\e[31m   |\e[0m (x: Double, y: Double):\
    \ Double\n\e[31m   |\e[0m (x: Float, y: Float): Float\n\e[31m   |\e[0m (x: Long,\
    \ y: Long): Long\n\e[31m   |\e[0m (x: Int, y: Int): Int\n\e[31m   |\e[0mmatch\
    \ arguments (Long)\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpv50g1ysf.scala:49:5\
    \ ---------------------\e[0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        val m = scala.math.max(scala.math.abs(n))\n        val i = scala.math.min(scala.math.ceil(m),\
    \ a.length - 1)\n        val j = scala.math.min(scala.math.ceil(m), a.length -\
    \ 1)\n        val k = scala.math.min(scala.math.ceil(m), a.length - 1)\n     \
    \   a(i) = i * i - i + 1\n        a(j) = i * i - j + 1\n        a(k) = i * i -\
    \ k + 1\n        val triples = a.filter(_ % 3 == 0).size\n        triples.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmp4jyxbh_b.scala:16:27 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = scala.math.max(scala.math.abs(n))\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone\
    \ of the overloaded alternatives of \e[33mmethod\e[0m \e[35mmax\e[0m in \e[33mpackage\e\
    [0m \e[35mscala.math\e[0m with types\n\e[31m   |\e[0m (x: Double, y: Double):\
    \ Double\n\e[31m   |\e[0m (x: Float, y: Float): Float\n\e[31m   |\e[0m (x: Long,\
    \ y: Long): Long\n\e[31m   |\e[0m (x: Int, y: Int): Int\n\e[31m   |\e[0mmatch\
    \ arguments (Long)\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4jyxbh_b.scala:20:10\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        a(i) = i * i - i + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m          ^\e[0m\n\e[31m   |\e[0m          Found:\
    \    (i : Double)\n\e[31m   |\e[0m          Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4jyxbh_b.scala:20:15 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        a(i) = i * i - i + \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m               ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m               Found:\
    \    Double\n\e[31m   |\e[0m               Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4jyxbh_b.scala:21:10 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        a(j) = i * i - j + \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m          ^\e[0m\n\e[31m   |\e[0m          Found:    (j : Double)\n\e\
    [31m   |\e[0m          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp4jyxbh_b.scala:21:15 --------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m        a(j) = i * i - j + \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m               ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m               Found:   \
    \ Double\n\e[31m   |\e[0m               Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Typ"
  stdout: ''
  timestamp: 1659798217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        val result = mutable.ListBuffer[Long]()\n        val max = (3 * n) -\
    \ 1\n        val min = (3 * n) / 2\n        for(i <- 1 to n) {\n            val\
    \ j = i - 1\n            val k = i + 1\n            val sum = i * i - i + 1\n\
    \            val sum2 = sum * sum\n            val sum3 = sum2 * sum\n       \
    \     val sum4 = sum3 * sum\n            val sum5 = sum4 * sum\n            val\
    \ sum6 = sum5 * sum\n            val sum7 = sum6 * sum\n            val sum8 =\
    \ sum7 * sum\n            val sum9 = sum8 * sum\n            val sum10 = sum9\
    \ * sum\n            val sum11 = sum10 * sum\n            val sum12 = sum11 *\
    \ sum\n            val sum13 = sum12 * sum\n            val sum14 = sum13 * sum\n\
    \            val sum15 = sum14 * sum\n            val sum16 = sum15 * sum\n  \
    \          val sum17 = sum16 * sum\n            val sum18 = sum17 * sum\n    \
    \        val sum19 = sum18 * sum\n            val sum20 = sum19 * sum\n      \
    \      val sum21 = sum20 * sum\n            val sum22 = sum21 * sum\n        \
    \    val sum23 = sum22 * sum\n            val sum24 = sum23 * sum\n          \
    \  val sum25 = sum24 * sum\n            val sum26 = sum25 * sum\n            val\
    \ sum27 = sum26 * sum\n            val sum28 = sum27 * sum\n            val sum29\
    \ = sum28 * sum\n            val sum30 = sum29 * sum\n            val sum31 =\
    \ sum30 * sum\n            val sum32 = sum31 * sum\n            val sum33 = sum32\
    \ * sum\n            val sum34 = sum33 * sum\n            val sum35 = sum34 *\
    \ sum\n            val sum36 = sum35 * sum\n            val sum37 = sum36 * sum\n\
    \            val sum38 = sum37 * sum\n            val sum39 = sum38 * sum\n  \
    \          val sum40 = sum39 * sum\n            val sum41 = sum40 * sum\n    \
    \        val sum42 = sum41 * sum\n            val sum43 = sum42 * sum\n      \
    \      val sum44 = sum43 * sum\n            val sum45 = sum44 * sum\n        \
    \    val sum46 = sum45 * sum\n            val sum47 = sum46 * sum\n          \
    \  val sum48 = \n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp7150a28s.scala:69:23 ---------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m            \e[33mval\e[0m \e[36msum48\e[0m = \n\e[31m\e\
    [31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                  \
    \     expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E040] Syntax Error: /tmp/tmp7150a28s.scala:79:0 ----------------------------\e\
    [0m\e[0m\n\e[31m79 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7150a28s.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7150a28s.scala:16:21\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mresult\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7150a28s.scala:19:22\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp7150a28s.scala:78:1 ---------------------\e[0m\e[0m\n\e[31m78\
    \ |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m\
    \   |\e[0m Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `"
  stdout: ''
  timestamp: 1659798217

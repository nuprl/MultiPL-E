language: scala
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs.update(0, fibs.last)\n        fibs.update(1, fibs.last + fibs.last)\n\
    \        fibs.update(n-1, fibs.last+fibs.last)\n        fibs.last\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9md8a34u.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n  \
    \      fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 138366657651\n        fibs += 217555801\n\
    \        fibs += 3524101615\n        fibs += 5702377019\n        fibs += 9227466537\n\
    \        fibs += 14930355057\n        fibs += 24157820896\n        fibs += 39088169972\n\
    \        fibs += 63245986123\n        fibs += 102334157776\n        fibs += 165580142952\n\
    \        fibs += 267914296736\n        fibs += 433494436896\n        fibs += 701408733752\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuv9m6pkn.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 1l)\n \
    \       fibs.tail.foreach(fibs => fibs += fibs.last)\n        fibs(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwk1ew6es.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1l) 1l\n        else fib(n-1l) +\
    \ fib(n-2l)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdgs14hy5.scala:16)\n\tat Problem.main(tmpdgs14hy5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs += fibs.last\n        fibs += fibs.last\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdlnexg4l.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs += fibs(0l) //1\n        fibs += fibs(1l) //1\n        fibs += fibs(2l)\
    \ //2\n        fibs += fibs(3l) //3\n        fibs += fibs(4l) //5\n        fibs\
    \ += fibs(5l) //8\n        fibs += fibs(6l) //13\n        fibs += fibs(7l) //21\n\
    \        fibs += fibs(8l) //34\n        fibs += fibs(9l) //55\n        fibs +=\
    \ fibs(10l) //89\n        fibs += fibs(11l) //144\n        fibs += fibs(12l) //233\n\
    \        fibs += fibs(13l) //377\n        fibs += fibs(14l) //610\n        fibs\
    \ += fibs(15l) //987\n        fibs += fibs(16l) //1597\n        fibs += fibs(17l)\
    \ //2584\n        fibs += fibs(18l) //4181\n        fibs += fibs(19l) //6765\n\
    \        fibs += fibs(20l) //10946\n        fibs += fibs(21l) //17711\n      \
    \  fibs += fibs(22l) //28657\n        fibs += fibs(23l) //46368\n        fibs\
    \ += fibs(24l) //75025\n        fibs += fibs(25l) //121393\n        fibs += fibs(26l)\
    \ //196418\n        fibs += fibs(27l) //317811\n        fibs += fibs(28l) //514229\n\
    \        fibs += fibs(29l) //832040\n        fibs += fibs(30l) //1346269\n   \
    \     fibs += fibs(31l) //2178309\n        fibs += fibs(32l) //3524578\n     \
    \   fibs += fibs(33l) //5702887\n        fibs += fibs(34l) //9227465\n       \
    \ fibs += fibs(35l) //14930352\n        fibs += fibs(36l) //24157817\n       \
    \ fibs += fibs(37l) //39088169\n        fibs += fibs(38l) //63245986\n       \
    \ fibs += fibs(39l) //102334155\n        fibs += fibs(40l) //16558014\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgtn6ii8c.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs += fibs.last\n        fibs += fibs.last\n        fibs.drop(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpma47r63x.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs ::: fibs.drop(2l).takeWhile(_ < n).reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfk56nsyd.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0 || n == 1) 1\n        else fib(n-1)\
    \ + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp0bf0m79x.scala:16)\n\tat Problem.main(tmp0bf0m79x.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1L) 1L\n        else fib(n-1L) +\
    \ fib(n-2L)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpon9rqc33.scala:16)\n\tat Problem.main(tmpon9rqc33.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2\n        var b = 1\n        var\
    \ c = 1\n        var d = 1\n        var sum = 0\n        for(i <- 0 until n) {\n\
    \            sum = a + b + c + d\n            a = b\n            b = c\n     \
    \       c = d\n            d = sum\n        }\n        return sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_n4cdxsh.scala:17:25\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwxp8hyb0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 47521\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 138366657801\n        fibs += 217555391613\n\
    \        fibs += 352410161514\n        fibs += 570237701937\n        fibs += 922746656099\n\
    \        fibs += 1493035205831\n        fibs += 24157817201270\n        fibs +=\
    \ 3908816926881\n        fibs += 63245986583191\n        fibs += 10233415506857\n\
    \        fibs += 165580141040807\n        fibs += 267914296143807\n        fibs\
    \ += 4334944366939\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpku5tj9t2.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4mfbk3n2.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.drop(1).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptri05ml7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbuwradib.scala:16)\n\tat Problem.main(tmpbuwradib.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += fibs.head\n\
    \        fibs.drop(1).head\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptedgz6bj.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793309
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793232
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs += fibs.head\n        fibs += fibs.tail\n        fibs.drop(1).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplu1_7ihb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs take n foreach { x => fibs\
    \ += fibs(x - 1) + fibs(x - 2) }\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_1xmu9b.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(0, 1).init\n\
    \        fibs.take(n).foldLeft(0)((a, b) => a + b)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8ktzmcve.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m).init\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs += fibs.last\n        fibs += fibs.last\n        fibs.drop(1).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpznybjnel.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs.drop(1).foreach(fibs += _)\n        fibs.take(n).sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_3zq0_am.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793311
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    while (fibs.length < n) {\n            fibs += fibs.head + fibs.last\n  \
    \      }\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppxbdumms.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793311
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    while (fibs.size < n) {\n            fibs += fibs.head + fibs.last\n    \
    \    }\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqh191251.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwxp8hyb0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs take n foreach { n =>\n\
    \            fibs += fibs.last + fibs.last\n        }\n        fibs last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpfme8qnr5.scala:18:17 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfme8qnr5.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs.take(n).foldLeft(1l) { (acc, n) => acc + n }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplt4p1l9f.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793312
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gdaur9.scala:17)\n\tat Problem.main(tmpc7gdaur9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += fibs.head\n        fibs +=\
    \ fibs.tail.head\n        fibs.drop(n).head\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjzqfhu77.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs take n\
    \ foreach { x => fibs += fibs.last + fibs.last }\n        fibs last\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpjl25rx_i.scala:17:17 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjl25rx_i.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt83v3md.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n  \
    \      fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n  \
    \      fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphrsicj5b.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1l) 1l\n        else fib(n-1l) +\
    \ fib(n-2l)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdgs14hy5.scala:16)\n\tat Problem.main(tmpdgs14hy5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += fibs.head\n        fibs +=\
    \ fibs.tail.head\n        fibs.take(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6ia00tmf.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs.take(n).foldLeft(0l) { (acc, x) =>\n            val y = acc + x\n\
    \            fibs += y\n            y\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc_uu89bd.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 138366657651\n        fibs += 217555801\n\
    \        fibs += 3524101615\n        fibs += 570264577\n        fibs += 922746769\n\
    \        fibs += 14930355057\n        fibs += 24157820898\n        fibs += 39088169972\n\
    \        fibs += 6324598657\n        fibs += 102334150919\n        fibs += 165580142981\n\
    \        fibs += 267914296123\n        fibs += 433494436881\n        fibs += 701408733171\n\
    \        fib\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbpu9cvy1.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpbpu9cvy1.scala:81:8 ---------------------\e\
    [0m\e[0m\n\e[31m81 |\e[0m        fib\n\e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e\
    [31m   |\e[0m        Found:    Long => Long\n\e[31m   |\e[0m        Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs.update(0, fibs(0l) + fibs(1l))\n        fibs.update(1, fibs(0l) +\
    \ fibs(1l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1,\
    \ fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n\
    \        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l)\
    \ + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1,\
    \ fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n\
    \        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l)\
    \ + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1,\
    \ fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n\
    \        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l)\
    \ + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1,\
    \ fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n\
    \        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l)\
    \ + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1,\
    \ fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n\
    \        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqy1bsob8.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqy1bsob8.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt83v3md.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs += fibs(0l) + fibs(1l)\n        fibs(0l) = fibs(1l) = n\n       \
    \ fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe2q38c7c.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += fibs.head\n        fibs +=\
    \ fibs.tail.head\n        fibs.drop(1).head\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxrqmzode.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += fibs.head\n        fibs.drop(1).foreach(fibs.head)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvz3wkh4.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1l) 1l\n        else fib(n-1l) +\
    \ fib(n-2l)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdgs14hy5.scala:16)\n\tat Problem.main(tmpdgs14hy5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gdaur9.scala:17)\n\tat Problem.main(tmpc7gdaur9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs.update(0, fibs(0l) + fibs(1l))\n        fibs.update(1, fibs(1l) +\
    \ fibs(2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs(n-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3tsfq1bs.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    while (fibs.size < n) fibs += fibs.head + fibs.last\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpal6rn1e4.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2l\n        var b = 1l\n        var\
    \ c = 2l\n        var d = 1l\n        var n = 0l\n        while (n < n) {\n  \
    \          val temp = a\n            a = b\n            b = c\n            c =\
    \ d\n            d = temp\n            n += 1\n        }\n        return a\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8dl01s0j.scala:28)\n\tat Problem.main(tmp8dl01s0j.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793319
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += fibs.head\n        fibs.drop(1).foreach(fibs.head)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvz3wkh4.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs.tail.foreach(fibs => fibs += fibs.last)\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzetc9r3q.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += fibs.head\n        fibs +=\
    \ fibs.tail.head\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdhhufo65.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += fibs(0) + 1\n        fibs\
    \ += fibs(1) + fibs(0) + 1\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpigzq_o1e.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793309
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1l) 1l\n        else fib(n-1l) +\
    \ fib(n-2l)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdgs14hy5.scala:16)\n\tat Problem.main(tmpdgs14hy5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += fibs.head\n        fibs +=\
    \ fibs.tail.head\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdhhufo65.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += fibs(0) + 1\n        fibs(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1o4u9v3v.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5xo_buoo.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs take n foreach { x => fibs\
    \ += fibs(x - 1) + fibs(x - 2) }\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_1xmu9b.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793320
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs.drop(1).foreach(fibs => fibs += fibs.last)\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgsggia57.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 47524\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 138366623259\n        fibs += 217555805587\n\
    \        fibs += 352410161514\n        fibs += 57023317189\n        fibs += 92274666561\n\
    \        fibs += 149303550874\n        fibs += 241578208972\n        fibs += 390881695772\n\
    \        fibs += 632459865825\n        fibs += 1023341509663\n        fibs +=\
    \ 1655801422966\n        fibs += 2679142967057\n        fibs += 433494439162\n\
    \        fibs += 70\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq2rnfecl.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    while (fibs.size < n) {\n            fibs += fibs.head + fibs.last\n    \
    \    }\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqh191251.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpupk5tr5b.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793318
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs += fibs(0l) + fibs(1l)\n        fibs += fibs(1l) + fibs(2l)\n   \
    \     fibs += fibs(2l) + fibs(3l)\n        fibs += fibs(3l) + fibs(4l)\n     \
    \   fibs += fibs(4l) + fibs(5l)\n        fibs += fibs(5l) + fibs(6l)\n       \
    \ fibs += fibs(6l) + fibs(7l)\n        fibs += fibs(7l) + fibs(8l)\n        fibs\
    \ += fibs(8l) + fibs(9l)\n        fibs += fibs(9l) + fibs(10l)\n        fibs +=\
    \ fibs(10l) + fibs(11l)\n        fibs += fibs(11l) + fibs(12l)\n        fibs +=\
    \ fibs(12l) + fibs(13l)\n        fibs += fibs(13l) + fibs(14l)\n        fibs +=\
    \ fibs(14l) + fibs(15l)\n        fibs += fibs(15l) + fibs(16l)\n        fibs +=\
    \ fibs(16l) + fibs(17l)\n        fibs += fibs(17l) + fibs(18l)\n        fibs +=\
    \ fibs(18l) + fibs(19l)\n        fibs += fibs(19l) + fibs(20l)\n        fibs +=\
    \ fibs(20l) + fibs(21l)\n        fibs += fibs(21l) + fibs(22l)\n        fibs +=\
    \ fibs(22l) + fibs(23l)\n        fibs += fibs(23l) + fibs(24l)\n        fibs +=\
    \ fibs(24l) + fibs(25l)\n        fibs += fibs(25l) + fibs(26l)\n        fibs +=\
    \ fibs(26l) + fibs(27l)\n        fibs += fibs(27l) + fibs(28l)\n        fibs +=\
    \ fibs(28l) + fibs(29l)\n        fibs += fibs(29l) + fibs(30l)\n        fibs +=\
    \ fibs(30l) + fibs(31l)\n        fibs += fibs(31l) + fibs(32l)\n        fibs +=\
    \ fibs(32l) + fibs(33l)\n        fibs += fibs(33l) + fibs(34l)\n        fibs +=\
    \ fibs(34l) + fibs(35l)\n        fibs += fibs(35l) + fibs(36l)\n        fibs +=\
    \ fibs(36l) + fibs(37l)\n        fibs += fibs(37l) + fibs(38l)\n        fibs +=\
    \ fibs(\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp89rgxiqy.scala:51:21 ---------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        fibs += fibs(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp89rgxiqy.scala:12:19 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e[31m0l\e[0m,\
    \ \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs take n foreach { x => fibs\
    \ += fibs.last + fibs.last }\n        fibs.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvcy_qnee.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n  \
    \      fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n  \
    \      fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphrsicj5b.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    fibs += fibs.last\n        fibs += fibs.last\n        fibs.drop(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpichgk5zi.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    fibs += fibs.head\n        fibs += fibs.tail\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7vs5mby9.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793318
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1L) 1L\n        else fib(n-1L) +\
    \ fib(n-2L)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpon9rqc33.scala:16)\n\tat Problem.main(tmpon9rqc33.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0 || n == 1) n\n        else fib(n-1)\
    \ + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2l\n        var b = 1l\n        var\
    \ c = 1l\n        var d = 1l\n        for(i <- 0 until n){\n            val temp\
    \ = a\n            a = b\n            b = c\n            c = d\n            d\
    \ = temp\n        }\n        d\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9kn3fas4.scala:16:25\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793322
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwxp8hyb0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793320
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 0l\n        var b = 1l\n        var\
    \ c = 1l\n        var d = 1l\n        var e = 1l\n        var f = 1l\n       \
    \ var g = 1l\n        var h = 1l\n        var i = 1l\n        var j = 1l\n   \
    \     var k = 1l\n        var l = 1l\n        var m = 1l\n        var n = 2l\n\
    \        var o = 2l\n        var p = 1l\n        var q = 1l\n        var r = 1l\n\
    \        var s = 1l\n        var t = 1l\n        var u = 1l\n        var v = 1l\n\
    \        var w = 1l\n        var x = 1l\n        var y = 1l\n        var z = 1l\n\
    \        var a = 1l\n        var b = 1l\n        var c = 1l\n        var d = 1l\n\
    \        var e = 1l\n        var f = 1l\n        var g = 1l\n        var h = 1l\n\
    \        var i = 1l\n        var j = 1l\n        var k = 1l\n        var l = 1l\n\
    \        var m = 1l\n        var n = 2l\n        var o = 2l\n        var p = 1l\n\
    \        var q = 1l\n        var r = 1l\n        var s = 1l\n        var t = 1l\n\
    \        var u = 1l\n        var v = 1l\n        var w = 1l\n        var x = 1l\n\
    \        var y = 1l\n        var z = 1l\n        var a = 1l\n        var b = 1l\n\
    \        var c = 1l\n        var d = 1l\n        var e = 1l\n        var f = 1l\n\
    \        var g = 1l\n        var h = 1l\n        var i = 1l\n        var j = 1l\n\
    \        var k = 1l\n        var l = 1l\n        var m = 1l\n        var n = 2l\n\
    \        var o = 2l\n        var p = 1l\n        var q = 1l\n        var r = 1l\n\
    \        var s = 1l\n        var t = 1l\n        var u = 1l\n        var v = 1l\n\
    \        var w = 1l\n        var x = 1l\n        var y = 1l\n        var z = 1l\n\
    \        var a = 1l\n        var b = 1l\n        var c = 1l\n        var d = 1l\n\
    \        var e = 1l\n        var f = 1l\n        var g = 1l\n        var h = 1l\n\
    \        var i = 1l\n        var j = 1l\n        var k = 1l\n        var l = 1l\n\
    \        var m = 1l\n        var n = 2l\n        var o = 2l\n        var p = 1l\n\
    \        var q = 1l\n        var r = 1l\n        var s = 1l\n        var t = 1l\n\
    \        var u = 1l\n        var v = 1l\n        var w = 1l\n        var x = 1l\n\
    \        var y = 1l\n        var \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp8c0h16e5.scala:115:11 --------------------------\e\
    [0m\e[0m\n\e[31m115 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m    |\e[0m    \
    \       ^\e[0m\n\e[31m    |\e[0m           pattern expected\n\e[31m    |\e[0m\n\
    \e[31m    |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8c0h16e5.scala:38:12 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8c0h16e5.scala:39:12 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8c0h16e5.scala:40:12 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8c0h16e5.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8c0h16e5.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me"
  stdout: ''
  timestamp: 1659793322
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs.drop(1).foreach(fibs += _)\n        fibs.take(n).last\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp125zpfy5.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2\n        var b = 1\n        var\
    \ c = 1\n        var d = 1\n        var sum = 0\n        for(i <- 0 until n) {\n\
    \            sum = a + b + c + d\n            a = b\n            b = c\n     \
    \       c = d\n            d = sum\n        }\n        return sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_n4cdxsh.scala:17:25\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(0, 1);\n   \
    \     for (i <- 1 to n) {\n            fibs += fibs.head + fibs.last\n       \
    \ }\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvjnbu6ut.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m);\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvjnbu6ut.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793322
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs take n foreach\
    \ { fibs =>\n            fibs += fibs.head + fibs.last\n        }\n        fibs\
    \ last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpxzupccyg.scala:19:17 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxzupccyg.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt83v3md.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 0l\n        var b = 1l\n        var\
    \ c = 2l\n        var d = 0l\n        var n = 0l\n        while (n <= n) {\n \
    \           d = a + b\n            a = b\n            b = c\n            c = d\n\
    \            n += 1\n        }\n        return d\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659793328
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs += fibs.last\n        fibs += fibs.last\n        fibs.drop(1).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpznybjnel.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs.drop(1).foreach(fibs => fibs += fibs.last)\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbkqeat5i.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0, 1).init\n\
    \        fibs(n) += 1\n        fibs.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp37oxttsy.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m).init\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs take n\
    \ foreach { n =>\n            fibs += fibs.last + fibs.last\n        }\n     \
    \   fibs last + 1\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbhdg8pl.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793322
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1L) 1L\n        else fib(n-1L) +\
    \ fib(n-2L)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpon9rqc33.scala:16)\n\tat Problem.main(tmpon9rqc33.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs take n foreach { n =>\n\
    \            fibs += fibs.last + fibs.last\n        }\n        fibs.last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpegsbmkz6.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs ::: fibs.tail.takeWhile(_ < n).drop(1).reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph7ykf6m3.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793322
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs.update(0, fibs(0l) + fibs(1l))\n        fibs.update(1, fibs(1l) +\
    \ fibs(2l))\n        fibs.update(n-1, fibs(n-2) + fibs(n-3))\n        fibs(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpki54edwn.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793323
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793320
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2l\n        var b = 1l\n        var\
    \ c = 2l\n        var d = 1l\n        var n = 0l\n        while (n < n) {\n  \
    \          a += b\n            b += c\n            c += d\n            d += a\n\
    \            n += 1\n        }\n        return a\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmps55h3zj5.scala:27)\n\tat Problem.main(tmps55h3zj5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793326
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1l) 1l\n        else fib(n-1l) +\
    \ fib(n-2l)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdgs14hy5.scala:16)\n\tat Problem.main(tmpdgs14hy5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs ::: fibs.drop(2l).takeWhile(_ < n).reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfk56nsyd.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs take n\
    \ foreach { x => fibs += fibs(x - 1) + fibs(x - 2) }\n        fibs last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3q9a_qo3.scala:17:17 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3q9a_qo3.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793323
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    fibs.takeWhile(_ < n).last\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcjbwq38t.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs.tail.foreach(fibs.updated(0, _ + _))\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppxeelewr.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    fibs.take(n).foldLeft(0)((a, b) => a + b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw22x3gq_.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs.tail.foreach(fibs.update(_+_))\n        fibs(n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi43eo029.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793324
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793320
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n  \
    \      fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n  \
    \      fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphrsicj5b.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 0\n        var b = 1\n        var\
    \ c = 1\n        var d = 1\n        var n = 0\n        while (n < n) {\n     \
    \       val temp = a\n            a = b\n            b = c\n            c = d\n\
    \            d = temp\n            n += 1\n        }\n        return a\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpne22vtb7.scala:28)\n\tat Problem.main(tmpne22vtb7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    while (fibs.size < n) {\n            fibs += fibs.head + fibs.last\n    \
    \    }\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqh191251.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt83v3md.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5xo_buoo.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs take n\
    \ foreach { x => fibs += fibs.last + fibs.last }\n        fibs.last\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaao769wp.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs.update(0, fibs(0l) + fibs(1l))\n        fibs.update(1, fibs(0l) -\
    \ fibs(1l))\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn2wmf3ar.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    fibs.tail.foreach(fibs => fibs += fibs.last)\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpze9skijg.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwxp8hyb0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793320
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5xo_buoo.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(0l, 1l)\n  \
    \      fibs += fibs.head\n        fibs += fibs.tail\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9_orcka2.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793326
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(0l, 1l)\n  \
    \      fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fib\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptmta_eoz.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptmta_eoz.scala:84:8 ---------------------\e\
    [0m\e[0m\n\e[31m84 |\e[0m        fib\n\e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e\
    [31m   |\e[0m        Found:    Long => Long\n\e[31m   |\e[0m        Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793329
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs ::: fibs.tail.scanLeft(0l) { (a, x) =>\n            if (x <= n) a\
    \ + x else a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptd_zbpja.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt83v3md.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.take(n)\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4wu83vhg.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793326
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs ::: fibs.tail.takeWhile(_ < n).map(x => x + fibs.last)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq62_4fr2.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs take n foreach\
    \ { n => fibs += fibs.last + fibs.last }\n        fibs last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpnkn7wxwv.scala:17:17 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnkn7wxwv.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793327
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2l\n        var b = 1l\n        var\
    \ c = 2l\n        var d = 1l\n        var n = 0l\n        while (n < n) {\n  \
    \          a += b\n            b += c\n            c += d\n            d += a\n\
    \            n += 1\n        }\n        return a\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmps55h3zj5.scala:27)\n\tat Problem.main(tmps55h3zj5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793326
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwxp8hyb0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwxp8hyb0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5xo_buoo.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793317
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0 || n == 1) {\n            return\
    \ n\n        }\n        else {\n            return fib(n - 1) + fib(n - 2)\n \
    \       }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793331
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2l\n        var b = 4l\n        var\
    \ c = 5l\n        var d = 8l\n        var e = 1l\n        var f = 0l\n       \
    \ var g = 2l\n        var h = 3l\n        var i = 0l\n        var j = 1l\n   \
    \     var k = 0l\n        var l = 1l\n        var m = 2l\n        var n = 2l\n\
    \        var o = 2l\n        var p = 1l\n        var q = 1l\n        var r = 1l\n\
    \        var s = 2l\n        var t = 2l\n        var u = 2l\n        var v = 2l\n\
    \        var w = 1l\n        var x = 2l\n        var y = 2l\n        var z = 1l\n\
    \        var a = 0l\n        var b = 1l\n        var c = 2l\n        var d = 2l\n\
    \        var e = 2l\n        var f = 3l\n        var g = 4l\n        var h = 5l\n\
    \        var i = 5l\n        var j = 6l\n        var k = 7l\n        var l = 8l\n\
    \        var m = 8l\n        var n = 8l\n        var o = 8l\n        var p = 8l\n\
    \        var q = 8l\n        var r = 8l\n        var s = 8l\n        var t = 8l\n\
    \        var u = 8l\n        var v = 8l\n        var w = 8l\n        var x = 8l\n\
    \        var y = 8l\n        var z = 8l\n        var a = 2l\n        var b = 4l\n\
    \        var c = 5l\n        var d = 8l\n        var e = 1l\n        var f = 0l\n\
    \        var g = 2l\n        var h = 3l\n        var i = 0l\n        var j = 1l\n\
    \        var k = 0l\n        var l = 1l\n        var m = 2l\n        var n = 2l\n\
    \        var o = 2l\n        var p = 1l\n        var q = 1l\n        var r = 1l\n\
    \        var s = 2l\n        var t = 2l\n        var u = 2l\n        var v = 2l\n\
    \        var w = 1l\n        var x = 2l\n        var y = 2l\n        var z = 1l\n\
    \        var a = 0l\n        var b = 1l\n        var c = 2l\n        var d = 2l\n\
    \        var e = 2l\n        var f = 3l\n        var g = 4l\n        var h = 5l\n\
    \        var i = 5l\n        var j = 6l\n        var k = 7l\n        var l = 8l\n\
    \        var m = 8l\n        var n = 8l\n        var o = 8l\n        var p = 8l\n\
    \        var q = 8l\n        var r = 8l\n        var s = 8l\n        var t = 8l\n\
    \        var u = 8l\n        var v = 8l\n        var w = 8l\n        var x = 8l\n\
    \        var y = 8l\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5v5x0ugy.scala:38:12 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5v5x0ugy.scala:39:12 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5v5x0ugy.scala:40:12 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m2l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5v5x0ugy.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m2l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5v5x0ugy.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m2l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5v5x0ugy.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659793332
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs.drop(1).foreach(fibs.update(_ + _))\n        fibs.take(n).last\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpumfackys.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a : Long = 1l\n        var b : Long =\
    \ 1l\n        var c : Long = 1l\n        var d : Long = 1l\n        var e : Long\
    \ = 1l\n        var f : Long = 1l\n        var g : Long = 1l\n        var h :\
    \ Long = 1l\n        var i : Long = 1l\n        var j : Long = 1l\n        var\
    \ k : Long = 1l\n        var l : Long = 1l\n        var m : Long = 1l\n      \
    \  var n : Long = 1l\n        var o : Long = 1l\n        var p : Long = 1l\n \
    \       var q : Long = 1l\n        var r : Long = 1l\n        var s : Long = 1l\n\
    \        var t : Long = 1l\n        var u : Long = 1l\n        var v : Long =\
    \ 1l\n        var w : Long = 1l\n        var x : Long = 1l\n        var y : Long\
    \ = 1l\n        var z : Long = 1l\n        var a : Long = 1l\n        var b :\
    \ Long = 1l\n        var c : Long = 1l\n        var d : Long = 1l\n        var\
    \ e : Long = 1l\n        var f : Long = 1l\n        var g : Long = 1l\n      \
    \  var h : Long = 1l\n        var i : Long = 1l\n        var j : Long = 1l\n \
    \       var k : Long = 1l\n        var l : Long = 1l\n        var m : Long = 1l\n\
    \        var n : Long = 1l\n        var o : Long = 1l\n        var p : Long =\
    \ 1l\n        var q : Long = 1l\n        var r : Long = 1l\n        var s : Long\
    \ = 1l\n        var t : Long = 1l\n        var u : Long = 1l\n        var v :\
    \ Long = 1l\n        var w : Long = 1l\n        var x : Long = 1l\n        var\
    \ y : Long = 1l\n        var z : Long = 1l\n        var a : Long = 1l\n      \
    \  var b : Long = 1l\n        var c : Long = 1l\n        var d : Long = 1l\n \
    \       var e : Long = 1l\n        var f : Long = 1l\n        var g : Long = 1l\n\
    \        var h : Long = 1l\n        var i : Long = 1l\n        var j : Long =\
    \ 1l\n        var k : Long = 1l\n        var l : Long = 1l\n        var m : Long\
    \ = 1l\n        var n : Long = 1l\n        var o : Long = 1l\n        var p :\
    \ Long = 1l\n        var q : Long = 1l\n        var r : Long = 1l\n        var\
    \ s : Long = 1l\n        var t : Long = 1l\n        var u : Long = 1l\n      \
    \  var v : Long = 1l\n        var \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp_adq30lu.scala:86:11 ---------------------------\e\
    [0m\e[0m\n\e[31m86 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp_adq30lu.scala:38:12 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0ma is already defined as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_adq30lu.scala:39:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m39 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mb\e[0m : \e[35mLong\e[0m = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined as \e[33mvariable\e\
    [0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp_adq30lu.scala:40:12 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mc is already defined as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_adq30lu.scala:41:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m41 |\e[0m        \e[33mvar\e[0m\
    \ \e[36md\e[0m : \e[35mLong\e[0m = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined as \e[33mvariable\e\
    [0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp_adq30lu.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mv"
  stdout: ''
  timestamp: 1659793331
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4mfbk3n2.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs.update(0, fibs.head + fibs.tail.head)\n        fibs.update(1, fibs.head\
    \ + fibs.tail.tail.head)\n        fibs.update(n-1, fibs.tail.tail.tail.head)\n\
    \        fibs.update(n-1, fibs.tail.tail.tail.tail.head)\n        fibs.update(n-1,\
    \ fibs.tail.tail.tail.tail.tail.head)\n        fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.head)\n\
    \        fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.tail.head)\n    \
    \    fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.tail.tail.head)\n   \
    \     fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head)\n\
    \        fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head)\n\
    \        fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head)\n\
    \        fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head)\n\
    \        fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head)\n\
    \        fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head)\n\
    \        fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head)\n\
    \        fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head)\n\
    \        fibs.update(n-1, fibs.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpzj8q8s46.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzj8q8s46.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793328
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs take n\
    \ foreach { x => fibs += fibs(x - 1) + fibs(x - 2) }\n        fibs last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3q9a_qo3.scala:17:17 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3q9a_qo3.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793323
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs.tail.foreach(fibs => fibs += fibs.last)\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_uuycvwu.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793328
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += fibs(0) + 1\n        fibs(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1o4u9v3v.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs.drop(n).takeWhile(_ < n).foreach(fibs += _)\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn0rlta8x.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793329
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs.tail.foreach(fibs => fibs += fibs.last)\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzetc9r3q.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwxp8hyb0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0 || n == 1) n\n        else fib(n-1)\
    \ + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    for (i <- 3 to n) {\n            fibs += fibs.head + fibs.last\n        }\n\
    \        fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4mjji2qs.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp4mjji2qs.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m3\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793332
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(0, 1).zipWithIndex\n\
    \        fibs.drop(fibs.size - n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxm3lkqi6.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m).zipWithIndex\n\e[31m\e[31m   |\e[0m                \
    \   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793330
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    fibs.tail.foreach(fibs => fibs += fibs.last)\n        fibs.take(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpze9skijg.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    fibs += fibs.last\n        fibs += fibs.last\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphzxlpr75.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793330
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(0l, 1l)\n  \
    \      fibs += fibs.last\n        fibs += fibs.last\n        fibs.drop(1).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9xlgqag0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793330
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs take n foreach { x => fibs\
    \ += fibs(x - 1) + fibs(x - 2) }\n        fibs last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpugnoqzjz.scala:16:17 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpugnoqzjz.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793330
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += fibs.head\n        fibs +=\
    \ fibs.tail.head\n        fibs.take(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6ia00tmf.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs take n foreach\
    \ { x => fibs += fibs.last + fibs.last }\n        fibs last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp7a61407x.scala:17:17 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7a61407x.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793330
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwxp8hyb0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs += fibs.last\n        fibs += fibs.last\n        fibs.drop(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpma47r63x.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    while (fibs.size < n) {\n            fibs += fibs.last\n        }\n     \
    \   fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb_eo4obu.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793331
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n\
    \        fibs += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n\
    \        fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs +=\
    \ 987\n        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n    \
    \    fibs += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs\
    \ += 28657\n        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n\
    \        fibs += 196418\n        fibs += 317811\n        fibs += 514229\n    \
    \    fibs += 832040\n        fibs += 1346269\n        fibs += 2178309\n      \
    \  fibs += 3524578\n        fibs += 5702887\n        fibs += 9227465\n       \
    \ fibs += 14930352\n        fibs += 24157817\n        fibs += 39088169\n     \
    \   fibs += 63245986\n        fibs += 102334155\n        fibs += 165580141\n \
    \       fibs += 267914296\n        fibs += 433494437\n        fibs += 701408733\n\
    \        fibs += 1134903170\n        fibs += 1836311903\n        fibs += 2971215073\n\
    \        fibs += 4807526976\n        fibs += 7778742049\n        fibs += 12586269025\n\
    \        fibs += 20365011074\n        fibs += 32951280099\n        fibs += 53316291171\n\
    \        fibs += 86267571272\n        fibs += 138366657801\n        fibs += 217555805707\n\
    \        fibs += 352410161514\n        fibs += 570233201701\n        fibs += 9223372036854775807l\n\
    \        fibs.take(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsy_hmu2u.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793332
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs take n foreach { x => fibs\
    \ += fibs.last + fibs.last }\n        fibs.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp09x7xv5j.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793332
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1l) 1l\n        else fib(n-1l) +\
    \ fib(n-2l)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdgs14hy5.scala:16)\n\tat Problem.main(tmpdgs14hy5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt83v3md.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += fibs.head\n        fibs +=\
    \ fibs.tail.head\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdhhufo65.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n  \
    \      fibs ::: fibs.takeWhile(_ < n) map { x => x + fibs.last }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb9rjaciq.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793332
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwxp8hyb0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1l) 1l\n        else fib(n-1l) +\
    \ fib(n-2l)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdgs14hy5.scala:16)\n\tat Problem.main(tmpdgs14hy5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    while (fibs.size < n) {\n            fibs += fibs.head + fibs.tail.head\n\
    \        }\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj60ci5fg.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793332
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt83v3md.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5xo_buoo.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs.update(0, fibs(0) + fibs(1))\n        fibs.update(1, fibs(0) + fibs(1))\n\
    \        fibs.update(n-1, fibs(n-2) + fibs(n-3))\n        fibs.update(n-2, fibs(n-1)\
    \ + fibs(n-3))\n        fibs.update(n-3, fibs(n-2) + fibs(n-1))\n        fibs.update(n-1,\
    \ fibs(n-2) + fibs(n-3))\n        fibs.update(n-2, fibs(n-1) + fibs(n-3))\n  \
    \      fibs.update(n-3, fibs(n-2) + fibs(n-1))\n        fibs.update(n-1, fibs(n-2)\
    \ + fibs(n-3))\n        fibs.update(n-2, fibs(n-1) + fibs(n-3))\n        fibs.update(n-3,\
    \ fibs(n-2) + fibs(n-1))\n        fibs.update(n-1, fibs(n-2) + fibs(n-3))\n  \
    \      fibs.update(n-2, fibs(n-1) + fibs(n-3))\n        fibs.update(n-3, fibs(n-2)\
    \ + fibs(n-1))\n        fibs.update(n-1, fibs(n-2) + fibs(n-3))\n        fibs.update(n-2,\
    \ fibs(n-1) + fibs(n-3))\n        fibs.update(n-3, fibs(n-2) + fibs(n-1))\n  \
    \      fibs.update(n-1, fibs(n-2) + fibs(n-3))\n        fibs.update(n-2, fibs(n-1)\
    \ + fibs(n-3))\n        fibs.update(n-3, fibs(n-2) + fibs(n-1))\n        fibs.update(n-1,\
    \ fibs(n-2) + fibs(n-3))\n        fibs.update(n-2, fibs(n-1) + fibs(n-3))\n  \
    \      fibs.update(n-3, fibs(n-2) + fibs(n-1))\n        fibs.update(n-1, fibs(n-2)\
    \ + fibs(n-3))\n        fibs.update(n-2, fibs(n-1) + fibs(n-3))\n        fibs.update(n-3,\
    \ fibs(n-2) + fibs(n-1))\n        fibs.update(n-1, fibs(n-2) + fibs(n-3))\n  \
    \      fibs.update(n-2, fibs(n-1) + fibs(n-3))\n        fibs.update(n-3, fibs(n-2)\
    \ + fibs(n-1))\n        fibs.update(n-1, fibs(n-2) + fibs(n-3))\n        fibs.update(n-2,\
    \ fibs(n-1) + fibs(n-3))\n        fibs.update(n-3, fibs(n-2\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3cssiq_3.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3cssiq_3.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793333
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs += fibs(0)\n        fibs += fibs(1)\n        fibs(n) match {\n  \
    \          case 0 => 0\n            case 1 => 1\n            case _ => fibs(n-1)\
    \ + fibs(n-2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6wq421u.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793333
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n\
    \        fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h9z2qbh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2l\n        var b = 1l\n        var\
    \ c = 1l\n        var d = 1l\n        var n = 0l\n        while (n < n) {\n  \
    \          val temp = a\n            a = b\n            b = temp + b\n       \
    \     c += d\n            d = c\n            n += 1\n        }\n        return\
    \ b\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptvwjyihz.scala:28)\n\tat Problem.main(tmptvwjyihz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs += fibs(0l) + 1l\n        fibs += fibs(1l) + 1l\n        fibs(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpesjpwlyf.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793333
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwxp8hyb0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n \
    \       fibs.update(0, fibs(0l) + fibs(1l))\n        fibs.update(1, fibs(1l) +\
    \ fibs(2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1,\
    \ fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n\
    \        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l)\
    \ + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1,\
    \ fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n\
    \        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l)\
    \ + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1,\
    \ fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n\
    \        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l)\
    \ + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1,\
    \ fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n\
    \        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l)\
    \ + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1,\
    \ fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n\
    \        fibs.update(n-1, fibs(n-1l) + fibs(n-2l))\n        fibs.update(n-1, fibs(n-1l\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt6niv5hq.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6niv5hq.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer(\e[31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793333
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwxp8hyb0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += fibs.head\n\
    \        fibs += fibs.tail.head\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt4bn21eh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793333
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt83v3md.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793232
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(0, 1);\n   \
    \     for(i <- 1 to n) {\n            fibs += fibs.head + fibs.tail.head\n   \
    \     }\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpazxsvi4q.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m);\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpazxsvi4q.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += fibs.head\n        fibs +=\
    \ fibs.tail.head\n        fibs.drop(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdhhufo65.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n  \
    \      fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n  \
    \      fibs += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n  \
    \      fibs += 8\n        fibs += 9\n        fibs += 10\n        fibs += 11\n\
    \        fibs += 12\n        fibs += 13\n        fibs += 14\n        fibs += 15\n\
    \        fibs += 16\n        fibs += 17\n        fibs += 18\n        fibs += 19\n\
    \        fibs += 20\n        fibs += 21\n        fibs += 22\n        fibs += 23\n\
    \        fibs += 24\n        fibs += 25\n        fibs += 26\n        fibs += 27\n\
    \        fibs += 28\n        fibs += 29\n        fibs += 30\n        fibs += 31\n\
    \        fibs += 32\n        fibs += 33\n        fibs += 34\n        fibs += 35\n\
    \        fibs += 36\n        fibs += 37\n        fibs += 38\n        fibs += 39\n\
    \        fibs += 40\n        fibs += 41\n        fibs += 42\n        fibs += 43\n\
    \        fibs += 44\n        fibs += 45\n        fibs += 46\n        fibs += 47\n\
    \        fibs += 48\n        fibs += 49\n        fibs += 50\n        fibs += 51\n\
    \        fibs += 52\n        fibs += 53\n        fibs += 54\n        fibs += 55\n\
    \        fibs += 56\n        fibs += 57\n        fibs += 58\n        fibs += 59\n\
    \        fibs += 60\n        fibs += 61\n        fibs += 62\n        fibs += 63\n\
    \        fibs += 64\n        fibs += 65\n        fibs += 66\n        fibs += 67\n\
    \        fibs += 68\n        fibs += 69\n        fibs += 70\n        fibs += 71\n\
    \        fibs += 72\n        fibs += 73\n        fibs += 74\n        fibs += 75\n\
    \        fibs += 76\n        fibs += 77\n        fibs += 78\n        fibs += 79\n\
    \        fibs += 80\n        fibs += 81\n        fibs += 82\n        fibs += 83\n\
    \        fibs += 84\n        fibs += 85\n        fibs += 86\n        fibs += 87\n\
    \        fibs += 88\n        fibs += 89\n        fibs += 90\n        fibs += 91\n\
    \        fibs += 92\n        fibs += 93\n        fibs += 94\n        fibs += 95\n\
    \        fibs += 96\n        fibs += 97\n        fibs += 98\n        fibs += 99\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphrsicj5b.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.drop(1).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptri05ml7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2\n        var b = 1\n        var\
    \ c = 2\n        for(i <- 0 until n){\n            val temp = a\n            a\
    \ = b\n            b = temp + c\n            c = a + b\n        }\n        c\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0ubvwdyz.scala:15:25\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs += fibs.last\n        fibs += fibs.last\n        fibs.drop(1).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptri05ml7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0l\e[0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0l, 1l)\n \
    \       fibs.update(0, fibs(0l) + fibs(1l))\n        fibs.update(1, fibs(0l) +\
    \ fibs(1l))\n        fibs.update(n-1, fibs(n-2) + fibs(n-3))\n        fibs.update(n-2,\
    \ fibs(n-1) + fibs(n-3))\n        fibs.update(n-3, fibs(n-2) + fibs(n-1))\n  \
    \      fibs.update(n-1, fibs(n-2) + fibs(n-3))\n        fibs.update(n-2, fibs(n-1)\
    \ + fibs(n-3))\n        fibs.update(n-3, fibs(n-2) + fibs(n-1))\n        fibs.update(n-1,\
    \ fibs(n-2) + fibs(n-3))\n        fibs.update(n-2, fibs(n-1) + fibs(n-3))\n  \
    \      fibs.update(n-3, fibs(n-2) + fibs(n-1))\n        fibs.update(n-1, fibs(n-2)\
    \ + fibs(n-3))\n        fibs.update(n-2, fibs(n-1) + fibs(n-3))\n        fibs.update(n-3,\
    \ fibs(n-2) + fibs(n-1))\n        fibs.update(n-1, fibs(n-2) + fibs(n-3))\n  \
    \      fibs.update(n-2, fibs(n-1) + fibs(n-3))\n        fibs.update(n-3, fibs(n-2)\
    \ + fibs(n-1))\n        fibs.update(n-1, fibs(n-2) + fibs(n-3))\n        fibs.update(n-2,\
    \ fibs(n-1) + fibs(n-3))\n        fibs.update(n-3, fibs(n-2) + fibs(n-1))\n  \
    \      fibs.update(n-1, fibs(n-2) + fibs(n-3))\n        fibs.update(n-2, fibs(n-1)\
    \ + fibs(n-3))\n        fibs.update(n-3, fibs(n-2) + fibs(n-1))\n        fibs.update(n-1,\
    \ fibs(n-2) + fibs(n-3))\n        fibs.update(n-2, fibs(n-1) + fibs(n-3))\n  \
    \      fibs.update(n-3, fibs(n-2) + fibs(n-1))\n        fibs.update(n-1, fibs(n-2)\
    \ + fibs(n-3))\n        fibs.update(n-2, fibs(n-1) + fibs(n-3))\n        fibs.update(n-3,\
    \ fibs(n-2) + fibs(n-1))\n        fibs.update(n-1, fibs(n-2) + fibs(n-3))\n  \
    \      fibs.update(n-2, fibs(n-1) + fibs(n-3))\n        fibs.\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpeqjyxs4e.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpeqjyxs4e.scala:12:19 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e[31m0l\e\
    [0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    fibs.takeWhile(_ < n).last\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcjbwq38t.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0\n        fibs += 1\n        fibs += fibs(0) + 1\n        fibs(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1o4u9v3v.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt83v3md.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n    \
    \    while (fibs.size < n) {\n            fibs += fibs.head + fibs.last\n    \
    \    }\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2_08dy3x.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334

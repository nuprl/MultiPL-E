name: HumanEval_17_parse_music
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n    // Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n    // not last.\n    // Here is a\
  \ legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|' - half note, lasts\
  \ two beats\n    // '.|' - quater note, lasts one beat\n    // >>> parseMusic((\"\
  o o| .| o| o| .| .| .| .| o o\"))\n    // (List[Long](4l.toLong, 2l.toLong, 1l.toLong,\
  \ 2l.toLong, 2l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 4l.toLong, 4l.toLong))\n\
  \    def parseMusic(music_string : String) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(parseMusic((\"\"\
  )).equals((List[Long]())));\n    assert(parseMusic((\"o o o o\")).equals((List[Long](4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\".| .| .| .|\")).equals((List[Long](1l.toLong,\
  \ 1l.toLong, 1l.toLong, 1l.toLong))));\n    assert(parseMusic((\"o| o| .| .| o o\
  \ o o\")).equals((List[Long](2l.toLong, 2l.toLong, 1l.toLong, 1l.toLong, 4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\"o| .| o| .| o o|\
  \ o o|\")).equals((List[Long](2l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 4l.toLong,\
  \ 2l.toLong, 4l.toLong, 2l.toLong))));\n    }\n\n}\n"
completions: ["        val music_list = music_string.split(\" \").map(_.toUpperCase).toList\n\
    \        val music_list_size = music_list.size\n        val music_list_size_half\
    \ = music_list_size / 2\n        val music_list_size_quarter = music_list_size\
    \ / 4\n        val music_list_size_whole = music_list_size % 4\n        val music_list_size_last_beat\
    \ = music_list_size_whole - music_list_size_quarter\n        val music_list_size_last_beat_half\
    \ = music_list_size_last_beat / 2\n        val music_list_size_last_beat_quarter\
    \ = music_list_size_last_beat / 4\n        val music_list_size_last_beat_whole\
    \ = music_list_size_last_beat % 4\n        val music_list_size_last_beat_last_beat\
    \ = music_list_size_last_beat_whole - music_list_size_last_beat_quarter\n    \
    \    val music_list_size_last_beat_last_beat_half = music_list_size_last_beat_last_beat\
    \ / 2\n        val music_list_size_last_beat_last_beat_quarter = music_list_size_last_beat_last_beat\
    \ / 4\n        val music_list_size_last_beat_last_beat_whole = music_list_size_last_beat_last_beat\
    \ % 4\n        val music_list_size_last_beat_last_beat_last_beat = music_list_size_last_beat_last_beat_whole\
    \ - music_list_size_last_beat_last_beat_quarter\n        val music_list_size_last_beat_last_beat_last_beat_half\
    \ = music_list_size_last_beat_last_beat_last_beat / 2\n        val music_list_size_last_beat_last_beat_last_beat_quarter\
    \ = music_list_size_last_beat_last_beat_last_beat / 4\n        val music_list_size_last_beat_last_beat_last_beat_whole\
    \ = music_list_size_last_beat_last_beat_last_beat % 4\n        val music_list_size_last_beat_last_beat_last_beat_last_beat\
    \ = music_list_size_last_beat_last_beat_last_beat_whole - music_list_size_last_beat_last_beat_last_beat_quarter\n\
    \        val music_list_size_last_beat_last_beat_last_beat_last_beat_half = music_list_size_last_beat_last_beat_last_beat_last_beat\
    \ / 2\n        val music_list_size_last_beat_last_beat_last_beat_last_", "   \
    \     music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val rest = music_string.substring(1,\
    \ music_string.length)\n            val beats = rest.split(\"|\").map(music_string\
    \ => {\n                val beat = music_string.substring(0, 1)\n            \
    \    val rest = music_string.substring(1, music_string.length)\n             \
    \   beat.toLong\n            }).toList\n            note.toLong :: beats\n   \
    \     }).toList", "        val notes = music_string.split(\"\\\\|\")\n       \
    \ val notes_length = notes.length\n        val notes_array = notes.map(_.toInt).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val notes_length = notes_array.length\n        val notes_array = notes_array.map(_.toLong).toArray\n\
    \        val note", "        music_string.split(\" \").map(music_string => {\n\
    \            val note = music_string.substring(0, 1)\n            val rest = music_string.substring(1,\
    \ music_string.length)\n            val beats = rest.split(\"|\").map(rest =>\
    \ rest.split(\"o\").map(rest => rest.split(\"|\").map(rest => rest.split(\".\"\
    ).map(rest => rest.toLong).sum.toLong).sum.toLong).sum.toLong).sum.toLong\n  \
    \          beats.toLong\n        }).toList", "        music_string.split(\" \"\
    ).map(music_string => {\n            val note = music_string.substring(0, 1)\n\
    \            val beats = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                val beat = music_string.substring(0, 1)\n            \
    \    val rest = music_string.substring(1)\n                beat.toLong * rest.toLong\n\
    \            }).sum\n            note.toLong * beats\n        }).sum", "     \
    \   music_string.split(\" \").map(music_string => {\n            val note = music_string.substring(0,\
    \ 1)\n            val beats = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                val beat = music_string.substring(0, 1)\n            \
    \    val rest = music_string.substring(1)\n                beat.toLong * rest.length\n\
    \            }).sum\n            note -> beats\n        }).groupBy(music_string\
    \ => {\n            music_string._1\n        }).values.toList", "        music_string.split(\"\
    \\\\|\").map(music_string => {\n            val notes = music_string.split(\"\\\
    \\ \").map(music_string => {\n                val note = music_string.charAt(0).toLowerCase\n\
    \                val beats = music_string.substring(1).toInt\n               \
    \ note -> beats\n            }).toList\n            val note = notes.head\n  \
    \          val beats = notes.last\n            note -> beats\n        }).toList",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val rest = music_string.substring(1).dropRight(1)\n\
    \            val beats = rest.split(\"|\").map(x => x.toLong).sum\n          \
    \  beats * note.toLong\n        }).sum", "        val music_list = music_string.split(\"\
    \\\\|\").map(_.toInt).toList\n        val notes = music_list.map(music_string\
    \ => {\n            val note = music_string.substring(0, 1)\n            val beats\
    \ = music_string.substring(1).length\n            note -> beats\n        })\n\
    \        val notes_count = notes.map(x => x._2).sum\n        val notes_count_list\
    \ = notes.map(x => x._1).distinct\n        val notes_count_list_count = notes_count_list.map(x\
    \ => notes_count.count(_ == x))\n        val notes_count_list_count_list = notes_count_list_count.map(x\
    \ => x._1).distinct\n        val notes_count_list_count_list_count = notes_count_list_count_list.map(x\
    \ => x._1).distinct\n        val notes_count_list_count_list_count_list = notes_count_list_count_list_count.map(x\
    \ => x._1).distinct\n        val notes_count_list_count_list_count_list_count\
    \ = notes_count_list_count_list_count_list.map(x => x._1).distinct\n        val\
    \ notes_count_list_count_list_count_list_count_list = notes_count_list_count_list_count_list_count.map(x\
    \ => x._1).distinct\n        val notes_count_list_count_list_count_list_count_list_count\
    \ = notes_count_list_count_list_count_list_count_list.map(x => x._1).distinct\n\
    \        val notes_count_list_count_list_count_list_count_list_count_list = notes_count_list_count_list_count_list_count_list_count.map(x\
    \ => x._1).distinct\n        val notes_count_list_count_list_count_list_count_list_count_list\
    \ = notes_count_list_count_list_count_list_count_list_count_list.map(x => x._1).distinct\n\
    \        val notes_count_list_count_list_count_list_count_list_count_list_count\
    \ = notes_count_list_count_list_count_list_count_list_count_list_count.map(x =>\
    \ x._1).distinct\n        val notes_count_list_count_list_count_list_count_list_count_list_count_list\
    \ = notes_count_list_count_list_count_list_count_list_count_list_count_list.map(x\
    \ => x._1).distinct\n        val notes_count_list_count_list_count_list_count_list_count_list_count_list_count\
    \ = notes_count_list_count_list_count_list_count_list_count_list_count_list_count.map(x\
    \ => x._1).distinct\n        val notes_count_list_count_list_count_list_count_list_count_list_count_list_count_list\
    \ = notes_count_list_count_list_count_list_count_list_count_list_count_list_count.map(x\
    \ => x._1).distinct\n        val notes_count_list_count_list_count_list_count_list_count_list_count_list_count_list_count\
    \ = note", "        music_string.split(\"\\\\|\").map(music_string => {\n    \
    \        val notes = music_string.split(\"\\\\ \").map(music_string => {\n   \
    \             val note = music_string.substring(0, 1)\n                val beats\
    \ = music_string.substring(1).split(\"o\").map(music_string => {\n           \
    \         val beat = music_string.substring(0, 1)\n                    beat.charAt(0).toLong\n\
    \                })\n                (note, beats)\n            })\n         \
    \   notes.map(music_string => {\n                music_string._1.charAt(0).toLong\n\
    \            })\n        }).flatten.distinct", "        val music_list = music_string.split(\"\
    \\\\|\")\n        val music_list_size = music_list.size\n        val music_list_size_2\
    \ = music_list_size / 2\n        val music_list_size_3 = music_list_size_2 / 2\n\
    \        val music_list_size_4 = music_list_size_3 / 2\n        val music_list_size_5\
    \ = music_list_size_4 / 2\n        val music_list_size_6 = music_list_size_5 /\
    \ 2\n        val music_list_size_7 = music_list_size_6 / 2\n        val music_list_size_8\
    \ = music_list_size_7 / 2\n        val music_list_size_9 = music_list_size_8 /\
    \ 2\n        val music_list_size_10 = music_list_size_9 / 2\n        val music_list_size_11\
    \ = music_list_size_10 / 2\n        val music_list_size_12 = music_list_size_11\
    \ / 2\n        val music_list_size_13 = music_list_size_12 / 2\n        val music_list_size_14\
    \ = music_list_size_13 / 2\n        val music_list_size_15 = music_list_size_14\
    \ / 2\n        val music_list_size_16 = music_list_size_15 / 2\n        val music_list_size_17\
    \ = music_list_size_16 / 2\n        val music_list_size_18 = music_list_size_17\
    \ / 2\n        val music_list_size_19 = music_list_size_18 / 2\n        val music_list_size_20\
    \ = music_list_size_19 / 2\n        val music_list_size_21 = music_list_size_20\
    \ / 2\n        val music_list_size_22 = music_list_size_21 / 2\n        val music_list_size_23\
    \ = music_list_size_22 / 2\n        val music_list_size_24 = music_list_size_23\
    \ / 2\n        val music_list_size_25 = music_list_size_24 / 2\n        val music_list_size_26\
    \ = music_list_size_25 / 2\n        val music_list_size_27 = music_list_size_26\
    \ / 2\n        val music_list_size_28 = music_list_size_27 / 2\n        val music_list_size_29\
    \ = music_list_size_28 / 2\n        val music_list_size_30 = music_list_size_29\
    \ / 2\n        val music_list_size_31 = music_list_size_30 / 2\n        val music_list_size_32\
    \ = music_list_size_31 / 2\n        val music_list_size_", "        val notes\
    \ = music_string.split(\"\\\\|\")\n        val notes_count = notes.length\n  \
    \      val notes_beats = notes.map(_.length.toLong)\n        val notes_beats_count\
    \ = notes_beats.sum\n        val notes_beats_count_2 = notes_beats_count / 2\n\
    \        val notes_beats_count_3 = notes_beats_count / 3\n        val notes_beats_count_4\
    \ = notes_beats_count / 4\n        val notes_beats_count_5 = notes_beats_count\
    \ / 5\n        val notes_beats_count_6 = notes_beats_count / 6\n        val notes_beats_count_7\
    \ = notes_beats_count / 7\n        val notes_beats_count_8 = notes_beats_count\
    \ / 8\n        val notes_beats_count_9 = notes_beats_count / 9\n        val notes_beats_count_10\
    \ = notes_beats_count / 10\n        val notes_beats_count_11 = notes_beats_count\
    \ / 11\n        val notes_beats_count_12 = notes_beats_count / 12\n        val\
    \ notes_beats_count_13 = notes_beats_count / 13\n        val notes_beats_count_14\
    \ = notes_beats_count / 14\n        val notes_beats_count_15 = notes_beats_count\
    \ / 15\n        val notes_beats_count_16 = notes_beats_count / 16\n        val\
    \ notes_beats_count_17 = notes_beats_count / 17\n        val notes_beats_count_18\
    \ = notes_beats_count / 18\n        val notes_beats_count_19 = notes_beats_count\
    \ / 19\n        val notes_beats_count_20 = notes_beats_count / 20\n        val\
    \ notes_beats_count_21 = notes_beats_count / 21\n        val notes_beats_count_22\
    \ = notes_beats_count / 22\n        val notes_beats_count_23 = notes_beats_count\
    \ / 23\n        val notes_beats_count_24 = notes_beats_count / 24\n        val\
    \ notes_beats_count_25 = notes_beats_count / 25\n        val notes_beats_count_26\
    \ = notes_beats_count / 26\n        val notes_beats_count_27 = notes_beats_count\
    \ / 27\n        val notes_beats_count_28 = notes_beats_count / 28\n        val\
    \ notes_beats_count_29 = notes_beats_count / 29", "        val music_list = music_string.split(\"\
    \ \")\n        val music_list_length = music_list.length\n        val music_list_without_notes\
    \ = music_list.filterNot(music_list => music_list.isEmpty)\n        val music_list_without_notes_length\
    \ = music_list_without_notes.length\n        val music_list_without_notes_without_notes\
    \ = music_list_without_notes.filterNot(music_list_without_notes => music_list_without_notes.isEmpty)\n\
    \        val music_list_without_notes_without_notes_length = music_list_without_notes_without_notes.length\n\
    \        val music_list_without_notes_without_notes_without_notes = music_list_without_notes_without_notes.filterNot(music_list_without_notes_without_notes\
    \ => music_list_without_notes_without_notes.isEmpty)\n        val music_list_without_notes_without_notes_without_notes_length\
    \ = music_list_without_notes_without_notes_without_notes.length\n        val music_list_without_notes_without_notes_without_notes_without_notes\
    \ = music_list_without_notes_without_notes_without_notes.filterNot(music_list_without_notes_without_notes_without_notes\
    \ => music_list_without_notes_without_notes_without_notes.isEmpty)\n        val\
    \ music_list_without_notes_without_notes_without_notes_without_notes_length =\
    \ music_list_without_notes_without_notes_without_notes_without_notes.length\n\
    \        val music_list_without_notes_without_notes_without_notes_without_notes_without_notes\
    \ = music_list_without_notes_without_notes_without_notes_without_notes.filterNot(music_list_without_notes_without_notes_without_notes_without_notes\
    \ => music_list_without_notes_without_notes_without_notes_without_notes.isEmpty)\n\
    \        val music_list_without_notes_without_notes_without_notes_without_notes_without_notes_length\
    \ = music_list_without_notes_without_notes_without_notes_without_notes_without_notes.length\n\
    \        val music_list_without_notes_without_notes_without_notes_without_notes_without_notes_without_notes\
    \ = music_list_without_notes_without_notes_without_notes_without_notes_without_notes_without_notes.length\n\
    \        val music_list_without_notes_without_notes_without_notes_without_notes_without_notes_without_notes_length\
    \ = music_list_without_notes_without_notes_without_notes_without_notes_without_notes_without_notes.length\n\
    \        val music_list_without_notes_without_notes_without_notes_without_notes_without_note",
  "        music_string.split(\"\\\\|\").map(music_string => {\n            val notes\
    \ = music_string.split(\"o\").map(music_string => {\n                val note\
    \ = music_string.split(\"|\")\n                note(0)\n            }).toList\n\
    \            val beats = notes.map(note => {\n                val beat = note.split(\"\
    .\").map(music_string => {\n                    val beat = music_string.split(\"\
    |\")\n                    beat(0)\n                }).toList\n               \
    \ beat.map(beat => {\n                    val beat = beat.map(music_string =>\
    \ {\n                        val beat = music_string.split(\"|\")\n          \
    \              beat(0)\n                    }).toList\n                    beat.map(beat\
    \ => {\n                        val beat = beat.map(music_string => {\n      \
    \                      val beat = music_string.split(\"|\")\n                \
    \            beat(0)\n                        }).toList\n                    \
    \    beat.map(beat => {\n                            val beat = beat.map(music_string\
    \ => {\n                                val beat = music_string.split(\"|\")\n\
    \                                beat(0)\n                            }).toList\n\
    \                            beat.map(beat => {\n                            \
    \    val beat = beat.map(music_string => {\n                                 \
    \   val beat = music_string.split(\"|\")\n                                   \
    \ beat(0)\n                                }).toList\n                       \
    \         beat.map(beat => {\n                                    val beat = beat.map(music_string\
    \ => {\n                                        val beat = music_string.split(\"\
    |\")\n                                        beat(0)\n                      \
    \              }).toList\n                                    beat.map(beat =>\
    \ {\n                                        val beat = beat.map(music_string\
    \ => {\n                                            val beat = music_string.split(\"\
    |\")\n                                            beat(0)\n                  \
    \                      }).toList\n                                        beat.map(beat\
    \ => {\n                                            val beat = beat.map(music_string\
    \ => {\n                                                val beat = music_string.split(\"\
    |\")\n                                                beat(0)\n              \
    \                              }).toList\n                                   \
    \         beat.map(beat => {\n                                               \
    \ val beat = beat.map(music_string => {\n                                    \
    \                val beat = music_string.split(\"|\")\n                      \
    \                              beat(0)\n                                     \
    \           }).toList\n                                                beat.map(beat\
    \ => {\n                                                    val beat = beat.map(music_string\
    \ => {\n                                                        val beat = music_string.split(\"\
    |\")\n                                                        beat(0)\n      \
    \                                              }).toList\n                   \
    \                                 beat.map(beat => {\n                       \
    \                                 val beat = beat.map(music_string => {\n    \
    \                                                        val beat = music_string.split(\"\
    |\")\n                                                            beat(0)\n  \
    \                                                      }).toList\n           \
    \                                             beat.map(beat => {\n           \
    \                                                 val beat = beat.map(music_string\
    \ => {\n                                                                val ",
  "        val notes = music_string.split(\"\\\\|\")\n        val notes_count = notes.length\n\
    \        val notes_beats = notes.map(n => n.length.toLong)\n        val notes_beats_count\
    \ = notes_beats.sum\n        val notes_beats_count_2 = notes_beats_count * 2\n\
    \        val notes_beats_count_3 = notes_beats_count * 3\n        val notes_beats_count_4\
    \ = notes_beats_count * 4\n        val notes_beats_count_5 = notes_beats_count\
    \ * 5\n        val notes_beats_count_6 = notes_beats_count * 6\n        val notes_beats_count_7\
    \ = notes_beats_count * 7\n        val notes_beats_count_8 = notes_beats_count\
    \ * 8\n        val notes_beats_count_9 = notes_beats_count * 9\n        val notes_beats_count_10\
    \ = notes_beats_count * 10\n        val notes_beats_count_11 = notes_beats_count\
    \ * 11\n        val notes_beats_count_12 = notes_beats_count * 12\n        val\
    \ notes_beats_count_13 = notes_beats_count * 13\n        val notes_beats_count_14\
    \ = notes_beats_count * 14\n        val notes_beats_count_15 = notes_beats_count\
    \ * 15\n        val notes_beats_count_16 = notes_beats_count * 16\n        val\
    \ notes_beats_count_17 = notes_beats_count * 17\n        val notes_beats_count_18\
    \ = notes_beats_count * 18\n        val notes_beats_count_19 = notes_beats_count\
    \ * 19\n        val notes_beats_count_20 = notes_beats_count * 20\n        val\
    \ notes_beats_count_21 = notes_beats_count * 21\n        val notes_beats_count_22\
    \ = notes_beats_count * 22\n        val notes_beats_count_23 = notes_beats_count\
    \ * 23\n        val notes_beats_count_24 = notes_beats_count * 24\n        val\
    \ notes_beats_count_25 = notes_beats_count * 25\n        val notes_beats_count_26\
    \ = notes_beats_count * 26\n        val notes_beats_count_27 = notes_beats_count\
    \ * 27\n        val notes_beats_count_28 = notes_beats_count * 28\n        val\
    \ notes_beats_count_29 = notes_beats_count ", "        val music_notes = music_string.split(\"\
    \\\\|\")\n        val notes = music_notes.map(music_note => music_note.split(\"\
    o\"))\n        val notes_length = notes.map(music_note => music_note.size)\n \
    \       val notes_length_sum = notes_length.foldLeft(0l)(_ + _)\n        val notes_length_average\
    \ = notes_length_sum / notes_length.length\n        val notes_length_average_list\
    \ = notes_length_average.toList.map(_.toLong)\n        val notes_length_average_list2\
    \ = notes_length_average_list.toList.sortWith(_ < _)\n        val notes_length_average_list3\
    \ = notes_length_average_list2.toList.sortWith(_ < _)\n        val notes_length_average_list4\
    \ = notes_length_average_list3.toList.sortWith(_ < _)\n        val notes_length_average_list5\
    \ = notes_length_average_list4.toList.sortWith(_ < _)\n        val notes_length_average_list6\
    \ = notes_length_average_list5.toList.sortWith(_ < _)\n        val notes_length_average_list7\
    \ = notes_length_average_list6.toList.sortWith(_ < _)\n        val notes_length_average_list8\
    \ = notes_length_average_list7.toList.sortWith(_ < _)\n        val notes_length_average_list9\
    \ = notes_length_average_list8.toList.sortWith(_ < _)\n        val notes_length_average_list10\
    \ = notes_length_average_list9.toList.sortWith(_ < _)\n        val notes_length_average_list11\
    \ = notes_length_average_list10.toList.sortWith(_ < _)\n        val notes_length_average_list12\
    \ = notes_length_average_list11.toList.sortWith(_ < _)\n        val notes_length_average_list13\
    \ = notes_length_average_list12.toList.sortWith(_ < _)\n        val notes_length_average_list14\
    \ = notes_length_average_list13.toList.sortWith(_ < _)\n        val notes_length_average_list15\
    \ = notes_length_average_list14.toList.sortWith(_ < _)\n        val notes_length_average_list16\
    \ = notes_length_average_list15.toList.sortWith(_ < _)\n        val notes_length_average_list17\
    \ = notes_length_average_list16.toList.sortWith(_ < _)\n        val notes_length_average_list18\
    \ = notes_length_average_list17.toList.sortWith(_ < _)\n        val notes_length_average",
  "        val music_list = music_string.split(\" \").map(_.toUpperCase)\n       \
    \ val notes = music_list.filterNot(_ == \"O\")\n        val notes_length = notes.map(_.length).sum\n\
    \        val notes_last_beat = notes.map(_.last).sum\n        val notes_last_beats\
    \ = notes_last_beat/notes_length\n        val notes_last_beats_int = notes_last_beats.toInt\n\
    \        val notes_last_beats_ints = notes_last_beats_int.toList.map(_.toLong)\n\
    \        val notes_last_beats_ints_sorted = notes_last_beats_ints.sortBy(_)\n\
    \        val notes_last_beats_ints_sorted_length = notes_last_beats_ints_sorted.length\n\
    \        val notes_last_beats_ints_sorted_length = notes_last_beats_ints_sorted_length.toLong\n\
    \        val notes_last_beats_ints_sorted_length_2 = notes_last_beats_ints_sorted_length/2\n\
    \        val notes_last_beats_ints_sorted_length_3 = notes_last_beats_ints_sorted_length/3\n\
    \        val notes_last_beats_ints_sorted_length_4 = notes_last_beats_ints_sorted_length/4\n\
    \        val notes_last_beats_ints_sorted_length_5 = notes_last_beats_ints_sorted_length/5\n\
    \        val notes_last_beats_ints_sorted_length_6 = notes_last_beats_ints_sorted_length/6\n\
    \        val notes_last_beats_ints_sorted_length_7 = notes_last_beats_ints_sorted_length/7\n\
    \        val notes_last_beats_ints_sorted_length_8 = notes_last_beats_ints_sorted_length/8\n\
    \        val notes_last_beats_ints_sorted_length_9 = notes_last_beats_ints_sorted_length/9\n\
    \        val notes_last_beats_ints_sorted_length_10 = notes_last_beats_ints_sorted_length/10\n\
    \        val notes_last_beats_ints_sorted_length_11 = notes_last_beats_ints_sorted_length/11\n\
    \        val notes_last_beats_ints_sorted_length_12 = notes_last_beats_ints_sorted_length/12\n\
    \        val notes_last_beats_ints_sorted_length_13 = notes_last_beats_ints_sorted_length/13\n\
    \        val notes_last_beats_ints_sorted_length_14 = notes_last_beats_ints_sorted_length/14\n\
    \        val notes_last_beats_ints_sorted_length_15 = notes_last_beats_", "  \
    \      val notes = music_string.split(\"\\\\|\")\n        val notes_count = notes.length\n\
    \        val notes_beats = notes.map(x => x.toInt)\n        val notes_beats_count\
    \ = notes_beats.map(x => x.toLong)\n        val notes_beats_count_sum = notes_beats_count.sum\n\
    \        val notes_beats_count_count_sum = notes_beats_count.map(x => x.toLong).sum\n\
    \        val notes_beats_count_count_count_sum = notes_beats_count.map(x => x.toLong).map(x\
    \ => x.toLong).sum\n        val notes_beats_count_count_count_count_sum = notes_beats_count.map(x\
    \ => x.toLong).map(x => x.toLong).map(x => x.toLong).sum\n        val notes_beats_count_count_count_count_count_sum\
    \ = notes_beats_count.map(x => x.toLong).map(x => x.toLong).map(x => x.toLong).map(x\
    \ => x.toLong).sum\n        val notes_beats_count_count_count_count_count_count_sum\
    \ = notes_beats_count.map(x => x.toLong).map(x => x.toLong).map(x => x.toLong).map(x\
    \ => x.toLong).map(x => x.toLong).sum\n        val notes_beats_count_count_count_count_count_count_count_sum\
    \ = notes_beats_count.map(x => x.toLong).map(x => x.toLong).map(x => x.toLong).map(x\
    \ => x.toLong).map(x => x.toLong).map(x => x.toLong).sum\n        val notes_beats_count_count_count_count_count_count_count_count_sum\
    \ = notes_beats_count.map(x => x.toLong).map(x => x.toLong).map(x => x.toLong).map(x\
    \ => x.toLong).map(x => x.toLong).map(x => x.toLong).map(x => x.toLong).sum\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_sum\
    \ = notes_beats_count.map(x => x.toLong).map(x => x.toLong).map(x => x.toLong).map(x\
    \ => x.toLong).map(x => x.toLong).map(x => x.toLong).map(x => x.toLong).map(x\
    \ => x.toLong).sum\n        val notes_beats_count_count_count_count_count_count_count_count_count_count_sum\
    \ = notes_beats_count.map(x => x.toLong).map(x => x.to", "        music_string.split(\"\
    \ \").map(music_string => {\n            val note = music_string.charAt(0)\n \
    \           val rest = music_string.substring(1).trim\n            val beats =\
    \ rest.split(\"|\").map(rest => {\n                val beat = rest.charAt(0)\n\
    \                val rest = rest.substring(1).trim\n                val rest =\
    \ rest.toLong\n                beat match {\n                    case \"o\" =>\
    \ rest\n                    case \"o|\" => rest / 2\n                    case\
    \ \".|\" => rest / 4\n                    case _ => throw new Exception(\"Invalid\
    \ music string: \" + music_string)\n                }\n            }).sum\n  \
    \          note match {\n                case \"o\" => beats\n               \
    \ case \"o|\" => beats / 2\n                case \".|\" => beats / 4\n       \
    \         case _ => throw new Exception(\"Invalid music string: \" + music_string)\n\
    \            }\n        }).sum", "        val music_list = music_string.split(\"\
    \\\\|\")\n        val music_list_length = music_list.length\n        val music_list_beats\
    \ = music_list.map(music_string => {\n            val music_string_length = music_string.length\n\
    \            val music_string_beats = music_string.split(\"o\").length\n     \
    \       music_string_beats * music_string_length\n        }).toList\n        val\
    \ music_list_beats_length = music_list_beats.length\n        val music_list_beats_length\
    \ = music_list_beats_length / music_list_length\n        val music_list_beats_length\
    \ = music_list_beats_length.toLong\n        val music_list_beats_length = music_list_beats_length\
    \ / 4\n        val music_list_beats_length = music_list_beats_length.toLong\n\
    \        val music_list_beats_length = music_list_beats_length / 2\n        val\
    \ music_list_beats_length = music_list_beats_length.toLong\n        val music_list_beats_length\
    \ = music_list_beats_length / 1\n        val music_list_beats_length = music_list_beats_length.toLong\n\
    \        val music_list_beats_length = music_list_beats_length / 4\n        val\
    \ music_list_beats_length = music_list_beats_length.toLong\n        val music_list_beats_length\
    \ = music_list_beats_length / 2\n        val music_list_beats_length = music_list_beats_length.toLong\n\
    \        val music_list_beats_length = music_list_beats_length / 1\n        val\
    \ music_list_beats_length = music_list_beats_length.toLong\n        val music_list_beats_length\
    \ = music_list_beats_length / 4\n        val music_list_beats_length = music_list_beats_length.toLong\n\
    \        val music_list_beats_length = music_list_beats_length / 2\n        val\
    \ music_list_beats_length = music_list_beats_length.toLong\n        val music_list_beats_length\
    \ = music_list_beats_length / 1\n        val music_list_beats_length = music_list_beats_length.toLong\n\
    \        val music_list_beats_length = music_list_beats_length / 4\n        val\
    \ music_list_beats_length = music_list_beats_length.toLong\n        val music_list_beats_length\
    \ = music_list_beats_length / 2\n        val music_list_beats_length = music_list_beats_length.toLong\n\
    \        val music_list_beat", "        music_string.split(\"\\\\|\").map(music_string\
    \ => {\n            val notes = music_string.split(\"\\\\ \").map(music_string\
    \ => {\n                val note = music_string.charAt(0).toLowerCase\n      \
    \          val beats = music_string.substring(1).toLong\n                note\n\
    \            })\n            notes.map(note => {\n                note match {\n\
    \                    case \"o\" => 4l.toLong\n                    case \"o|\"\
    \ => 2l.toLong\n                    case \".|\" => 1l.toLong\n               \
    \     case _ => 0l.toLong\n                }\n            }).sum\n        }).toList",
  "        val music_list = music_string.split(\" \").map(_.toUpperCase).toList\n\
    \        val music_list = music_list.filter(music_string => music_string != \"\
    .\")\n        val music_list = music_list.filter(music_string => music_string\
    \ != \"o\")\n        val music_list = music_list.filter(music_string => music_string\
    \ != \"|\")\n        val music_list = music_list.filter(music_string => music_string\
    \ != \"o|\")\n        val music_list = music_list.filter(music_string => music_string\
    \ != \".|\")\n        val music_list = music_list.filter(music_string => music_string\
    \ != \"o|.\")\n        val music_list = music_list.filter(music_string => music_string\
    \ != \"o|o\")\n        val music_list = music_list.filter(music_string => music_string\
    \ != \"o|o|\")\n        val music_list = music_list.filter(music_string => music_string\
    \ != \"o|o|.\")\n        val music_list = music_list.filter(music_string => music_string\
    \ != \"o|o|o\")\n        val music_list = music_list.filter(music_string => music_string\
    \ != \"o|o|o|\")\n        val music_list = music_list.filter(music_string => music_string\
    \ != \"o|o|o|.\")\n        val music_list = music_list.filter(music_string =>\
    \ music_string != \"o|o|o|o\")\n        val music_list = music_list.filter(music_string\
    \ => music_string != \"o|o|o|o|\")\n        val music_list = music_list.filter(music_string\
    \ => music_string != \"o|o|o|o|.\")\n        val music_list = music_list.filter(music_string\
    \ => music_string != \"o|o|o|o|o\")\n        val music_list = music_list.filter(music_string\
    \ => music_string != \"o|o|o|o|o|\")\n        val music_list = music_list.filter(music_string\
    \ => music_string != \"o|o|o|o|o|.\")\n        val music_list = music_list.filter(music_string\
    \ => music_string != \"o|o|o|o|o|o\")\n        val music_list = music_list.filter(music_string\
    \ => music_string != \"o|o|o|o|o|o|\")\n        val ", "        val notes = music_string.split(\"\
    \ \").map(_.toUpperCase())\n        val notes_count = notes.map(x => if (x ==\
    \ \"O\") 4 else if (x == \"|\") 2 else 1)\n        val beats_count = notes_count.map(x\
    \ => x * 4)\n        val beats_count_sum = beats_count.sum\n        val beats_count_list\
    \ = beats_count.toList\n        val notes_count_list = notes_count.toList\n  \
    \      val notes_count_list_sum = notes_count_list.sum\n        val notes_count_list_list_sum\
    \ = notes_count_list.map(x => x * 4).sum\n        val notes_count_list_list_list_sum\
    \ = notes_count_list.map(x => x * 4).map(x => x * 4).sum\n        val notes_count_list_list_list_list_sum\
    \ = notes_count_list.map(x => x * 4).map(x => x * 4).map(x => x * 4).sum\n   \
    \     val notes_count_list_list_list_list_list_sum = notes_count_list.map(x =>\
    \ x * 4).map(x => x * 4).map(x => x * 4).map(x => x * 4).sum\n        val notes_count_list_list_list_list_list_list_sum\
    \ = notes_count_list.map(x => x * 4).map(x => x * 4).map(x => x * 4).map(x =>\
    \ x * 4).map(x => x * 4).sum\n        val notes_count_list_list_list_list_list_list_list_sum\
    \ = notes_count_list.map(x => x * 4).map(x => x * 4).map(x => x * 4).map(x =>\
    \ x * 4).map(x => x * 4).map(x => x * 4).sum\n        val notes_count_list_list_list_list_list_list_list_list_sum\
    \ = notes_count_list.map(x => x * 4).map(x => x * 4).map(x => x * 4).map(x =>\
    \ x * 4).map(x => x * 4).map(x => x * 4).map(x => x * 4).sum\n        val notes_count_list_list_list_list_list_list_list_list_list_sum\
    \ = notes_count_list.map(x => x * 4).map(x => x * 4).map(x => x * 4).map(x =>\
    \ x * 4).map(x => x * 4).map(x => x * 4).map(x => x * 4).map(x => x * 4).sum\n\
    \        val notes_count_list_list_list_list_list_list_list_list_list_sum = notes_count_list.map(x\
    \ => x * 4).map(x => x * 4).map(x => x * 4).map(x => x * 4).map(x => x * 4).map(x\
    \ => x * 4", "        val music_list = music_string.split(\"\\\\|\").map(_.toInt).toList\n\
    \        val music_beats = music_list.map(music_note => music_note / 4)\n    \
    \    val music_rest = music_list.map(music_note => music_note % 4)\n        music_beats\
    \ ++ music_rest", "        val music_list = music_string.split(\"\\\\|\")\n  \
    \      val music_list_size = music_list.size\n        val music_list_size_2 =\
    \ music_list_size / 2\n        val music_list_size_3 = music_list_size_2 / 2\n\
    \        val music_list_size_4 = music_list_size_3 / 2\n        val music_list_size_5\
    \ = music_list_size_4 / 2\n        val music_list_size_6 = music_list_size_5 /\
    \ 2\n        val music_list_size_7 = music_list_size_6 / 2\n        val music_list_size_8\
    \ = music_list_size_7 / 2\n        val music_list_size_9 = music_list_size_8 /\
    \ 2\n        val music_list_size_10 = music_list_size_9 / 2\n        val music_list_size_11\
    \ = music_list_size_10 / 2\n        val music_list_size_12 = music_list_size_11\
    \ / 2\n        val music_list_size_13 = music_list_size_12 / 2\n        val music_list_size_14\
    \ = music_list_size_13 / 2\n        val music_list_size_15 = music_list_size_14\
    \ / 2\n        val music_list_size_16 = music_list_size_15 / 2\n        val music_list_size_17\
    \ = music_list_size_16 / 2\n        val music_list_size_18 = music_list_size_17\
    \ / 2\n        val music_list_size_19 = music_list_size_18 / 2\n        val music_list_size_20\
    \ = music_list_size_19 / 2\n        val music_list_size_21 = music_list_size_20\
    \ / 2\n        val music_list_size_22 = music_list_size_21 / 2\n        val music_list_size_23\
    \ = music_list_size_22 / 2\n        val music_list_size_24 = music_list_size_23\
    \ / 2\n        val music_list_size_25 = music_list_size_24 / 2\n        val music_list_size_26\
    \ = music_list_size_25 / 2\n        val music_list_size_27 = music_list_size_26\
    \ / 2\n        val music_list_size_28 = music_list_size_27 / 2\n        val music_list_size_29\
    \ = music_list_size_28 / 2\n        val music_list_size_30 = music_list_size_29\
    \ / 2\n        val music_list_size_31 = music_list_size_30 / 2\n        val music_list_size_32\
    \ = music_list_size_31 / 2\n        val music_list_size_", "        music_string.split(\"\
    \ \").map(music_string => {\n            val note = music_string.charAt(0)\n \
    \           val beats = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                val beat = music_string.charAt(0)\n                val\
    \ rest = music_string.substring(1).split(\"o\").map(music_string => {\n      \
    \              val rest = music_string.charAt(0)\n                    val rest2\
    \ = music_string.substring(1).split(\"|\").map(music_string => {\n           \
    \             val rest2 = music_string.charAt(0)\n                        val\
    \ rest3 = music_string.substring(1).split(\"o\").map(music_string => {\n     \
    \                       val rest3 = music_string.charAt(0)\n                 \
    \           val rest4 = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                                val rest4 = music_string.charAt(0)\n \
    \                               val rest5 = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                    val rest5 = music_string.charAt(0)\n\
    \                                    val rest6 = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                        val rest6\
    \ = music_string.charAt(0)\n                                        val rest7\
    \ = music_string.substring(1).split(\"o\").map(music_string => {\n           \
    \                                 val rest7 = music_string.charAt(0)\n       \
    \                                     val rest8 = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                val\
    \ rest8 = music_string.charAt(0)\n                                           \
    \     val rest9 = music_string.substring(1).split(\"o\").map(music_string => {\n\
    \                                                    val rest9 = music_string.charAt(0)\n\
    \                                                    val rest10 = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                 \
    \       val rest10 = music_string.charAt(0)\n                                \
    \                        val rest11 = music_string.substring(1).split(\"o\").map(music_string\
    \ => {\n                                                            val rest11\
    \ = music_string.charAt(0)\n                                                 \
    \           val rest12 = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                                                                val rest12\
    \ = music_string.charAt(0)\n                                                 \
    \               val rest13 = music_string.substring(1).split(\"o\").map(music_string\
    \ => {\n                                                                    val\
    \ rest13 = music_string.charAt(0)\n                                          \
    \                          val rest14 = music_string.substring(1).split(\"|\"\
    ).map(music_string => {\n                                                    \
    \                    val rest14 = music_string.charAt(0)\n                   \
    \                                                     val rest15 = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \                           val rest15 = music_string.charAt(0)\n            \
    \                                                                val rest16 =\
    \ music_string.substring(1).split(\"|\").map(music_string => {\n             \
    \                                                                   val rest16\
    \ = music_string.charAt(", "        val music_list = music_string.split(\" \"\
    ).map(_.toUpperCase)\n        val music_list_size = music_list.size\n        val\
    \ music_list_size_half = music_list_size / 2\n        val music_list_size_quarter\
    \ = music_list_size / 4\n        val music_list_size_whole = music_list_size.toLong\n\
    \        val music_list_size_quarter = music_list_size_quarter / 4\n        val\
    \ music_list_size_whole = music_list_size_whole / 4\n        val music_list_size_half\
    \ = music_list_size_half / 2\n        val music_list_size_quarter = music_list_size_quarter\
    \ / 4\n        val music_list_size_whole = music_list_size_whole / 4\n       \
    \ val music_list_size_half = music_list_size_half / 2\n        val music_list_size_quarter\
    \ = music_list_size_quarter / 4\n        val music_list_size_whole = music_list_size_whole\
    \ / 4\n        val music_list_size_half = music_list_size_half / 2\n        val\
    \ music_list_size_quarter = music_list_size_quarter / 4\n        val music_list_size_whole\
    \ = music_list_size_whole / 4\n        val music_list_size_half = music_list_size_half\
    \ / 2\n        val music_list_size_quarter = music_list_size_quarter / 4\n   \
    \     val music_list_size_whole = music_list_size_whole / 4\n        val music_list_size_half\
    \ = music_list_size_half / 2\n        val music_list_size_quarter = music_list_size_quarter\
    \ / 4\n        val music_list_size_whole = music_list_size_whole / 4\n       \
    \ val music_list_size_half = music_list_size_half / 2\n        val music_list_size_quarter\
    \ = music_list_size_quarter / 4\n        val music_list_size_whole = music_list_size_whole\
    \ / 4\n        val music_list_size_half = music_list_size_half / 2\n        val\
    \ music_list_size_quarter = music_list_size_quarter / 4\n        val music_list_size_whole\
    \ = music_list_size_whole / 4\n        val music_list_size_half = music_list_size_half\
    \ / 2\n        val music_list_size_quarter = music_list_size_quarter / 4\n   \
    \     val music_list_size_whole = music_list_size_whole / 4\n        val music_list_size_",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val beats = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                val beat = music_string.substring(0,\
    \ 1)\n                val rest = music_string.substring(1)\n                beat.toLong\
    \ * rest.length\n            }).sum\n            note.toLong * beats\n       \
    \ }).sum", "        val notes = music_string.split(\"\\\\|\").map(_.toUpperCase()).map(n\
    \ => n.charAt(0).toInt)\n        val notes_count = notes.toList\n        val notes_count_sorted\
    \ = notes_count.sortBy(_)\n        val notes_count_sorted_reversed = notes_count_sorted.reverse\n\
    \        val notes_count_sorted_reversed_count = notes_count_sorted_reversed.count\n\
    \        val notes_count_sorted_reversed_count_sorted = notes_count_sorted_reversed_count.sortBy(_)\n\
    \        val notes_count_sorted_reversed_count_sorted_count = notes_count_sorted_reversed_count_sorted.count\n\
    \        val notes_count_sorted_reversed_count_sorted_count_sorted = notes_count_sorted_reversed_count_sorted_count.sortBy(_)\n\
    \        val notes_count_sorted_reversed_count_sorted_count_sorted_count = notes_count_sorted_reversed_count_sorted_count_sorted.count\n\
    \        val notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted\
    \ = notes_count_sorted_reversed_count_sorted_count_sorted_count.sortBy(_)\n  \
    \      val notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count\
    \ = notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted.count\n\
    \        val notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted\
    \ = notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count.sortBy(_)\n\
    \        val notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted\
    \ = notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted.count\n\
    \        val notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted\
    \ = notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted_count.sortBy(_)\n\
    \        val notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted\
    \ = notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted.count\n\
    \        val notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted\
    \ = notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted.count\n\
    \        val notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted\
    \ = notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted.count\n\
    \        val notes_count_sorted_reversed_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted_count_sorted\
    \ = notes_count_sorted_reversed_count_", "        val music_notes = music_string.split(\"\
    \\\\|\")\n        val music_notes_length = music_notes.length\n        val music_notes_beats\
    \ = music_notes.map(_.length.toInt)\n        val music_notes_beats_length = music_notes_beats.length\n\
    \        val music_notes_beats_sum = music_notes_beats.sum\n        val music_notes_beats_average\
    \ = music_notes_beats_sum / music_notes_beats_length\n        val music_notes_beats_average_length\
    \ = music_notes_beats_average.length\n        val music_notes_beats_average_length_sum\
    \ = music_notes_beats_average_length * music_notes_beats_average\n        val\
    \ music_notes_beats_average_length_average = music_notes_beats_average_length_sum\
    \ / music_notes_beats_length\n        val music_notes_beats_average_length_average_length\
    \ = music_notes_beats_average_length_average.length\n        val music_notes_beats_average_length_average_length_sum\
    \ = music_notes_beats_average_length_average_length * music_notes_beats_average_length_average\n\
    \        val music_notes_beats_average_length_average_length_average = music_notes_beats_average_length_average_length_sum\
    \ / music_notes_beats_length\n        val music_notes_beats_average_length_average_length_average_length\
    \ = music_notes_beats_average_length_average_length_average.length\n        val\
    \ music_notes_beats_average_length_average_length_average_length_sum = music_notes_beats_average_length_average_length_average_length\
    \ * music_notes_beats_average_length_average_length_average\n        val music_notes_beats_average_length_average_length_average_length_average\
    \ = music_notes_beats_average_length_average_length_average_length_sum / music_notes_beats_length\n\
    \        val music_notes_beats_average_length_average_length_average_length_average_length\
    \ = music_notes_beats_average_length_average_length_average_average_length.length\n\
    \        val music_notes_beats_average_length_average_length_average_length_average_length_sum\
    \ = music_notes_beats_average_length_average_length_average_length_average_length\
    \ * music_notes_beats_average_length_average_length_average_length_average\n \
    \       val music_notes_beats_average_length_average_length_average_length_average_length_average\
    \ = music_notes_beats_average_length_average_length_average_length_average_length_sum\
    \ / music_notes_beats_length\n        val music_notes_beats_average_length_average_length_average_length_average_length_",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val beats = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                val beat = music_string.substring(0,\
    \ 1)\n                val rest = music_string.substring(1)\n                beat.asInstanceOf[Int]\
    \ * rest.asInstanceOf[Int]\n            }).sum\n            note.asInstanceOf[Int]\
    \ * beats.asInstanceOf[Int]\n        }).sum", "        val notes = music_string.split(\"\
    \\\\|\")\n        val notes_length = notes.length\n        val notes_beats = notes.map(_.length.toLong)\n\
    \        val notes_beats_length = notes_beats.sum\n        val notes_beats_length\
    \ = notes_beats_length.toLong\n        val notes_beats_length = notes_beats_length.toLong\n\
    \        val notes_beats_length = notes_beats_length.toLong\n        val notes_beats_length\
    \ = notes_beats_length.toLong\n        val notes_beats_length = notes_beats_length.toLong\n\
    \        val notes_beats_length = notes_beats_length.toLong\n        val notes_beats_length\
    \ = notes_beats_length.toLong\n        val notes_beats_length = notes_beats_length.toLong\n\
    \        val notes_beats_length = notes_beats_length.toLong\n        val notes_beats_length\
    \ = notes_beats_length.toLong\n        val notes_beats_length = notes_beats_length.toLong\n\
    \        val notes_beats_length = notes_beats_length.toLong\n        val notes_beats_length\
    \ = notes_beats_length.toLong\n        val notes_beats_length = notes_beats_length.toLong\n\
    \        val notes_beats_length = notes_beats_length.toLong\n        val notes_beats_length\
    \ = notes_beats_length.toLong\n        val notes_beats_length = notes_beats_length.toLong\n\
    \        val notes_beats_length = notes_beats_length.toLong\n        val notes_beats_length\
    \ = notes_beats_length.toLong\n        val notes_beats_length = notes_beats_length.toLong\n\
    \        val notes_beats_length = notes_beats_length.toLong\n        val notes_beats_length\
    \ = notes_beats_length.toLong\n        val notes_beats_length = notes_beats_length.toLong\n\
    \        val notes_beats_length = notes_beats_length.toLong\n        val notes_beats_length\
    \ = notes_beats_length.toLong\n        val notes_beats_length = notes_beats_length.toLong\n\
    \        val notes_beats_length = notes_beats_length.toLong\n        val notes_beats_length\
    \ = notes_beats_length.toLong\n        val notes_beats_length = notes_beats_length.toLong\n\
    \        val notes_beats_length = notes_beats_length.toLong\n        val notes_beats_length\
    \ = notes_beats_length.toLong", "        val music_list = music_string.split(\"\
    \ \").map(_.toUpperCase).toList\n        val notes = music_list.filter(_ != \"\
    o\")\n        val notes_length = notes.length\n        val notes_length_in_beats\
    \ = notes_length / 4\n        val notes_length_in_beats_in_beats = notes_length_in_beats\
    \ / 4\n        val notes_length_in_beats_in_beats_in_beats = notes_length_in_beats\
    \ / 8\n        val notes_length_in_beats_in_beats_in_beats_in_beats = notes_length_in_beats\
    \ / 16\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / 32\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / 64\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / 128\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / 256\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / 512\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / 1024\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / 2048\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / 4096\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / 8192\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / 16384\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / 32768\n        val notes_length_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats_in_beats\
    \ = notes_length_in_beats / ", "        val notes = music_string.split(\"\\\\\
    |\")\n        val notes_length = notes.length\n        val notes_beats = notes.map(_.length.toInt)\n\
    \        val notes_beats_length = notes_beats.sum\n        val notes_beats_length_half\
    \ = notes_beats_length / 2\n        val notes_beats_length_quarter = notes_beats_length\
    \ / 4\n        val notes_beats_length_whole = notes_beats_length\n        val\
    \ notes_beats_length_half_length = notes_beats_length_half * 2\n        val notes_beats_length_quarter_length\
    \ = notes_beats_length_quarter * 4\n        val notes_beats_length_whole_length\
    \ = notes_beats_length_whole * 8\n        val notes_beats_length_half_length_length\
    \ = notes_beats_length_half_length * 2\n        val notes_beats_length_quarter_length_length\
    \ = notes_beats_length_quarter_length * 4\n        val notes_beats_length_whole_length_length\
    \ = notes_beats_length_whole_length * 8\n        val notes_beats_length_half_length_length_length\
    \ = notes_beats_length_half_length_length * 2\n        val notes_beats_length_quarter_length_length_length\
    \ = notes_beats_length_quarter_length_length * 4\n        val notes_beats_length_whole_length_length_length\
    \ = notes_beats_length_whole_length_length * 8\n        val notes_beats_length_half_length_length_length_length\
    \ = notes_beats_length_half_length_length_length * 2\n        val notes_beats_length_quarter_length_length_length_length\
    \ = notes_beats_length_quarter_length_length_length * 4\n        val notes_beats_length_whole_length_length_length_length\
    \ = notes_beats_length_whole_length_length_length * 8\n        val notes_beats_length_half_length_length_length_length_length\
    \ = notes_beats_length_half_length_length_length_length * 2\n        val notes_beats_length_quarter_length_length_length_length_length\
    \ = notes_beats_length_quarter_length_length_length_length * 4\n        val notes_beats_length_whole_length_length_length_length_length\
    \ = notes_beats_length_whole_length_length_length_length * 8\n        val notes_beats_length_half_length_length_length_length_length\
    \ = notes_beats_length_half_length_length_length_length * 2\n        val notes_beats_length_quarter_length_length_length_length_length\
    \ = notes_beats_length_quarter_length_length_length_length_length * 4\n      \
    \  val notes_beats_length_whole_length_length_", "        music_string.split(\"\
    \ \").map(music_string => {\n            val notes = music_string.split(\"|\"\
    )\n            val notes_length = notes.length\n            val notes_beats =\
    \ notes.map(note => {\n                val notes = note.split(\"o\")\n       \
    \         notes.length\n            }).sum\n            notes_beats\n        }).sum",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.charAt(0)\n            val rest = music_string.substring(1).trim\n\
    \            val beats = rest.split(\"|\").map(_.toInt).sum\n            beats\
    \ * note.toLong\n        }).sum", "        val music_list = music_string.split(\"\
    \ \")\n        val music_list_size = music_list.size\n        val music_list_size_2\
    \ = music_list_size / 2\n        val music_list_size_3 = music_list_size_2 / 2\n\
    \        val music_list_size_4 = music_list_size_3 / 2\n        val music_list_size_5\
    \ = music_list_size_4 / 2\n        val music_list_size_6 = music_list_size_5 /\
    \ 2\n        val music_list_size_7 = music_list_size_6 / 2\n        val music_list_size_8\
    \ = music_list_size_7 / 2\n        val music_list_size_9 = music_list_size_8 /\
    \ 2\n        val music_list_size_10 = music_list_size_9 / 2\n        val music_list_size_11\
    \ = music_list_size_10 / 2\n        val music_list_size_12 = music_list_size_11\
    \ / 2\n        val music_list_size_13 = music_list_size_12 / 2\n        val music_list_size_14\
    \ = music_list_size_13 / 2\n        val music_list_size_15 = music_list_size_14\
    \ / 2\n        val music_list_size_16 = music_list_size_15 / 2\n        val music_list_size_17\
    \ = music_list_size_16 / 2\n        val music_list_size_18 = music_list_size_17\
    \ / 2\n        val music_list_size_19 = music_list_size_18 / 2\n        val music_list_size_20\
    \ = music_list_size_19 / 2\n        val music_list_size_21 = music_list_size_20\
    \ / 2\n        val music_list_size_22 = music_list_size_21 / 2\n        val music_list_size_23\
    \ = music_list_size_22 / 2\n        val music_list_size_24 = music_list_size_23\
    \ / 2\n        val music_list_size_25 = music_list_size_24 / 2\n        val music_list_size_26\
    \ = music_list_size_25 / 2\n        val music_list_size_27 = music_list_size_26\
    \ / 2\n        val music_list_size_28 = music_list_size_27 / 2\n        val music_list_size_29\
    \ = music_list_size_28 / 2\n        val music_list_size_30 = music_list_size_29\
    \ / 2\n        val music_list_size_31 = music_list_size_30 / 2\n        val music_list_size_32\
    \ = music_list_size_31 / 2\n        val music_list_size_33 = musi", "        music_string.split(\"\
    \ \").map(music_string => {\n            val note = music_string.substring(0,\
    \ 1)\n            val beats = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                val beat = music_string.substring(0, 1)\n            \
    \    val rest = music_string.substring(1)\n                beat.asInstanceOf[String].toLong\
    \ * 4\n            }).sum\n            note.asInstanceOf[String].toLong * beats\n\
    \        }).sum", "        music_string.split(\" \").map(music_string => {\n \
    \           val notes = music_string.split(\"|\").map(music_string => {\n    \
    \            val note = music_string.split(\"o\").head\n                val beats\
    \ = music_string.split(\"o|\").head.toLong\n                note.toLong * beats\n\
    \            }).sum\n            notes\n        }).sum", "        val music_list\
    \ = music_string.split(\"\\\\|\")\n        val music_list_size = music_list.size\n\
    \        val music_list_beats = music_list.map(music_string => {\n           \
    \ val music_string_array = music_string.split(\" \")\n            val music_string_beats\
    \ = music_string_array.map(music_string => {\n                val music_string_array\
    \ = music_string.split(\"o\")\n                val music_string_beats = music_string_array.map(music_string\
    \ => {\n                    val music_string_array = music_string.split(\"|\"\
    )\n                    val music_string_beats = music_string_array.map(music_string\
    \ => {\n                        val music_string_array = music_string.split(\"\
    .\").map(music_string => {\n                            val music_string_array\
    \ = music_string.split(\"\\\\\")\n                            val music_string_beats\
    \ = music_string_array.map(music_string => {\n                               \
    \ val music_string_array = music_string.split(\"\\\\|\")\n                   \
    \             val music_string_beats = music_string_array.map(music_string =>\
    \ {\n                                    val music_string_array = music_string.split(\"\
    \\\\|\")\n                                    val music_string_beats = music_string_array.map(music_string\
    \ => {\n                                        val music_string_array = music_string.split(\"\
    \\\\|\")\n                                        val music_string_beats = music_string_array.map(music_string\
    \ => {\n                                            val music_string_array = music_string.split(\"\
    \\\\|\")\n                                            val music_string_beats =\
    \ music_string_array.map(music_string => {\n                                 \
    \               val music_string_array = music_string.split(\"\\\\|\")\n     \
    \                                           val music_string_beats = music_string_array.map(music_string\
    \ => {\n                                                    val music_string_array\
    \ = music_string.split(\"\\\\|\")\n                                          \
    \          val music_string_beats = music_string_array.map(music_string => {\n\
    \                                                        val music_string_array\
    \ = music_string.split(\"\\\\|\")\n                                          \
    \              val music_string_beats = music_string_array.map(music_string =>\
    \ {\n                                                            val music_string_array\
    \ = music_string.split(\"\\\\|\")\n                                          \
    \                  val music_string_beats = music_string_array.map(music_string\
    \ => {\n                                                                val music_string_array\
    \ = music_string.split(\"\\\\|\")\n                                          \
    \                      val music_string_beats = music_string_array.map(music_string\
    \ => {\n                                                                    val\
    \ music_string_array = music_string.split(\"\\\\|\")\n                       \
    \                                             val music_string_beats = music_string_array.map(music_string\
    \ => {\n                                                                     \
    \   val music_string_array = music_string.split(\"\\\\|\")\n                 \
    \                                                       val music_string_beats\
    \ = musi", "        music_string.split(\" \").map(music_string => {\n        \
    \    val note = music_string.substring(0, 1)\n            val rest = music_string.substring(1,\
    \ music_string.length)\n            val beats = rest.split(\"|\").map(rest =>\
    \ rest.split(\"o\").length.toLong)\n            beats.sum\n        }).toList",
  "        music_string.split(\"\\\\|\").map(music_string => {\n            val notes\
    \ = music_string.split(\"\\\\ \").map(music_string => {\n                val note\
    \ = music_string.charAt(0)\n                val beats = music_string.substring(1).toInt\n\
    \                note -> beats\n            }).toList\n            val note =\
    \ notes.head\n            val beats = notes.last\n            note -> beats\n\
    \        }).toList", "        music_string.split(\" \").map(music_string => {\n\
    \            val music_note = music_string.substring(0, 1)\n            val music_rest\
    \ = music_string.substring(1, 2)\n            val music_rest2 = music_string.substring(2,\
    \ 3)\n            val music_rest3 = music_string.substring(3, 4)\n           \
    \ val music_rest4 = music_string.substring(4, 5)\n            val music_rest5\
    \ = music_string.substring(5, 6)\n            val music_rest6 = music_string.substring(6,\
    \ 7)\n            val music_rest7 = music_string.substring(7, 8)\n           \
    \ val music_rest8 = music_string.substring(8, 9)\n            val music_rest9\
    \ = music_string.substring(9, 10)\n            val music_rest10 = music_string.substring(10,\
    \ 11)\n            val music_rest11 = music_string.substring(11, 12)\n       \
    \     val music_rest12 = music_string.substring(12, 13)\n            val music_rest13\
    \ = music_string.substring(13, 14)\n            val music_rest14 = music_string.substring(14,\
    \ 15)\n            val music_rest15 = music_string.substring(15, 16)\n       \
    \     val music_rest16 = music_string.substring(16, 17)\n            val music_rest17\
    \ = music_string.substring(17, 18)\n            val music_rest18 = music_string.substring(18,\
    \ 19)\n            val music_rest19 = music_string.substring(19, 20)\n       \
    \     val music_rest20 = music_string.substring(20, 21)\n            val music_rest21\
    \ = music_string.substring(21, 22)\n            val music_rest22 = music_string.substring(22,\
    \ 23)\n            val music_rest23 = music_string.substring(23, 24)\n       \
    \     val music_rest24 = music_string.substring(24, 25)\n            val music_rest25\
    \ = music_string.substring(25, 26)\n            val music_rest26 = music_string.substring(26,\
    \ 27)\n            val music_rest27 = music_string.substring(27, 28)\n       \
    \     val music_rest28 = music_string.substring(28, 29)\n            val music_rest29\
    \ = music_string.substring(29, 30)\n            val music_rest30 = music_string.substring(30,\
    \ 31)\n            val music_rest31 = music_string.substring(31, 32)\n       \
    \     val music_rest32 = music_string.substring(32, 33)\n            val music_rest33\
    \ = music_string.substring(33, 34)\n            val music_rest34 = music_string.substring(34,\
    \ 35)\n            val music_rest35 = music_string.substring(35, 36)", "     \
    \   music_string.split(\" \").map(music_string => {\n            val note = music_string.substring(0,\
    \ 1)\n            val beats = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                val beats = music_string.substring(0, 1)\n           \
    \     val rest = music_string.substring(1)\n                beats.toLong * rest.length\n\
    \            }).sum\n            note.toLong * beats\n        }).sum", "     \
    \   music_string.split(\" \").map(music_string => {\n            val note = music_string.substring(0,\
    \ 1)\n            val rest = music_string.substring(1, music_string.length)\n\
    \            val beats = rest.split(\"|\").map(_.toLong).sum\n            beats.toLong\n\
    \        }).toList", "        val notes = music_string.split(\" \").map(_.toUpperCase())\n\
    \        val notes_count = notes.count\n        val notes_last_beat = notes.map(_.length.toLong).sum\n\
    \        val notes_last_beats = notes.map(_.length.toLong).map(_.toLong).sum\n\
    \        val notes_last_beats_count = notes_last_beats.toLong\n        val notes_last_beats_count_minus_one\
    \ = notes_last_beats_count - 1\n        val notes_last_beats_count_minus_one_minus_one\
    \ = notes_last_beats_count_minus_one - 1\n        val notes_last_beats_count_minus_one_minus_one_minus_one\
    \ = notes_last_beats_count_minus_one_minus_one - 1\n        val notes_last_beats_count_minus_one_minus_one_minus_one_minus_one\
    \ = notes_last_beats_count_minus_one_minus_one_minus_one - 1\n        val notes_last_beats_count_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ = notes_last_beats_count_minus_one_minus_one_minus_one_minus_one - 1\n     \
    \   val notes_last_beats_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ = notes_last_beats_count_minus_one_minus_one_minus_one_minus_one_minus_one -\
    \ 1\n        val notes_last_beats_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ = notes_last_beats_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1\n        val notes_last_beats_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ = notes_last_beats_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1\n        val notes_last_beats_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ = notes_last_beats_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1\n        val notes_last_beats_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_min",
  "        val notes = music_string.split(\" \").map(_.toUpperCase)\n        val notes_count\
    \ = notes.map(n => n.length).sum\n        val beats_count = notes_count / 4\n\
    \        val notes_array = notes.map(n => n.toChar).map(c => c.toInt).toArray\n\
    \        val notes_array = notes_array.take(notes_count)\n        val beats_array\
    \ = notes_array.map(n => n % 4).toArray\n        val notes_array = notes_array.take(beats_count)\n\
    \        val beats_array = beats_array.map(n => n % 2).toArray\n        val notes_array\
    \ = notes_array.take(beats_count)\n        val beats_array = beats_array.map(n\
    \ => n).toArray\n        val notes_array = notes_array.take(beats_count)\n   \
    \     val beats_array = beats_array.map(n => n).toArray\n        val notes_array\
    \ = notes_array.take(beats_count)\n        val beats_array = beats_array.map(n\
    \ => n).toArray\n        val notes_array = notes_array.take(beats_count)\n   \
    \     val beats_array = beats_array.map(n => n).toArray\n        val notes_array\
    \ = notes_array.take(beats_count)\n        val beats_array = beats_array.map(n\
    \ => n).toArray\n        val notes_array = notes_array.take(beats_count)\n   \
    \     val beats_array = beats_array.map(n => n).toArray\n        val notes_array\
    \ = notes_array.take(beats_count)\n        val beats_array = beats_array.map(n\
    \ => n).toArray\n        val notes_array = notes_array.take(beats_count)\n   \
    \     val beats_array = beats_array.map(n => n).toArray\n        val notes_array\
    \ = notes_array.take(beats_count)\n        val beats_array = beats_array.map(n\
    \ => n).toArray\n        val notes_array = notes_array.take(beats_count)\n   \
    \     val beats_array = beats_array.map(n => n).toArray\n        val notes_array\
    \ = notes_array.take(beats_count)\n        val beats_array = beats_array.map(n\
    \ => n).toArray\n        val notes_array = notes_array.take(beats_count)\n   \
    \     val beats_array = beats_array.map(n => n).toArray\n        val notes_array\
    \ = notes_array.take(beats_count)\n        val beats_array = beats_array.map(n\
    \ => n).toArray\n        val notes_array = notes_array.take(", "        val music_list\
    \ = music_string.split(\" \").map(_.toUpperCase).toList\n        val music_beats\
    \ = music_list.map(music_note => {\n            val note = music_note.charAt(0)\n\
    \            val beats = music_note.substring(1).split(\"|\").map(_.toInt).toList\n\
    \            val notes = note match {\n                case 'O' => (1l, 4l)\n\
    \                case 'O|' => (2l, 2l)\n                case '.|' => (1l, 1l)\n\
    \                case _ => (0l, 0l)\n            }\n            (notes(0), beats(0))\n\
    \        }).toList\n        val music_beats_count = music_beats.map(music_beat\
    \ => {\n            val note = music_beat._1\n            val beats = music_beat._2\n\
    \            val notes = note match {\n                case 'O' => (4l, 4l)\n\
    \                case 'O|' => (2l, 2l)\n                case '.|' => (1l, 1l)\n\
    \                case _ => (0l, 0l)\n            }\n            (notes(0), beats(0))\n\
    \        }).reduce((a, b) => a._1 + b._1)\n        music_beats_count.toList.map(music_beat_count\
    \ => music_beat_count._1 + music_beat_count._2)", "        music_string.split(\"\
    \ \").map(music_string => {\n            val notes = music_string.split(\"|\"\
    )\n            val beats = notes.map(note => note.split(\"o\").length.toLong)\n\
    \            beats.sum\n        }).toList", "        val music_list = music_string.split(\"\
    \ \").map(x => x.toInt).toList\n        val music_length = music_list.length\n\
    \        val music_beats = music_list.map(x => x.toLong).sum\n        val music_notes\
    \ = music_list.map(x => x.toLong / music_beats)\n        val music_notes_length\
    \ = music_notes.length\n        val music_notes_length = music_notes_length /\
    \ 4\n        val music_notes_length = music_notes_length.toInt\n        val music_notes_length\
    \ = music_notes_length + music_notes_length\n        val music_notes_length =\
    \ music_notes_length.toInt\n        val music_notes_length = music_notes_length\
    \ + music_notes_length\n        val music_notes_length = music_notes_length.toInt\n\
    \        val music_notes_length = music_notes_length + music_notes_length\n  \
    \      val music_notes_length = music_notes_length.toInt\n        val music_notes_length\
    \ = music_notes_length + music_notes_length\n        val music_notes_length =\
    \ music_notes_length.toInt\n        val music_notes_length = music_notes_length\
    \ + music_notes_length\n        val music_notes_length = music_notes_length.toInt\n\
    \        val music_notes_length = music_notes_length + music_notes_length\n  \
    \      val music_notes_length = music_notes_length.toInt\n        val music_notes_length\
    \ = music_notes_length + music_notes_length\n        val music_notes_length =\
    \ music_notes_length.toInt\n        val music_notes_length = music_notes_length\
    \ + music_notes_length\n        val music_notes_length = music_notes_length.toInt\n\
    \        val music_notes_length = music_notes_length + music_notes_length\n  \
    \      val music_notes_length = music_notes_length.toInt\n        val music_notes_length\
    \ = music_notes_length + music_notes_length\n        val music_notes_length =\
    \ music_notes_length.toInt\n        val music_notes_length = music_notes_length\
    \ + music_notes_length\n        val music_notes_length = music_notes_length.toInt\n\
    \        val music_notes_length = music_notes_length + music_notes_length\n  \
    \      val music_notes_length = musi", "        music_string.split(\" \").map(music_string\
    \ => {\n            val note = music_string.substring(0, 1)\n            val rest\
    \ = music_string.substring(1, music_string.length)\n            val beats = rest.split(\"\
    |\").map(rest => {\n                val beat = rest.substring(0, 1)\n        \
    \        val rest = rest.substring(1, rest.length)\n                val rest =\
    \ rest.toLong\n                beat.toLong * rest\n            }).sum\n      \
    \      beats * note.toLong\n        }).sum", "        music_string.split(\" \"\
    ).map(music_string => {\n            val note = music_string.substring(0, 1)\n\
    \            val beats = music_string.substring(1).split(\"|\").map(_.toLong).sum\n\
    \            beats * note.charAt(0).toLong\n        }).sum", "        val notes\
    \ = music_string.split(\" \").map(_.toUpperCase()).filter(_.length == 1).map(x\
    \ => x.toInt)\n        val notesLength = notes.map(_.toString.length).sum\n  \
    \      val notesLast = notes.map(x => x.toString.last)\n        val notesLastLength\
    \ = notesLast.map(_.toString.length).sum\n        val notesLastLast = notesLast.map(x\
    \ => x.toString.last)\n        val notesLastLastLength = notesLastLast.map(_.toString.length).sum\n\
    \        val notesLastLastLast = notesLastLast.map(x => x.toString.last)\n   \
    \     val notesLastLastLastLength = notesLastLastLast.map(_.toString.length).sum\n\
    \        val notesLastLastLastLast = notesLastLastLast.map(x => x.toString.last)\n\
    \        val notesLastLastLastLastLength = notesLastLastLastLast.map(_.toString.length).sum\n\
    \        val notesLastLastLastLastLast = notesLastLastLastLast.map(x => x.toString.last)\n\
    \        val notesLastLastLastLastLastLength = notesLastLastLastLastLast.map(_.toString.length).sum\n\
    \        val notesLastLastLastLastLastLast = notesLastLastLastLastLast.map(x =>\
    \ x.toString.last)\n        val notesLastLastLastLastLastLastLength = notesLastLastLastLastLastLast.map(_.toString.length).sum\n\
    \        val notesLastLastLastLastLastLastLast = notesLastLastLastLastLastLastLast.map(x\
    \ => x.toString.last)\n        val notesLastLastLastLastLastLastLastLength = notesLastLastLastLastLastLastLast.map(_.toString.length).sum\n\
    \        val notesLastLastLastLastLastLastLastLastLength = notesLastLastLastLastLastLastLastLast.map(_.toString.length).sum\n\
    \        val notesLastLastLastLastLastLastLastLastLength = notesLastLastLastLastLastLastLastLastLast.map(_.toString.length).sum\n\
    \        val notesLastLastLastLastLastLastLastLastLength = notesLastLastLastLastLastLastLastLastLastLast.map(_.toString.length).sum\n\
    \        val notesLastLastLastLastLastLastLastLastLastLength = notesLastLastLastLastLastLastLastLastLastLast.map(_.toString.length).sum",
  "        val music_list = music_string.split(\" \").map(_.toUpperCase()).filter(_.nonEmpty)\n\
    \        val music_list_size = music_list.size\n        val music_list_size_half\
    \ = music_list_size / 2\n        val music_list_size_quarter = music_list_size\
    \ / 4\n        val music_list_size_whole = music_list_size.toLong\n        val\
    \ music_list_size_half_whole = music_list_size_half * music_list_size_whole\n\
    \        val music_list_size_quarter_whole = music_list_size_quarter * music_list_size_whole\n\
    \        val music_list_size_half_quarter_whole = music_list_size_half_quarter\
    \ * music_list_size_whole\n        val music_list_size_half_quarter_whole_whole\
    \ = music_list_size_half_quarter_whole * music_list_size_whole\n        val music_list_size_half_quarter_whole_whole_whole\
    \ = music_list_size_half_quarter_whole_whole * music_list_size_whole\n       \
    \ val music_list_size_half_quarter_whole_whole_whole_whole = music_list_size_half_quarter_whole_whole_whole\
    \ * music_list_size_whole\n        val music_list_size_half_quarter_whole_whole_whole_whole_whole\
    \ = music_list_size_half_quarter_whole_whole_whole_whole * music_list_size_whole\n\
    \        val music_list_size_half_quarter_whole_whole_whole_whole_whole_whole\
    \ = music_list_size_half_quarter_whole_whole_whole_whole_whole * music_list_size_whole\n\
    \        val music_list_size_half_quarter_whole_whole_whole_whole_whole_whole_whole\
    \ = music_list_size_half_quarter_whole_whole_whole_whole_whole_whole * music_list_size_whole\n\
    \        val music_list_size_half_quarter_whole_whole_whole_whole_whole_whole_whole_whole\
    \ = music_list_size_half_quarter_whole_whole_whole_whole_whole_whole_whole * music_list_size_whole\n\
    \        val music_list_size_half_quarter_whole_whole_whole_whole_whole_whole_whole_whole_whole\
    \ = music_list_size_half_quarter_whole_whole_whole_whole_whole_whole_whole_whole\n\
    \        val music_list_size_half_quarter_whole_whole_whole_who", "        val\
    \ notes = music_string.split(\" \").map(_.toUpperCase()).filter(_.length == 1).map(_.toInt)\n\
    \        val notes_length = notes.length\n        val notes_beats = notes.map(n\
    \ => n.toLong * notes_length)\n        val notes_beats_length = notes_beats.length\n\
    \        val notes_beats_last_beat = notes_beats.map(n => n.toLong - notes_beats_length)\n\
    \        val notes_beats_last_beat_length = notes_beats_last_beat.length\n   \
    \     val notes_beats_last_beat_last_beat = notes_beats_last_beat.map(n => n.toLong\
    \ - notes_beats_last_beat_length)\n        val notes_beats_last_beat_last_beat_length\
    \ = notes_beats_last_beat_last_beat.length\n        val notes_beats_last_beat_last_beat_last_beat\
    \ = notes_beats_last_beat_last_beat.map(n => n.toLong - notes_beats_last_beat_last_beat_length)\n\
    \        val notes_beats_last_beat_last_beat_last_beat_length = notes_beats_last_beat_last_beat_last_beat.length\n\
    \        val notes_beats_last_beat_last_beat_last_beat_last_beat = notes_beats_last_beat_last_beat_last_beat.map(n\
    \ => n.toLong - notes_beats_last_beat_last_beat_last_beat_length)\n        val\
    \ notes_beats_last_beat_last_beat_last_beat_last_beat_length = notes_beats_last_beat_last_beat_last_beat_last_beat.length\n\
    \        val notes_beats_last_beat_last_beat_last_beat_last_beat_last_beat = notes_beats_last_beat_last_beat_last_beat_last_beat.map(n\
    \ => n.toLong - notes_beats_last_beat_last_beat_last_beat_last_beat_length)\n\
    \        val notes_beats_last_beat_last_beat_last_beat_last_beat_last_beat_length\
    \ = notes_beats_last_beat_last_beat_last_beat_last_beat_last_beat.map(n => n.toLong\
    \ - notes_beats_last_beat_last_beat_last_beat_last_beat_last_beat_length)\n  \
    \      val notes_beats_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat_length\
    \ = notes_beats_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat.length\n\
    \        val ", "        val music_list = music_string.split(\" \").map(_.toUpperCase).filter(_.length\
    \ != 0)\n        val notes = music_list.map(music_note => music_note.split(\"\
    |\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    o\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != 0).map(music_note => music_note.split(\"\
    .\").map(_.toUpperCase).filter(_.length != ", "        music_string.split(\" \"\
    ).map(music_string => {\n            val note = music_string.substring(0, 1)\n\
    \            val rest = music_string.substring(1, music_string.length)\n     \
    \       val beats = rest.length / 4\n            beats.toLong\n        }).toList",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.charAt(0)\n            val rest = music_string.substring(1).trim\n\
    \            val beats = rest.split(\"|\").map(rest => {\n                val\
    \ beat = rest.charAt(0)\n                val rest = rest.substring(1)\n      \
    \          beat.toLong * 4\n            }).sum\n            note match {\n   \
    \             case 'o' => List(beats)\n                case 'o|' => List(beats)\n\
    \                case '.|' => List(beats)\n                case _ => List()\n\
    \            }\n        }).flatten", "        val music_list = music_string.split(\"\
    \\\\|\")\n        val music_list_size = music_list.size\n        val music_list_size_int\
    \ = music_list_size.asInstanceOf[Int]\n        val music_list_size_long = music_list_size.asInstanceOf[Long]\n\
    \        val music_list_size_long_int = music_list_size_long.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_int = music_list_size_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_int = music_list_size_long_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_long_int = music_list_size_long_long_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_long_long_int = music_list_size_long_long_long_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_long_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Int]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_", "        val notes = music_string.split(\"\
    \ \").map(_.toUpperCase())\n        val notes_count = notes.map(n => n.length).sum\n\
    \        val notes_beats = notes.map(n => n.length.toLong).sum\n        val notes_beats_count\
    \ = notes_beats.toLong\n        val notes_beats_count_count = notes_beats_count.toLong\n\
    \        val notes_beats_count_count_count = notes_beats_count_count.toLong\n\
    \        val notes_beats_count_count_count_count = notes_beats_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count = notes_beats_count_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count_count = notes_beats_count_count_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count = notes_beats_count_count_count_count_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count = notes_beats_count_count_count_count_count_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_count.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val rest = music_string.substring(1)\n\
    \            val beats = rest.split(\"|\").map(x => x.toLong).sum\n          \
    \  beats.toLong\n        }).toList", "        music_string.split(\" \").map(music_string\
    \ => {\n            val note = music_string.substring(0, 1)\n            val rest\
    \ = music_string.substring(1, music_string.length)\n            val beats = rest.split(\"\
    |\").map(_.toLong).sum\n            beats.toLong\n        }).filter(_ > 0).sortBy(_).reverse",
  "        val notes = music_string.split(\"\\\\|\")\n        val notes_length = notes.length\n\
    \        val notes_beats = notes.map(_.length.toLong)\n        val notes_beats_length\
    \ = notes_beats.length\n        val notes_beats_sum = notes_beats.sum\n      \
    \  val notes_beats_average = notes_beats_sum / notes_beats_length\n        val\
    \ notes_beats_average_length = notes_beats_average.length\n        val notes_beats_average_sum\
    \ = notes_beats_average.sum\n        val notes_beats_average_average_length =\
    \ notes_beats_average_average.length\n        val notes_beats_average_average_sum\
    \ = notes_beats_average_average.sum\n        val notes_beats_average_average_average_length\
    \ = notes_beats_average_average_average.length\n        val notes_beats_average_average_average_sum\
    \ = notes_beats_average_average_average.sum\n        val notes_beats_average_average_average_average_length\
    \ = notes_beats_average_average_average_average.length\n        val notes_beats_average_average_average_average_sum\
    \ = notes_beats_average_average_average_average.sum\n        val notes_beats_average_average_average_average_average_length\
    \ = notes_beats_average_average_average_average_average.length\n        val notes_beats_average_average_average_average_sum\
    \ = notes_beats_average_average_average_average_average.sum\n        val notes_beats_average_average_average_average_average_length\
    \ = notes_beats_average_average_average_average_average_average.length\n     \
    \   val notes_beats_average_average_average_average_sum = notes_beats_average_average_average_average_average_average.sum\n\
    \        val notes_beats_average_average_average_average_average_length = notes_beats_average_average_average_average_average_average.length\n\
    \        val notes_beats_average_average_average_average_average_sum = notes_beats_average_average_average_average_average_average_average.sum\n\
    \        val notes_beats_average_average_average_average_average_average_length\
    \ = notes_beats_average_average_average_average_average_average_average.length\n\
    \        val notes_beats_average_average_average_average_average_average_sum =\
    \ notes_beats_average_average_average_average_average_average_average_average.sum\n\
    \        val notes_beats_average_average_average_average_average_average_average_length\
    \ = notes_beats_average_average_average_average_average_average_average_average.length\n\
    \        val notes_beats_average_average_average_average_average_average_average_sum\
    \ = notes_beats_average_average_average_average_average_average_average_average_average.sum\n\
    \        val notes_beats_average_average_average_average_average_average_average_length\
    \ = notes_beats_average_average_average_average_average_average_average_average_average.length",
  "        val notes = music_string.split(\"\\\\|\")\n        val notes_length = notes.length\n\
    \        val notes_beats = notes.map(_.length.toInt)\n        val notes_beats_length\
    \ = notes_beats.sum\n        val notes_beats_length = notes_beats_length.toLong\n\
    \        val notes_beats_length = notes_beats_length / 4\n        val notes_beats_length\
    \ = notes_beats_length.toInt\n        val notes_beats_length = notes_beats_length\
    \ * 4\n        val notes_beats_length = notes_beats_length.toLong\n        val\
    \ notes_beats_length = notes_beats_length / 4\n        val notes_beats_length\
    \ = notes_beats_length.toInt\n        val notes_beats_length = notes_beats_length\
    \ * 4\n        val notes_beats_length = notes_beats_length.toLong\n        val\
    \ notes_beats_length = notes_beats_length / 4\n        val notes_beats_length\
    \ = notes_beats_length.toInt\n        val notes_beats_length = notes_beats_length\
    \ * 4\n        val notes_beats_length = notes_beats_length.toLong\n        val\
    \ notes_beats_length = notes_beats_length / 4\n        val notes_beats_length\
    \ = notes_beats_length.toInt\n        val notes_beats_length = notes_beats_length\
    \ * 4\n        val notes_beats_length = notes_beats_length.toLong\n        val\
    \ notes_beats_length = notes_beats_length / 4\n        val notes_beats_length\
    \ = notes_beats_length.toInt\n        val notes_beats_length = notes_beats_length\
    \ * 4\n        val notes_beats_length = notes_beats_length.toLong\n        val\
    \ notes_beats_length = notes_beats_length / 4\n        val notes_beats_length\
    \ = notes_beats_length.toInt\n        val notes_beats_length = notes_beats_length\
    \ * 4\n        val notes_beats_length = notes_beats_length.toLong\n        val\
    \ notes_beats_length = notes_beats_length / 4\n        val notes_beats_length\
    \ = notes_beats_length.toInt\n        val notes_beats_length = notes_beats_length\
    \ * 4\n        val notes_beats_length = notes_beats_length.toLong\n        val\
    \ notes_beats_length = notes_beats_length / 4\n        val notes_beats_length\
    \ = notes_beats_length.toInt", "        music_string.split(\" \").map(music_string\
    \ => {\n            val notes = music_string.split(\"|\")\n            val notes_length\
    \ = notes.length\n            val notes_beats = notes.map(note => {\n        \
    \        val noteLength = note.length\n                val noteBeats = note.split(\"\
    o\").map(note => {\n                    val noteLength = note.length\n       \
    \             val noteBeats = note.split(\"|\").map(note => {\n              \
    \          val noteLength = note.length\n                        val noteBeats\
    \ = note.split(\"o\").map(note => {\n                            val noteLength\
    \ = note.length\n                            val noteBeats = note.split(\"|\"\
    ).map(note => {\n                                val noteLength = note.length\n\
    \                                val noteBeats = note.split(\"o\").map(note =>\
    \ {\n                                    val noteLength = note.length\n      \
    \                              val noteBeats = note.split(\"|\").map(note => {\n\
    \                                        val noteLength = note.length\n      \
    \                                  val noteBeats = note.split(\"o\").map(note\
    \ => {\n                                            val noteLength = note.length\n\
    \                                            val noteBeats = note.split(\"|\"\
    ).map(note => {\n                                                val noteLength\
    \ = note.length\n                                                val noteBeats\
    \ = note.split(\"o\").map(note => {\n                                        \
    \            val noteLength = note.length\n                                  \
    \                  val noteBeats = note.split(\"|\").map(note => {\n         \
    \                                               val noteLength = note.length\n\
    \                                                        val noteBeats = note.split(\"\
    o\").map(note => {\n                                                         \
    \   val noteLength = note.length\n                                           \
    \                 val noteBeats = note.split(\"|\").map(note => {\n          \
    \                                                      val noteLength = note.length\n\
    \                                                                val noteBeats\
    \ = note.split(\"o\").map(note => {\n                                        \
    \                            val noteLength = note.length\n                  \
    \                                                  val noteBeats = note.split(\"\
    |\").map(note => {\n                                                         \
    \               val noteLength = note.length\n                               \
    \                                         val noteBeats = note.split(\"o\").map(note\
    \ => {\n                                                                     \
    \       val noteLength = note.length\n                                       \
    \                                     val noteBeats = note.split(\"|\").map(note\
    \ => {\n                                                                     \
    \           val noteLength = note.length\n                                   \
    \                                             val noteBeats = note.split(\"o\"\
    ).map(note => {\n                                                            \
    \                        val noteLength = note.length\n                      \
    \                                                              val noteBeats =\
    \ note.split(\"|\").map(note => {\n                                          \
    \                                              val noteLength = note.length\n\
    \                                                                            \
    \            val noteBeats = note.split(\"o\").map(note => {\n               \
    \                                                                            \
    \ val noteLength = note.length\n                                             \
    \                                               val noteBeats = note.split(\"\
    |\").map(note => {\n                                                         \
    \                                       val noteLength = note.length\n       \
    \                                                                            \
    \             val noteBeat", "        music_string.split(\" \").map(music_string\
    \ => {\n            val note = music_string.substring(0, 1)\n            val beats\
    \ = music_string.substring(1).split(\"|\").map(music_string => {\n           \
    \     val beat = music_string.substring(0, 1)\n                val rest = music_string.substring(1)\n\
    \                beat.asInstanceOf[Int] * rest.asInstanceOf[Int]\n           \
    \ }).sum\n            note.asInstanceOf[Int] * beats.asInstanceOf[Int]\n     \
    \   }).sum", "        val notes = music_string.split(\" \").map(_.toUpperCase()).filter(_.length()\
    \ > 0)\n        val notes_count = notes.map(n => n.length).sum\n        val beats_count\
    \ = notes.map(n => n.length / 4).sum\n        val notes_beats_count = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_2 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_3 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_4 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_5 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_6 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_7 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_8 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_9 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_10 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_11 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_12 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_13 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_14 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_15 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_16 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_17 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_18 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_19 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_20 = notes.map(n\
    \ => (n.length / 4).toLong).sum\n        val notes_beats_count_21 = notes.map(",
  "        val music_list = music_string.split(\" \").map(_.toUpperCase()).filter(_.length>0)\n\
    \        val notes = music_list.map(music_note => music_note.charAt(0).toInt)\n\
    \        val notes_count = music_list.map(music_note => music_note.charAt(0).toInt).distinct\n\
    \        val beats = music_list.map(music_note => music_note.charAt(1).toInt)\n\
    \        val beats_count = music_list.map(music_note => music_note.charAt(1).toInt).distinct\n\
    \        val notes_beats = notes.zip(beats)\n        val notes_beats_count = notes_beats.map(music_note\
    \ => music_note._1 + music_note._2)\n        val notes_beats_count_distinct =\
    \ notes_beats_count.distinct\n        val notes_beats_count_distinct_count = notes_beats_count_distinct.size\n\
    \        val notes_beats_count_distinct_count_distinct = notes_beats_count_distinct_count.distinct\n\
    \        val notes_beats_count_distinct_count_distinct_count = notes_beats_count_distinct_count_distinct.size\n\
    \        val notes_beats_count_distinct_count_distinct_count_distinct = notes_beats_count_distinct_count_distinct_count.distinct\n\
    \        val notes_beats_count_distinct_count_distinct_count_distinct_count =\
    \ notes_beats_count_distinct_count_distinct_count_distinct.size\n        val notes_beats_count_distinct_count_distinct_count_distinct_count_distinct\
    \ = notes_beats_count_distinct_count_distinct_count_distinct_count.distinct\n\
    \        val notes_beats_count_distinct_count_distinct_count_distinct_count_distinct\
    \ = notes_beats_count_distinct_count_distinct_count_distinct_count_distinct.size\n\
    \        val notes_beats_count_distinct_count_distinct_count_distinct_count_distinct_count\
    \ = notes_beats_count_distinct_count_distinct_count_distinct_count_distinct_count.distinct\n\
    \        val notes_beats_count_distinct_count_distinct_count_distinct_count_distinct_count_distinct\
    \ = notes_beats_count_distinct_count_distinct_count_distinct_count_distinct_count_distinct_count.distinct\n\
    \        val notes_beats_count_distinct_count_distinct_count_distinct_count_distinct_count_distinct_count\
    \ = notes_beats_count_distinct_count_distinct_count_distinct_count_distinct_count_distinct.distinct\n\
    \        val notes_beats_count_distinct_count_distinct_count_distinct_count_distinct_count_distinct_count\
    \ = notes_", "        music_string.split(\" \").map(music_string => {\n      \
    \      val note = music_string.charAt(0)\n            val rest = music_string.substring(1).trim\n\
    \            val beats = rest match {\n                case \"o\" => 4\n     \
    \           case \"o|\" => 2\n                case \".|\" => 1\n             \
    \   case _ => 0\n            }\n            beats * note.toLong\n        }).sum",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val rest = music_string.substring(1,\
    \ music_string.length)\n            val beats = rest.split(\"|\").map(rest =>\
    \ rest.split(\"o\").length.toLong)\n            beats.sum\n        }).toList",
  "        music_string.split(\" \").map(music_string => {\n            val notes\
    \ = music_string.split(\"|\")\n            val beats = notes.map(note => {\n \
    \               val notes = note.split(\"o\")\n                notes.map(note\
    \ => {\n                    note.split(\"|\").map(note => {\n                \
    \        note.split(\".\").map(note => {\n                            note.map(note\
    \ => {\n                                note.toLong\n                        \
    \    }).sum\n                        }).sum\n                    }).sum\n    \
    \            }).sum\n            }).sum\n            beats.toLong\n        }).toList",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.charAt(0)\n            val beats = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                val beat = music_string.charAt(0)\n\
    \                val rest = music_string.substring(1).split(\"o\").map(music_string\
    \ => {\n                    val rest = music_string.charAt(0)\n              \
    \      val rest = music_string.substring(1).split(\".\").map(music_string => {\n\
    \                        val rest = music_string.charAt(0)\n                 \
    \       val rest = music_string.substring(1).split(\"|\").map(music_string =>\
    \ {\n                            val rest = music_string.charAt(0)\n         \
    \                   val rest = music_string.substring(1).split(\"o\").map(music_string\
    \ => {\n                                val rest = music_string.charAt(0)\n  \
    \                              val rest = music_string.substring(1).split(\".\"\
    ).map(music_string => {\n                                    val rest = music_string.charAt(0)\n\
    \                                    val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                        val rest =\
    \ music_string.charAt(0)\n                                        val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                            val rest\
    \ = music_string.charAt(0)\n                                            val rest\
    \ = music_string.substring(1).split(\".\").map(music_string => {\n           \
    \                                     val rest = music_string.charAt(0)\n    \
    \                                            val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                 \
    \   val rest = music_string.charAt(0)\n                                      \
    \              val rest = music_string.substring(1).split(\"o\").map(music_string\
    \ => {\n                                                        val rest = music_string.charAt(0)\n\
    \                                                        val rest = music_string.substring(1).split(\"\
    .\").map(music_string => {\n                                                 \
    \           val rest = music_string.charAt(0)\n                              \
    \                              val rest = music_string.substring(1).split(\"|\"\
    ).map(music_string => {\n                                                    \
    \            val rest = music_string.charAt(0)\n                             \
    \                                   val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \                   val rest = music_string.charAt(0)\n                      \
    \                                              val rest = music_string.substring(1).split(\"\
    .\").map(music_string => {\n                                                 \
    \                       val rest = music_string.charAt(0)\n                  \
    \                                                      val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                 \
    \                           val rest = music_string.charAt(0)\n              \
    \                                                              val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \                               val rest = music_string.charAt(0)\n          \
    \                                                                      val rest\
    \ = musi", "        music_string.split(\" \").map(music_string => {\n        \
    \    val note = music_string.substring(0, 1)\n            val beats = music_string.substring(1,\
    \ music_string.length).toInt\n            val beats_count = beats.toLong\n   \
    \         val note_count = note.toLong\n            beats_count * note_count\n\
    \        }).toList", "        music_string.split(\"\\\\|\").map(music_string =>\
    \ {\n            val notes = music_string.split(\"o\").map(music_string => {\n\
    \                val note = music_string.trim\n                val beats = note.split(\"\
    |\").map(music_string => {\n                    val beat = music_string.trim\n\
    \                    beat.split(\"\\\\|\").map(music_string => {\n           \
    \             val beat = music_string.trim\n                        beat.split(\"\
    \\\\|\").map(music_string => {\n                            val beat = music_string.trim\n\
    \                            beat.split(\"\\\\|\").map(music_string => {\n   \
    \                             val beat = music_string.trim\n                 \
    \               beat.split(\"\\\\|\").map(music_string => {\n                \
    \                    val beat = music_string.trim\n                          \
    \          beat.split(\"\\\\|\").map(music_string => {\n                     \
    \                   val beat = music_string.trim\n                           \
    \             beat.split(\"\\\\|\").map(music_string => {\n                  \
    \                          val beat = music_string.trim\n                    \
    \                        beat.split(\"\\\\|\").map(music_string => {\n       \
    \                                         val beat = music_string.trim\n     \
    \                                           beat.split(\"\\\\|\").map(music_string\
    \ => {\n                                                    val beat = music_string.trim\n\
    \                                                    beat.split(\"\\\\|\").map(music_string\
    \ => {\n                                                        val beat = music_string.trim\n\
    \                                                        beat.split(\"\\\\|\"\
    ).map(music_string => {\n                                                    \
    \        val beat = music_string.trim\n                                      \
    \                      beat.split(\"\\\\|\").map(music_string => {\n         \
    \                                                       val beat = music_string.trim\n\
    \                                                                beat.split(\"\
    \\\\|\").map(music_string => {\n                                             \
    \                       val beat = music_string.trim\n                       \
    \                                             beat.split(\"\\\\|\").map(music_string\
    \ => {\n                                                                     \
    \   val beat = music_string.trim\n                                           \
    \                             beat.split(\"\\\\|\").map(music_string => {\n  \
    \                                                                          val\
    \ beat = music_string.trim\n                                                 \
    \                           beat.split(\"\\\\|\").map(music_string => {\n    \
    \                                                                            val\
    \ beat = music_string.trim\n                                                 \
    \                               beat.split(\"\\\\|\").map(music_string => {\n\
    \                                                                            \
    \        val beat = music_string.trim\n                                      \
    \                                              beat.split(\"\\\\|\").map(music_string\
    \ => {\n                                                                     \
    \                   val beat = music_string.trim\n                           \
    \                                                             beat.split(\"\\\\\
    |\").map(music_string => {\n                                                 \
    \                                           val beat = music_string.trim\n   \
    \                                                                            \
    \             beat.split(\"\\\\|\").map(music_string => {\n                  \
    \                                                                            \
    \  val beat = music_string.trim\n                                            \
    \                                                    beat.split(\"\\\\|\").map(music_string\
    \ => {\n                                                                     \
    \                               ", "        val music_list = music_string.split(\"\
    \\\\|\")\n        val music_list_size = music_list.size\n        val music_list_size_int\
    \ = music_list_size.toInt\n        val music_list_size_long = music_list_size_int.toLong\n\
    \        val music_list_size_long2 = music_list_size_long * music_list_size_long\n\
    \        val music_list_size_long3 = music_list_size_long2 * music_list_size_long\n\
    \        val music_list_size_long4 = music_list_size_long3 * music_list_size_long\n\
    \        val music_list_size_long5 = music_list_size_long4 * music_list_size_long\n\
    \        val music_list_size_long6 = music_list_size_long5 * music_list_size_long\n\
    \        val music_list_size_long7 = music_list_size_long6 * music_list_size_long\n\
    \        val music_list_size_long8 = music_list_size_long7 * music_list_size_long\n\
    \        val music_list_size_long9 = music_list_size_long8 * music_list_size_long\n\
    \        val music_list_size_long10 = music_list_size_long9 * music_list_size_long\n\
    \        val music_list_size_long11 = music_list_size_long10 * music_list_size_long\n\
    \        val music_list_size_long12 = music_list_size_long11 * music_list_size_long\n\
    \        val music_list_size_long13 = music_list_size_long12 * music_list_size_long\n\
    \        val music_list_size_long14 = music_list_size_long13 * music_list_size_long\n\
    \        val music_list_size_long15 = music_list_size_long14 * music_list_size_long\n\
    \        val music_list_size_long16 = music_list_size_long15 * music_list_size_long\n\
    \        val music_list_size_long17 = music_list_size_long16 * music_list_size_long\n\
    \        val music_list_size_long18 = music_list_size_long17 * music_list_size_long\n\
    \        val music_list_size_long19 = music_list_size_long18 * music_list_size_long\n\
    \        val music_list_size_long20 = music_list_size_long19 * music_list_size_long\n\
    \        val music_list_size_long21 = music_list_size_long20 * music_list_size_long\n\
    \        val music_list_size_long22 = music_list_size_long21 * music_list_size_long\n\
    \        val music_list_size_long23 = music_list_size_long", "        val music_list\
    \ = music_string.split(\" \").map(_.toUpperCase()).filter(_.length>0)\n      \
    \  val notes = music_list.filter(_.startsWith(\"o|\")).map(_.split(\"|\")(0))\n\
    \        val rests = music_list.filter(_.startsWith(\"o\")).map(_.split(\"o\"\
    )(0))\n        val notes_beats = notes.map(n => n.length.toLong)\n        val\
    \ rests_beats = rests.map(n => n.length.toLong)\n        val notes_rests = notes.map(n\
    \ => n.length.toLong + rests_beats.filter(_.startsWith(n)).length.toLong)\n  \
    \      val rests_rests = rests.map(n => n.length.toLong + notes_beats.filter(_.startsWith(n)).length.toLong)\n\
    \        val notes_rests_rests = notes.map(n => n.length.toLong + rests_beats.filter(_.startsWith(n)).length.toLong\
    \ + notes_beats.filter(_.startsWith(n)).length.toLong)\n        val rests_rests_rests\
    \ = rests.map(n => n.length.toLong + notes_beats.filter(_.startsWith(n)).length.toLong\
    \ + rests_beats.filter(_.startsWith(n)).length.toLong + notes_beats.filter(_.startsWith(n)).length.toLong)\n\
    \        val notes_rests_rests_rests = notes.map(n => n.length.toLong + rests_beats.filter(_.startsWith(n)).length.toLong\
    \ + notes_beats.filter(_.startsWith(n)).length.toLong + rests_beats.filter(_.startsWith(n)).length.toLong\
    \ + notes_beats.filter(_.startsWith(n)).length.toLong)\n        val rests_rests_rests_rests\
    \ = rests.map(n => n.length.toLong + notes_beats.filter(_.startsWith(n)).length.toLong\
    \ + rests_beats.filter(_.startsWith(n)).length.toLong + notes_beats.filter(_.startsWith(n)).length.toLong\
    \ + rests_beats.filter(_.startsWith(n)).length.toLong)\n        val notes_rests_rests_rests_rests\
    \ = notes.map(n => n.length.toLong + rests_beats.filter(_.startsWith(n)).length.toLong\
    \ + notes_beats.filter(_.startsWith(n)).length.toLong + rests_beats.filter(_.startsWith(n)).length.toLong\
    \ + notes_beats.filter(_.startsWith(n)).length.toLong + rests_beats.filter(_.startsWith(n",
  "        music_string.split(\"\\\\|\").map(music_string => {\n            val notes\
    \ = music_string.split(\"\\\\o\").map(music_string => {\n                val note\
    \ = music_string.trim\n                val beats = note.split(\"\\\\.\").map(music_string\
    \ => {\n                    val beat = music_string.trim\n                   \
    \ beat.split(\"\\\\|\").map(music_string => {\n                        val beats\
    \ = music_string.trim\n                        beats.toLong\n                \
    \    })\n                })\n                note.trim\n            })\n     \
    \       notes.toList\n        }).flatten", "        music_string.split(\"\\\\\
    |\").map(music_string => {\n            val notes = music_string.split(\"\\\\\
    \ \").map(music_string => {\n                val note = music_string.charAt(0).toLowerCase\n\
    \                val beats = music_string.substring(1).toLong\n              \
    \  note\n            }).toList\n            notes.map(note => {\n            \
    \    note match {\n                    case \"o\" => 4l.toLong\n             \
    \       case \"o|\" => 2l.toLong\n                    case \".|\" => 1l.toLong\n\
    \                    case _ => 0l.toLong\n                }\n            }).sum\n\
    \        }).toList", "        val music_list = music_string.split(\" \").map(_.toUpperCase).filter(x\
    \ => x != \"O\" && x != \".\")\n        val music_list_size = music_list.size\n\
    \        val music_list_size_half = music_list_size / 2\n        val music_list_size_quarter\
    \ = music_list_size / 4\n        val music_list_size_whole = music_list_size %\
    \ 4\n        val music_list_size_whole_half = music_list_size_whole / 2\n    \
    \    val music_list_size_whole_quarter = music_list_size_whole / 4\n        val\
    \ music_list_size_whole_whole = music_list_size_whole % 4\n        val music_list_size_whole_whole_half\
    \ = music_list_size_whole_whole / 2\n        val music_list_size_whole_whole_quarter\
    \ = music_list_size_whole_whole / 4\n        val music_list_size_whole_whole_whole\
    \ = music_list_size_whole_whole % 4\n        val music_list_size_whole_whole_whole_half\
    \ = music_list_size_whole_whole_whole / 2\n        val music_list_size_whole_whole_whole_quarter\
    \ = music_list_size_whole_whole_whole / 4\n        val music_list_size_whole_whole_whole_whole\
    \ = music_list_size_whole_whole_whole % 4\n        val music_list_size_whole_whole_whole_whole_half\
    \ = music_list_size_whole_whole_whole_whole / 2\n        val music_list_size_whole_whole_whole_whole_quarter\
    \ = music_list_size_whole_whole_whole_whole / 4\n        val music_list_size_whole_whole_whole_whole_whole\
    \ = music_list_size_whole_whole_whole_whole % 4\n        val music_list_size_whole_whole_whole_whole_whole_half\
    \ = music_list_size_whole_whole_whole_whole_whole / 2\n        val music_list_size_whole_whole_whole_whole_whole_quarter\
    \ = music_list_size_whole_whole_whole_whole_whole / 4\n        val music_list_size_whole_whole_whole_whole_whole_whole\
    \ = music_list_size_whole_whole_whole_whole_whole % 4\n        val music_list_size_whole_whole_whole_whole_whole_whole_half\
    \ = music_list_size_whole_whole_whole_whole_whole / ", "        music_string.split(\"\
    \ \").map(music_string => {\n            val note = music_string.substring(0,\
    \ 1)\n            val beats = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                val beat = music_string.substring(0, 1)\n            \
    \    val rest = music_string.substring(1)\n                beat.asInstanceOf[Long]\
    \ * rest.asInstanceOf[Long]\n            }).sum\n            note.asInstanceOf[Long]\
    \ * beats.asInstanceOf[Long]\n        }).sum", "        music_string.split(\"\
    \ \").map(music_string => {\n            val notes = music_string.split(\"|\"\
    ).map(music_string => {\n                val note = music_string.split(\"o\").head\n\
    \                val beats = music_string.split(\"o|\").head\n               \
    \ val rest = music_string.split(\".|\").head\n                val rest = music_string.split(\"\
    o|\").head\n                val rest = music_string.split(\"o|\").head\n     \
    \           val rest = music_string.split(\"o|\").head\n                val rest\
    \ = music_string.split(\"o|\").head\n                val rest = music_string.split(\"\
    o|\").head\n                val rest = music_string.split(\"o|\").head\n     \
    \           val rest = music_string.split(\"o|\").head\n                val rest\
    \ = music_string.split(\"o|\").head\n                val rest = music_string.split(\"\
    o|\").head\n                val rest = music_string.split(\"o|\").head\n     \
    \           val rest = music_string.split(\"o|\").head\n                val rest\
    \ = music_string.split(\"o|\").head\n                val rest = music_string.split(\"\
    o|\").head\n                val rest = music_string.split(\"o|\").head\n     \
    \           val rest = music_string.split(\"o|\").head\n                val rest\
    \ = music_string.split(\"o|\").head\n                val rest = music_string.split(\"\
    o|\").head\n                val rest = music_string.split(\"o|\").head\n     \
    \           val rest = music_string.split(\"o|\").head\n                val rest\
    \ = music_string.split(\"o|\").head\n                val rest = music_string.split(\"\
    o|\").head\n                val rest = music_string.split(\"o|\").head\n     \
    \           val rest = music_string.split(\"o|\").head\n                val rest\
    \ = music_string.split(\"o|\").head\n                val rest = music_string.split(\"\
    o|\").head\n                val rest = music_string.split(\"o|\").head\n     \
    \           val rest = music_string.split(\"o|\").head\n                val rest\
    \ = music_string.split(\"o|\").head\n                val rest = music_string.split(\"\
    o|\").head\n                val rest = music_string.split(\"o|\").head\n     \
    \           val rest = music_string.split(\"o|\").head\n                val rest\
    \ = music_string.split(\"o|\").head\n                val rest = music_string.split(\"\
    o|\").head\n                val rest = music_string.split(\"o|\").head\n     \
    \           val rest", "        music_string.split(\"\\\\|\").map(music_string\
    \ => {\n            val music_notes = music_string.split(\"\\\\ \").map(music_note\
    \ => {\n                val music_note_length = music_note.split(\"-\").map(music_note_length\
    \ => {\n                    val music_note_length = music_note_length.trim()\n\
    \                    val music_note_length = music_note_length.toInt\n       \
    \             music_note_length\n                }).filter(music_note_length =>\
    \ music_note_length > 0)\n                val music_note_length = music_notes.last\n\
    \                val music_note = music_notes.head\n                music_note\n\
    \            }).filter(music_note => music_note != \".\")\n            val music_note\
    \ = music_notes.last\n            val music_note_length = music_note.split(\"\
    -\").map(music_note_length => {\n                val music_note_length = music_note_length.trim()\n\
    \                val music_note_length = music_note_length.toInt\n           \
    \     music_note_length\n            }).filter(music_note_length => music_note_length\
    \ > 0)\n            val music_note_length = music_note_length.last\n         \
    \   val music_notes = music_note.split(\"\\\\ \").map(music_note => {\n      \
    \          val music_note_length = music_note.split(\"-\").map(music_note_length\
    \ => {\n                    val music_note_length = music_note_length.trim()\n\
    \                    val music_note_length = music_note_length.toInt\n       \
    \             music_note_length\n                }).filter(music_note_length =>\
    \ music_note_length > 0)\n                val music_note_length = music_notes.last\n\
    \                val music_note = music_notes.head\n                music_note\n\
    \            }).filter(music_note => music_note != \".\")\n            val music_note\
    \ = music_notes.last\n            val music_note_length = music_note.split(\"\
    -\").map(music_note_length => {\n                val music_note_length = music_note_length.trim()\n\
    \                val music_note_length = music_note_length.toInt\n           \
    \     music_note_length\n            }).filter(music_note_length => music_note_length\
    \ > 0)\n            val music_note_length = music_note_length.last\n         \
    \   val music_notes = music_note.split(\"\\\\ \").map(music_note => {\n      \
    \          val music_note_length = music_note.split(\"-\").map(music_note_length\
    \ => {\n                    val music_note_length = music_note_length.trim()\n\
    \                    val music_note_length = music_", "        music_string.split(\"\
    \ \").map(music_string => {\n            val note = music_string.substring(0,\
    \ 1)\n            val beats = music_string.substring(1).split(\"|\").map(_.toLong)\n\
    \            beats.sum\n        }).toList", "        val notes = music_string.split(\"\
    \\\\|\")\n        val notes_length = notes.length\n        val notes_beats = notes.map(_.length.toLong)\n\
    \        val notes_beats_length = notes_beats.sum\n        val notes_beats_length_length\
    \ = notes_beats_length.toLong\n        val notes_beats_length_length_length =\
    \ notes_beats_length_length.toLong\n        val notes_beats_length_length_length_length\
    \ = notes_beats_length_length_length.toLong\n        val notes_beats_length_length_length_length_length\
    \ = notes_beats_length_length_length_length.toLong\n        val notes_beats_length_length_length_length_length_length\
    \ = notes_beats_length_length_length_length_length_length.toLong\n        val\
    \ notes_beats_length_length_length_length_length_length_length = notes_beats_length_length_length_length_length_length_length.toLong\n\
    \        val notes_beats_length_length_length_length_length_length_length_length\
    \ = notes_beats_length_length_length_length_length_length_length_length.toLong\n\
    \        val notes_beats_length_length_length_length_length_length_length_length_length\
    \ = notes_beats_length_length_length_length_length_length_length_length_length.toLong\n\
    \        val notes_beats_length_length_length_length_length_length_length_length_length_length_length\
    \ = notes_beats_length_length_length_length_length_length_length_length_length_length.toLong\n\
    \        val notes_beats_length_length_length_length_length_length_length_length_length_length_length_length\
    \ = notes_beats_length_length_length_length_length_length_length_length_length_length_length.toLong\n\
    \        val notes_beats_length_length_length_length_length_length_length_length_length_length_length_length_length\
    \ = notes_beats_length_length_length_length_length_length_length_length_length_length_length_length.toLong\n\
    \        val notes_beats_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length\
    \ = notes_beats_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length.toLong\n\
    \        val notes_beats_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length\
    \ = notes_beats_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length.toLong\n\
    \        val notes_beats_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val beats = music_string.substring(1).split(\"\
    |\").map(_.toInt).sum\n            beats * note.toLong\n        }).sum", "   \
    \     val notes = music_string.split(\"\\\\|\")\n        val notes_count = notes.length\n\
    \        val notes_array = notes.map(_.toInt).toArray\n        val notes_array\
    \ = notes_array.map(n => n % 12).toArray\n        val notes_array = notes_array.map(n\
    \ => n % 12).toArray\n        val notes_array = notes_array.map(n => n % 12).toArray\n\
    \        val notes_array = notes_array.map(n => n % 12).toArray\n        val notes_array\
    \ = notes_array.map(n => n % 12).toArray\n        val notes_array = notes_array.map(n\
    \ => n % 12).toArray\n        val notes_array = notes_array.map(n => n % 12).toArray\n\
    \        val notes_array = notes_array.map(n => n % 12).toArray\n        val notes_array\
    \ = notes_array.map(n => n % 12).toArray\n        val notes_array = notes_array.map(n\
    \ => n % 12).toArray\n        val notes_array = notes_array.map(n => n % 12).toArray\n\
    \        val notes_array = notes_array.map(n => n % 12).toArray\n        val notes_array\
    \ = notes_array.map(n => n % 12).toArray\n        val notes_array = notes_array.map(n\
    \ => n % 12).toArray\n        val notes_array = notes_array.map(n => n % 12).toArray\n\
    \        val notes_array = notes_array.map(n => n % 12).toArray\n        val notes_array\
    \ = notes_array.map(n => n % 12).toArray\n        val notes_array = notes_array.map(n\
    \ => n % 12).toArray\n        val notes_array = notes_array.map(n => n % 12).toArray\n\
    \        val notes_array = notes_array.map(n => n % 12).toArray\n        val notes_array\
    \ = notes_array.map(n => n % 12).toArray\n        val notes_array = notes_array.map(n\
    \ => n % 12).toArray\n        val notes_array = notes_array.map(n => n % 12).toArray\n\
    \        val notes_array = notes_array.map(n => n % 12).toArray\n        val notes_array\
    \ = notes_array.map(n => n % 12).toArray\n        val notes_array = notes_array.map(n\
    \ => n % 12).toArray\n        val notes_array = notes_array.map(n => n % 12).toArray\n\
    \        val notes_array = notes_array.map(n => n % 12).toArray\n        val notes_array\
    \ = notes_array.map(n => n % 12).toArray\n        val notes_array = notes_array.map(n\
    \ => n % 12).to", "        music_string.split(\" \").map(music_string => {\n \
    \           val notes = music_string.split(\"|\")\n            val beats = notes.map(note\
    \ => {\n                val note = note.trim\n                note match {\n \
    \                   case \"o\" => 4\n                    case \"o|\" => 2\n  \
    \                  case \".|\" => 1\n                    case _ => 0\n       \
    \         }\n            }).sum\n            beats.toLong\n        }).toList",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val rest = music_string.substring(1).split(\"\
    |\")\n            val restLength = rest.length\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength / 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            val restLength = restLength.toLong\n\
    \            val restLength = restLength * 4\n            ", "        music_string.split(\"\
    \\\\|\").map(music_string => {\n            val notes = music_string.split(\"\
    o\").map(music_string => {\n                val note = music_string.trim\n   \
    \             val beats = note.length / 4\n                beats.toLong\n    \
    \        })\n            notes.sum\n        }).toList", "        val music_list\
    \ = music_string.split(\" \").map(x => x.toInt)\n        val music_length = music_list.length\n\
    \        val music_beats = music_list.map(x => x.toLong).sum\n        val music_last_beats\
    \ = music_list.map(x => x.toLong).takeRight(music_length).sum\n        val music_last_beats_count\
    \ = music_list.takeRight(music_length).map(x => x.toLong).sum\n        val music_last_beats_count_2\
    \ = music_list.takeRight(music_length).map(x => x.toLong).takeRight(music_length).sum\n\
    \        val music_last_beats_count_3 = music_list.takeRight(music_length).map(x\
    \ => x.toLong).takeRight(music_length).takeRight(music_length).sum\n        val\
    \ music_last_beats_count_4 = music_list.takeRight(music_length).map(x => x.toLong).takeRight(music_length).takeRight(music_length).takeRight(music_length).sum\n\
    \        val music_last_beats_count_5 = music_list.takeRight(music_length).map(x\
    \ => x.toLong).takeRight(music_length).takeRight(music_length).takeRight(music_length).takeRight(music_length).sum\n\
    \        val music_last_beats_count_6 = music_list.takeRight(music_length).map(x\
    \ => x.toLong).takeRight(music_length).takeRight(music_length).takeRight(music_length).takeRight(music_length).takeRight(music_length).sum\n\
    \        val music_last_beats_count_7 = music_list.takeRight(music_length).map(x\
    \ => x.toLong).takeRight(music_length).takeRight(music_length).takeRight(music_length).takeRight(music_length).takeRight(music_length).takeRight(music_length).sum\n\
    \        val music_last_beats_count_8 = music_list.takeRight(music_length).map(x\
    \ => x.toLong).takeRight(music_length).takeRight(music_length).takeRight(music_length).takeRight(music_length).takeRight(music_length).takeRight(music_length).takeRight(music_length).sum\n\
    \        val music_last_beats_count_9 = music_list.takeRight(music_length).map(",
  "        val notes = music_string.split(\"\\\\|\")\n        val notes_length = notes.length\n\
    \        val notes_length_in_beats = notes_length / 4\n        val notes_length_in_beats_without_last\
    \ = notes_length_in_beats - 1\n        val notes_length_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last / 4\n        val notes_length_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last_in_beats_without_last / 4\n        val\
    \ notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats - 1\n  \
    \      val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ / 4\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ / 4\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_",
  "        val music_list = music_string.split(\" \")\n        val music_list_length\
    \ = music_list.size\n        val music_list_beats = music_list.map(music_string\
    \ => music_string.split(\"|\").length.toLong)\n        val music_list_beats_sum\
    \ = music_list_beats.sum\n        val music_list_beats_count = music_list_beats.count\n\
    \        val music_list_beats_average = music_list_beats_sum / music_list_beats_count\n\
    \        val music_list_beats_average_rounded = music_list_beats_average.toInt\n\
    \        val music_list_beats_average_rounded_rounded = math.round(music_list_beats_average_rounded)\n\
    \        val music_list_beats_average_rounded_rounded_rounded = math.round(music_list_beats_average_rounded_rounded)\n\
    \        val music_list_beats_average_rounded_rounded_rounded_rounded = math.round(music_list_beats_average_rounded_rounded_rounded)\n\
    \        val music_list_beats_average_rounded_rounded_rounded_rounded_rounded\
    \ = math.round(music_list_beats_average_rounded_rounded_rounded_rounded)\n   \
    \     val music_list_beats_average_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = math.round(music_list_beats_average_rounded_rounded_rounded_rounded_rounded)\n\
    \        val music_list_beats_average_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = math.round(music_list_beats_average_rounded_rounded_rounded_rounded_rounded_rounded)\n\
    \        val music_list_beats_average_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = math.round(music_list_beats_average_rounded_rounded_rounded_rounded_rounded_rounded_rounded)\n\
    \        val music_list_beats_average_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = math.round(music_list_beats_average_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded)\n\
    \        val music_list_beats_average_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = math.round(music_list_beats_average_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded)\n\
    \        val music_list_beats_average_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_",
  "        music_string.split(\"\\\\|\").map(music_string => {\n            val notes\
    \ = music_string.split(\"o\").map(music_string => {\n                val note\
    \ = music_string.trim\n                val beats = note.split(\"\\\\.\").map(music_string\
    \ => {\n                    val beat = music_string.trim\n                   \
    \ beat.split(\"\\\\|\").map(music_string => {\n                        val beats\
    \ = music_string.trim\n                        beats.toLong\n                \
    \    })\n                })\n                note.trim\n            })\n     \
    \       notes.toList\n        }).toList", "        val notes = music_string.split(\"\
    \\\\|\")\n        val notes_count = notes.length\n        val notes_beats = notes.map(x\
    \ => x.toInt)\n        val notes_beats_count = notes_beats.map(x => x.toLong)\n\
    \        val notes_beats_count_sum = notes_beats_count.foldLeft(0l) { (acc, x)\
    \ => acc + x }\n        val notes_beats_count_count_sum = notes_beats_count_sum.toLong\n\
    \        val notes_beats_count_count_count_sum = notes_beats_count_count_sum.toLong\n\
    \        val notes_beats_count_count_count_count_sum = notes_beats_count_count_count_sum.toLong\n\
    \        val notes_beats_count_count_count_count_count_sum = notes_beats_count_count_count_count_sum.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_sum = notes_beats_count_count_count_count_count_sum.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_sum = notes_beats_count_count_count_count_count_count_sum.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_sum =\
    \ notes_beats_count_count_count_count_count_count_count_count_sum.toLong\n   \
    \     val notes_beats_count_count_count_count_count_count_count_count_count_sum\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_sum.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_count_sum.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_count_sum.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_sum.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_sum.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_sum.toLong\n\
    \        val notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = notes_beats_count_count_count_count_count_count_count_count_", "        val\
    \ music_list = music_string.split(\" \").map(_.toUpperCase()).filter(_.length\
    \ == 1).map(x => x.toInt).toList\n        val music_list_size = music_list.size\n\
    \        val music_list_beats = music_list.map(x => x.toLong).sum\n        val\
    \ music_list_beats_size = music_list_beats.toLong\n        val music_list_beats_size_minus_1\
    \ = music_list_beats_size - 1\n        val music_list_beats_size_minus_2 = music_list_beats_size\
    \ - 2\n        val music_list_beats_size_minus_3 = music_list_beats_size - 3\n\
    \        val music_list_beats_size_minus_4 = music_list_beats_size - 4\n     \
    \   val music_list_beats_size_minus_5 = music_list_beats_size - 5\n        val\
    \ music_list_beats_size_minus_6 = music_list_beats_size - 6\n        val music_list_beats_size_minus_7\
    \ = music_list_beats_size - 7\n        val music_list_beats_size_minus_8 = music_list_beats_size\
    \ - 8\n        val music_list_beats_size_minus_9 = music_list_beats_size - 9\n\
    \        val music_list_beats_size_minus_10 = music_list_beats_size - 10\n   \
    \     val music_list_beats_size_minus_11 = music_list_beats_size - 11\n      \
    \  val music_list_beats_size_minus_12 = music_list_beats_size - 12\n        val\
    \ music_list_beats_size_minus_13 = music_list_beats_size - 13\n        val music_list_beats_size_minus_14\
    \ = music_list_beats_size - 14\n        val music_list_beats_size_minus_15 = music_list_beats_size\
    \ - 15\n        val music_list_beats_size_minus_16 = music_list_beats_size - 16\n\
    \        val music_list_beats_size_minus_17 = music_list_beats_size - 17\n   \
    \     val music_list_beats_size_minus_18 = music_list_beats_size - 18\n      \
    \  val music_list_beats_size_minus_19 = music_list_beats_size - 19\n        val\
    \ music_list_beats_size_minus_20 = music_list_beats_size - 20\n        val music_list_beats_size_minus_21\
    \ = music_list_beats_size - 21\n        val music_list_beats_size_minus_22 = music_list_beats_size\
    \ - 22\n        val music_list_beats_size_", "        music_string.split(\"\\\\\
    |\").map(music_string => {\n            val notes = music_string.split(\"\\\\\
    \ \").map(music_string => {\n                val note = music_string.split(\"\\\
    \\ \").map(music_string => {\n                    music_string.split(\"\\\\|\"\
    ).map(music_string => {\n                        music_string.split(\"\\\\ \"\
    ).map(music_string => {\n                            music_string.split(\"\\\\\
    \ \").map(music_string => {\n                                music_string.split(\"\
    \\\\ \").map(music_string => {\n                                    music_string.split(\"\
    \\\\ \").map(music_string => {\n                                        music_string.split(\"\
    \\\\ \").map(music_string => {\n                                            music_string.split(\"\
    \\\\ \").map(music_string => {\n                                             \
    \   music_string.split(\"\\\\ \").map(music_string => {\n                    \
    \                                music_string.split(\"\\\\ \").map(music_string\
    \ => {\n                                                        music_string.split(\"\
    \\\\ \").map(music_string => {\n                                             \
    \               music_string.split(\"\\\\ \").map(music_string => {\n        \
    \                                                        music_string.split(\"\
    \\\\ \").map(music_string => {\n                                             \
    \                       music_string.split(\"\\\\ \").map(music_string => {\n\
    \                                                                        music_string.split(\"\
    \\\\ \").map(music_string => {\n                                             \
    \                               music_string.split(\"\\\\ \").map(music_string\
    \ => {\n                                                                     \
    \           music_string.split(\"\\\\ \").map(music_string => {\n            \
    \                                                                        music_string.split(\"\
    \\\\ \").map(music_string => {\n                                             \
    \                                           music_string.split(\"\\\\ \").map(music_string\
    \ => {\n                                                                     \
    \                       music_string.split(\"\\\\ \").map(music_string => {\n\
    \                                                                            \
    \                    music_string.split(\"\\\\ \").map(music_string => {\n   \
    \                                                                            \
    \                     music_string.split(\"\\\\ \").map(music_string => {\n  \
    \                                                                            \
    \                          music_string.split(\"\\\\ \").map(music_string => {\n\
    \                                                                            \
    \                                music_string.split(\"\\\\ \").map(music_string\
    \ => {\n                                                                     \
    \                                           music_string.split(\"\\\\ \").map(music_string\
    \ => {\n                                                                     \
    \                                               music_string.split(\"\\\\ \").map(music_string\
    \ => {\n                                                                     \
    \                                                   music_string.split(\"\\\\\
    \ \").map(music_string => {\n                                                \
    \                                                                            music_string.split(\"\
    \\\\ \").map(music_string => {\n                                             \
    \                                                                            \
    \       music_string.split(\"\\\\ \").map(music_string => {\n                \
    \                                                                            \
    \                                        music_string.split(\"\\\\ \").map(music_string\
    \ => {\n                                                                     \
    \                                                                   music_string.split(\"\
    \\\\ \").map(music_string => {\n                                             \
    \                                                                            \
    \                   music_string.split(\"\\\\ \").map(music_string => {\n    \
    \                                                                            \
    \                                                                music_string.split(\"\
    \\\\", "        music_string.split(\"\\\\|\").map(music_string => {\n        \
    \    val notes = music_string.split(\"o\").map(music_string => {\n           \
    \     val note = music_string.trim\n                val beats = note.split(\"\
    |\").map(music_string => {\n                    val beat = music_string.trim\n\
    \                    val beats = beat.split(\".\").map(music_string => {\n   \
    \                     val beat = music_string.trim\n                        val\
    \ beats = beat.split(\"o\").map(music_string => {\n                          \
    \  val beat = music_string.trim\n                            val beats = beat.split(\"\
    |\").map(music_string => {\n                                val beat = music_string.trim\n\
    \                                val beats = beat.split(\".\").map(music_string\
    \ => {\n                                    val beat = music_string.trim\n   \
    \                                 val beats = beat.split(\"o\").map(music_string\
    \ => {\n                                        val beat = music_string.trim\n\
    \                                        val beats = beat.split(\"|\").map(music_string\
    \ => {\n                                            val beat = music_string.trim\n\
    \                                            val beats = beat.split(\".\").map(music_string\
    \ => {\n                                                val beat = music_string.trim\n\
    \                                                val beats = beat.split(\"o\"\
    ).map(music_string => {\n                                                    val\
    \ beat = music_string.trim\n                                                 \
    \   val beats = beat.split(\"|\").map(music_string => {\n                    \
    \                                    val beat = music_string.trim\n          \
    \                                              val beats = beat.split(\".\").map(music_string\
    \ => {\n                                                            val beat =\
    \ music_string.trim\n                                                        \
    \    val beats = beat.split(\"o\").map(music_string => {\n                   \
    \                                             val beat = music_string.trim\n \
    \                                                               val beats = beat.split(\"\
    |\").map(music_string => {\n                                                 \
    \                   val beat = music_string.trim\n                           \
    \                                         val beats = beat.split(\".\").map(music_string\
    \ => {\n                                                                     \
    \   val beat = music_string.trim\n                                           \
    \                             val beats = beat.split(\"o\").map(music_string =>\
    \ {\n                                                                        \
    \    val beat = music_string.trim\n                                          \
    \                                  val beats = beat.split(\"|\").map(music_string\
    \ => {\n                                                                     \
    \           val beat = music_string.trim\n                                   \
    \                                             val beats = beat.split(\".\").map(music_string\
    \ => {\n                                                                     \
    \               val beat = music_string.trim\n                               \
    \                                                     val beats = beat.split(\"\
    o\").map(music_string => {\n                                                 \
    \                                       val beat = music_string.trim\n       \
    \                                                                            \
    \     val beats = beat.split(\"|\").map(music_string => {\n                  \
    \                                                                          val\
    \ beat = music_string.trim\n                                                 \
    \                                           val beat", "        music_string.split(\"\
    \ \").map(music_string => {\n            val note = music_string.charAt(0)\n \
    \           val rest = music_string.substring(1).trim\n            val beats =\
    \ rest.split(\"|\").map(rest => {\n                val beat = rest.charAt(0)\n\
    \                val rest = rest.substring(1).trim\n                val rest =\
    \ rest.toLong\n                beat.toLong * rest\n            }).sum\n      \
    \      note.toLong * beats\n        }).sum", "        val music_list = music_string.split(\"\
    \ \")\n        val music_list_size = music_list.size\n        val music_list_length\
    \ = music_list_size / 4\n        val music_list_remain = music_list_size % 4\n\
    \        val music_list_last_beat = music_list_length - music_list_remain\n  \
    \      val music_list_last_beats = music_list_last_beat * 4\n        val music_list_last_beats_int\
    \ = music_list_last_beats.toInt\n        val music_list_last_beats_long = music_list_last_beats_int.toLong\n\
    \        val music_list_last_beats_longs = music_list_last_beats_long.toList\n\
    \        val music_list_last_beats_longs_size = music_list_last_beats_longs.size\n\
    \        val music_list_last_beats_longs_length = music_list_last_beats_longs_size\
    \ / 4\n        val music_list_last_beats_longs_remain = music_list_last_beats_longs_size\
    \ % 4\n        val music_list_last_beats_longs_last_beat = music_list_last_beats_longs_length\
    \ - music_list_last_beats_longs_remain\n        val music_list_last_beats_longs_last_beats\
    \ = music_list_last_beats_longs_last_beat * 4\n        val music_list_last_beats_longs_last_beats_int\
    \ = music_list_last_beats_longs_last_beats.toInt\n        val music_list_last_beats_longs_last_beats_long\
    \ = music_list_last_beats_longs_last_beats_int.toLong\n        val music_list_last_beats_longs_last_beats_longs\
    \ = music_list_last_beats_longs_last_beats_long.toList\n        val music_list_last_beats_longs_last_beats_longs_size\
    \ = music_list_last_beats_longs_last_beats_longs.size\n        val music_list_last_beats_longs_last_beats_longs_length\
    \ = music_list_last_beats_longs_last_beats_longs_size / 4\n        val music_list_last_beats_longs_last_beats_longs_remain\
    \ = music_list_last_beats_longs_last_beats_longs_size % 4\n        val music_list_last_beats_longs_last_beats_longs_last_beat\
    \ = music_list_last_beats_longs_last_beats_longs_length - music_list_last_beats_longs_last_beats_longs_remain\n\
    \        val music_list_last_beats_longs_last_beats_longs_last_beats = musi",
  "        val music_list = music_string.split(\" \").map(_.toUpperCase()).filter(_.length\
    \ == 1).map(x => x.toInt).toList\n        val beats = music_list.map(x => if (x\
    \ == 0) 4 else 2)\n        val notes = music_list.map(x => if (x == 0) \"o\" else\
    \ if (x == 1) \"o|\" else \"|\")\n        val notes_count = music_list.map(x =>\
    \ if (x == 0) 4 else 2)\n        val notes_count_sum = notes_count.sum\n     \
    \   val notes_count_sum = notes_count_sum.toLong\n        val notes_count_sum\
    \ = notes_count_sum.toInt\n        val notes_count_sum = notes_count_sum.toLong\n\
    \        val notes_count_sum = notes_count_sum.toInt\n        val notes_count_sum\
    \ = notes_count_sum.toLong\n        val notes_count_sum = notes_count_sum.toInt\n\
    \        val notes_count_sum = notes_count_sum.toLong\n        val notes_count_sum\
    \ = notes_count_sum.toInt\n        val notes_count_sum = notes_count_sum.toLong\n\
    \        val notes_count_sum = notes_count_sum.toInt\n        val notes_count_sum\
    \ = notes_count_sum.toLong\n        val notes_count_sum = notes_count_sum.toInt\n\
    \        val notes_count_sum = notes_count_sum.toLong\n        val notes_count_sum\
    \ = notes_count_sum.toInt\n        val notes_count_sum = notes_count_sum.toLong\n\
    \        val notes_count_sum = notes_count_sum.toInt\n        val notes_count_sum\
    \ = notes_count_sum.toLong\n        val notes_count_sum = notes_count_sum.toInt\n\
    \        val notes_count_sum = notes_count_sum.toLong\n        val notes_count_sum\
    \ = notes_count_sum.toInt\n        val notes_count_sum = notes_count_sum.toLong\n\
    \        val notes_count_sum = notes_count_sum.toInt\n        val notes_count_sum\
    \ = notes_count_sum.toLong\n        val notes_count_sum = notes_count_sum.toInt\n\
    \        val notes_count_sum = notes_count_sum.toLong\n        val notes_count_sum\
    \ = notes_count_sum.toInt\n        val notes_count_sum = notes_count_sum.toLong\n\
    \        val notes_count_sum = notes_count_sum.toInt\n        val notes_count_sum\
    \ = notes_count_sum.toLong\n        val notes_count_sum = notes_count_sum.toInt\n\
    \        val notes_count_sum = notes_count_sum.toLong\n        val notes_count_sum\
    \ = ", "        music_string.split(\" \").map(music_string => {\n            val\
    \ note = music_string.substring(0, 1)\n            val beats = music_string.substring(1,\
    \ music_string.length).toInt\n            val rest = music_string.substring(music_string.length)\n\
    \            val rest = rest.replace(\".\", \"\")\n            val rest = rest.replace(\"\
    |\", \"\")\n            val rest = rest.replace(\"o\", \"\")\n            val\
    \ rest = rest.replace(\"o|\", \"\")\n            val rest = rest.replace(\"|o\"\
    , \"\")\n            val rest = rest.replace(\"|o|\", \"\")\n            val rest\
    \ = rest.replace(\"o|o\", \"\")\n            val rest = rest.replace(\"o|o|\"\
    , \"\")\n            val rest = rest.replace(\"o|o|o\", \"\")\n            val\
    \ rest = rest.replace(\"o|o|o|\", \"\")\n            val rest = rest.replace(\"\
    o|o|o|o\", \"\")\n            val rest = rest.replace(\"o|o|o|o|\", \"\")\n  \
    \          val rest = rest.replace(\"o|o|o|o|o\", \"\")\n            val rest\
    \ = rest.replace(\"o|o|o|o|o|\", \"\")\n            val rest = rest.replace(\"\
    o|o|o|o|o|o\", \"\")\n            val rest = rest.replace(\"o|o|o|o|o|o|\", \"\
    \")\n            val rest = rest.replace(\"o|o|o|o|o|o|o\", \"\")\n          \
    \  val rest = rest.replace(\"o|o|o|o|o|o|o|\", \"\")\n            val rest = rest.replace(\"\
    o|o|o|o|o|o|o|o\", \"\")\n            val rest = rest.replace(\"o|o|o|o|o|o|o|o\"\
    , \"\")\n            val rest = rest.replace(\"o|o|o|o|o|o|o|o|\", \"\")\n   \
    \         val rest = rest.replace(\"o|o|o|o|o|o|o|o|o\", \"\")\n            val\
    \ rest = rest.replace(\"o|o|o|o|o|o|o|o|o|\", \"\")\n            val rest = rest.replace(\"\
    o|o|o|o|o|o|o|o|o|o\", \"\")\n            val rest = rest.replace(\"o|o|o|o|o|o|o|o|o|o|\"\
    , \"\")\n            val rest = rest.replace(\"o|o|o|o|o|o|o|o|o|o|", "      \
    \  music_string.split(\"\\\\|\").map(music_string => {\n            val notes\
    \ = music_string.split(\"\\\\o\").map(music_string => {\n                val note\
    \ = music_string.split(\"\\\\.\").map(music_string => {\n                    val\
    \ beats = music_string.split(\"\\\\|\").map(music_string => {\n              \
    \          val beat = music_string.split(\"\\\\o\").map(music_string => {\n  \
    \                          val beats = music_string.split(\"\\\\.\").map(music_string\
    \ => {\n                                val beat = music_string.split(\"\\\\o\"\
    ).map(music_string => {\n                                    val beats = music_string.split(\"\
    \\\\.\").map(music_string => {\n                                        val beat\
    \ = music_string.split(\"\\\\o\").map(music_string => {\n                    \
    \                        val beats = music_string.split(\"\\\\.\").map(music_string\
    \ => {\n                                                val beat = music_string.split(\"\
    \\\\o\").map(music_string => {\n                                             \
    \       val beats = music_string.split(\"\\\\.\").map(music_string => {\n    \
    \                                                    val beat = music_string.split(\"\
    \\\\o\").map(music_string => {\n                                             \
    \               val beats = music_string.split(\"\\\\.\").map(music_string =>\
    \ {\n                                                                val beat\
    \ = music_string.split(\"\\\\o\").map(music_string => {\n                    \
    \                                                val beats = music_string.split(\"\
    \\\\.\").map(music_string => {\n                                             \
    \                           val beat = music_string.split(\"\\\\o\").map(music_string\
    \ => {\n                                                                     \
    \       val beats = music_string.split(\"\\\\.\").map(music_string => {\n    \
    \                                                                            val\
    \ beat = music_string.split(\"\\\\o\").map(music_string => {\n               \
    \                                                                     val beats\
    \ = music_string.split(\"\\\\.\").map(music_string => {\n                    \
    \                                                                    val beat\
    \ = music_string.split(\"\\\\o\").map(music_string => {\n                    \
    \                                                                        val beats\
    \ = music_string.split(\"\\\\.\").map(music_string => {\n                    \
    \                                                                            val\
    \ beat = music_string.split(\"\\\\o\").map(music_string => {\n               \
    \                                                                            \
    \         val beats = music_string.split(\"\\\\.\").map(music_string => {\n  \
    \                                                                            \
    \                          val beat = music_string.split(\"\\\\o\").map(music_string\
    \ => {\n                                                                     \
    \                                       val beats = music_string.split(\"\\\\\
    .\").map(music_string => {\n                                                 \
    \                                                               val beat = music_string.split(\"\
    \\\\o\").map(music_string => {\n                                             \
    \                                                                       val beats\
    \ = music_string.split(\"\\\\.\").map(music_string => {\n                    \
    \                                                                            \
    \                        val beat = music_string.split(\"\\\\o\").map(music_string\
    \ => {\n                                                                     \
    \                                                       val beats = music_string.split(\"\
    \\\\.\").map(music_string => {\n                                             \
    \                                                                            \
    \                       val ", "        val music_list = music_string.split(\"\
    \ \").map(_.toUpperCase)\n        val music_list_size = music_list.size\n    \
    \    val music_list_size_half = music_list_size / 2\n        val music_list_size_quarter\
    \ = music_list_size / 4\n        val music_list_size_whole = music_list_size %\
    \ 4\n        val music_list_size_whole_half = music_list_size_whole / 2\n    \
    \    val music_list_size_whole_quarter = music_list_size_whole / 4\n        val\
    \ music_list_size_whole_whole = music_list_size_whole % 4\n        val music_list_size_whole_whole_half\
    \ = music_list_size_whole_whole / 2\n        val music_list_size_whole_whole_quarter\
    \ = music_list_size_whole_whole / 4\n        val music_list_size_whole_whole_whole\
    \ = music_list_size_whole_whole % 4\n        val music_list_size_whole_whole_whole_half\
    \ = music_list_size_whole_whole_whole / 2\n        val music_list_size_whole_whole_whole_quarter\
    \ = music_list_size_whole_whole_whole / 4\n        val music_list_size_whole_whole_whole_whole\
    \ = music_list_size_whole_whole_whole % 4\n        val music_list_size_whole_whole_whole_whole_half\
    \ = music_list_size_whole_whole_whole_whole / 2\n        val music_list_size_whole_whole_whole_whole_quarter\
    \ = music_list_size_whole_whole_whole_whole / 4\n        val music_list_size_whole_whole_whole_whole_whole\
    \ = music_list_size_whole_whole_whole_whole % 4\n        val music_list_size_whole_whole_whole_whole_whole_half\
    \ = music_list_size_whole_whole_whole_whole / 2\n        val music_list_size_whole_whole_whole_whole_whole_quarter\
    \ = music_list_size_whole_whole_whole_whole / 4\n        val music_list_size_whole_whole_whole_whole_whole_whole\
    \ = music_list_size_whole_whole_whole_whole % 4\n        val music_list_size_whole_whole_whole_whole_whole_whole_half\
    \ = music_list_size_whole_whole_whole_whole / 2\n        val music_list_size_whole_whole_whole_whole_whole_who",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val rest = music_string.substring(1)\n\
    \            val beats = rest.split(\"|\").map(rest => {\n                val\
    \ beat = rest.substring(0, 1)\n                val rest2 = rest.substring(1)\n\
    \                val rest3 = rest.substring(1)\n                val rest4 = rest.substring(1)\n\
    \                val rest5 = rest.substring(1)\n                val rest6 = rest.substring(1)\n\
    \                val rest7 = rest.substring(1)\n                val rest8 = rest.substring(1)\n\
    \                val rest9 = rest.substring(1)\n                val rest10 = rest.substring(1)\n\
    \                val rest11 = rest.substring(1)\n                val rest12 =\
    \ rest.substring(1)\n                val rest13 = rest.substring(1)\n        \
    \        val rest14 = rest.substring(1)\n                val rest15 = rest.substring(1)\n\
    \                val rest16 = rest.substring(1)\n                val rest17 =\
    \ rest.substring(1)\n                val rest18 = rest.substring(1)\n        \
    \        val rest19 = rest.substring(1)\n                val rest20 = rest.substring(1)\n\
    \                val rest21 = rest.substring(1)\n                val rest22 =\
    \ rest.substring(1)\n                val rest23 = rest.substring(1)\n        \
    \        val rest24 = rest.substring(1)\n                val rest25 = rest.substring(1)\n\
    \                val rest26 = rest.substring(1)\n                val rest27 =\
    \ rest.substring(1)\n                val rest28 = rest.substring(1)\n        \
    \        val rest29 = rest.substring(1)\n                val rest30 = rest.substring(1)\n\
    \                val rest31 = rest.substring(1)\n                val rest32 =\
    \ rest.substring(1)\n                val rest33 = rest.substring(1)\n        \
    \        val rest34 = rest.substring(1)\n                val rest35 = rest.substring(1)\n\
    \                val rest36 = rest.substring(1)\n                val rest37 =\
    \ rest.substring(1)\n                val rest38 = rest.substring(1)\n        \
    \        val rest39 = rest.substring(1)\n                val rest40 = rest.substring(1)\n\
    \                val rest41 = rest.substring(1)\n                val rest42 =\
    \ rest.substring(1)\n                val rest43 = rest.substring(1)\n        \
    \        val rest44 = rest.substring(1)\n                val rest45 = rest.substring(1)\n\
    \                val rest46 = rest.substring(1)\n                val rest47 =\
    \ rest.substring(1)\n                val rest48 = rest.substring(1)\n        \
    \        val rest49 = rest.substring(1)\n                val rest50 = rest.substring(1)\n\
    \                val rest51 = rest.substring(1)\n                val rest52 =\
    \ rest.substring(1)\n                val rest53 = rest.", "        music_string.split(\"\
    \\\\|\").map(music_string => {\n            val notes = music_string.split(\"\\\
    \\o\").map(music_string => {\n                val note = music_string.trim\n \
    \               val beats = note.split(\"\\\\.\").map(music_string => {\n    \
    \                val beat = music_string.trim\n                    beat.split(\"\
    o\").map(music_string => {\n                        val beat = music_string.trim\n\
    \                        beat.split(\"|\").map(music_string => {\n           \
    \                 val beat = music_string.trim\n                            beat.split(\"\
    o\").map(music_string => {\n                                val beat = music_string.trim\n\
    \                                beat.split(\"|\").map(music_string => {\n   \
    \                                 val beat = music_string.trim\n             \
    \                       beat.split(\"o\").map(music_string => {\n            \
    \                            val beat = music_string.trim\n                  \
    \                      beat.split(\"|\").map(music_string => {\n             \
    \                               val beat = music_string.trim\n               \
    \                             beat.split(\"o\").map(music_string => {\n      \
    \                                          val beat = music_string.trim\n    \
    \                                            beat.split(\"|\").map(music_string\
    \ => {\n                                                    val beat = music_string.trim\n\
    \                                                    beat.split(\"o\").map(music_string\
    \ => {\n                                                        val beat = music_string.trim\n\
    \                                                        beat.split(\"|\").map(music_string\
    \ => {\n                                                            val beat =\
    \ music_string.trim\n                                                        \
    \    beat.split(\"o\").map(music_string => {\n                               \
    \                                 val beat = music_string.trim\n             \
    \                                                   beat.split(\"|\").map(music_string\
    \ => {\n                                                                    val\
    \ beat = music_string.trim\n                                                 \
    \                   beat.split(\"o\").map(music_string => {\n                \
    \                                                        val beat = music_string.trim\n\
    \                                                                        beat.split(\"\
    |\").map(music_string => {\n                                                 \
    \                           val beat = music_string.trim\n                   \
    \                                                         beat.split(\"o\").map(music_string\
    \ => {\n                                                                     \
    \           val beat = music_string.trim\n                                   \
    \                                             beat.split(\"|\").map(music_string\
    \ => {\n                                                                     \
    \               val beat = music_string.trim\n                               \
    \                                                     beat.split(\"o\").map(music_string\
    \ => {\n                                                                     \
    \                   val beat = music_string.trim\n                           \
    \                                                             beat.split(\"|\"\
    ).map(music_string => {\n                                                    \
    \                                        val beat = music_string.trim\n      \
    \                                                                            \
    \          beat.split(\"o\").map(music_string => {\n                         \
    \                                                                       val beat\
    \ = music_string.trim\n                                                      \
    \                                          beat.split(\"|\").map(music_string\
    \ => {\n                                                                     \
    \                               val beat = music_string.trim\n               \
    \                                                                            \
    \         beat.split(\"o\").map(music_string ", "        val music_list = music_string.split(\"\
    \\\\|\")\n        val music_list_length = music_list.length\n        val music_list_length\
    \ = music_list_length.toInt\n        val music_list_length = music_list_length.toLong\n\
    \        val music_list_length = music_list_length.toInt\n        val music_list_length\
    \ = music_list_length.toLong\n        val music_list_length = music_list_length.toInt\n\
    \        val music_list_length = music_list_length.toLong\n        val music_list_length\
    \ = music_list_length.toInt\n        val music_list_length = music_list_length.toLong\n\
    \        val music_list_length = music_list_length.toInt\n        val music_list_length\
    \ = music_list_length.toLong\n        val music_list_length = music_list_length.toInt\n\
    \        val music_list_length = music_list_length.toLong\n        val music_list_length\
    \ = music_list_length.toInt\n        val music_list_length = music_list_length.toLong\n\
    \        val music_list_length = music_list_length.toInt\n        val music_list_length\
    \ = music_list_length.toLong\n        val music_list_length = music_list_length.toInt\n\
    \        val music_list_length = music_list_length.toLong\n        val music_list_length\
    \ = music_list_length.toInt\n        val music_list_length = music_list_length.toLong\n\
    \        val music_list_length = music_list_length.toInt\n        val music_list_length\
    \ = music_list_length.toLong\n        val music_list_length = music_list_length.toInt\n\
    \        val music_list_length = music_list_length.toLong\n        val music_list_length\
    \ = music_list_length.toInt\n        val music_list_length = music_list_length.toLong\n\
    \        val music_list_length = music_list_length.toInt\n        val music_list_length\
    \ = music_list_length.toLong\n        val music_list_length = music_list_length.toInt\n\
    \        val music_list_length = music_list_length.toLong\n        val music_list_length\
    \ = music_list_length.toInt\n        val music_list_length = music_list_length.toLong\n\
    \        val music_list_length = music_list_length.toInt\n        val music_list_length\
    \ = music_list_length.toLong\n        val music_list_length = music_list_length.toInt\n\
    \        val music_list_length = music_list_length.toLong\n        val music_list_length\
    \ = music_list_length.toInt\n        val music_list_length = musi", "        val\
    \ music_list = music_string.split(\" \").map(_.toUpperCase)\n        val music_list_length\
    \ = music_list.length\n        val music_list_with_beats = music_list.map(music_string\
    \ => {\n            val music_string_with_beats = music_string.split(\"|\")\n\
    \            val music_string_with_beats_length = music_string_with_beats.length\n\
    \            val music_string_with_beats_last_beat = music_string_with_beats(music_string_with_beats_length\
    \ - 1)\n            val music_string_with_beats_last_beat_length = music_string_with_beats_last_beat.length\n\
    \            val music_string_with_beats_last_beat_last_beat = music_string_with_beats_last_beat(music_string_with_beats_last_beat_length\
    \ - 1)\n            val music_string_with_beats_last_beat_last_beat_length = music_string_with_beats_last_beat_last_beat.length\n\
    \            val music_string_with_beats_last_beat_last_beat_last_beat = music_string_with_beats_last_beat_last_beat(music_string_with_beats_last_beat_last_beat_length\
    \ - 1)\n            val music_string_with_beats_last_beat_last_beat_last_beat_length\
    \ = music_string_with_beats_last_beat_last_beat_last_beat.length\n           \
    \ val music_string_with_beats_last_beat_last_beat_last_beat_last_beat = music_string_with_beats_last_beat_last_beat_last_beat(music_string_with_beats_last_beat_last_beat_last_beat_length\
    \ - 1)\n            val music_string_with_beats_last_beat_last_beat_last_beat_last_beat_length\
    \ = music_string_with_beats_last_beat_last_beat_last_beat_last_beat.length\n \
    \           val music_string_with_beats_last_beat_last_beat_last_beat_last_beat_last_beat\
    \ = music_string_with_beats_last_beat_last_beat_last_beat_last_beat(music_string_with_beats_last_beat_last_beat_last_beat_last_beat_length\
    \ - 1)\n            val music_string_with_beats_last_beat_last_beat_last_beat_last_beat_last_beat_length\
    \ = music_string_with_beats_last_beat_last_beat_last_beat_last_beat_last_beat.length\n\
    \            val music_string_with_beats_last_beat_last_beat_last_beat_last_beat_last_beat_last_beat\
    \ = music_string_with_beats_last_beat_last_beat_last_beat_last_beat_last_be",
  "        val music_list = music_string.split(\" \").map(_.toUpperCase()).filter(x\
    \ => x != \"O\" && x != \"|\")\n        val music_list = music_list.map(x => if\
    \ (x == \"O\") 4L else 2L).filter(x => x != 0L)\n        val music_list = music_list.map(x\
    \ => if (x == \"|\") 1L else 0L)\n        val music_list = music_list.map(x =>\
    \ if (x == 0) 4L else 2L)\n        val music_list = music_list.map(x => if (x\
    \ == 0) 2L else 1L)\n        val music_list = music_list.map(x => if (x == 0)\
    \ 1L else 0L)\n        val music_list = music_list.map(x => if (x == 0) 1L else\
    \ 0L)\n        val music_list = music_list.map(x => if (x == 0) 1L else 0L)\n\
    \        val music_list = music_list.map(x => if (x == 0) 1L else 0L)\n      \
    \  val music_list = music_list.map(x => if (x == 0) 1L else 0L)\n        val music_list\
    \ = music_list.map(x => if (x == 0) 1L else 0L)\n        val music_list = music_list.map(x\
    \ => if (x == 0) 1L else 0L)\n        val music_list = music_list.map(x => if\
    \ (x == 0) 1L else 0L)\n        val music_list = music_list.map(x => if (x ==\
    \ 0) 1L else 0L)\n        val music_list = music_list.map(x => if (x == 0) 1L\
    \ else 0L)\n        val music_list = music_list.map(x => if (x == 0) 1L else 0L)\n\
    \        val music_list = music_list.map(x => if (x == 0) 1L else 0L)\n      \
    \  val music_list = music_list.map(x => if (x == 0) 1L else 0L)\n        val music_list\
    \ = music_list.map(x => if (x == 0) 1L else 0L)\n        val music_list = music_list.map(x\
    \ => if (x == 0) 1L else 0L)\n        val music_list = music_list.map(x => if\
    \ (x == 0) 1L else 0L)\n        val music_list = music_list.map(x => if (x ==\
    \ 0) 1L else 0L)\n        val music_list = music_list.map(x => if (x == 0) 1L\
    \ else 0L)\n        val music_list = music_list.map(x => if (x == 0) 1L else 0L)\n\
    \        val music_list = music_list.map(x => if (", "        music_string.split(\"\
    \ \").map(music_string => {\n            val note = music_string.charAt(0)\n \
    \           val beats = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                val beat = music_string.charAt(0)\n                val\
    \ rest = music_string.substring(1).split(\"o\").map(music_string => {\n      \
    \              val rest = music_string.charAt(0)\n                    val rest\
    \ = music_string.substring(1).split(\"|\").map(music_string => {\n           \
    \             val rest = music_string.charAt(0)\n                        val rest\
    \ = music_string.substring(1).split(\"o\").map(music_string => {\n           \
    \                 val rest = music_string.charAt(0)\n                        \
    \    val rest = music_string.substring(1).split(\"|\").map(music_string => {\n\
    \                                val rest = music_string.charAt(0)\n         \
    \                       val rest = music_string.substring(1).split(\"o\").map(music_string\
    \ => {\n                                    val rest = music_string.charAt(0)\n\
    \                                    val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                        val rest =\
    \ music_string.charAt(0)\n                                        val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                            val rest\
    \ = music_string.charAt(0)\n                                            val rest\
    \ = music_string.substring(1).split(\"|\").map(music_string => {\n           \
    \                                     val rest = music_string.charAt(0)\n    \
    \                                            val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \   val rest = music_string.charAt(0)\n                                      \
    \              val rest = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                                                        val rest = music_string.charAt(0)\n\
    \                                                        val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \           val rest = music_string.charAt(0)\n                              \
    \                              val rest = music_string.substring(1).split(\"|\"\
    ).map(music_string => {\n                                                    \
    \            val rest = music_string.charAt(0)\n                             \
    \                                   val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \                   val rest = music_string.charAt(0)\n                      \
    \                                              val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                 \
    \                       val rest = music_string.charAt(0)\n                  \
    \                                                      val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \                           val rest = music_string.charAt(0)\n              \
    \                                                              val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                 \
    \                               val rest = music_string.charAt(0)\n          \
    \                                                                      val rest\
    \ = musi", "        music_string.split(\" \").map(music_string => {\n        \
    \    val note = music_string.substring(0, 1)\n            val rest = music_string.substring(1)\n\
    \            val beats = rest.split(\"|\").map(music_string => {\n           \
    \     val beat = music_string.substring(0, 1)\n                val rest = music_string.substring(1)\n\
    \                beat.toLong\n            }).sum\n            note.toLong * beats\n\
    \        }).sum", "        val music_list = music_string.split(\"\\\\|\")\n  \
    \      val music_list_size = music_list.size\n        val music_list_size_half\
    \ = music_list_size / 2\n        val music_list_size_quater = music_list_size\
    \ / 4\n        val music_list_size_whole = music_list_size.toLong\n        val\
    \ music_list_size_last_four = music_list_size_whole - music_list_size_half\n \
    \       val music_list_size_last_two = music_list_size_half - music_list_size_quater\n\
    \        val music_list_size_last_one = music_list_size_quater - music_list_size_whole\n\
    \        val music_list_size_last_four_last_two = music_list_size_last_four -\
    \ music_list_size_last_two\n        val music_list_size_last_four_last_one = music_list_size_last_four\
    \ - music_list_size_last_one\n        val music_list_size_last_two_last_one =\
    \ music_list_size_last_two - music_list_size_last_one\n        val music_list_size_last_one_last_four\
    \ = music_list_size_last_one - music_list_size_last_four\n        val music_list_size_last_one_last_two\
    \ = music_list_size_last_one - music_list_size_last_two\n        val music_list_size_last_one_last_one\
    \ = music_list_size_last_one - music_list_size_last_one\n        val music_list_size_last_four_last_one_last_two\
    \ = music_list_size_last_four_last_one - music_list_size_last_two_last_one\n \
    \       val music_list_size_last_four_last_one_last_one = music_list_size_last_four_last_one\
    \ - music_list_size_last_one_last_four\n        val music_list_size_last_two_last_one_last_one\
    \ = music_list_size_last_two_last_one - music_list_size_last_one_last_two\n  \
    \      val music_list_size_last_one_last_four_last_one_last_two = music_list_size_last_one_last_four\
    \ - music_list_size_last_four_last_one_last_two\n        val music_list_size_last_one_last_two_last_one_last_one\
    \ = music_list_size_last_one_last_two - music_list_size_last_two_last_one_last_one\n\
    \        val music_list_size_last_one_last_one_last_four_last_one_last_two = music_list_size_last_one_last_four\
    \ - music_list_size_last_four_last_one_last_two\n        val music_list_size_last_one_last_one_last_two_last_one_last_one",
  "        music_string.split(\" \").map(music_string => {\n            val music_note\
    \ = music_string.substring(0, 1)\n            val music_length = music_string.substring(1).length\n\
    \            val music_beats = music_length / 4\n            val music_rest =\
    \ music_length % 4\n            val music_notes = music_note.toCharArray.map(music_note\
    \ => {\n                val music_note_length = music_note.toString.length\n \
    \               val music_note_beats = music_note_length / 4\n               \
    \ val music_note_rest = music_note_length % 4\n                val music_note_notes\
    \ = music_note.toString.toCharArray.map(music_note_note => {\n               \
    \     val music_note_note_length = music_note_note.toString.length\n         \
    \           val music_note_note_beats = music_note_note_length / 4\n         \
    \           val music_note_note_rest = music_note_note_length % 4\n          \
    \          val music_note_note_notes = music_note_note.toString.toCharArray.map(music_note_note_note\
    \ => {\n                        val music_note_note_note_length = music_note_note_note.toString.length\n\
    \                        val music_note_note_note_beats = music_note_note_note_length\
    \ / 4\n                        val music_note_note_note_rest = music_note_note_note_length\
    \ % 4\n                        val music_note_note_note_notes = music_note_note_note.toString.toCharArray.map(music_note_note_note_note\
    \ => {\n                            val music_note_note_note_note_length = music_note_note_note_note.toString.length\n\
    \                            val music_note_note_note_beats = music_note_note_note_note_length\
    \ / 4\n                            val music_note_note_note_note_rest = music_note_note_note_note_length\
    \ % 4\n                            val music_note_note_note_note_notes = music_note_note_note_note.toString.toCharArray.map(music_note_note_note_note_note\
    \ => {\n                                val music_note_note_note_note_note_length\
    \ = music_note_note_note_note_note.toString.length\n                         \
    \       val music_note_note_note_note_beats = music_note_note_note_note_note_length\
    \ / 4\n                                val music_note_note_note_note_note_rest\
    \ = music_note_note_note_note_note_length % 4\n                              \
    \  val music_note_note_note_note_notes = music_note_note_note_note_note.toString.toCharArray.map(music_note_note_note_note_note_note\
    \ => {\n                                    val music_note_note_note_note_note_note_length\
    \ = music_note_note_note_note_note_note.toString.length\n                    \
    \                val music_note_note_note_note_", "        music_string.split(\"\
    \ \").map(music_string => {\n            val music_note = music_string.substring(0,\
    \ 1)\n            val music_rest = music_string.substring(1, 2)\n            val\
    \ music_rest2 = music_string.substring(2, 3)\n            val music_rest3 = music_string.substring(3,\
    \ 4)\n            val music_rest4 = music_string.substring(4, 5)\n           \
    \ val music_rest5 = music_string.substring(5, 6)\n            val music_rest6\
    \ = music_string.substring(6, 7)\n            val music_rest7 = music_string.substring(7,\
    \ 8)\n            val music_rest8 = music_string.substring(8, 9)\n           \
    \ val music_rest9 = music_string.substring(9, 10)\n            val music_rest10\
    \ = music_string.substring(10, 11)\n            val music_rest11 = music_string.substring(11,\
    \ 12)\n            val music_rest12 = music_string.substring(12, 13)\n       \
    \     val music_rest13 = music_string.substring(13, 14)\n            val music_rest14\
    \ = music_string.substring(14, 15)\n            val music_rest15 = music_string.substring(15,\
    \ 16)\n            val music_rest16 = music_string.substring(16, 17)\n       \
    \     val music_rest17 = music_string.substring(17, 18)\n            val music_rest18\
    \ = music_string.substring(18, 19)\n            val music_rest19 = music_string.substring(19,\
    \ 20)\n            val music_rest20 = music_string.substring(20, 21)\n       \
    \     val music_rest21 = music_string.substring(21, 22)\n            val music_rest22\
    \ = music_string.substring(22, 23)\n            val music_rest23 = music_string.substring(23,\
    \ 24)\n            val music_rest24 = music_string.substring(24, 25)\n       \
    \     val music_rest25 = music_string.substring(25, 26)\n            val music_rest26\
    \ = music_string.substring(26, 27)\n            val music_rest27 = music_string.substring(27,\
    \ 28)\n            val music_rest28 = music_string.substring(28, 29)\n       \
    \     val music_rest29 = music_string.substring(29, 30)\n            val music_rest30\
    \ = music_string.substring(30, 31)\n            val music_rest31 = music_string.substring(31,\
    \ 32)\n            val music_rest32 = music_string.substring(32, 33)\n       \
    \     val music_rest33 = music_string.substring(33, 34)\n            val music_rest34\
    \ = music_string.substring(34, 35)\n            val music_rest35 = music_string.substring(35,\
    \ 36)", "        val music_list = music_string.split(\" \").map(_.toUpperCase()).filter(_.length\
    \ != 0).map(music_char => {\n            val music_char_list = music_char.split(\"\
    |\")\n            val music_note = music_char_list(0)\n            val music_length\
    \ = music_char_list.length\n            val music_last_beat = music_char_list.last\n\
    \            val music_last_beat_list = music_last_beat.toString.toList.map(_.toLong)\n\
    \            val music_last_beat_list = music_last_beat_list.take(music_length).toList\n\
    \            val music_last_beat_list = music_last_beat_list.map(_ + music_last_beat_list.last)\n\
    \            music_last_beat_list\n        }).toList\n        music_list.map(music_note\
    \ => music_note.sum)", "        music_string.split(\" \").map(music_string =>\
    \ {\n            val note = music_string.substring(0, 1)\n            val rest\
    \ = music_string.substring(1, music_string.length)\n            val beats = rest.split(\"\
    |\").map(rest => {\n                val beat = rest.substring(0, 1)\n        \
    \        val rest = rest.substring(1, rest.length)\n                beat.toLong\n\
    \            })\n            note.toLong :: beats\n        }).reduceLeft(_ ++\
    \ _)", "        music_string.split(\"\\\\|\").map(music_string => {\n        \
    \    val notes = music_string.split(\"\\\\ \").map(music_string => {\n       \
    \         val note = music_string.charAt(0)\n                val beats = music_string.substring(1).toInt\n\
    \                note -> beats\n            }).toMap\n            val note = notes.keys.toList.head\n\
    \            val beats = notes.get(note)\n            note -> beats\n        }).toList",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val rest = music_string.substring(1,\
    \ music_string.length)\n            val beats = rest.split(\"|\").map(music_string\
    \ => {\n                val beat = music_string.substring(0, 1)\n            \
    \    val rest = music_string.substring(1, music_string.length)\n             \
    \   beat.toLong\n            }).toList\n            note.toLong :: beats\n   \
    \     }).flatten.toList", "        val notes = music_string.split(\"\\\\|\")\n\
    \        val notes_count = notes.length\n        val notes_array = notes.map(_.toInt)\n\
    \        val notes_array_sorted = notes_array.sortBy(_)\n        val notes_array_reversed\
    \ = notes_array_sorted.reverse\n        val notes_array_sorted = notes_array_reversed.sortBy(_)\n\
    \        val notes_array_sorted = notes_array_sorted.reverse\n        val notes_array_sorted\
    \ = notes_array_sorted.filter(_ != 0)\n        val notes_array_sorted = notes_array_sorted.filter(_\
    \ != 1)\n        val notes_array_sorted = notes_array_sorted.filter(_ != 2)\n\
    \        val notes_array_sorted = notes_array_sorted.filter(_ != 3)\n        val\
    \ notes_array_sorted = notes_array_sorted.filter(_ != 4)\n        val notes_array_sorted\
    \ = notes_array_sorted.filter(_ != 5)\n        val notes_array_sorted = notes_array_sorted.filter(_\
    \ != 6)\n        val notes_array_sorted = notes_array_sorted.filter(_ != 7)\n\
    \        val notes_array_sorted = notes_array_sorted.filter(_ != 8)\n        val\
    \ notes_array_sorted = notes_array_sorted.filter(_ != 9)\n        val notes_array_sorted\
    \ = notes_array_sorted.filter(_ != 10)\n        val notes_array_sorted = notes_array_sorted.filter(_\
    \ != 11)\n        val notes_array_sorted = notes_array_sorted.filter(_ != 12)\n\
    \        val notes_array_sorted = notes_array_sorted.filter(_ != 13)\n       \
    \ val notes_array_sorted = notes_array_sorted.filter(_ != 14)\n        val notes_array_sorted\
    \ = notes_array_sorted.filter(_ != 15)\n        val notes_array_sorted = notes_array_sorted.filter(_\
    \ != 16)\n        val notes_array_sorted = notes_array_sorted.filter(_ != 17)\n\
    \        val notes_array_sorted = notes_array_sorted.filter(_ != 18)\n       \
    \ val notes_array_sorted = notes_array_sorted.filter(_ != 19)\n        val notes_array_sorted\
    \ = notes_array_sorted.filter(_ != 20)\n        val notes_array_sorted = notes_array_sorted.filter(_\
    \ != 21)\n        val notes_array_sorted = notes_array_sorted.filter(_ != 22)\n\
    \        val notes_array_sorted = notes_array_sorted.filter(_ != 23)\n       \
    \ val notes_array_sorted = notes_", "        music_string.split(\" \").map(music_string\
    \ => {\n            val note = music_string.substring(0, 1)\n            val rest\
    \ = music_string.substring(1, music_string.length)\n            val rest2 = rest.substring(0,\
    \ 1)\n            val rest3 = rest.substring(1, rest.length)\n            val\
    \ rest4 = rest.substring(1, rest.length)\n            val rest5 = rest.substring(1,\
    \ rest.length)\n            val rest6 = rest.substring(1, rest.length)\n     \
    \       val rest7 = rest.substring(1, rest.length)\n            val rest8 = rest.substring(1,\
    \ rest.length)\n            val rest9 = rest.substring(1, rest.length)\n     \
    \       val rest10 = rest.substring(1, rest.length)\n            val rest11 =\
    \ rest.substring(1, rest.length)\n            val rest12 = rest.substring(1, rest.length)\n\
    \            val rest13 = rest.substring(1, rest.length)\n            val rest14\
    \ = rest.substring(1, rest.length)\n            val rest15 = rest.substring(1,\
    \ rest.length)\n            val rest16 = rest.substring(1, rest.length)\n    \
    \        val rest17 = rest.substring(1, rest.length)\n            val rest18 =\
    \ rest.substring(1, rest.length)\n            val rest19 = rest.substring(1, rest.length)\n\
    \            val rest20 = rest.substring(1, rest.length)\n            val rest21\
    \ = rest.substring(1, rest.length)\n            val rest22 = rest.substring(1,\
    \ rest.length)\n            val rest23 = rest.substring(1, rest.length)\n    \
    \        val rest24 = rest.substring(1, rest.length)\n            val rest25 =\
    \ rest.substring(1, rest.length)\n            val rest26 = rest.substring(1, rest.length)\n\
    \            val rest27 = rest.substring(1, rest.length)\n            val rest28\
    \ = rest.substring(1, rest.length)\n            val rest29 = rest.substring(1,\
    \ rest.length)\n            val rest30 = rest.substring(1, rest.length)\n    \
    \        val rest31 = rest.substring(1, rest.length)\n            val rest32 =\
    \ rest.substring(1, rest.length)\n            val rest33 = rest.substring(1, rest.length)\n\
    \            val rest34 = rest.substring(1, rest.length)\n            val rest35\
    \ = rest.substring(1, rest.length)\n            val rest36 = rest.substring(1,\
    \ rest.length)\n            val rest37 = rest.substring(1, rest.length)\n    \
    \        val rest38 = rest.substring(1, rest.length)\n            val rest39 =\
    \ rest.substring(1, rest.length)\n            val rest40 = rest.substring(1, rest.length)\n\
    \            val rest41 = rest.substring(1, rest.length)\n            val rest4",
  "        val notes = music_string.split(\"\\\\|\")\n        val notes_length = notes.length\n\
    \        val notes_length_in_beats = notes_length / 4\n        val notes_length_in_beats_without_last\
    \ = notes_length_in_beats - 1\n        val notes_length_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last / 4\n        val notes_length_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last_in_beats_without_last / 4\n        val\
    \ notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats - 1\n  \
    \      val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ / 4\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ / 4\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_",
  "        music_string.split(\"\\\\|\").map(music_string => {\n            val music_notes\
    \ = music_string.split(\"\\\\ \").map(music_note => {\n                val note\
    \ = music_note.charAt(0).toLowerCase\n                val beats = music_note.substring(1).toInt\n\
    \                note match {\n                    case \"o\" => 4l.toLong\n \
    \                   case \"o|\" => 2l.toLong\n                    case \".|\"\
    \ => 1l.toLong\n                    case _ => 0l.toLong\n                }\n \
    \           }).toList\n            music_notes.foldLeft(0l.toLong) { (sum, note)\
    \ => sum + note }\n        }).filter(music_note => music_note != 0l.toLong).map(music_note\
    \ => music_note.toLong)", "        music_string.split(\" \").map(music_string\
    \ => {\n            val note = music_string.substring(0, 1)\n            val beats\
    \ = music_string.substring(1).split(\"|\").map(music_string => {\n           \
    \     val beat = music_string.substring(0, 1)\n                val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                    val rest = music_string.substring(0,\
    \ 1)\n                    val rest = music_string.substring(1).split(\".\").map(music_string\
    \ => {\n                        val rest = music_string.substring(0, 1)\n    \
    \                    val rest = music_string.substring(1).split(\"o\").map(music_string\
    \ => {\n                            val rest = music_string.substring(0, 1)\n\
    \                            val rest = music_string.substring(1).split(\"o\"\
    ).map(music_string => {\n                                val rest = music_string.substring(0,\
    \ 1)\n                                val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                    val rest = music_string.substring(0,\
    \ 1)\n                                    val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                        val rest =\
    \ music_string.substring(0, 1)\n                                        val rest\
    \ = music_string.substring(1).split(\"o\").map(music_string => {\n           \
    \                                 val rest = music_string.substring(0, 1)\n  \
    \                                          val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                val\
    \ rest = music_string.substring(0, 1)\n                                      \
    \          val rest = music_string.substring(1).split(\"o\").map(music_string\
    \ => {\n                                                    val rest = music_string.substring(0,\
    \ 1)\n                                                    val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \       val rest = music_string.substring(0, 1)\n                            \
    \                            val rest = music_string.substring(1).split(\"o\"\
    ).map(music_string => {\n                                                    \
    \        val rest = music_string.substring(0, 1)\n                           \
    \                                 val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \               val rest = music_string.substring(0, 1)\n                    \
    \                                            val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \                   val rest = music_string.substring(0, 1)\n                \
    \                                                    val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \                       val rest = music_string.substring(0, 1)\n            \
    \                                                            val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \                           val rest = music_string.substring(0, 1)\n        \
    \                                                                    val rest\
    \ = music_string.substring(1).split(\"o\").map(music_string => {\n           \
    \                                                                     val rest\
    \ = music_string.substring(0, 1)\n                                           \
    \                                     val rest = musi", "        music_string.split(\"\
    \\\\|\").map(music_string => {\n            val notes = music_string.split(\"\\\
    \\ \").map(music_string => {\n                val note = music_string.charAt(0).toLowerCase\n\
    \                val beats = music_string.substring(1).toInt\n               \
    \ note.toLong * beats\n            }).toList\n            notes.sum\n        }).toList",
  "        val music_list = music_string.split(\" \").map(_.toUpperCase)\n       \
    \ val notes = music_list.filter(x => x != \"O\" && x != \"|\")\n        val notes_count\
    \ = notes.map(x => if (x == \"O\") 4 else if (x == \"|\") 2 else 1)\n        val\
    \ notes_count_list = notes_count.toList\n        val notes_count_list_sorted =\
    \ notes_count_list.sortBy(x => x)\n        val notes_count_list_sorted_reversed\
    \ = notes_count_list_sorted.reverse\n        val notes_count_list_sorted_reversed_count\
    \ = notes_count_list_sorted_reversed.map(x => x.toLong)\n        val notes_count_list_sorted_reversed_count_sum\
    \ = notes_count_list_sorted_reversed_count.sum\n        val notes_count_list_sorted_reversed_count_count_sum\
    \ = notes_count_list_sorted_reversed_count_sum.toLong\n        val notes_count_list_sorted_reversed_count_count_count_sum\
    \ = notes_count_list_sorted_reversed_count_count_sum.toLong\n        val notes_count_list_sorted_reversed_count_count_count_sum\
    \ = (notes_count_list_sorted_reversed_count_count_sum - notes_count_list_sorted_reversed_count_sum).toLong\n\
    \        val notes_count_list_sorted_reversed_count_count_count_count_sum = (notes_count_list_sorted_reversed_count_count_count_sum\
    \ - notes_count_list_sorted_reversed_count_count_sum).toLong\n        val notes_count_list_sorted_reversed_count_count_count_count_count_sum\
    \ = (notes_count_list_sorted_reversed_count_count_count_count_sum - notes_count_list_sorted_reversed_count_count_count_sum).toLong\n\
    \        val notes_count_list_sorted_reversed_count_count_count_count_count_sum\
    \ = (notes_count_list_sorted_reversed_count_count_count_count_sum - notes_count_list_sorted_reversed_count_count_count_count_sum).toLong\n\
    \        val notes_count_list_sorted_reversed_count_count_count_count_count_count_sum\
    \ = (notes_count_list_sorted_reversed_count_count_count_count_count_sum - notes_count_list_sorted_reversed_count_count_count_count_sum).toLong\n\
    \        val notes_count_list_sorted_reversed_count_count_count_count_count_count_count_sum\
    \ = (notes_count_list_sorted_reversed_count_count_count_count_count_count_sum\
    \ - notes_count_list_sorted_reversed_count_count_count_count_count_sum).toLong\n\
    \        val notes_count_list_sorted_reversed_count_count_count_count_count_count_count_sum\
    \ = (notes_count_list_sorted_reversed_count_count_count_count_count_count_sum\
    \ - notes_count_list_sorted_reversed_count_count_count_count_count_count_sum).toLong\n",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val rest = music_string.substring(1,\
    \ music_string.length)\n            val beats = rest.split(\"|\").map(rest =>\
    \ {\n                val beat = rest.substring(0, 1)\n                val rest\
    \ = rest.substring(1, rest.length)\n                val rest = rest.toLong\n \
    \               beat.toLong * rest\n            }).sum\n            note.toLong\
    \ * beats\n        }).sum", "        music_string.split(\" \").map(music_string\
    \ => {\n            val music_note = music_string.substring(0, 1)\n          \
    \  val music_rest = music_string.substring(1)\n            val music_note_length\
    \ = music_rest.split(\"|\").map(music_rest => {\n                val music_rest_length\
    \ = music_rest.split(\"o\").map(music_rest => {\n                    val music_rest_note\
    \ = music_rest.substring(0, 1)\n                    val music_rest_rest = music_rest.substring(1)\n\
    \                    val music_rest_note_length = music_rest_rest.split(\"|\"\
    ).map(music_rest_rest => {\n                        val music_rest_rest_length\
    \ = music_rest_rest.split(\"o\").map(music_rest_rest => {\n                  \
    \          val music_rest_rest_note = music_rest_rest.substring(0, 1)\n      \
    \                      val music_rest_rest_rest = music_rest_rest.substring(1)\n\
    \                            val music_rest_rest_note_length = music_rest_rest_rest.split(\"\
    |\").map(music_rest_rest_rest => {\n                                val music_rest_rest_rest_length\
    \ = music_rest_rest_rest.split(\"o\").map(music_rest_rest_rest => {\n        \
    \                            val music_rest_rest_rest_note = music_rest_rest_rest.substring(0,\
    \ 1)\n                                    val music_rest_rest_rest_rest = music_rest_rest_rest.substring(1)\n\
    \                                    val music_rest_rest_rest_note_length = music_rest_rest_rest_rest.split(\"\
    |\").map(music_rest_rest_rest_rest => {\n                                    \
    \    val music_rest_rest_rest_rest_length = music_rest_rest_rest_rest.split(\"\
    o\").map(music_rest_rest_rest_rest => {\n                                    \
    \        val music_rest_rest_rest_rest_note = music_rest_rest_rest_rest.substring(0,\
    \ 1)\n                                            val music_rest_rest_rest_rest_rest\
    \ = music_rest_rest_rest_rest.substring(1)\n                                 \
    \           val music_rest_rest_rest_rest_note_length = music_rest_rest_rest_rest_note.split(\"\
    |\").map(music_rest_rest_rest_rest_rest => {\n                               \
    \                 val music_rest_rest_rest_rest_rest_note_length = music_rest_rest_rest_rest_note.split(\"\
    o\").map(music_rest_rest_rest_rest_rest_note => {\n                          \
    \                          val music_rest_rest_rest_rest_rest_note_length = music_rest_rest_rest_rest_note_length.split(\"\
    |\").map(music_rest_rest_rest_rest_rest_note_length => {\n                   \
    \                                     val music_rest_rest_rest_rest_rest_note_length\
    \ = music_rest_rest_rest_rest_note_length.split(\"o\").map(music_rest_rest_rest_rest_rest_note_length\
    \ => {\n                                                            val music_rest_rest_rest_rest_rest_note_length\
    \ = music_rest_rest_rest_rest_note_length.split(\"|\").map(music_rest_rest_rest_rest_rest_note_length\
    \ => {\n                                                                ", " \
    \       val music_list = music_string.split(\" \").map(music_string => music_string.charAt(0).toInt)\n\
    \        val music_list_size = music_list.size\n        val music_list_size_half\
    \ = music_list_size / 2\n        val music_list_size_quarter = music_list_size\
    \ / 4\n        val music_list_size_whole = music_list_size / 4\n        val music_list_size_whole_half\
    \ = music_list_size_whole / 2\n        val music_list_size_whole_quarter = music_list_size_whole\
    \ / 4\n        val music_list_size_whole_whole = music_list_size_whole / 8\n \
    \       val music_list_size_whole_whole_half = music_list_size_whole_whole / 2\n\
    \        val music_list_size_whole_whole_quarter = music_list_size_whole_whole\
    \ / 4\n        val music_list_size_whole_whole_whole = music_list_size_whole_whole\
    \ / 8\n        val music_list_size_whole_whole_whole_half = music_list_size_whole_whole_whole\
    \ / 4\n        val music_list_size_whole_whole_whole_quarter = music_list_size_whole_whole_whole\
    \ / 8\n        val music_list_size_whole_whole_whole_whole = music_list_size_whole_whole_whole\
    \ / 16\n        val music_list_size_whole_whole_whole_whole_half = music_list_size_whole_whole_whole_whole\
    \ / 8\n        val music_list_size_whole_whole_whole_whole_quarter = music_list_size_whole_whole_whole_whole\
    \ / 16\n        val music_list_size_whole_whole_whole_whole_whole = music_list_size_whole_whole_whole_whole\
    \ / 32\n        val music_list_size_whole_whole_whole_whole_half = music_list_size_whole_whole_whole_whole\
    \ / 16\n        val music_list_size_whole_whole_whole_whole_quarter = music_list_size_whole_whole_whole_whole\
    \ / 32\n        val music_list_size_whole_whole_whole_whole_whole = music_list_size_whole_whole_whole_whole\
    \ / 64\n        val music_list_size_whole_whole_whole_whole_half = music_list_size_whole_whole_whole_whole\
    \ / 32\n        val music_list_size_whole_whole_whole_whole_quarter = music_list_size_",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val beats = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                val beat = music_string.substring(0,\
    \ 1)\n                val rest = music_string.substring(1)\n                beat.toLong\
    \ * 4\n            }).sum\n            note.toLong * beats\n        }).sum", " \
    \       music_string.split(\"\\\\|\").map(music_string => {\n            val notes\
    \ = music_string.split(\"\\\\ \").map(music_string => {\n                val note\
    \ = music_string.charAt(0).toLowerCase\n                val beats = music_string.substring(1).toLong\n\
    \                beats\n            })\n            notes.foldLeft(0l.toLong)((acc,\
    \ note) => acc + note)\n        }).toList", "        val music_list = music_string.split(\"\
    \ \").map(x => x.toUpperCase()).filter(x => x != \"O\" && x != \".\")\n      \
    \  val note_count = music_list.size\n        val note_list = music_list.map(x\
    \ => x.toInt)\n        val note_counts = note_list.groupBy(x => x).map(x => (x._1,\
    \ x._2.size)).toMap\n        val note_counts_sorted = note_counts.sortBy(x =>\
    \ x._2).reverse\n        val note_counts_sorted_keys = note_counts_sorted.keys\n\
    \        val note_counts_sorted_values = note_counts_sorted.values\n        val\
    \ note_counts_sorted_keys_sorted = note_counts_sorted_keys.sortBy(x => x)\n  \
    \      val note_counts_sorted_keys_sorted_values = note_counts_sorted_keys_sorted.map(x\
    \ => note_counts_sorted_values.indexOf(x))\n        val note_counts_sorted_keys_sorted_values_sorted\
    \ = note_counts_sorted_keys_sorted_values.sortBy(x => x)\n        val note_counts_sorted_keys_sorted_values_sorted_values\
    \ = note_counts_sorted_keys_sorted_values_sorted.map(x => note_counts_sorted_values.indexOf(x))\n\
    \        val note_counts_sorted_keys_sorted_values_sorted_values_sorted = note_counts_sorted_keys_sorted_values_sorted_values.sortBy(x\
    \ => x)\n        val note_counts_sorted_keys_sorted_values_sorted_values_sorted_values\
    \ = note_counts_sorted_keys_sorted_values_sorted_values.map(x => note_counts_sorted_values.indexOf(x))\n\
    \        val note_counts_sorted_keys_sorted_values_sorted_values_sorted_values_sorted\
    \ = note_counts_sorted_keys_sorted_values_sorted_values_sorted_values.sortBy(x\
    \ => x)\n        val note_counts_sorted_keys_sorted_values_sorted_values_sorted_values_sorted_values\
    \ = note_counts_sorted_keys_sorted_values_sorted_values_sorted_values.map(x =>\
    \ note_counts_sorted_values.indexOf(x))\n        val note_counts_sorted_keys_sorted_values_sorted_values_sorted_values_sorted_values_sorted\
    \ = note_counts_sorted_keys_sorted_values_sorted_values_sorted_values_sorted.map(x\
    \ => note_counts_sorted_values.indexOf(x))\n        val note_counts_sorted_keys_sorted_values_sorted_values_sorted_values_sorted_values_sorted_values\
    \ = note_counts_sorted_keys_sorted_values_sorted_values_sorted_values_sorted_values.map(x\
    \ => note_counts_sorted_values.indexOf(x))\n        val note_counts_sorted_keys_sorted_values_sorted_values_sorted_values_sorted_values_sorted_values_sorted\
    \ = note_counts_sorted_keys_sorted_values_sorted_values_sorted_values_sorted_values_sorted_values.map(x\
    \ => note_counts_sorted_values.indexOf(x))\n        val note_counts_sorted_keys_sorted_values_sorted_values_sorted_values_sorted_values_sorted_values_sorted_values_sorted\
    \ = note_counts_sorted_keys_", "        val music_list = music_string.split(\"\
    \ \")\n        val music_length = music_list.length\n        val music_beats =\
    \ music_list.map(music_string => music_string.split(\"|\").length.toLong)\n  \
    \      val music_beats_sum = music_beats.sum\n        val music_beats_count =\
    \ music_beats.length\n        val music_beats_count_sum = music_beats_count.sum\n\
    \        val music_beats_count_count_sum = music_beats_count_sum.sum\n       \
    \ val music_beats_count_count_count_sum = music_beats_count_count_sum.sum\n  \
    \      val music_beats_count_count_count_count_sum = music_beats_count_count_count_sum.sum\n\
    \        val music_beats_count_count_count_count_count_sum = music_beats_count_count_count_count_sum.sum\n\
    \        val music_beats_count_count_count_count_count_count_sum = music_beats_count_count_count_count_count_sum.sum\n\
    \        val music_beats_count_count_count_count_count_count_count_sum = music_beats_count_count_count_count_count_count_sum.sum\n\
    \        val music_beats_count_count_count_count_count_count_count_count_sum =\
    \ music_beats_count_count_count_count_count_count_count_count_sum.sum\n      \
    \  val music_beats_count_count_count_count_count_count_count_count_count_sum =\
    \ music_beats_count_count_count_count_count_count_count_count_count_count_sum.sum\n\
    \        val music_beats_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = music_beats_count_count_count_count_count_count_count_count_count_count_count_sum.sum\n\
    \        val music_beats_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = music_beats_count_count_count_count_count_count_count_count_count_count_count_sum.sum\n\
    \        val music_beats_count_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = music_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_sum.sum\n\
    \        val music_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = music_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_count_sum.sum\n\
    \        val music_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = music_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_sum.sum\n\
    \        val music_beats_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = music_beat", "        music_string.split(\" \").map(music_string => {\n  \
    \          val note = music_string.substring(0, 1)\n            val rest = music_string.substring(1,\
    \ music_string.length)\n            val beats = rest.split(\"|\").map(music_string\
    \ => {\n                val beat = music_string.substring(0, 1)\n            \
    \    val rest = music_string.substring(1, music_string.length)\n             \
    \   beat.toLong\n            }).sum\n            note.toLong * beats\n       \
    \ }).sum", "        val music_notes = music_string.split(\"\\\\|\")\n        val\
    \ music_notes_length = music_notes.length\n        val music_notes_beats = music_notes.map(music_note\
    \ => music_note.length.toLong)\n        val music_notes_beats_length = music_notes_beats.length\n\
    \        val music_notes_beats_sum = music_notes_beats.sum\n        val music_notes_beats_sum_length\
    \ = music_notes_beats_sum.length\n        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = music_notes_beats_sum_length.toLong\n\
    \        val music_notes_beats_sum_length = ", "        val music_list = music_string.split(\"\
    \ \")\n        val music_list_size = music_list.size\n        val music_list_beats\
    \ = music_list_size / 4\n        val music_list_beats_size = music_list_beats\
    \ * 4\n        val music_list_beats_size = music_list_beats_size.toInt\n     \
    \   val music_list_beats_size = music_list_beats_size * 4\n        val music_list_beats_size\
    \ = music_list_beats_size.toInt\n        val music_list_beats_size = music_list_beats_size\
    \ * 4\n        val music_list_beats_size = music_list_beats_size.toInt\n     \
    \   val music_list_beats_size = music_list_beats_size * 4\n        val music_list_beats_size\
    \ = music_list_beats_size.toInt\n        val music_list_beats_size = music_list_beats_size\
    \ * 4\n        val music_list_beats_size = music_list_beats_size.toInt\n     \
    \   val music_list_beats_size = music_list_beats_size * 4\n        val music_list_beats_size\
    \ = music_list_beats_size.toInt\n        val music_list_beats_size = music_list_beats_size\
    \ * 4\n        val music_list_beats_size = music_list_beats_size.toInt\n     \
    \   val music_list_beats_size = music_list_beats_size * 4\n        val music_list_beats_size\
    \ = music_list_beats_size.toInt\n        val music_list_beats_size = music_list_beats_size\
    \ * 4\n        val music_list_beats_size = music_list_beats_size.toInt\n     \
    \   val music_list_beats_size = music_list_beats_size * 4\n        val music_list_beats_size\
    \ = music_list_beats_size.toInt\n        val music_list_beats_size = music_list_beats_size\
    \ * 4\n        val music_list_beats_size = music_list_beats_size.toInt\n     \
    \   val music_list_beats_size = music_list_beats_size * 4\n        val music_list_beats_size\
    \ = music_list_beats_size.toInt\n        val music_list_beats_size = music_list_beats_size\
    \ * 4\n        val music_list_beats_size = music_list_beats_size.toInt\n     \
    \   val music_list_beats_size = music_list_beats_size * 4\n        val music_list_beats_size\
    \ = music_list_beats_size.toInt\n        val music_list_beats_size = music_list_beats_size\
    \ * 4\n        ", "        music_string.split(\" \").map(music_string => {\n \
    \           val note = music_string.substring(0, 1)\n            val beats = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                val beat = music_string.substring(0,\
    \ 1)\n                val rest = music_string.substring(1)\n                beat.asInstanceOf[String].toLong\
    \ * 4\n            }).sum\n            note.asInstanceOf[String].toLong * beats\n\
    \        }).sum", "        val music_list = music_string.split(\" \").map(_.toUpperCase()).filter(_.length>1).map(_.toInt).toList\n\
    \        val beats = music_list.foldLeft(List[Long]())((acc, note) => {\n    \
    \        val note_index = music_list.indexOf(note)\n            val last_beat\
    \ = music_list.takeRight(note_index).foldLeft(0l){(acc, note) =>\n           \
    \     acc + (if (note.equals(\".\") || note.equals(\"|\")) 1 else 0)\n       \
    \     }\n            acc :+ last_beat\n        })\n        beats.reverse", " \
    \       val notes = music_string.split(\" \").map(_.toUpperCase()).filter(_.length\
    \ == 1).map(x => x.toInt)\n        val notes_length = notes.length\n        val\
    \ notes_beats = notes.map(x => x/notes_length).sum\n        val notes_rest = notes.map(x\
    \ => x - notes_beats*notes_length).sum\n        val notes_rests = notes_rest.map(x\
    \ => x/notes_length).sum\n        val notes_rests_length = notes_rests.length\n\
    \        val notes_rests_beats = notes_rests.map(x => x/notes_rests_length).sum\n\
    \        val notes_rests_rest = notes_rests.map(x => x - notes_rests_beats*notes_rests_length).sum\n\
    \        val notes_rests_rests = notes_rests_rest.map(x => x/notes_rests_length).sum\n\
    \        val notes_rests_rests_length = notes_rests_rests.length\n        val\
    \ notes_rests_rests_beats = notes_rests_rests.map(x => x/notes_rests_rests_length).sum\n\
    \        val notes_rests_rests_rest = notes_rests_rests.map(x => x - notes_rests_rests_beats*notes_rests_rests_length).sum\n\
    \        val notes_rests_rests_rests = notes_rests_rests_rest.map(x => x/notes_rests_rests_length).sum\n\
    \        val notes_rests_rests_rests_length = notes_rests_rests_rests.length\n\
    \        val notes_rests_rests_rests_beats = notes_rests_rests_rests.map(x =>\
    \ x/notes_rests_rests_rests_length).sum\n        val notes_rests_rests_rests_rest\
    \ = notes_rests_rests_rests.map(x => x - notes_rests_rests_rests_beats*notes_rests_rests_rests_length).sum\n\
    \        val notes_rests_rests_rests_rests = notes_rests_rests_rests_rest.map(x\
    \ => x/notes_rests_rests_rests_length).sum\n        val notes_rests_rests_rests_rests_length\
    \ = notes_rests_rests_rests_rests.length\n        val notes_rests_rests_rests_rests_beats\
    \ = notes_rests_rests_rests_rests.map(x => x/notes_rests_rests_rests_rests_length).sum\n\
    \        val notes_rests_", "        val music_list = music_string.split(\" \"\
    ).map(_.toUpperCase).toList\n        val music_notes = music_list.filter(_ !=\
    \ \"O\")\n        val music_notes_length = music_notes.length\n        val music_notes_beats\
    \ = music_notes.map(music_notes_length.toLong)\n        val music_notes_beats_sum\
    \ = music_notes_beats.sum\n        val music_notes_beats_count = music_notes_beats.length\n\
    \        val music_notes_beats_count_sum = music_notes_beats_count.sum\n     \
    \   val music_notes_beats_count_count_sum = music_notes_beats_count_sum.toLong\n\
    \        val music_notes_beats_count_count_count_sum = music_notes_beats_count_count_sum.toLong\n\
    \        val music_notes_beats_count_count_count_count_sum = music_notes_beats_count_count_count_sum.toLong\n\
    \        val music_notes_beats_count_count_count_count_count_sum = music_notes_beats_count_count_count_count_sum.toLong\n\
    \        val music_notes_beats_count_count_count_count_count_count_sum = music_notes_beats_count_count_count_count_count_sum.toLong\n\
    \        val music_notes_beats_count_count_count_count_count_count_count_sum =\
    \ music_notes_beats_count_count_count_count_count_count_sum.toLong\n        val\
    \ music_notes_beats_count_count_count_count_count_count_count_count_count_sum\
    \ = music_notes_beats_count_count_count_count_count_count_count_count_sum.toLong\n\
    \        val music_notes_beats_count_count_count_count_count_count_count_count_count_sum\
    \ = music_notes_beats_count_count_count_count_count_count_count_count_sum.toLong\n\
    \        val music_notes_beats_count_count_count_count_count_count_count_count_count_count_sum\
    \ = music_notes_beats_count_count_count_count_count_count_count_count_count_count_sum.toLong\n\
    \        val music_notes_beats_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = music_notes_beats_count_count_count_count_count_count_count_count_count_count_count_sum.toLong\n\
    \        val music_notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = music_notes_beats_count_count_count_count_count_count_count_count_count_count_count_sum.toLong\n\
    \        val music_notes_beats_count_count_count_count_count_count_count_count_count_count_count_count_sum\
    \ = music_notes_beats_count_count_count_count_count_count_count_count_count_count_",
  "        val music_list = music_string.split(\" \").map(_.toUpperCase).filter(_.length\
    \ == 1).map(x => x.toInt).toList\n        val notes = music_list.filter(_ % 2\
    \ == 0).map(x => x/4)\n        val rests = music_list.filter(_ % 2 == 1).map(x\
    \ => x/2)\n        val notes_rests = notes ++ rests\n        val notes_rests_count\
    \ = notes_rests.map(x => music_list.count(_ == x))\n        val notes_rests_count_sum\
    \ = notes_rests_count.sum\n        val notes_rests_count_average = notes_rests_count_sum\
    \ / notes_rests_count.length\n        val notes_rests_count_average = notes_rests_count_average.toLong\n\
    \        val notes_rests_count_average = notes_rests_count_average.toInt\n   \
    \     val notes_rests_count_average = notes_rests_count_average.toInt\n      \
    \  val notes_rests_count_average = notes_rests_count_average.toInt\n        val\
    \ notes_rests_count_average = notes_rests_count_average.toInt\n        val notes_rests_count_average\
    \ = notes_rests_count_average.toInt\n        val notes_rests_count_average = notes_rests_count_average.toInt\n\
    \        val notes_rests_count_average = notes_rests_count_average.toInt\n   \
    \     val notes_rests_count_average = notes_rests_count_average.toInt\n      \
    \  val notes_rests_count_average = notes_rests_count_average.toInt\n        val\
    \ notes_rests_count_average = notes_rests_count_average.toInt\n        val notes_rests_count_average\
    \ = notes_rests_count_average.toInt\n        val notes_rests_count_average = notes_rests_count_average.toInt\n\
    \        val notes_rests_count_average = notes_rests_count_average.toInt\n   \
    \     val notes_rests_count_average = notes_rests_count_average.toInt\n      \
    \  val notes_rests_count_average = notes_rests_count_average.toInt\n        val\
    \ notes_rests_count_average = notes_rests_count_average.toInt\n        val notes_rests_count_average\
    \ = notes_rests_count_average.toInt\n        val notes_rests_count_average = notes_rests_count_average.toInt\n\
    \        val notes_rests_count_average = notes_rests_count_average.toInt\n   \
    \     val notes_rests_count_average = notes_rests_count_", "        val music_list\
    \ = music_string.split(\" \").map(_.toUpperCase).filter(_.length == 1).map(music_char\
    \ => {\n            val music_char = music_char.toChar\n            val music_char_index\
    \ = music_string.indexOf(music_char)\n            val music_char_length = music_string.length\
    \ - music_char_index\n            val music_char_beats = music_char_length / 4\n\
    \            val music_char_beats_remainder = music_char_length % 4\n        \
    \    val music_char_beats_remainder_multiplier = if (music_char_beats_remainder\
    \ == 0) 1 else 2\n            val music_char_beats_remainder_multiplier_multiplier\
    \ = if (music_char_beats_remainder == 0) 1 else 4\n            val music_char_beats_multiplier\
    \ = music_char_beats_remainder_multiplier * music_char_beats_remainder_multiplier_multiplier\n\
    \            val music_char_beats_multiplier_multiplier = music_char_beats_remainder_multiplier\
    \ * music_char_beats_remainder_multiplier_multiplier\n            val music_char_beats_multiplier_multiplier_multiplier\
    \ = music_char_beats_remainder_multiplier * music_char_beats_remainder_multiplier_multiplier_multiplier\n\
    \            val music_char_beats_multiplier_multiplier_multiplier_multiplier\
    \ = music_char_beats_remainder_multiplier * music_char_beats_remainder_multiplier_multiplier_multiplier_multiplier\n\
    \            val music_char_beats_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = music_char_beats_remainder_multiplier * music_char_beats_remainder_multiplier_multiplier_multiplier_multiplier_multiplier\n\
    \            val music_char_beats_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = music_char_beats_remainder_multiplier * music_char_beats_remainder_multiplier_multiplier_multiplier_multiplier_multiplier\n\
    \            val music_char_beats_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = music_char_beats_remainder_multiplier * music_char_beats_remainder_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\n\
    \            val music_char_beats_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = music_char_beats_remainder_multiplier * music_char_beats_remainder_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\n\
    \            val music_char_beats_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = music_char_beats_remainder_multiplier * music_char_beats_remainder_", "  \
    \      val music_list = music_string.split(\"\\\\|\")\n        val music_list_size\
    \ = music_list.size\n        val music_list_size_str = music_list_size.toString\n\
    \        val music_list_size_int = music_list_size_str.asInstanceOf[Int]\n   \
    \     val music_list_size_long = music_list_size_int.toLong\n        val music_list_size_long2\
    \ = music_list_size_long * 2\n        val music_list_size_long3 = music_list_size_long2\
    \ * 2\n        val music_list_size_long4 = music_list_size_long3 * 2\n       \
    \ val music_list_size_long5 = music_list_size_long4 * 2\n        val music_list_size_long6\
    \ = music_list_size_long5 * 2\n        val music_list_size_long7 = music_list_size_long6\
    \ * 2\n        val music_list_size_long8 = music_list_size_long7 * 2\n       \
    \ val music_list_size_long9 = music_list_size_long8 * 2\n        val music_list_size_long10\
    \ = music_list_size_long9 * 2\n        val music_list_size_long11 = music_list_size_long10\
    \ * 2\n        val music_list_size_long12 = music_list_size_long11 * 2\n     \
    \   val music_list_size_long13 = music_list_size_long12 * 2\n        val music_list_size_long14\
    \ = music_list_size_long13 * 2\n        val music_list_size_long15 = music_list_size_long14\
    \ * 2\n        val music_list_size_long16 = music_list_size_long15 * 2\n     \
    \   val music_list_size_long17 = music_list_size_long16 * 2\n        val music_list_size_long18\
    \ = music_list_size_long17 * 2\n        val music_list_size_long19 = music_list_size_long18\
    \ * 2\n        val music_list_size_long20 = music_list_size_long19 * 2\n     \
    \   val music_list_size_long21 = music_list_size_long20 * 2\n        val music_list_size_long22\
    \ = music_list_size_long21 * 2\n        val music_list_size_long23 = music_list_size_long22\
    \ * 2\n        val music_list_size_long24 = music_list_size_long23 * 2\n     \
    \   val music_list_size_long25 = music_list_size_long24 * 2\n        val music_list_size_long26\
    \ = music_list_size_long25 * 2\n        val music_list_size_long27", "       \
    \ music_string.split(\" \").map(music_string => {\n            val note = music_string.substring(0,\
    \ 1)\n            val beats = music_string.substring(1).split(\"|\").map(_.toInt)\n\
    \            beats.sum\n        }).toList", "        val music_list = music_string.split(\"\
    \\\\|\")\n        val music_list_size = music_list.size\n        val music_list_size_int\
    \ = music_list_size.toInt\n        val music_list_size_long = music_list_size_int.toLong\n\
    \        val music_list_size_long_int = music_list_size_long.toInt\n        val\
    \ music_list_size_long_long = music_list_size_long_int.toLong\n        val music_list_size_long_long_int\
    \ = music_list_size_long_long.toInt\n        val music_list_size_long_long_long\
    \ = music_list_size_long_long_int.toLong\n        val music_list_size_long_long_long_int\
    \ = music_list_size_long_long_long.toInt\n        val music_list_size_long_long_long_long\
    \ = music_list_size_long_long_long_int.toLong\n        val music_list_size_long_long_long_long_int\
    \ = music_list_size_long_long_long_long.toInt\n        val music_list_size_long_long_long_long_long\
    \ = music_list_size_long_long_long_long_int.toLong\n        val music_list_size_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long.toInt\n        val music_list_size_long_long_long_long_long_long\
    \ = music_list_size_long_long_long_long_long_int.toLong\n        val music_list_size_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long.toInt\n        val music_list_size_long_long_long_long_long_long\
    \ = music_list_size_long_long_long_long_long_long_int.toLong\n        val music_list_size_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long.toInt\n        val music_list_size_long_long_long_long_long_long_long\
    \ = music_list_size_long_long_long_long_long_long_long_int.toLong\n        val\
    \ music_list_size_long_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_long_long_long.toInt\n\
    \        val music_list_size_long_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_long_long_long_long.toInt\n\
    \        val music_list_size_long_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_long_long_long_int.toLong\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_long_long_long_long_int.toLong\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_int = music_list_",
  "        val notes = music_string.split(\"\\\\|\")\n        val notes_length = notes.length\n\
    \        val notes_length_in_beats = notes_length / 4\n        val notes_length_in_beats_without_last\
    \ = notes_length_in_beats - 1\n        val notes_length_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last / 4\n        val notes_length_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last_in_beats_without_last / 4\n        val\
    \ notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats - 1\n  \
    \      val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ / 4\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ / 4\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats\
    \ - 1\n        val notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last\
    \ = notes_length_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_beats_without_last_in_",
  "        val music_list = music_string.split(\" \").map(_.toUpperCase()).filter(_.length>0).map(music_char\
    \ => {\n            val music_char = music_char.toLowerCase // convert char to\
    \ lower case\n            val music_note = music_char match {\n              \
    \  case \"o\" => 1\n                case \"o|\" => 2\n                case \"\
    .|\" => 4\n                case _ => 0\n            }\n            music_note\n\
    \        }).toList\n        val music_beats = music_list.map(music_note => {\n\
    \            val music_beat = music_note / 4\n            music_beat\n       \
    \ }).distinct\n        val music_beats_count = music_beats.map(music_beat => {\n\
    \            music_beat * 4\n        }).distinct\n        val music_beats_count_list\
    \ = music_beats_count.toList\n        music_beats_count_list", "        val music_list\
    \ = music_string.split(\" \").map(_.toUpperCase()).filter(_.nonEmpty).toList\n\
    \        val notes = music_list.map(music_note => {\n            val note = music_note.split(\"\
    |\").map(_.toUpperCase()).filter(_.nonEmpty).getOrElse(\"o\")\n            val\
    \ beats = music_note.split(\"o\").map(_.toUpperCase()).filter(_.nonEmpty).getOrElse(\"\
    4\").toLong\n            beats * note.length\n        }).toList\n        notes.sortBy(-_)",
  "        music_string.split(\" \").map(music_string => {\n            val music_notes\
    \ = music_string.split(\"|\").map(music_note => {\n                val music_notes\
    \ = music_note.split(\"o\").map(music_note => {\n                    val music_notes\
    \ = music_note.split(\".\").map(music_note => {\n                        val music_notes\
    \ = music_note.split(\"|\").map(music_note => {\n                            val\
    \ music_notes = music_note.split(\"o\").map(music_note => {\n                \
    \                val music_notes = music_note.split(\".\").map(music_note => {\n\
    \                                    val music_notes = music_note.split(\"|\"\
    ).map(music_note => {\n                                        val music_notes\
    \ = music_note.split(\"o\").map(music_note => {\n                            \
    \                val music_notes = music_note.split(\".\").map(music_note => {\n\
    \                                                val music_notes = music_note.split(\"\
    |\").map(music_note => {\n                                                   \
    \ val music_notes = music_note.split(\"o\").map(music_note => {\n            \
    \                                            val music_notes = music_note.split(\"\
    .\").map(music_note => {\n                                                   \
    \         val music_notes = music_note.split(\"|\").map(music_note => {\n    \
    \                                                            val music_notes =\
    \ music_note.split(\"o\").map(music_note => {\n                              \
    \                                      val music_notes = music_note.split(\".\"\
    ).map(music_note => {\n                                                      \
    \                  val music_notes = music_note.split(\"|\").map(music_note =>\
    \ {\n                                                                        \
    \    val music_notes = music_note.split(\"o\").map(music_note => {\n         \
    \                                                                       val music_notes\
    \ = music_note.split(\".\").map(music_note => {\n                            \
    \                                                        val music_notes = music_note.split(\"\
    |\").map(music_note => {\n                                                   \
    \                                     val music_notes = music_note.split(\"o\"\
    ).map(music_note => {\n                                                      \
    \                                      val music_notes = music_note.split(\".\"\
    ).map(music_note => {\n                                                      \
    \                                          val music_notes = music_note.split(\"\
    |\").map(music_note => {\n                                                   \
    \                                                 val music_notes = music_note.split(\"\
    o\").map(music_note => {\n                                                   \
    \                                                     val music_notes = music_note.split(\"\
    .\").map(music_note => {\n                                                   \
    \                                                         val music_notes = music_note.split(\"\
    |\").map(music_note => {\n                                                   \
    \                                                             val music_notes\
    \ = music_note.split(\"o\").", "        music_string.split(\" \").map(music_string\
    \ => {\n            val note = music_string.substring(0, 1)\n            val rest\
    \ = music_string.substring(1, music_string.length)\n            val beats = rest.split(\"\
    |\").map(rest => {\n                val beat = rest.substring(0, 1)\n        \
    \        val rest = rest.substring(1, rest.length)\n                val rest2\
    \ = rest.split(\"|\").map(rest => {\n                    val rest3 = rest.substring(0,\
    \ 1)\n                    val rest4 = rest.substring(1, rest.length)\n       \
    \             val rest5 = rest.split(\"|\").map(rest => {\n                  \
    \      val rest6 = rest.substring(0, 1)\n                        val rest7 = rest.substring(1,\
    \ rest.length)\n                        val rest8 = rest.split(\"|\").map(rest\
    \ => {\n                            val rest9 = rest.substring(0, 1)\n       \
    \                     val rest10 = rest.substring(1, rest.length)\n          \
    \                  val rest11 = rest.split(\"|\").map(rest => {\n            \
    \                    val rest12 = rest.substring(0, 1)\n                     \
    \           val rest13 = rest.substring(1, rest.length)\n                    \
    \            val rest14 = rest.split(\"|\").map(rest => {\n                  \
    \                  val rest15 = rest.substring(0, 1)\n                       \
    \             val rest16 = rest.substring(1, rest.length)\n                  \
    \                  val rest17 = rest.split(\"|\").map(rest => {\n            \
    \                            val rest18 = rest.substring(0, 1)\n             \
    \                           val rest19 = rest.substring(1, rest.length)\n    \
    \                                    val rest20 = rest.split(\"|\").map(rest =>\
    \ {\n                                            val rest21 = rest.substring(0,\
    \ 1)\n                                            val rest22 = rest.substring(1,\
    \ rest.length)\n                                            val rest23 = rest.split(\"\
    |\").map(rest => {\n                                                val rest24\
    \ = rest.substring(0, 1)\n                                                val\
    \ rest25 = rest.substring(1, rest.length)\n                                  \
    \              val rest26 = rest.split(\"|\").map(rest => {\n                \
    \                                    val rest27 = rest.substring(0, 1)\n     \
    \                                               val rest28 = rest.substring(1,\
    \ rest.length)\n                                                    val rest29\
    \ = rest.split(\"|\").map(rest => {\n                                        \
    \                val rest30 = rest.substring(0, 1)\n                         \
    \                               val rest31 = rest.substring(1, rest.length)\n\
    \                                                        val rest32 = rest.split(\"\
    |\").map(rest => {\n                                                         \
    \   val rest33 = rest.substring(0, 1)\n                                      \
    \                      val rest34 = rest.substring(1, rest.length)\n         \
    \                                                   val rest35 = rest.split(\"\
    |\").map(rest => {\n                                                         \
    \       val rest36 = rest.substring(0, 1)\n                                  \
    \                              val rest37 = rest.substring(1, rest.length)\n \
    \                                                               val rest38 = rest.split(\"\
    |\").map(rest => {\n                                                         \
    \           val rest39 = rest.substring(0, 1)\n                              \
    \                                      val rest40 = rest.substring(1, rest.length)\n\
    \                                                                    val rest41\
    \ = ", "        music_string.split(\" \").map(music_string => {\n            val\
    \ notes = music_string.split(\"|\")\n            val notes_length = notes.length\n\
    \            val notes_beats = notes.map(note => {\n                val noteLength\
    \ = note.length\n                val noteBeats = note.split(\"o\").length\n  \
    \              noteBeats * noteLength\n            }).toList\n            notes_beats.sum\n\
    \        }).toList", "        val music_list = music_string.split(\" \")\n   \
    \     val music_list_size = music_list.size\n        val music_list_size_long\
    \ = music_list_size.asInstanceOf[Int]\n        val music_list_size_long2 = music_list_size_long\
    \ * music_list_size_long\n        val music_list_size_long3 = music_list_size_long2\
    \ * music_list_size_long\n        val music_list_size_long4 = music_list_size_long3\
    \ * music_list_size_long\n        val music_list_size_long5 = music_list_size_long4\
    \ * music_list_size_long\n        val music_list_size_long6 = music_list_size_long5\
    \ * music_list_size_long\n        val music_list_size_long7 = music_list_size_long6\
    \ * music_list_size_long\n        val music_list_size_long8 = music_list_size_long7\
    \ * music_list_size_long\n        val music_list_size_long9 = music_list_size_long8\
    \ * music_list_size_long\n        val music_list_size_long10 = music_list_size_long9\
    \ * music_list_size_long\n        val music_list_size_long11 = music_list_size_long10\
    \ * music_list_size_long\n        val music_list_size_long12 = music_list_size_long11\
    \ * music_list_size_long\n        val music_list_size_long13 = music_list_size_long12\
    \ * music_list_size_long\n        val music_list_size_long14 = music_list_size_long13\
    \ * music_list_size_long\n        val music_list_size_long15 = music_list_size_long14\
    \ * music_list_size_long\n        val music_list_size_long16 = music_list_size_long15\
    \ * music_list_size_long\n        val music_list_size_long17 = music_list_size_long16\
    \ * music_list_size_long\n        val music_list_size_long18 = music_list_size_long17\
    \ * music_list_size_long\n        val music_list_size_long19 = music_list_size_long18\
    \ * music_list_size_long\n        val music_list_size_long20 = music_list_size_long19\
    \ * music_list_size_long\n        val music_list_size_long21 = music_list_size_long20\
    \ * music_list_size_long\n        val music_list_size_long22 = music_list_size_long21\
    \ * music_list_size_long\n        val music_list_size_long23 = music_list_size_long22\
    \ * music_list_size_long\n        val music_list_size_", "        music_string.split(\"\
    \ \").map(music_string => {\n            val note = music_string.substring(0,\
    \ 1)\n            val beats = music_string.substring(1, music_string.length).trim\n\
    \            val beats_array = beats.split(\"|\").map(_.toLong)\n            val\
    \ note_array = note.toString.toCharArray.map(_.toInt)\n            val note_length\
    \ = note_array.length\n            val beats_length = beats_array.length\n   \
    \         val note_to_beats = beats_array.zip(note_array).map(x => x._1 - x._2)\n\
    \            val note_to_beats_length = note_to_beats.length\n            val\
    \ note_to_beats_array = note_to_beats.map(x => x.toLong)\n            val note_to_beats_array_length\
    \ = note_to_beats_array.length\n            val note_to_beats_array_to_beats =\
    \ note_to_beats_array.zip(beats_array).map(x => x._1 - x._2)\n            val\
    \ note_to_beats_array_to_beats_length = note_to_beats_array_to_beats.length\n\
    \            val note_to_beats_array_to_beats_array = note_to_beats_array_to_beats.map(x\
    \ => x.toLong)\n            val note_to_beats_array_to_beats_array_length = note_to_beats_array_to_beats_array.length\n\
    \            val note_to_beats_array_to_beats_array_to_beats = note_to_beats_array_to_beats_array.zip(beats_array).map(x\
    \ => x._1 - x._2)\n            val note_to_beats_array_to_beats_array_to_beats_length\
    \ = note_to_beats_array_to_beats_array_to_beats.length\n            val note_to_beats_array_to_beats_array_to_beats_array\
    \ = note_to_beats_array_to_beats_array_to_beats.map(x => x.toLong)\n         \
    \   val note_to_beats_array_to_beats_array_to_beats_array_length = note_to_beats_array_to_beats_array_to_beats_array.length\n\
    \            val note_to_beats_array_to_beats_array_to_beats_array_to_beats =\
    \ note_to_beats_array_to_beats_array_to_beats_array.zip(beats_array).map(x =>\
    \ x._1 - x._2)\n            val note_to_beats_array_to_beats_array_to_beats_array_to_beats_length\
    \ = note_to_beats_array_to_beats_array_to_beats_array_to_beats.length\n      \
    \      val note_to_beats_array_to_beats_array_to_beats_array_to_beats_array =\
    \ note_to_beats_array_to_beats_array_to_beats_array_to_beats.map(x => x.to", " \
    \       val music_list = music_string.split(\"\\\\|\")\n        val music_list_length\
    \ = music_list.length\n        val music_list_with_beats = music_list.map(music_string\
    \ => {\n            val music_string_with_beats = music_string.split(\"\\\\o\"\
    )\n            val music_string_with_beats_length = music_string_with_beats.length\n\
    \            val music_string_with_beats_with_beats = music_string_with_beats.map(music_string_with_beats\
    \ => {\n                val music_string_with_beats_with_beats_length = music_string_with_beats_with_beats.length\n\
    \                val music_string_with_beats_with_beats_with_beats = music_string_with_beats_with_beats.split(\"\
    \\\\.\\\\|\")\n                val music_string_with_beats_with_beats_with_beats_length\
    \ = music_string_with_beats_with_beats_with_beats.length\n                val\
    \ music_string_with_beats_with_beats_with_beats_with_beats = music_string_with_beats_with_beats_with_beats.map(music_string_with_beats_with_beats\
    \ => {\n                    val music_string_with_beats_with_beats_with_beats_with_beats_length\
    \ = music_string_with_beats_with_beats_with_beats_with_beats.length\n        \
    \            val music_string_with_beats_with_beats_with_beats_with_beats_with_beats\
    \ = music_string_with_beats_with_beats_with_beats_with_beats.split(\"\\\\.\\\\\
    |\")\n                    val music_string_with_beats_with_beats_with_beats_with_beats_with_beats_length\
    \ = music_string_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats.length\n\
    \                    val music_string_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats\
    \ = music_string_with_beats_with_beats_with_beats_with_beats_with_beats.map(music_string_with_beats_with_beats_with_beats\
    \ => {\n                        val music_string_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats_length\
    \ = music_string_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats.length\n\
    \                        val music_string_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats\
    \ = music_string_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats.split(\"\
    \\\\.\\\\|\")\n                        val music_string_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats_length\
    \ = music_string_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats.length\n\
    \                        val music_string_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats\
    \ = music_string_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats_with_beats.map(music_string_with_beats_with_beats_with_beat",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val rest = music_string.substring(1,\
    \ music_string.length)\n            val beats = rest.split(\"|\").map(_.toLong).sum\n\
    \            beats * note.length\n        }).sum", "        music_string.split(\"\
    \\\\|\").map(music_string => {\n            val notes = music_string.split(\"\\\
    \\o\").map(music_string => {\n                val note = music_string.split(\"\
    \\\\.\").map(music_string => {\n                    val beats = music_string.split(\"\
    \\\\|\").map(music_string => {\n                        music_string.split(\"\\\
    \\|\").map(music_string => {\n                            music_string.split(\"\
    \\\\|\").map(music_string => {\n                                music_string.split(\"\
    \\\\|\").map(music_string => {\n                                    music_string.split(\"\
    \\\\|\").map(music_string => {\n                                        music_string.split(\"\
    \\\\|\").map(music_string => {\n                                            music_string.split(\"\
    \\\\|\").map(music_string => {\n                                             \
    \   music_string.split(\"\\\\|\").map(music_string => {\n                    \
    \                                music_string.split(\"\\\\|\").map(music_string\
    \ => {\n                                                        music_string.split(\"\
    \\\\|\").map(music_string => {\n                                             \
    \               music_string.split(\"\\\\|\").map(music_string => {\n        \
    \                                                        music_string.split(\"\
    \\\\|\").map(music_string => {\n                                             \
    \                       music_string.split(\"\\\\|\").map(music_string => {\n\
    \                                                                        music_string.split(\"\
    \\\\|\").map(music_string => {\n                                             \
    \                               music_string.split(\"\\\\|\").map(music_string\
    \ => {\n                                                                     \
    \           music_string.split(\"\\\\|\").map(music_string => {\n            \
    \                                                                        music_string.split(\"\
    \\\\|\").map(music_string => {\n                                             \
    \                                           music_string.split(\"\\\\|\").map(music_string\
    \ => {\n                                                                     \
    \                       music_string.split(\"\\\\|\").map(music_string => {\n\
    \                                                                            \
    \                    music_string.split(\"\\\\|\").map(music_string => {\n   \
    \                                                                            \
    \                     music_string.split(\"\\\\|\").map(music_string => {\n  \
    \                                                                            \
    \                          music_string.split(\"\\\\|\").map(music_string => {\n\
    \                                                                            \
    \                                music_string.split(\"\\\\|\").map(music_string\
    \ => {\n                                                                     \
    \                                           music_string.split(\"\\\\|\").map(music_string\
    \ => {\n                                                                     \
    \                                               music_string.split(\"\\\\|\").map(music_string\
    \ => {\n                                                                     \
    \                                                   music_string.split(\"\\\\\
    |\").map(music_string => {\n                                                 \
    \                                                                           music_string.split(\"\
    \\\\|\").map(music_string => {\n                                             \
    \                                                                            \
    \       music_string.split(\"\\\\|\").map(music_string => {\n                \
    \                                                                            \
    \                                        music_string.split(\"\\\\|\").map(music_string\
    \ => {\n                                                                     \
    \                                                                   music_string.split(\"\
    \\\\|\").map(music_string => {\n                                             \
    \                                                                            \
    \                   music_string.split(\"\\\\|\").map(music_string => {\n    \
    \                                                                            \
    \                                                                music_string.",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val beats = music_string.substring(1).split(\"\
    |\").map(_.toLong)\n            beats.sum\n        }).toList", "        val music_list\
    \ = music_string.split(\"\\\\|\")\n        val music_list_size = music_list.size\n\
    \        val music_list_size_int = music_list_size.asInstanceOf[Int]\n       \
    \ val music_list_size_long = music_list_size_int.asInstanceOf[Long]\n        val\
    \ music_list_size_long_int = music_list_size_long.asInstanceOf[Int]\n        val\
    \ music_list_size_long_long_int = music_list_size_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_int = music_list_size_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_int = music_list_size_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_int = music_list_size_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_long_",
  "        val music_list = music_string.split(\"\\\\|\")\n        val music_list_size\
    \ = music_list.size\n        val music_list_size_long = music_list_size.asInstanceOf[Long]\n\
    \        val music_list_size_long2 = music_list_size_long.toInt\n        val music_list_size_long3\
    \ = music_list_size_long2.toInt\n        val music_list_size_long4 = music_list_size_long3.toInt\n\
    \        val music_list_size_long5 = music_list_size_long4.toInt\n        val\
    \ music_list_size_long6 = music_list_size_long5.toInt\n        val music_list_size_long7\
    \ = music_list_size_long6.toInt\n        val music_list_size_long8 = music_list_size_long7.toInt\n\
    \        val music_list_size_long9 = music_list_size_long8.toInt\n        val\
    \ music_list_size_long10 = music_list_size_long9.toInt\n        val music_list_size_long11\
    \ = music_list_size_long10.toInt\n        val music_list_size_long12 = music_list_size_long11.toInt\n\
    \        val music_list_size_long13 = music_list_size_long12.toInt\n        val\
    \ music_list_size_long14 = music_list_size_long13.toInt\n        val music_list_size_long15\
    \ = music_list_size_long14.toInt\n        val music_list_size_long16 = music_list_size_long15.toInt\n\
    \        val music_list_size_long17 = music_list_size_long16.toInt\n        val\
    \ music_list_size_long18 = music_list_size_long17.toInt\n        val music_list_size_long19\
    \ = music_list_size_long18.toInt\n        val music_list_size_long20 = music_list_size_long19.toInt\n\
    \        val music_list_size_long21 = music_list_size_long20.toInt\n        val\
    \ music_list_size_long22 = music_list_size_long21.toInt\n        val music_list_size_long23\
    \ = music_list_size_long22.toInt\n        val music_list_size_long24 = music_list_size_long23.toInt\n\
    \        val music_list_size_long25 = music_list_size_long24.toInt\n        val\
    \ music_list_size_long26 = music_list_size_long25.toInt\n        val music_list_size_long27\
    \ = music_list_size_long26.toInt\n        val music_list_size_long28 = music_list_size_",
  "        val music_list = music_string.split(\"\\\\|\")\n        val music_list_size\
    \ = music_list.size\n        val music_list_size_long = music_list_size.map(_.toLong)\n\
    \        val music_list_size_long_sorted = music_list_size_long.sort\n       \
    \ val music_list_size_long_sorted_reversed = music_list_size_long_sorted.reverse\n\
    \        val music_list_size_long_sorted_reversed_size = music_list_size_long_sorted_reversed.size\n\
    \        val music_list_size_long_sorted_reversed_size_long = music_list_size_long_sorted_reversed_size.map(_.toLong)\n\
    \        val music_list_size_long_sorted_reversed_size_long_sorted = music_list_size_long_sorted_reversed_size_long.sort\n\
    \        val music_list_size_long_sorted_reversed_size_long_sorted_reversed =\
    \ music_list_size_long_sorted_reversed_size_long_sorted.reverse\n        val music_list_size_long_sorted_reversed_size_long_sorted_reversed_size\
    \ = music_list_size_long_sorted_reversed_size_long_sorted_reversed.size\n    \
    \    val music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long\
    \ = music_list_size_long_sorted_reversed_size_long_sorted_reversed_size.map(_.toLong)\n\
    \        val music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted\
    \ = music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long.sort\n\
    \        val music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted_reversed\
    \ = music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted.reverse\n\
    \        val music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted_reversed_size\
    \ = music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted_reversed_size.map(_.toLong)\n\
    \        val music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted_reversed_size_long\
    \ = music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted_reversed_size_long.sort\n\
    \        val music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted\
    \ = music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted_reversed_size_long.sort\n\
    \        val music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted_reversed\
    \ = music_list_size_long_sorted_reversed_size_long_sorted_reversed_size_long_sorted_reversed_size_long_",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val beats = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                val beat = music_string.substring(0,\
    \ 1)\n                val rest = music_string.substring(1)\n                val\
    \ beats = rest.split(\"o\").map(music_string => {\n                    val beat\
    \ = music_string.substring(0, 1)\n                    val rest = music_string.substring(1)\n\
    \                    val beats = rest.split(\"|\").map(music_string => {\n   \
    \                     val beat = music_string.substring(0, 1)\n              \
    \          val rest = music_string.substring(1)\n                        val beats\
    \ = rest.split(\"o\").map(music_string => {\n                            val beat\
    \ = music_string.substring(0, 1)\n                            val rest = music_string.substring(1)\n\
    \                            val beats = rest.split(\"|\").map(music_string =>\
    \ {\n                                val beat = music_string.substring(0, 1)\n\
    \                                val rest = music_string.substring(1)\n      \
    \                          val beats = rest.split(\"o\").map(music_string => {\n\
    \                                    val beat = music_string.substring(0, 1)\n\
    \                                    val rest = music_string.substring(1)\n  \
    \                                  val beats = rest.split(\"|\").map(music_string\
    \ => {\n                                        val beat = music_string.substring(0,\
    \ 1)\n                                        val rest = music_string.substring(1)\n\
    \                                        val beats = rest.split(\"o\").map(music_string\
    \ => {\n                                            val beat = music_string.substring(0,\
    \ 1)\n                                            val rest = music_string.substring(1)\n\
    \                                            val beats = rest.split(\"|\").map(music_string\
    \ => {\n                                                val beat = music_string.substring(0,\
    \ 1)\n                                                val rest = music_string.substring(1)\n\
    \                                                val beats = rest.split(\"o\"\
    ).map(music_string => {\n                                                    val\
    \ beat = music_string.substring(0, 1)\n                                      \
    \              val rest = music_string.substring(1)\n                        \
    \                            val beats = rest.split(\"|\").map(music_string =>\
    \ {\n                                                        val beat = music_string.substring(0,\
    \ 1)\n                                                        val rest = music_string.substring(1)\n\
    \                                                        val beats = rest.split(\"\
    o\").map(music_string => {\n                                                 \
    \           val beat = music_string.substring(0, 1)\n                        \
    \                                    val rest = music_string.substring(1)\n  \
    \                                                          val beats = rest.split(\"\
    |\").map(music_string => {\n                                                 \
    \               val beat = music_string.substring(0, 1)\n                    \
    \                                            val rest = music_string.substring(1)\n\
    \                                                                val beats = rest.split(\"\
    o\").map(music_string => {\n                                                 \
    \                   val beat = music_string.substring(0, 1)\n                \
    \                                                    val rest = music_string.substring(1)\n\
    \                                                                    val beats\
    \ = rest.split(\"", "        music_string.split(\" \").map(music_string => {\n\
    \            val note = music_string.substring(0, 1)\n            val beats =\
    \ music_string.substring(1, music_string.length)\n            val beats_as_string\
    \ = beats.toInt\n            val beats_as_long = beats_as_string.toLong\n    \
    \        val note_to_beats = Map(\n                \"o\" -> 4L,\n            \
    \    \"o|\" -> 2L,\n                \".|\" -> 1L\n            )\n            val\
    \ beats_to_note = Map(\n                4L -> \"o\",\n                2L -> \"\
    o|\",\n                1L -> \".|\"\n            )\n            note_to_beats(note)\
    \ match {\n                case None => throw new Exception(\"Invalid music string\"\
    )\n                case Some(beats) => beats_to_note(beats)\n            }\n \
    \       }).toList", "        val notes = music_string.split(\"\\\\|\").map(_.toInt)\n\
    \        val notes_length = notes.length\n        val beats = notes_length.toLong\
    \ / 4\n        val notes_last_beats = notes.takeRight(notes_length).map(_.toLong)\n\
    \        val notes_last_beats_length = notes_last_beats.length\n        val notes_last_beats_last_beats\
    \ = notes_last_beats.takeRight(notes_last_beats_length).map(_.toLong)\n      \
    \  val notes_last_beats_last_beats_length = notes_last_beats_last_beats.length\n\
    \        val notes_last_beats_last_beats_last_beats = notes_last_beats_last_beats.takeRight(notes_last_beats_last_beats_length).map(_.toLong)\n\
    \        val notes_last_beats_last_beats_last_beats_length = notes_last_beats_last_beats_last_beats.length\n\
    \        val notes_last_beats_last_beats_last_beats_last_beats = notes_last_beats_last_beats_last_beats.takeRight(notes_last_beats_last_beats_last_beats_length).map(_.toLong)\n\
    \        val notes_last_beats_last_beats_last_beats_last_beats_length = notes_last_beats_last_beats_last_beats_last_beats.length\n\
    \        val notes_last_beats_last_beats_last_beats_last_beats_last_beats = notes_last_beats_last_beats_last_beats_last_beats.takeRight(notes_last_beats_last_beats_last_beats_last_beats_length).map(_.toLong)\n\
    \        val notes_last_beats_last_beats_last_beats_last_beats_last_beats_length\
    \ = notes_last_beats_last_beats_last_beats_last_beats_last_beats.length\n    \
    \    val notes_last_beats_last_beats_last_beats_last_beats_last_beats_last_beats\
    \ = notes_last_beats_last_beats_last_beats_last_beats_last_beats.takeRight(notes_last_beats_last_beats_last_beats_last_beats_last_beats_length).map(_.toLong)\n\
    \        val notes_last_beats_last_beats_last_beats_last_beats_last_beats_last_beats_length\
    \ = notes_last_beats_last_beats_last_beats_last_beats_last_beats_last_beats_length.length\n\
    \        val notes_last_beats_last_beats_last_beats_last_beats_last_beats_last_beats_last_beats\
    \ = notes_last_beats_last_beat", "        val notes = music_string.split(\"\\\\\
    |\")\n        val notes_count = notes.length\n        val notes_beats = notes.map(x\
    \ => x.split(\"o|\")).map(x => x.length)\n        val notes_beats_count = notes_beats.sum\n\
    \        val notes_beats_count_to_beats = notes_beats_count / notes_count\n  \
    \      val notes_beats_count_to_beats_count = notes_beats_count_to_beats.toInt\n\
    \        val notes_beats_count_to_beats_count_to_beats = notes_beats_count_to_beats_count\
    \ / notes_beats_count\n        val notes_beats_count_to_beats_count_to_beats_count\
    \ = notes_beats_count_to_beats_count_to_beats.toInt\n        val notes_beats_count_to_beats_count_to_beats_count_to_beats\
    \ = notes_beats_count_to_beats_count_to_beats_count_to_beats.toInt\n        val\
    \ notes_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats = notes_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats.toInt\n\
    \        val notes_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats\
    \ = notes_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats.toInt\n\
    \        val notes_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats\
    \ = notes_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats.toInt\n\
    \        val notes_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats\
    \ = notes_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats.toInt\n\
    \        val notes_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_to_beats_count_",
  "        music_string.split(\" \").map(music_string => {\n            val note =\
    \ music_string.substring(0, 1)\n            val beats = music_string.substring(1).split(\"\
    |\").map(_.toInt)\n            beats.map(beat => if (note == \"o\") 4L else beat.toLong)\n\
    \        }).flatten.toList", "        music_string.split(\" \").map(music_string\
    \ => {\n            val note = music_string.substring(0, 1)\n            val beats\
    \ = music_string.substring(1).split(\"|\").map(_.toInt).sum\n            beats.toLong\n\
    \        }).toList", "        music_string.split(\" \").map(music_string => {\n\
    \            val music_note = music_string.substring(0, 1)\n            val music_rest\
    \ = music_string.substring(1, 2)\n            val music_rest2 = music_rest.substring(0,\
    \ 1)\n            val music_rest3 = music_rest.substring(1, 2)\n            val\
    \ music_rest4 = music_rest.substring(1, 3)\n            val music_rest5 = music_rest.substring(1,\
    \ 4)\n            val music_rest6 = music_rest.substring(1, 5)\n            val\
    \ music_rest7 = music_rest.substring(1, 6)\n            val music_rest8 = music_rest.substring(1,\
    \ 7)\n            val music_rest9 = music_rest.substring(1, 8)\n            val\
    \ music_rest10 = music_rest.substring(1, 9)\n            val music_rest11 = music_rest.substring(1,\
    \ 10)\n            val music_rest12 = music_rest.substring(1, 11)\n          \
    \  val music_rest13 = music_rest.substring(1, 12)\n            val music_rest14\
    \ = music_rest.substring(1, 13)\n            val music_rest15 = music_rest.substring(1,\
    \ 14)\n            val music_rest16 = music_rest.substring(1, 15)\n          \
    \  val music_rest17 = music_rest.substring(1, 16)\n            val music_rest18\
    \ = music_rest.substring(1, 17)\n            val music_rest19 = music_rest.substring(1,\
    \ 18)\n            val music_rest20 = music_rest.substring(1, 19)\n          \
    \  val music_rest21 = music_rest.substring(1, 20)\n            val music_rest22\
    \ = music_rest.substring(1, 21)\n            val music_rest23 = music_rest.substring(1,\
    \ 22)\n            val music_rest24 = music_rest.substring(1, 23)\n          \
    \  val music_rest25 = music_rest.substring(1, 24)\n            val music_rest26\
    \ = music_rest.substring(1, 25)\n            val music_rest27 = music_rest.substring(1,\
    \ 26)\n            val music_rest28 = music_rest.substring(1, 27)\n          \
    \  val music_rest29 = music_rest.substring(1, 28)\n            val music_rest30\
    \ = music_rest.substring(1, 29)\n            val music_rest31 = music_rest.substring(1,\
    \ 30)\n            val music_rest32 = music_rest.substring(1, 31)\n          \
    \  val music_rest33 = music_rest.substring(1, 32)\n            val music_rest34\
    \ = music_rest.substring(1, 33)\n            val music_rest35 = music_rest.substring(1,\
    \ 34)\n            val musi", "        music_string.split(\" \").map(music_string\
    \ => {\n            val note = music_string.substring(0, 1)\n            val beats\
    \ = music_string.substring(1).split(\"|\").map(_.toInt)\n            beats.map(beat\
    \ => if (note == \"o\") 4l else 2l).sum\n        }).toList", "        music_string.split(\"\
    \ \").map(music_string => {\n            val note = music_string.charAt(0)\n \
    \           val rest = music_string.substring(1).trim\n            val beats =\
    \ rest.split(\"|\").map(rest => {\n                val beat = rest.charAt(0)\n\
    \                val rest = rest.substring(1).trim\n                val rest =\
    \ rest.replace(\".\", \"\")\n                val rest = rest.replace(\"o\", \"\
    \")\n                val rest = rest.replace(\"|\", \"\")\n                val\
    \ rest = rest.replace(\",\", \"\")\n                val rest = rest.replace(\"\
    :\", \"\")\n                val rest = rest.replace(\";\", \"\")\n           \
    \     val rest = rest.replace(\"?\", \"\")\n                val rest = rest.replace(\"\
    !\", \"\")\n                val rest = rest.replace(\"(\", \"\")\n           \
    \     val rest = rest.replace(\")\", \"\")\n                val rest = rest.replace(\"\
    [\", \"\")\n                val rest = rest.replace(\"]\", \"\")\n           \
    \     val rest = rest.replace(\"{\", \"\")\n                val rest = rest.replace(\"\
    }\", \"\")\n                val rest = rest.replace(\"[\", \"\")\n           \
    \     val rest = rest.replace(\"]\", \"\")\n                val rest = rest.replace(\"\
    {\", \"\")\n                val rest = rest.replace(\"}\", \"\")\n           \
    \     val rest = rest.replace(\"(\", \"\")\n                val rest = rest.replace(\"\
    )\", \"\")\n                val rest = rest.replace(\",\", \"\")\n           \
    \     val rest = rest.replace(\":\", \"\")\n                val rest = rest.replace(\"\
    ;\", \"\")\n                val rest = rest.replace(\"?\", \"\")\n           \
    \     val rest = rest.replace(\"!\", \"\")\n                val rest = rest.replace(\"\
    (\", \"\")\n                val rest = rest.replace(\")\", \"\")\n           \
    \     val rest = rest.replace(\"[\", \"\")\n                val rest = rest.replace(\"\
    ]\", \"\")\n                val rest = rest.replace(\"{\", \"\")\n           \
    \     val rest = rest.replace(\"}\", \"\")\n                val rest = rest.replace(\"\
    (\", \"\")\n                val rest = rest.replace(\")\", \"\")\n           \
    \     val rest = rest.replace(\",\", \"\")\n                val rest = rest.replace(\"\
    :\", \"\")\n                val rest = rest.replace(\";\", \"\")\n           \
    \     val rest = rest.replace(\"?\", \"\")\n                val rest = rest.replace(\"\
    !\", \"\")\n                val rest = rest.replace(\"(\", \"\")\n           \
    \     val rest = rest.replace(\")\", \"\")\n                val rest = rest.replace(\"\
    [\", \"\")\n                val rest = rest.replace(\"]\", \"\")\n           \
    \     val rest = rest.replace(\"{\", \"\")\n                val rest = rest.replace(\"\
    }\", \"\")\n                val rest = rest.replace(\"(\", \"\")\n           \
    \     val rest = rest.replace(\")\", \"\")\n                val rest = rest.replace(\"\
    ,\", \"\")\n                val rest = rest.replace(\":\", \"\")\n           \
    \     val rest = rest.replace(\";\", \"\")\n                val ", "        val\
    \ music_list = music_string.split(\"\\\\|\")\n        val music_list_size = music_list.size\n\
    \        val music_list_size_int = music_list_size.toInt\n        val music_list_size_long\
    \ = music_list_size_int.toLong\n        val music_list_size_long2 = music_list_size_long\
    \ * music_list_size_long\n        val music_list_size_long3 = music_list_size_long2\
    \ * music_list_size_long2\n        val music_list_size_long4 = music_list_size_long3\
    \ * music_list_size_long3\n        val music_list_size_long5 = music_list_size_long4\
    \ * music_list_size_long4\n        val music_list_size_long6 = music_list_size_long5\
    \ * music_list_size_long5\n        val music_list_size_long7 = music_list_size_long6\
    \ * music_list_size_long6\n        val music_list_size_long8 = music_list_size_long7\
    \ * music_list_size_long7\n        val music_list_size_long9 = music_list_size_long8\
    \ * music_list_size_long8\n        val music_list_size_long10 = music_list_size_long9\
    \ * music_list_size_long9\n        val music_list_size_long11 = music_list_size_long10\
    \ * music_list_size_long10\n        val music_list_size_long12 = music_list_size_long11\
    \ * music_list_size_long11\n        val music_list_size_long13 = music_list_size_long12\
    \ * music_list_size_long12\n        val music_list_size_long14 = music_list_size_long13\
    \ * music_list_size_long13\n        val music_list_size_long15 = music_list_size_long14\
    \ * music_list_size_long14\n        val music_list_size_long16 = music_list_size_long15\
    \ * music_list_size_long15\n        val music_list_size_long17 = music_list_size_long16\
    \ * music_list_size_long16\n        val music_list_size_long18 = music_list_size_long17\
    \ * music_list_size_long17\n        val music_list_size_long19 = music_list_size_long18\
    \ * music_list_size_long18\n        val music_list_size_long20 = music_list_size_long19\
    \ * music_list_size_long19\n        val music_list_size_long21 = music_list_size_long20\
    \ * music_list_size_long20\n        val music_list_size_long22 = music_list_size_long21\
    \ * musi"]
stop_tokens:
- "\n    }\n"
